@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION", "UNUSED_PARAMETER", "REDUNDANT_NULLABLE")

package platform.Security

import kotlinx.cinterop.* 

actual interface OS_sec_certificateProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_certificateProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

actual interface OS_sec_identityProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_identityProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

actual interface OS_sec_objectProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_objectProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

actual interface OS_sec_protocol_metadataProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_protocol_metadataProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

actual interface OS_sec_protocol_optionsProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_protocol_optionsProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

actual interface OS_sec_trustProtocol: platform.darwin.NSObjectProtocol {
}

actual interface OS_sec_trustProtocolMeta: platform.darwin.NSObjectProtocolMeta {
}

final actual enum class SSLAuthenticate private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kNeverAuthenticate(TODO()),

    kAlwaysAuthenticate(TODO()),

    kTryAuthenticate(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLAuthenticate { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLAuthenticate
            get() = TODO()
            set(value: platform.Security.SSLAuthenticate) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual enum class SSLCiphersuiteGroup private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSSLCiphersuiteGroupDefault(TODO()),

    kSSLCiphersuiteGroupCompatibility(TODO()),

    kSSLCiphersuiteGroupLegacy(TODO()),

    kSSLCiphersuiteGroupATS(TODO()),

    kSSLCiphersuiteGroupATSCompatibility(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLCiphersuiteGroup { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLCiphersuiteGroup
            get() = TODO()
            set(value: platform.Security.SSLCiphersuiteGroup) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual enum class SSLClientCertificateState private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSSLClientCertNone(TODO()),

    kSSLClientCertRequested(TODO()),

    kSSLClientCertSent(TODO()),

    kSSLClientCertRejected(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLClientCertificateState { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLClientCertificateState
            get() = TODO()
            set(value: platform.Security.SSLClientCertificateState) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual enum class SSLConnectionType private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSSLStreamType(TODO()),

    kSSLDatagramType(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLConnectionType { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLConnectionType
            get() = TODO()
            set(value: platform.Security.SSLConnectionType) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual enum class SSLProtocolSide private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSSLServerSide(TODO()),

    kSSLClientSide(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLProtocolSide { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLProtocolSide
            get() = TODO()
            set(value: platform.Security.SSLProtocolSide) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual enum class SSLSessionState private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSSLIdle(TODO()),

    kSSLHandshake(TODO()),

    kSSLConnected(TODO()),

    kSSLClosed(TODO()),

    kSSLAborted(TODO());

    actual open override /*1*/ val value: kotlin.Int
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.Int): platform.Security.SSLSessionState { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.Security.SSLSessionState
            get() = TODO()
            set(value: platform.Security.SSLSessionState) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class SecKeychainAttribute public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var length: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    final var tag: platform.Security.SecKeychainAttrType /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.SecKeychainAttrType /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class SecKeychainAttributeInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var count: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    final var format: kotlinx.cinterop.CPointer<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?) = TODO()

    final var tag: kotlinx.cinterop.CPointer<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class SecKeychainAttributeList public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var attr: kotlinx.cinterop.CPointer<platform.Security.SecKeychainAttribute>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.SecKeychainAttribute>?) = TODO()

    final var count: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

actual typealias SSLProtocol = kotlin.Int

actual typealias SSLSessionOption = kotlin.Int

actual typealias sec_certificate_t = platform.darwin.NSObject?

actual typealias sec_identity_t = platform.darwin.NSObject?

actual typealias sec_object_t = platform.darwin.NSObject?

actual typealias sec_protocol_metadata_t = platform.darwin.NSObject?

actual typealias sec_protocol_options_t = platform.darwin.NSObject?

actual typealias sec_trust_t = platform.darwin.NSObject?

actual fun sec_protocol_metadata_access_distinguished_names(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ handler: (platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */) -> kotlin.Unit): kotlin.Boolean { TODO() }

actual fun sec_protocol_metadata_access_ocsp_response(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ handler: (platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */) -> kotlin.Unit): kotlin.Boolean { TODO() }

actual fun sec_protocol_metadata_access_peer_certificate_chain(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ handler: (platform.Security.sec_certificate_t? /* = platform.darwin.NSObject? */) -> kotlin.Unit): kotlin.Boolean { TODO() }

actual fun sec_protocol_metadata_challenge_parameters_are_equal(/*0*/ metadataA: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ metadataB: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): kotlin.Boolean { TODO() }

actual fun sec_protocol_metadata_copy_peer_public_key(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */ { TODO() }

actual fun sec_protocol_metadata_get_early_data_accepted(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): kotlin.Boolean { TODO() }

actual fun sec_protocol_metadata_peers_are_equal(/*0*/ metadataA: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ metadataB: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): kotlin.Boolean { TODO() }

actual fun sec_protocol_options_add_pre_shared_key(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ psk: platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */, /*2*/ psk_identity: platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */) { TODO() }

actual fun sec_protocol_options_add_tls_application_protocol(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ application_protocol: kotlin.String?) { TODO() }

actual fun sec_protocol_options_add_tls_ciphersuite_group(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ group: platform.Security.SSLCiphersuiteGroup) { TODO() }

actual fun sec_protocol_options_set_local_identity(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ identity: platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */) { TODO() }

actual fun sec_protocol_options_set_peer_authentication_required(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ peer_authentication_required: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_diffie_hellman_parameters(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ params: platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */) { TODO() }

actual fun sec_protocol_options_set_tls_false_start_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ false_start_enabled: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_is_fallback_attempt(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ is_fallback_attempt: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_ocsp_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ ocsp_enabled: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_renegotiation_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ renegotiation_enabled: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_resumption_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ resumption_enabled: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_sct_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ sct_enabled: kotlin.Boolean) { TODO() }

actual fun sec_protocol_options_set_tls_server_name(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ server_name: kotlin.String?) { TODO() }

actual fun sec_protocol_options_set_tls_tickets_enabled(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ tickets_enabled: kotlin.Boolean) { TODO() }

final class AuthorizationExternalForm public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val bytes: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class AuthorizationItem public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var flags: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    final var name: platform.Security.AuthorizationString? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.Security.AuthorizationString? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var valueLength: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class AuthorizationItemSet public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var count: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    final var items: kotlinx.cinterop.CPointer<platform.Security.AuthorizationItem>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.AuthorizationItem>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CE_Data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val authorityInfoAccess: platform.Security.CE_AuthorityInfoAccess /* = platform.Security.__CE_AuthorityInfoAccess */
        get() = TODO()

    final val authorityKeyID: platform.Security.CE_AuthorityKeyID /* = platform.Security.__CE_AuthorityKeyID */
        get() = TODO()

    final val basicConstraints: platform.Security.CE_BasicConstraints /* = platform.Security.__CE_BasicConstraints */
        get() = TODO()

    final val certPolicies: platform.Security.CE_CertPolicies /* = platform.Security.__CE_CertPolicies */
        get() = TODO()

    final val crlDistPoints: platform.Security.CE_CRLDistPointsSyntax /* = platform.Security.__CE_CRLDistPointsSyntax */
        get() = TODO()

    final var crlNumber: platform.Security.CE_CrlNumber /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CE_CrlNumber /* = kotlin.UInt */) = TODO()

    final var crlReason: platform.Security.CE_CrlReason /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CE_CrlReason /* = kotlin.UInt */) = TODO()

    final var deltaCrl: platform.Security.CE_DeltaCrl /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CE_DeltaCrl /* = kotlin.UInt */) = TODO()

    final val extendedKeyUsage: platform.Security.CE_ExtendedKeyUsage /* = platform.Security.__CE_ExtendedKeyUsage */
        get() = TODO()

    final var inhibitAnyPolicy: platform.Security.CE_InhibitAnyPolicy /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CE_InhibitAnyPolicy /* = kotlin.UInt */) = TODO()

    final val issuerAltName: platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */
        get() = TODO()

    final val issuingDistPoint: platform.Security.CE_IssuingDistributionPoint /* = platform.Security.__CE_IssuingDistributionPoint */
        get() = TODO()

    final var keyUsage: platform.Security.CE_KeyUsage /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.CE_KeyUsage /* = kotlin.UShort */) = TODO()

    final val nameConstraints: platform.Security.CE_NameConstraints /* = platform.Security.__CE_NameConstraints */
        get() = TODO()

    final var netscapeCertType: platform.Security.CE_NetscapeCertType /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.CE_NetscapeCertType /* = kotlin.UShort */) = TODO()

    final val policyConstraints: platform.Security.CE_PolicyConstraints /* = platform.Security.__CE_PolicyConstraints */
        get() = TODO()

    final val policyMappings: platform.Security.CE_PolicyMappings /* = platform.Security.__CE_PolicyMappings */
        get() = TODO()

    final val qualifiedCertStatements: platform.Security.CE_QC_Statements /* = platform.Security.__CE_QC_Statements */
        get() = TODO()

    final val rawData: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val subjectAltName: platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */
        get() = TODO()

    final val subjectKeyID: platform.Security.CE_SubjectKeyID /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_CL_CSR_REQUEST public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var challengeString: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var cspHand: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */) = TODO()

    final var signatureAlg: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final val signatureOid: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final var subjectNameX509: platform.Security.CSSM_X509_NAME_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_name>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_NAME_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_name>? */) = TODO()

    final var subjectPrivateKey: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) = TODO()

    final var subjectPublicKey: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_ACTION_DATA public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ActionFlags: platform.Security.CSSM_APPLE_TP_ACTION_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_APPLE_TP_ACTION_FLAGS /* = kotlin.UInt */) = TODO()

    final var Version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_CERT_REQUEST public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var certPublicKey: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) = TODO()

    final var challengeString: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var clHand: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var cspHand: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */) = TODO()

    final var extensions: kotlinx.cinterop.CPointer<platform.Security.CE_DataAndType /* = platform.Security.__CE_DataAndType */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_DataAndType /* = platform.Security.__CE_DataAndType */>?) = TODO()

    final var issuerNameX509: platform.Security.CSSM_X509_NAME_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_name>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_NAME_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_name>? */) = TODO()

    final var issuerNames: kotlinx.cinterop.CPointer<platform.Security.CSSM_APPLE_TP_NAME_OID>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_APPLE_TP_NAME_OID>?) = TODO()

    final var issuerPrivateKey: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) = TODO()

    final var notAfter: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var notBefore: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var numExtensions: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var numIssuerNames: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var numSubjectNames: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var serialNumber: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var signatureAlg: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final val signatureOid: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final var subjectNames: kotlinx.cinterop.CPointer<platform.Security.CSSM_APPLE_TP_NAME_OID>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_APPLE_TP_NAME_OID>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_CRL_OPTIONS public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CrlFlags: platform.Security.CSSM_APPLE_TP_CRL_OPT_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_APPLE_TP_CRL_OPT_FLAGS /* = kotlin.UInt */) = TODO()

    final var Version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var crlStore: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_NAME_OID public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var oid: kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?) = TODO()

    final var string: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_SMIME_OPTIONS public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var IntendedUsage: platform.Security.CE_KeyUsage /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.CE_KeyUsage /* = kotlin.UShort */) = TODO()

    final var SenderEmail: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var SenderEmailLen: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_APPLE_TP_SSL_OPTIONS public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Flags: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var ServerName: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var ServerNameLen: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_TP_APPLE_EVIDENCE_HEADER public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_TP_APPLE_EVIDENCE_INFO public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val DlDbHandle: platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */
        get() = TODO()

    final var Index: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var NumStatusCodes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var StatusBits: platform.Security.CSSM_TP_APPLE_CERT_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_APPLE_CERT_STATUS /* = kotlin.UInt */) = TODO()

    final var StatusCodes: kotlinx.cinterop.CPointer<platform.Security.CSSM_RETURNVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_RETURN /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_RETURNVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_RETURN /* = kotlin.Int */> */>?) = TODO()

    final var UniqueRecord: platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class CSSM_TUPLE public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val AuthorizationTag: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    final var Delegate: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val Issuer: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    final val Subject: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    final val ValidityPeriod: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class DERItem public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.CPointer<platform.Security.DERByteVar /* = kotlinx.cinterop.UByteVarOf<platform.Security.DERByte /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.DERByteVar /* = kotlinx.cinterop.UByteVarOf<platform.Security.DERByte /* = kotlin.UByte */> */>?) = TODO()

    final var length: platform.Security.DERSize /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.Security.DERSize /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class SecAsn1Template_struct public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var kind: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var offset: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sub: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class SecExternalItemType private constructor(/*0*/ value: platform.posix.uint32_t /* = kotlin.UInt */): kotlinx.cinterop.CEnum {
    kSecItemTypeUnknown(TODO()),

    kSecItemTypePrivateKey(TODO()),

    kSecItemTypePublicKey(TODO()),

    kSecItemTypeSessionKey(TODO()),

    kSecItemTypeCertificate(TODO()),

    kSecItemTypeAggregate(TODO());

    open override /*1*/ val value: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: platform.posix.uint32_t /* = kotlin.UInt */): platform.Security.SecExternalItemType { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.Security.SecExternalItemType
            get() = TODO()
            set(value: platform.Security.SecExternalItemType) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class SecItemImportExportKeyParameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */
        get() = TODO()
        set(value: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */) = TODO()

    final var alertPrompt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

    final var alertTitle: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

    final var flags: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */) = TODO()

    final var keyAttributes: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */) = TODO()

    final var keyUsage: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */) = TODO()

    final var passphrase: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var version: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class SecKeyImportExportParameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */
        get() = TODO()
        set(value: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */) = TODO()

    final var alertPrompt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

    final var alertTitle: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

    final var flags: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */) = TODO()

    final var keyAttributes: platform.Security.CSSM_KEYATTR_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYATTR_FLAGS /* = kotlin.UInt */) = TODO()

    final var keyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */) = TODO()

    final var passphrase: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var version: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class SecKeychainCallbackInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var item: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */
        get() = TODO()
        set(value: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */) = TODO()

    final var keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */
        get() = TODO()
        set(value: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */) = TODO()

    final var pid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    final var version: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class SecKeychainSettings public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var lockInterval: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    final var lockOnSleep: kotlin.Boolean
        get() = TODO()
        set(value: kotlin.Boolean) = TODO()

    final var useLockInterval: kotlin.Boolean
        get() = TODO()
        set(value: kotlin.Boolean) = TODO()

    final var version: platform.darwin.UInt32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.darwin.UInt32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class SecPreferencesDomain private constructor(/*0*/ value: kotlin.Int): kotlinx.cinterop.CEnum {
    kSecPreferencesDomainUser(TODO()),

    kSecPreferencesDomainSystem(TODO()),

    kSecPreferencesDomainCommon(TODO()),

    kSecPreferencesDomainDynamic(TODO());

    open override /*1*/ val value: kotlin.Int
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.Int): platform.Security.SecPreferencesDomain { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.Security.SecPreferencesDomain
            get() = TODO()
            set(value: platform.Security.SecPreferencesDomain) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final enum class SecTransformMetaAttributeType private constructor(/*0*/ value: platform.CoreFoundation.CFIndex /* = kotlin.Long */): kotlinx.cinterop.CEnum {
    kSecTransformMetaAttributeValue(TODO()),

    kSecTransformMetaAttributeName(TODO()),

    kSecTransformMetaAttributeRef(TODO()),

    kSecTransformMetaAttributeRequired(TODO()),

    kSecTransformMetaAttributeRequiresOutboundConnection(TODO()),

    kSecTransformMetaAttributeDeferred(TODO()),

    kSecTransformMetaAttributeStream(TODO()),

    kSecTransformMetaAttributeCanCycle(TODO()),

    kSecTransformMetaAttributeExternalize(TODO()),

    kSecTransformMetaAttributeHasOutboundConnections(TODO()),

    kSecTransformMetaAttributeHasInboundConnection(TODO());

    open override /*1*/ val value: platform.CoreFoundation.CFIndex /* = kotlin.Long */
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: platform.CoreFoundation.CFIndex /* = kotlin.Long */): platform.Security.SecTransformMetaAttributeType { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.Security.SecTransformMetaAttributeType
            get() = TODO()
            set(value: platform.Security.SecTransformMetaAttributeType) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class __CE_AccessDescription public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val accessLocation: platform.Security.CE_GeneralName /* = platform.Security.__CE_GeneralName */
        get() = TODO()

    final val accessMethod: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_AuthorityInfoAccess public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessDescriptions: kotlinx.cinterop.CPointer<platform.Security.CE_AccessDescription /* = platform.Security.__CE_AccessDescription */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_AccessDescription /* = platform.Security.__CE_AccessDescription */>?) = TODO()

    final var numAccessDescriptions: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_AuthorityKeyID public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var generalNames: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?) = TODO()

    final var generalNamesPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val keyIdentifier: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var keyIdentifierPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val serialNumber: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var serialNumberPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_BasicConstraints public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var cA: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var pathLenConstraint: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var pathLenConstraintPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_CRLDistPointsSyntax public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var distPoints: kotlinx.cinterop.CPointer<platform.Security.CE_CRLDistributionPoint /* = platform.Security.__CE_CRLDistributionPoint */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_CRLDistributionPoint /* = platform.Security.__CE_CRLDistributionPoint */>?) = TODO()

    final var numDistPoints: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_CRLDistributionPoint public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var crlIssuer: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?) = TODO()

    final var distPointName: kotlinx.cinterop.CPointer<platform.Security.CE_DistributionPointName /* = platform.Security.__CE_DistributionPointName */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_DistributionPointName /* = platform.Security.__CE_DistributionPointName */>?) = TODO()

    final var reasons: platform.Security.CE_CrlDistReasonFlags /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.CE_CrlDistReasonFlags /* = kotlin.UByte */) = TODO()

    final var reasonsPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_CertPolicies public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numPolicies: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var policies: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyInformation /* = platform.Security.__CE_PolicyInformation */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyInformation /* = platform.Security.__CE_PolicyInformation */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class __CE_CrlDistributionPointNameType private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    CE_CDNT_FullName(TODO()),

    CE_CDNT_NameRelativeToCrlIssuer(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.Security.__CE_CrlDistributionPointNameType { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.Security.__CE_CrlDistributionPointNameType
            get() = TODO()
            set(value: platform.Security.__CE_CrlDistributionPointNameType) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class __CE_DataAndType public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var critical: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val extension: platform.Security.CE_Data
        get() = TODO()

    final var type: platform.Security.CE_DataType /* = platform.Security.__CE_DataType */
        get() = TODO()
        set(value: platform.Security.CE_DataType /* = platform.Security.__CE_DataType */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class __CE_DataType private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    DT_AuthorityKeyID(TODO()),

    DT_SubjectKeyID(TODO()),

    DT_KeyUsage(TODO()),

    DT_SubjectAltName(TODO()),

    DT_IssuerAltName(TODO()),

    DT_ExtendedKeyUsage(TODO()),

    DT_BasicConstraints(TODO()),

    DT_CertPolicies(TODO()),

    DT_NetscapeCertType(TODO()),

    DT_CrlNumber(TODO()),

    DT_DeltaCrl(TODO()),

    DT_CrlReason(TODO()),

    DT_CrlDistributionPoints(TODO()),

    DT_IssuingDistributionPoint(TODO()),

    DT_AuthorityInfoAccess(TODO()),

    DT_Other(TODO()),

    DT_QC_Statements(TODO()),

    DT_NameConstraints(TODO()),

    DT_PolicyMappings(TODO()),

    DT_PolicyConstraints(TODO()),

    DT_InhibitAnyPolicy(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.Security.__CE_DataType { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.Security.__CE_DataType
            get() = TODO()
            set(value: platform.Security.__CE_DataType) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class __CE_DistributionPointName public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dpn: platform.Security.anonymousStruct4
        get() = TODO()

    final var nameType: platform.Security.CE_CrlDistributionPointNameType /* = platform.Security.__CE_CrlDistributionPointNameType */
        get() = TODO()
        set(value: platform.Security.CE_CrlDistributionPointNameType /* = platform.Security.__CE_CrlDistributionPointNameType */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_ExtendedKeyUsage public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numPurposes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var purposes: platform.Security.CSSM_OID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_OID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_GeneralName public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var berEncoded: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val name: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var nameType: platform.Security.CE_GeneralNameType /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CE_GeneralNameType /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_GeneralNames public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var generalName: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralName /* = platform.Security.__CE_GeneralName */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralName /* = platform.Security.__CE_GeneralName */>?) = TODO()

    final var numNames: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_GeneralSubtree public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var base: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?) = TODO()

    final var maximum: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var maximumPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var minimum: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_GeneralSubtrees public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numSubtrees: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var subtrees: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtree /* = platform.Security.__CE_GeneralSubtree */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtree /* = platform.Security.__CE_GeneralSubtree */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_IssuingDistributionPoint public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var distPointName: kotlinx.cinterop.CPointer<platform.Security.CE_DistributionPointName /* = platform.Security.__CE_DistributionPointName */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_DistributionPointName /* = platform.Security.__CE_DistributionPointName */>?) = TODO()

    final var indirectCrl: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var indirectCrlPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var onlyCACerts: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var onlyCACertsPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var onlySomeReasons: platform.Security.CE_CrlDistReasonFlags /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.CE_CrlDistReasonFlags /* = kotlin.UByte */) = TODO()

    final var onlySomeReasonsPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var onlyUserCerts: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var onlyUserCertsPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_NameConstraints public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var excluded: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtrees /* = platform.Security.__CE_GeneralSubtrees */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtrees /* = platform.Security.__CE_GeneralSubtrees */>?) = TODO()

    final var permitted: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtrees /* = platform.Security.__CE_GeneralSubtrees */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralSubtrees /* = platform.Security.__CE_GeneralSubtrees */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_OtherName public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val typeId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val value: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_PolicyConstraints public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var inhibitPolicyMapping: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var inhibitPolicyMappingPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var requireExplicitPolicy: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var requireExplicitPolicyPresent: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_PolicyInformation public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val certPolicyId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final var numPolicyQualifiers: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var policyQualifiers: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyQualifierInfo /* = platform.Security.__CE_PolicyQualifierInfo */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyQualifierInfo /* = platform.Security.__CE_PolicyQualifierInfo */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_PolicyMapping public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val issuerDomainPolicy: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val subjectDomainPolicy: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_PolicyMappings public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numPolicyMappings: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var policyMappings: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyMapping /* = platform.Security.__CE_PolicyMapping */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_PolicyMapping /* = platform.Security.__CE_PolicyMapping */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_PolicyQualifierInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val policyQualifierId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val qualifier: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_QC_Statement public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var otherInfo: kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) = TODO()

    final var semanticsInfo: kotlinx.cinterop.CPointer<platform.Security.CE_SemanticsInformation /* = platform.Security.__CE_SemanticsInformation */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_SemanticsInformation /* = platform.Security.__CE_SemanticsInformation */>?) = TODO()

    final val statementId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_QC_Statements public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numQCStatements: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var qcStatements: kotlinx.cinterop.CPointer<platform.Security.CE_QC_Statement /* = platform.Security.__CE_QC_Statement */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_QC_Statement /* = platform.Security.__CE_QC_Statement */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __CE_SemanticsInformation public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nameRegistrationAuthorities: kotlinx.cinterop.CPointer<platform.Security.CE_NameRegistrationAuthorities /* = platform.Security.__CE_GeneralNames */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_NameRegistrationAuthorities /* = platform.Security.__CE_GeneralNames */>?) = TODO()

    final var semanticsIdentifier: kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct1 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Sublist: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    final val Word: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CertList: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var EncodedCertList: platform.Security.CSSM_ENCODED_CERT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_cert>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ENCODED_CERT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_cert>? */) = TODO()

    final var PairCertList: platform.Security.CSSM_CERT_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_cert_pair>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_cert_pair>? */) = TODO()

    final var ParsedCertList: platform.Security.CSSM_PARSED_CERT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_cert>? */
        get() = TODO()
        set(value: platform.Security.CSSM_PARSED_CERT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_cert>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CrlList: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var EncodedCrlList: platform.Security.CSSM_ENCODED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_crl>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ENCODED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_crl>? */) = TODO()

    final var PairCrlList: platform.Security.CSSM_CRL_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_crl_pair>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_crl_pair>? */) = TODO()

    final var ParsedCrlList: platform.Security.CSSM_PARSED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_crl>? */
        get() = TODO()
        set(value: platform.Security.CSSM_PARSED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_crl>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct4 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fullName: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CE_GeneralNames /* = platform.Security.__CE_GeneralNames */>?) = TODO()

    final var rdn: platform.Security.CSSM_X509_RDN_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_rdn>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_RDN_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_rdn>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_access_credentials public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val BaseCerts: platform.Security.CSSM_BASE_CERTS /* = platform.Security.cssm_base_certs */
        get() = TODO()

    final var Callback: platform.Security.CSSM_CHALLENGE_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_SAMPLEGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_samplegroup>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CHALLENGE_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_SAMPLEGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_samplegroup>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */) = TODO()

    final var CallerCtx: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val EntryTag: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val Samples: platform.Security.CSSM_SAMPLEGROUP /* = platform.Security.cssm_samplegroup */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_edit public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var EditMode: platform.Security.CSSM_ACL_EDIT_MODE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ACL_EDIT_MODE /* = kotlin.UInt */) = TODO()

    final var NewEntry: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INPUT /* = platform.Security.cssm_acl_entry_input */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INPUT /* = platform.Security.cssm_acl_entry_input */>?) = TODO()

    final var OldEntryHandle: platform.Security.CSSM_ACL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_ACL_HANDLE /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_entry_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var EntryHandle: platform.Security.CSSM_ACL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_ACL_HANDLE /* = kotlin.Long */) = TODO()

    final val EntryPublicInfo: platform.Security.CSSM_ACL_ENTRY_PROTOTYPE /* = platform.Security.cssm_acl_entry_prototype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_entry_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Callback: platform.Security.CSSM_ACL_SUBJECT_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACL_SUBJECT_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */) = TODO()

    final var CallerContext: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val Prototype: platform.Security.CSSM_ACL_ENTRY_PROTOTYPE /* = platform.Security.cssm_acl_entry_prototype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_entry_prototype public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Authorization: platform.Security.CSSM_AUTHORIZATIONGROUP /* = platform.Security.cssm_authorizationgroup */
        get() = TODO()

    final var Delegate: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val EntryTag: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val TimeRange: platform.Security.CSSM_ACL_VALIDITY_PERIOD /* = platform.Security.cssm_acl_validity_period */
        get() = TODO()

    final val TypedSubject: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_keychain_prompt_selector public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var flags: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    final var version: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_owner_prototype public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Delegate: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val TypedSubject: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_process_subject_selector public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var gid: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var mask: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    final var uid: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var version: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_acl_validity_period public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val EndDate: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val StartDate: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_applecspdl_db_change_password_parameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessCredentials: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_applecspdl_db_is_locked_parameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var isLocked: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_applecspdl_db_settings_parameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var idleTimeout: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var lockOnSleep: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_appledl_open_parameters public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var autoCommit: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var length: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var mask: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var mode: platform.posix.mode_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.mode_t /* = kotlin.UShort */) = TODO()

    final var version: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_authorizationgroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AuthTags: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_AUTHORIZATION_TAGVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_AUTHORIZATION_TAGVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */> */>?) = TODO()

    final var NumberOfAuthTags: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_base_certs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final val Certs: platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */
        get() = TODO()

    final var TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_cert_bundle public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Bundle: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val BundleHeader: platform.Security.CSSM_CERT_BUNDLE_HEADER /* = platform.Security.cssm_cert_bundle_header */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_cert_bundle_header public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var BundleEncoding: platform.Security.CSSM_CERT_BUNDLE_ENCODING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_BUNDLE_ENCODING /* = kotlin.UInt */) = TODO()

    final var BundleType: platform.Security.CSSM_CERT_BUNDLE_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_BUNDLE_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_cert_pair public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val EncodedCert: platform.Security.CSSM_ENCODED_CERT /* = platform.Security.cssm_encoded_cert */
        get() = TODO()

    final val ParsedCert: platform.Security.CSSM_PARSED_CERT /* = platform.Security.cssm_parsed_cert */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_certgroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CertEncoding: platform.Security.CSSM_CERT_ENCODING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_ENCODING /* = kotlin.UInt */) = TODO()

    final var CertGroupType: platform.Security.CSSM_CERTGROUP_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_TYPE /* = kotlin.UInt */) = TODO()

    final var CertType: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */) = TODO()

    final val GroupList: platform.Security.anonymousStruct2
        get() = TODO()

    final var NumCerts: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Reserved: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_context public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AlgorithmType: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final var CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */) = TODO()

    final var ContextAttributes: platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute>? */) = TODO()

    final var ContextType: platform.Security.CSSM_CONTEXT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CONTEXT_TYPE /* = kotlin.UInt */) = TODO()

    final var EncryptionProhibited: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Privileged: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var Reserved: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var WorkFactor: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_context_attribute public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Attribute: platform.Security.cssm_context_attribute_value
        get() = TODO()

    final var AttributeLength: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var AttributeType: platform.Security.CSSM_ATTRIBUTE_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ATTRIBUTE_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_context_attribute_value public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AccessCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    final var CryptoData: platform.Security.CSSM_CRYPTO_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_crypto_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CRYPTO_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_crypto_data>? */) = TODO()

    final var DLDBHandle: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */) = TODO()

    final var Data: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var Date: platform.Security.CSSM_DATE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_date>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_date>? */) = TODO()

    final var KRProfile: kotlinx.cinterop.CPointer<platform.Security.cssm_kr_profile>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.cssm_kr_profile>?) = TODO()

    final var Key: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */
        get() = TODO()
        set(value: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */) = TODO()

    final var Padding: platform.Security.CSSM_PADDING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_PADDING /* = kotlin.UInt */) = TODO()

    final var Range: platform.Security.CSSM_RANGE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_range>? */
        get() = TODO()
        set(value: platform.Security.CSSM_RANGE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_range>? */) = TODO()

    final var String: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var Uint32: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Version: platform.Security.CSSM_VERSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_version>? */
        get() = TODO()
        set(value: platform.Security.CSSM_VERSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_version>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_crl_pair public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val EncodedCrl: platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */
        get() = TODO()

    final val ParsedCrl: platform.Security.CSSM_PARSED_CRL /* = platform.Security.cssm_parsed_crl */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_crlgroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CrlEncoding: platform.Security.CSSM_CRL_ENCODING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_ENCODING /* = kotlin.UInt */) = TODO()

    final var CrlGroupType: platform.Security.CSSM_CRLGROUP_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRLGROUP_TYPE /* = kotlin.UInt */) = TODO()

    final var CrlType: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */) = TODO()

    final val GroupCrlList: platform.Security.anonymousStruct3
        get() = TODO()

    final var NumberOfCrls: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_crypto_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Callback: platform.Security.CSSM_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */) = TODO()

    final var CallerCtx: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val Param: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_csp_operational_statistics public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DeviceFlags: platform.Security.CSSM_CSP_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CSP_FLAGS /* = kotlin.UInt */) = TODO()

    final var TokenFreePrivateMem: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenFreePublicMem: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenMaxRWSessionCount: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenMaxSessionCount: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenOpenedRWSessionCount: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenOpenedSessionCount: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenTotalPrivateMem: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TokenTotalPublicMem: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var UserAuthenticated: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Data: kotlinx.cinterop.CPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */>?) = TODO()

    final var Length: platform.Security.CSSM_SIZE /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.Security.CSSM_SIZE /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_date public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Day: kotlinx.cinterop.CArrayPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */>> */
        get() = TODO()

    final val Month: kotlinx.cinterop.CArrayPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */>> */
        get() = TODO()

    final val Year: kotlinx.cinterop.CArrayPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_attribute_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Info: platform.Security.CSSM_DB_ATTRIBUTE_INFO /* = platform.Security.cssm_db_attribute_info */
        get() = TODO()

    final var NumberOfValues: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_attribute_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeFormat: platform.Security.CSSM_DB_ATTRIBUTE_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_ATTRIBUTE_FORMAT /* = kotlin.UInt */) = TODO()

    final var AttributeNameFormat: platform.Security.CSSM_DB_ATTRIBUTE_NAME_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_ATTRIBUTE_NAME_FORMAT /* = kotlin.UInt */) = TODO()

    final val Label: platform.Security.cssm_db_attribute_label
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_attribute_label public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeID: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var AttributeName: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final val AttributeOID: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_index_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var IndexType: platform.Security.CSSM_DB_INDEX_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_INDEX_TYPE /* = kotlin.UInt */) = TODO()

    final var IndexedDataLocation: platform.Security.CSSM_DB_INDEXED_DATA_LOCATION /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_INDEXED_DATA_LOCATION /* = kotlin.UInt */) = TODO()

    final val Info: platform.Security.CSSM_DB_ATTRIBUTE_INFO /* = platform.Security.cssm_db_attribute_info */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_parsing_module_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ModuleSubserviceUid: platform.Security.CSSM_SUBSERVICE_UID /* = platform.Security.cssm_subservice_uid */
        get() = TODO()

    final var RecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_record_attribute_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeData: platform.Security.CSSM_DB_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_data>? */) = TODO()

    final var DataRecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) = TODO()

    final var NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var SemanticInformation: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_record_attribute_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeInfo: platform.Security.CSSM_DB_ATTRIBUTE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_info>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_ATTRIBUTE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_info>? */) = TODO()

    final var DataRecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) = TODO()

    final var NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_record_index_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DataRecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) = TODO()

    final var IndexInfo: platform.Security.CSSM_DB_INDEX_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_index_info>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_INDEX_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_index_info>? */) = TODO()

    final var NumberOfIndexes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_schema_attribute_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var AttributeName: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final val AttributeNameID: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final var DataType: platform.Security.CSSM_DB_ATTRIBUTE_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_ATTRIBUTE_FORMAT /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_schema_index_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var IndexId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var IndexType: platform.Security.CSSM_DB_INDEX_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_INDEX_TYPE /* = kotlin.UInt */) = TODO()

    final var IndexedDataLocation: platform.Security.CSSM_DB_INDEXED_DATA_LOCATION /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_INDEXED_DATA_LOCATION /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_db_unique_record public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val RecordIdentifier: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val RecordLocator: platform.Security.CSSM_DB_INDEX_INFO /* = platform.Security.cssm_db_index_info */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_dbinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AccessPath: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var DefaultParsingModules: platform.Security.CSSM_DB_PARSING_MODULE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_parsing_module_info>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_PARSING_MODULE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_parsing_module_info>? */) = TODO()

    final var IsLocal: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var NumberOfRecordTypes: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var RecordAttributeNames: platform.Security.CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_info>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_info>? */) = TODO()

    final var RecordIndexes: platform.Security.CSSM_DB_RECORD_INDEX_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_index_info>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORD_INDEX_INFO_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_index_info>? */) = TODO()

    final var Reserved: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_dl_db_handle public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DBHandle: platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */) = TODO()

    final var DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_dl_db_list public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DLDBHandle: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DL_DB_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>? */) = TODO()

    final var NumHandles: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_dl_pkcs11_attributes public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DeviceAccessFlags: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_encoded_cert public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val CertBlob: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var CertEncoding: platform.Security.CSSM_CERT_ENCODING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_ENCODING /* = kotlin.UInt */) = TODO()

    final var CertType: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_encoded_crl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val CrlBlob: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var CrlEncoding: platform.Security.CSSM_CRL_ENCODING /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_ENCODING /* = kotlin.UInt */) = TODO()

    final var CrlType: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_evidence public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Evidence: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var EvidenceForm: platform.Security.CSSM_EVIDENCE_FORM /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_EVIDENCE_FORM /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_field public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val FieldOid: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val FieldValue: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_fieldgroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Fields: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var NumberOfFields: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_func_name_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Address: platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */) = TODO()

    final val Name: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_guid public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Data1: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Data2: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    final var Data3: platform.Security.uint16 /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.Security.uint16 /* = kotlin.UShort */) = TODO()

    final val Data4: kotlinx.cinterop.CArrayPointer<platform.Security.uint8Var /* = kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.Security.uint8 /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kea_derive_params public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Rb: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val Yb: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_key public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val KeyData: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val KeyHeader: platform.Security.CSSM_KEYHEADER /* = platform.Security.cssm_keyheader */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_key_size public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var EffectiveKeySizeInBits: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var LogicalKeySizeInBits: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_keyheader public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AlgorithmId: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final var BlobType: platform.Security.CSSM_KEYBLOB_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYBLOB_TYPE /* = kotlin.UInt */) = TODO()

    final val CspId: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
        get() = TODO()

    final val EndDate: platform.Security.CSSM_DATE /* = platform.Security.cssm_date */
        get() = TODO()

    final var Format: platform.Security.CSSM_KEYBLOB_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYBLOB_FORMAT /* = kotlin.UInt */) = TODO()

    final var HeaderVersion: platform.Security.CSSM_HEADERVERSION /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_HEADERVERSION /* = kotlin.UInt */) = TODO()

    final var KeyAttr: platform.Security.CSSM_KEYATTR_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYATTR_FLAGS /* = kotlin.UInt */) = TODO()

    final var KeyClass: platform.Security.CSSM_KEYCLASS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYCLASS /* = kotlin.UInt */) = TODO()

    final var KeyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */) = TODO()

    final var LogicalKeySizeInBits: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Reserved: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final val StartDate: platform.Security.CSSM_DATE /* = platform.Security.cssm_date */
        get() = TODO()

    final var WrapAlgorithmId: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final var WrapMode: platform.Security.CSSM_ENCRYPT_MODE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ENCRYPT_MODE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kr_name public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Length: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    final var Name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var Type: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kr_policy_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var krbNotAllowed: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var numberOfEntries: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var policyEntry: kotlinx.cinterop.CPointer<platform.Security.CSSM_KR_POLICY_LIST_ITEM /* = platform.Security.cssm_kr_policy_list_item */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_KR_POLICY_LIST_ITEM /* = platform.Security.cssm_kr_policy_list_item */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kr_policy_list_item public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AlgClass: platform.Security.CSSM_CONTEXT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CONTEXT_TYPE /* = kotlin.UInt */) = TODO()

    final var AlgorithmId: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */) = TODO()

    final var MaxKeyLength: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var MaxRounds: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Mode: platform.Security.CSSM_ENCRYPT_MODE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_ENCRYPT_MODE /* = kotlin.UInt */) = TODO()

    final var PolicyFlags: platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */) = TODO()

    final var WorkFactor: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    final var next: kotlinx.cinterop.CPointer<cnames.structs.kr_policy_list_item>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.kr_policy_list_item>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kr_profile public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ENT_KRACertChainList: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var ENT_KRANum: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    final var INDIV_AuthenticationInfo: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var INDIV_KRACertChainList: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var INDIV_KRANum: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    final var KRSCertChain: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var KRSPExtensions: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var KRSPFlags: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var LE_KRACertChainList: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var LE_KRANum: platform.Security.uint8 /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.uint8 /* = kotlin.UByte */) = TODO()

    final var UserCertificate: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final val UserName: platform.Security.CSSM_KR_NAME /* = platform.Security.cssm_kr_name */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_kr_wrappedproductinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ProductDescription: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ProductFlags: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final val ProductVendor: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val ProductVersion: platform.Security.CSSM_VERSION /* = platform.Security.cssm_version */
        get() = TODO()

    final val StandardDescription: platform.Security.CSSM_STRING /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val StandardVersion: platform.Security.CSSM_VERSION /* = platform.Security.cssm_version */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_krsubservice public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Description: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var SubServiceId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final val WrappedProduct: platform.Security.CSSM_KR_WRAPPEDPRODUCT_INFO /* = platform.Security.cssm_kr_wrappedproductinfo */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_list public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Head: platform.Security.CSSM_LIST_ELEMENT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>? */
        get() = TODO()
        set(value: platform.Security.CSSM_LIST_ELEMENT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>? */) = TODO()

    final var ListType: platform.Security.CSSM_LIST_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_LIST_TYPE /* = kotlin.UInt */) = TODO()

    final var Tail: platform.Security.CSSM_LIST_ELEMENT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>? */
        get() = TODO()
        set(value: platform.Security.CSSM_LIST_ELEMENT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_list_element public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Element: platform.Security.anonymousStruct1
        get() = TODO()

    final var ElementType: platform.Security.CSSM_LIST_ELEMENT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_LIST_ELEMENT_TYPE /* = kotlin.UInt */) = TODO()

    final var NextElement: kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>?) = TODO()

    final var WordID: platform.Security.CSSM_WORDID_TYPE /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_WORDID_TYPE /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_manager_event_notification public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DestinationModuleManagerType: platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */) = TODO()

    final var Event: platform.Security.CSSM_MANAGER_EVENT_TYPES /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_MANAGER_EVENT_TYPES /* = kotlin.UInt */) = TODO()

    final val EventData: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var EventId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var SourceModuleManagerType: platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_manager_registration_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var DeregisterDispatchTable: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EventNotifyManager: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_MANAGER_EVENT_NOTIFICATION /* = platform.Security.cssm_manager_event_notification */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_MANAGER_EVENT_NOTIFICATION /* = platform.Security.cssm_manager_event_notification */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var Initialize: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RefreshFunctionTable: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_FUNC_NAME_ADDR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_func_name_addr>? */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_FUNC_NAME_ADDR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_func_name_addr>? */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RegisterDispatchTable: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_STATE_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_state_funcs>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_STATE_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_state_funcs>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var Terminate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_memory_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AllocRef: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var calloc_func: platform.Security.CSSM_CALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    final var free_func: platform.Security.CSSM_FREE? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FREE? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) = TODO()

    final var malloc_func: platform.Security.CSSM_MALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_MALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    final var realloc_func: platform.Security.CSSM_REALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_REALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.CSSM_SIZE /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_module_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfServiceFuncs: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var ServiceFuncs: kotlinx.cinterop.CPointer<platform.Security.CSSM_PROC_ADDRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PROC_ADDR /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>> */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_PROC_ADDRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PROC_ADDR /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>> */> */>?) = TODO()

    final var ServiceType: platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_name_list public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumStrings: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var String: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_net_address public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Address: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var AddressType: platform.Security.CSSM_NET_ADDRESS_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_NET_ADDRESS_TYPE /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_parsed_cert public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CertType: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */) = TODO()

    final var ParsedCert: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var ParsedCertFormat: platform.Security.CSSM_CERT_PARSE_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CERT_PARSE_FORMAT /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_parsed_crl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CrlType: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_TYPE /* = kotlin.UInt */) = TODO()

    final var ParsedCrl: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var ParsedCrlFormat: platform.Security.CSSM_CRL_PARSE_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_CRL_PARSE_FORMAT /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_pkcs1_oaep_params public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var HashAlgorithm: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final val HashParams: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var MGF: platform.Security.CSSM_PKCS_OAEP_MGF /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_PKCS_OAEP_MGF /* = kotlin.UInt */) = TODO()

    final val MGFParams: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var PSource: platform.Security.CSSM_PKCS_OAEP_PSOURCE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_PKCS_OAEP_PSOURCE /* = kotlin.UInt */) = TODO()

    final val PSourceParams: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_pkcs5_pbkdf1_params public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val InitVector: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val Passphrase: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_pkcs5_pbkdf2_params public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Passphrase: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var PseudoRandomFunction: platform.Security.CSSM_PKCS5_PBKDF2_PRF /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_PKCS5_PBKDF2_PRF /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_query public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Conjunctive: platform.Security.CSSM_DB_CONJUNCTIVE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_CONJUNCTIVE /* = kotlin.UInt */) = TODO()

    final var NumSelectionPredicates: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var QueryFlags: platform.Security.CSSM_QUERY_FLAGS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_QUERY_FLAGS /* = kotlin.UInt */) = TODO()

    final val QueryLimits: platform.Security.CSSM_QUERY_LIMITS /* = platform.Security.cssm_query_limits */
        get() = TODO()

    final var RecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) = TODO()

    final var SelectionPredicate: platform.Security.CSSM_SELECTION_PREDICATE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_selection_predicate>? */
        get() = TODO()
        set(value: platform.Security.CSSM_SELECTION_PREDICATE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_selection_predicate>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_query_limits public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var SizeLimit: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var TimeLimit: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_query_size_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var SizeInputBlock: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var SizeOutputBlock: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_range public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Max: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Min: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_resource_control_context public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AccessCred: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    final val InitialAclEntry: platform.Security.CSSM_ACL_ENTRY_INPUT /* = platform.Security.cssm_acl_entry_input */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_sample public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val TypedSample: platform.Security.CSSM_LIST /* = platform.Security.cssm_list */
        get() = TODO()

    final var Verifier: kotlinx.cinterop.CPointer<platform.Security.CSSM_SUBSERVICE_UID /* = platform.Security.cssm_subservice_uid */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_SUBSERVICE_UID /* = platform.Security.cssm_subservice_uid */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_samplegroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfSamples: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Samples: kotlinx.cinterop.CPointer<platform.Security.CSSM_SAMPLE /* = platform.Security.cssm_sample */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_SAMPLE /* = platform.Security.cssm_sample */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_selection_predicate public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Attribute: platform.Security.CSSM_DB_ATTRIBUTE_DATA /* = platform.Security.cssm_db_attribute_data */
        get() = TODO()

    final var DbOperator: platform.Security.CSSM_DB_OPERATOR /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_DB_OPERATOR /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_ac_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AuthCompute: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_TUPLEGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, platform.Security.CSSM_TUPLEGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_cl_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CertAbortCache: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertAbortQuery: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertCache: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertCreateTemplate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertDescribeFormat: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetAllFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetAllTemplateFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetFirstCachedFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetFirstFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetKeyInfo: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEY_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEY_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetNextCachedFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetNextFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupFromVerifiedBundle: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERT_BUNDLE /* = platform.Security.cssm_cert_bundle */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERT_BUNDLE /* = platform.Security.cssm_cert_bundle */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupToSignedBundle: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERT_BUNDLE_HEADER /* = platform.Security.cssm_cert_bundle_header */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERT_BUNDLE_HEADER /* = platform.Security.cssm_cert_bundle_header */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertSign: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertVerify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertVerifyWithKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlAbortCache: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlAbortQuery: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlAddCert: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlCache: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlCreateTemplate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlDescribeFormat: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetAllCachedRecordFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetAllFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetFirstCachedFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetFirstFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetNextCachedFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlGetNextFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlRemoveCert: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlSetFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlSign: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlVerify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlVerifyWithKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeFieldValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var IsCertInCachedCrl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var IsCertInCrl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_csp_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ChangeKeyAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ChangeKeyOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ChangeLoginAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ChangeLoginOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DecryptData: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DecryptDataFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DecryptDataInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DecryptDataUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DeriveKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DigestData: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DigestDataClone: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DigestDataFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DigestDataInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DigestDataUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EncryptData: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EncryptDataFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EncryptDataInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EncryptDataUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var EventNotify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CONTEXT_EVENT /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CONTEXT_EVENT /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_BOOL /* = kotlin.Int */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_BOOL /* = kotlin.Int */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateAlgorithmParams: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateKeyPair: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateMac: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateMacFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateMacInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateMacUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GenerateRandom: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetKeyAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetKeyOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetLoginAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetLoginOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetOperationalStatistics: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CSP_OPERATIONAL_STATISTICS /* = platform.Security.cssm_csp_operational_statistics */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CSP_OPERATIONAL_STATISTICS /* = platform.Security.cssm_csp_operational_statistics */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetTimeValue: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var Login: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var Logout: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ObtainPrivateKeyFromPublicKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var QueryKeySizeInBits: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_KEY_SIZE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key_size>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, platform.Security.CSSM_KEY_SIZE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key_size>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var QuerySize: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_BOOL /* = kotlin.Int */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_QUERY_SIZE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_query_size_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_BOOL /* = kotlin.Int */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_QUERY_SIZE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_query_size_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RetrieveCounter: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RetrieveUniqueId: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var SignData: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var SignDataFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var SignDataInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var SignDataUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var UnwrapKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_WRAP_KEY /* = platform.Security.cssm_key */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_WRAP_KEY /* = platform.Security.cssm_key */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyData: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyDataFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyDataInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyDataUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyDevice: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyMac: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyMacFinal: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyMacInit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var VerifyMacUpdate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var WrapKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_WRAP_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_WRAP_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_dl_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Authenticate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ChangeDbAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ChangeDbOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CreateRelation: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO /* = platform.Security.cssm_db_schema_attribute_info */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO /* = platform.Security.cssm_db_schema_index_info */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO /* = platform.Security.cssm_db_schema_attribute_info */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO /* = platform.Security.cssm_db_schema_index_info */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataAbortQuery: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataDelete: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetFirst: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_QUERY /* = platform.Security.cssm_query */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_QUERY /* = platform.Security.cssm_query */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetFromUniqueRecordId: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetNext: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataInsert: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataModify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DB_MODIFY_MODE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DB_MODIFY_MODE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbClose: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbCreate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DBINFO /* = platform.Security.cssm_dbinfo */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DBINFO /* = platform.Security.cssm_dbinfo */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbDelete: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbOpen: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DestroyRelation: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeNameList: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_NAME_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_NAME_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeUniqueRecord: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbAcl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbNameFromHandle: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbNames: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_NAME_LIST_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_NAME_LIST_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbOwner: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_kr_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var GenerateRecoveryFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetRecoveredObject: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ProcessRecoveryFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RecoveryRequest: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RecoveryRequestAbort: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RecoveryRetrieve: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RegistrationRequest: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, platform.Security.CSSM_KR_POLICY_FLAGS /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RegistrationRetrieve: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_KR_PROFILE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_profile>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_KRSP_HANDLE /* = kotlin.UInt */, platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_KR_PROFILE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_profile>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_spi_tp_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ApplyCrlToDb: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertCreateTemplate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGetAllTemplateFields: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupConstruct: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupPrune: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupToTupleGroup: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TUPLEGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TUPLEGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertGroupVerify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertReclaimAbort: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertReclaimKey: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertRemoveFromCrlTemplate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertRevoke: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_TP_CERTCHANGE_REASON /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_TP_CERTCHANGE_REASON /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CertSign: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ConfirmCredResult: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CONFIRM_RESPONSE /* = platform.Security.cssm_tp_confirm_response */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CONFIRM_RESPONSE /* = platform.Security.cssm_tp_confirm_response */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlCreateTemplate: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlSign: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var CrlVerify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FormRequest: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FormSubmit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var PassThrough: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var ReceiveConfirmation: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_confirm_response> */> */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_confirm_response> */> */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var RetrieveCredResult: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_RESULT_SET_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_RESULT_SET_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_result_set> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_RESULT_SET_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_RESULT_SET_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_result_set> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var SubmitCredRequest: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_TP_AUTHORITY_REQUEST_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_REQUEST_SET /* = platform.Security.cssm_tp_request_set */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, platform.Security.CSSM_TP_AUTHORITY_REQUEST_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_REQUEST_SET /* = platform.Security.cssm_tp_request_set */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, kotlinx.cinterop.CPointer<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var TupleGroupToCertGroup: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_state_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var cssm_DeliverModuleManagerEvent: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_MANAGER_EVENT_NOTIFICATION /* = platform.Security.cssm_manager_event_notification */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_MANAGER_EVENT_NOTIFICATION /* = platform.Security.cssm_manager_event_notification */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var cssm_DeregisterManagerServices: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var cssm_GetAppMemoryFunctions: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_UPCALLS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_upcalls>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_UPCALLS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_upcalls>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var cssm_GetAttachFunctions: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_SERVICE_MASK /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var cssm_IsFuncCallValid: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */, platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_PRIVILEGEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */> */>?, platform.Security.CSSM_BITMASK /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */, platform.Security.CSSM_PROC_ADDR? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>? */, platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.Security.CSSM_PRIVILEGEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */> */>?, platform.Security.CSSM_BITMASK /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var cssm_ReleaseAttachFunctions: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_subservice_uid public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val Guid: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
        get() = TODO()

    final var SubserviceId: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var SubserviceType: platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */) = TODO()

    final val Version: platform.Security.CSSM_VERSION /* = platform.Security.cssm_version */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_authority_id public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AuthorityCert: kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?) = TODO()

    final var AuthorityLocation: platform.Security.CSSM_NET_ADDRESS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_net_address>? */
        get() = TODO()
        set(value: platform.Security.CSSM_NET_ADDRESS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_net_address>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_callerauth_context public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AnchorCerts: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var CallbackWithVerifiedCert: platform.Security.CSSM_TP_VERIFICATION_RESULTS_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_VERIFICATION_RESULTS_CALLBACK? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */) = TODO()

    final var CallerCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    final var DBList: platform.Security.CSSM_DL_DB_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_list>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DL_DB_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_list>? */) = TODO()

    final var NumberOfAnchorCerts: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final val Policy: platform.Security.CSSM_TP_POLICYINFO /* = platform.Security.cssm_tp_policyinfo */
        get() = TODO()

    final var VerificationAbortOn: platform.Security.CSSM_TP_STOP_ON /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_STOP_ON /* = kotlin.UInt */) = TODO()

    final var VerifyTime: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certchange_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Action: platform.Security.CSSM_TP_CERTCHANGE_ACTION /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTCHANGE_ACTION /* = kotlin.UInt */) = TODO()

    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var CallerCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    final var Cert: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var ChangeInfo: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var Reason: platform.Security.CSSM_TP_CERTCHANGE_REASON /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTCHANGE_REASON /* = kotlin.UInt */) = TODO()

    final var StartTime: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certchange_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ActionStatus: platform.Security.CSSM_TP_CERTCHANGE_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTCHANGE_STATUS /* = kotlin.UInt */) = TODO()

    final val RevokeInfo: platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certissue_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final val CSPSubserviceUid: platform.Security.CSSM_SUBSERVICE_UID /* = platform.Security.cssm_subservice_uid */
        get() = TODO()

    final var MoreServiceRequests: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */) = TODO()

    final var NumberOfServiceControls: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var NumberOfTemplateFields: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var ServiceControls: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var SubjectCertFields: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var UserCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certissue_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CertGroup: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var IssueStatus: platform.Security.CSSM_TP_CERTISSUE_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTISSUE_STATUS /* = kotlin.UInt */) = TODO()

    final var PerformedServiceRequests: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certnotarize_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var MoreFields: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var MoreServiceRequests: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */) = TODO()

    final var NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var NumberOfServiceControls: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var ScopeSize: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var ServiceControls: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var SignScope: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var UserCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certnotarize_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NotarizeStatus: platform.Security.CSSM_TP_CERTNOTARIZE_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTNOTARIZE_STATUS /* = kotlin.UInt */) = TODO()

    final var NotarizedCertGroup: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    final var PerformedServiceRequests: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_SERVICES /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certreclaim_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var NumberOfSelectionFields: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var SelectionFields: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    final var UserCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certreclaim_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var KeyCacheHandle: platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */) = TODO()

    final var ReclaimStatus: platform.Security.CSSM_TP_CERTRECLAIM_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTRECLAIM_STATUS /* = kotlin.UInt */) = TODO()

    final var ReclaimedCertGroup: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */
        get() = TODO()
        set(value: platform.Security.CSSM_CERTGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certverify_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var Cert: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */
        get() = TODO()
        set(value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) = TODO()

    final var VerifyContext: platform.Security.CSSM_TP_VERIFY_CONTEXT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_VERIFY_CONTEXT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_certverify_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Evidence: platform.Security.CSSM_EVIDENCE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_evidence>? */
        get() = TODO()
        set(value: platform.Security.CSSM_EVIDENCE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_evidence>? */) = TODO()

    final var NumberOfEvidence: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var VerifyStatus: platform.Security.CSSM_TP_CERTVERIFY_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CERTVERIFY_STATUS /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_confirm_response public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfResponses: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Responses: platform.Security.CSSM_TP_CONFIRM_STATUS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CONFIRM_STATUS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_crlissue_input public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */
        get() = TODO()
        set(value: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */) = TODO()

    final var CallerCredentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */) = TODO()

    final var CrlIdentifier: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var CrlThisTime: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var PolicyIdentifier: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_crlissue_output public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Crl: platform.Security.CSSM_ENCODED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_crl>? */
        get() = TODO()
        set(value: platform.Security.CSSM_ENCODED_CRL_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_crl>? */) = TODO()

    final var CrlNextTime: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TIMESTRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var IssueStatus: platform.Security.CSSM_TP_CRLISSUE_STATUS /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CRLISSUE_STATUS /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_policyinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfPolicyIds: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var PolicyControl: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var PolicyIds: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */
        get() = TODO()
        set(value: platform.Security.CSSM_FIELD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_request_set public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfRequests: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Requests: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_result_set public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfResults: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Results: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_verify_context public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Action: platform.Security.CSSM_TP_ACTION /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_ACTION /* = kotlin.UInt */) = TODO()

    final val ActionData: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var Cred: platform.Security.CSSM_TP_CALLERAUTH_CONTEXT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_callerauth_context>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TP_CALLERAUTH_CONTEXT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_callerauth_context>? */) = TODO()

    final val Crls: platform.Security.CSSM_CRLGROUP /* = platform.Security.cssm_crlgroup */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tp_verify_context_result public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Evidence: platform.Security.CSSM_EVIDENCE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_evidence>? */
        get() = TODO()
        set(value: platform.Security.CSSM_EVIDENCE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_evidence>? */) = TODO()

    final var NumberOfEvidences: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_tuplegroup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var NumberOfTuples: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Tuples: platform.Security.CSSM_TUPLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLE>? */
        get() = TODO()
        set(value: platform.Security.CSSM_TUPLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLE>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_upcalls public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CcToHandle_func: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_MODULE_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_HANDLE /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, platform.Security.CSSM_MODULE_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_HANDLE /* = kotlin.Long */> */>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetModuleInfo_func: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */, platform.Security.CSSM_VERSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_version>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_SERVICE_TYPEVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ATTACH_FLAGSVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ATTACH_FLAGS /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY_HIERARCHYVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */> */>?, platform.Security.CSSM_API_MEMORY_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_API_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>? */, platform.Security.CSSM_FUNC_NAME_ADDR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_func_name_addr>? */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */, platform.Security.CSSM_VERSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_version>? */, kotlinx.cinterop.CPointer<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_SERVICE_TYPEVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_ATTACH_FLAGSVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ATTACH_FLAGS /* = kotlin.UInt */> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY_HIERARCHYVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */> */>?, platform.Security.CSSM_API_MEMORY_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_API_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>? */, platform.Security.CSSM_FUNC_NAME_ADDR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_func_name_addr>? */, platform.Security.uint32 /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var calloc_func: platform.Security.CSSM_UPCALLS_CALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.posix.size_t /* = kotlin.ULong */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_UPCALLS_CALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.posix.size_t /* = kotlin.ULong */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    final var free_func: platform.Security.CSSM_UPCALLS_FREE? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_UPCALLS_FREE? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) = TODO()

    final var malloc_func: platform.Security.CSSM_UPCALLS_MALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_UPCALLS_MALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    final var realloc_func: platform.Security.CSSM_UPCALLS_REALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */
        get() = TODO()
        set(value: platform.Security.CSSM_UPCALLS_REALLOC? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE /* = kotlin.Long */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_version public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Major: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var Minor: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_algorithm_identifier public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val algorithm: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val parameters: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_extension public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val BERvalue: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var critical: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final val extnId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final var format: platform.Security.CSSM_X509EXT_DATA_FORMAT /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.CSSM_X509EXT_DATA_FORMAT /* = kotlin.UInt */) = TODO()

    final val value: platform.Security.cssm_x509ext_value
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_extensionTagAndValue public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var type: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */) = TODO()

    final val value: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_extensions public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var extensions: platform.Security.CSSM_X509_EXTENSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_extension>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_EXTENSION_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_extension>? */) = TODO()

    final var numberOfExtensions: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_name public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var RelativeDistinguishedName: platform.Security.CSSM_X509_RDN_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_rdn>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_RDN_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_rdn>? */) = TODO()

    final var numberOfRDNs: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_rdn public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var AttributeTypeAndValue: platform.Security.CSSM_X509_TYPE_VALUE_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_type_value_pair>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_TYPE_VALUE_PAIR_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_type_value_pair>? */) = TODO()

    final var numberOfPairs: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_revoked_cert_entry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val certificateSerialNumber: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val extensions: platform.Security.CSSM_X509_EXTENSIONS /* = platform.Security.cssm_x509_extensions */
        get() = TODO()

    final val revocationDate: platform.Security.CSSM_X509_TIME /* = platform.Security.cssm_x509_time */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_revoked_cert_list public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numberOfRevokedCertEntries: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var revokedCertEntry: platform.Security.CSSM_X509_REVOKED_CERT_ENTRY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_entry>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_REVOKED_CERT_ENTRY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_entry>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_signature public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val algorithmIdentifier: platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */
        get() = TODO()

    final val encrypted: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_signed_certificate public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val certificate: platform.Security.CSSM_X509_TBS_CERTIFICATE /* = platform.Security.cssm_x509_tbs_certificate */
        get() = TODO()

    final val signature: platform.Security.CSSM_X509_SIGNATURE /* = platform.Security.cssm_x509_signature */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_signed_crl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val signature: platform.Security.CSSM_X509_SIGNATURE /* = platform.Security.cssm_x509_signature */
        get() = TODO()

    final val tbsCertList: platform.Security.CSSM_X509_TBS_CERTLIST /* = platform.Security.cssm_x509_tbs_certlist */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_subject_public_key_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val algorithm: platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */
        get() = TODO()

    final val subjectPublicKey: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_tbs_certificate public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val extensions: platform.Security.CSSM_X509_EXTENSIONS /* = platform.Security.cssm_x509_extensions */
        get() = TODO()

    final val issuer: platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */
        get() = TODO()

    final val issuerUniqueIdentifier: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val serialNumber: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val signature: platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */
        get() = TODO()

    final val subject: platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */
        get() = TODO()

    final val subjectPublicKeyInfo: platform.Security.CSSM_X509_SUBJECT_PUBLIC_KEY_INFO /* = platform.Security.cssm_x509_subject_public_key_info */
        get() = TODO()

    final val subjectUniqueIdentifier: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final val validity: platform.Security.CSSM_X509_VALIDITY /* = platform.Security.x509_validity */
        get() = TODO()

    final val version: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_tbs_certlist public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val extensions: platform.Security.CSSM_X509_EXTENSIONS /* = platform.Security.cssm_x509_extensions */
        get() = TODO()

    final val issuer: platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */
        get() = TODO()

    final val nextUpdate: platform.Security.CSSM_X509_TIME /* = platform.Security.cssm_x509_time */
        get() = TODO()

    final var revokedCertificates: platform.Security.CSSM_X509_REVOKED_CERT_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_list>? */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_REVOKED_CERT_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_list>? */) = TODO()

    final val signature: platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */
        get() = TODO()

    final val thisUpdate: platform.Security.CSSM_X509_TIME /* = platform.Security.cssm_x509_time */
        get() = TODO()

    final val version: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_time public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val time: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var timeType: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509_type_value_pair public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val type: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val value: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    final var valueType: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.Security.CSSM_BER_TAG /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_basicConstraints public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var cA: platform.Security.CSSM_BOOL /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_BOOL /* = kotlin.Int */) = TODO()

    final var pathLenConstraint: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var pathLenConstraintPresent: platform.Security.CSSM_X509_OPTION /* = kotlin.Int */
        get() = TODO()
        set(value: platform.Security.CSSM_X509_OPTION /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_pair public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var parsedValue: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val tagAndValue: platform.Security.CSSM_X509EXT_TAGandVALUE /* = platform.Security.cssm_x509_extensionTagAndValue */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_policyInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val policyIdentifier: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val policyQualifiers: platform.Security.CSSM_X509EXT_POLICYQUALIFIERS /* = platform.Security.cssm_x509ext_policyQualifiers */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_policyQualifierInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val policyQualifierId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
        get() = TODO()

    final val value: platform.Security.CSSM_DATA /* = platform.Security.cssm_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_policyQualifiers public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var numberOfPolicyQualifiers: platform.Security.uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.Security.uint32 /* = kotlin.UInt */) = TODO()

    final var policyQualifier: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_POLICYQUALIFIERINFO /* = platform.Security.cssm_x509ext_policyQualifierInfo */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_POLICYQUALIFIERINFO /* = platform.Security.cssm_x509ext_policyQualifierInfo */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class cssm_x509ext_value public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var parsedValue: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var tagAndValue: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_TAGandVALUE /* = platform.Security.cssm_x509_extensionTagAndValue */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_TAGandVALUE /* = platform.Security.cssm_x509_extensionTagAndValue */>?) = TODO()

    final var valuePair: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_PAIR /* = platform.Security.cssm_x509ext_pair */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.Security.CSSM_X509EXT_PAIR /* = platform.Security.cssm_x509ext_pair */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class mds_funcs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var CreateRelation: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO /* = platform.Security.cssm_db_schema_attribute_info */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO /* = platform.Security.cssm_db_schema_index_info */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO /* = platform.Security.cssm_db_schema_attribute_info */>?, platform.Security.uint32 /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO /* = platform.Security.cssm_db_schema_index_info */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataAbortQuery: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataDelete: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetFirst: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_QUERY /* = platform.Security.cssm_query */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_QUERY /* = platform.Security.cssm_query */>?, platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetFromUniqueRecordId: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataGetNext: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_HANDLE /* = kotlin.Long */, platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataInsert: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DataModify: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DB_MODIFY_MODE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, platform.Security.CSSM_DB_MODIFY_MODE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbClose: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DbOpen: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var DestroyRelation: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeNameList: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, platform.Security.CSSM_NAME_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, platform.Security.CSSM_NAME_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var FreeUniqueRecord: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbNameFromHandle: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.Security.MDS_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    final var GetDbNames: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_NAME_LIST_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.MDS_HANDLE /* = kotlin.Long */, kotlinx.cinterop.CPointer<platform.Security.CSSM_NAME_LIST_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list> */> */>?) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class x509_validity public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val notAfter: platform.Security.CSSM_X509_TIME /* = platform.Security.cssm_x509_time */
        get() = TODO()

    final val notBefore: platform.Security.CSSM_X509_TIME /* = platform.Security.cssm_x509_time */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

typealias AuthorizationAsyncCallback = ((platform.darwin.OSStatus, kotlinx.cinterop.CPointer<platform.Security.AuthorizationRights>?) -> kotlin.Unit)?

typealias AuthorizationAsyncCallbackVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.AuthorizationAsyncCallback>

typealias AuthorizationEnvironment = platform.Security.AuthorizationItemSet

typealias AuthorizationFlags = platform.darwin.UInt32

typealias AuthorizationFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.AuthorizationFlags>

typealias AuthorizationRef = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>

typealias AuthorizationRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.AuthorizationRef>

typealias AuthorizationRights = platform.Security.AuthorizationItemSet

typealias AuthorizationString = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias AuthorizationStringVar = kotlinx.cinterop.CPointerVarOf<platform.Security.AuthorizationString>

typealias CE_AccessDescription = platform.Security.__CE_AccessDescription

typealias CE_AuthorityInfoAccess = platform.Security.__CE_AuthorityInfoAccess

typealias CE_AuthorityKeyID = platform.Security.__CE_AuthorityKeyID

typealias CE_BasicConstraints = platform.Security.__CE_BasicConstraints

typealias CE_CRLDistPointsSyntax = platform.Security.__CE_CRLDistPointsSyntax

typealias CE_CRLDistributionPoint = platform.Security.__CE_CRLDistributionPoint

typealias CE_CertPolicies = platform.Security.__CE_CertPolicies

typealias CE_CrlDistReasonFlags = platform.Security.uint8

typealias CE_CrlDistReasonFlagsVar = kotlinx.cinterop.UByteVarOf<platform.Security.CE_CrlDistReasonFlags>

typealias CE_CrlDistributionPointNameType = platform.Security.__CE_CrlDistributionPointNameType

typealias CE_CrlDistributionPointNameTypeVar = platform.Security.__CE_CrlDistributionPointNameType.Var

typealias CE_CrlNumber = platform.Security.uint32

typealias CE_CrlNumberVar = kotlinx.cinterop.UIntVarOf<platform.Security.CE_CrlNumber>

typealias CE_CrlReason = platform.Security.uint32

typealias CE_CrlReasonVar = kotlinx.cinterop.UIntVarOf<platform.Security.CE_CrlReason>

typealias CE_DataAndType = platform.Security.__CE_DataAndType

typealias CE_DataType = platform.Security.__CE_DataType

typealias CE_DataTypeVar = platform.Security.__CE_DataType.Var

typealias CE_DeltaCrl = platform.Security.uint32

typealias CE_DeltaCrlVar = kotlinx.cinterop.UIntVarOf<platform.Security.CE_DeltaCrl>

typealias CE_DistributionPointName = platform.Security.__CE_DistributionPointName

typealias CE_ExtendedKeyUsage = platform.Security.__CE_ExtendedKeyUsage

typealias CE_GeneralName = platform.Security.__CE_GeneralName

typealias CE_GeneralNameType = platform.Security.__CE_GeneralNameType

typealias CE_GeneralNameTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.CE_GeneralNameType>

typealias CE_GeneralNames = platform.Security.__CE_GeneralNames

typealias CE_GeneralSubtree = platform.Security.__CE_GeneralSubtree

typealias CE_GeneralSubtrees = platform.Security.__CE_GeneralSubtrees

typealias CE_InhibitAnyPolicy = platform.Security.uint32

typealias CE_InhibitAnyPolicyVar = kotlinx.cinterop.UIntVarOf<platform.Security.CE_InhibitAnyPolicy>

typealias CE_IssuingDistributionPoint = platform.Security.__CE_IssuingDistributionPoint

typealias CE_KeyUsage = platform.Security.uint16

typealias CE_KeyUsageVar = kotlinx.cinterop.UShortVarOf<platform.Security.CE_KeyUsage>

typealias CE_NameConstraints = platform.Security.__CE_NameConstraints

typealias CE_NameRegistrationAuthorities = platform.Security.CE_GeneralNames

typealias CE_NetscapeCertType = platform.Security.uint16

typealias CE_NetscapeCertTypeVar = kotlinx.cinterop.UShortVarOf<platform.Security.CE_NetscapeCertType>

typealias CE_OtherName = platform.Security.__CE_OtherName

typealias CE_PolicyConstraints = platform.Security.__CE_PolicyConstraints

typealias CE_PolicyInformation = platform.Security.__CE_PolicyInformation

typealias CE_PolicyMapping = platform.Security.__CE_PolicyMapping

typealias CE_PolicyMappings = platform.Security.__CE_PolicyMappings

typealias CE_PolicyQualifierInfo = platform.Security.__CE_PolicyQualifierInfo

typealias CE_QC_Statement = platform.Security.__CE_QC_Statement

typealias CE_QC_Statements = platform.Security.__CE_QC_Statements

typealias CE_SemanticsInformation = platform.Security.__CE_SemanticsInformation

typealias CE_SubjectKeyID = platform.Security.CSSM_DATA

typealias CMSCertificateChainMode = platform.posix.uint32_t

typealias CMSCertificateChainModeVar = kotlinx.cinterop.UIntVarOf<platform.Security.CMSCertificateChainMode>

typealias CMSDecoderRef = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>

typealias CMSDecoderRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CMSDecoderRef>

typealias CMSEncoderRef = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>

typealias CMSEncoderRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CMSEncoderRef>

typealias CMSSignedAttributes = platform.posix.uint32_t

typealias CMSSignedAttributesVar = kotlinx.cinterop.UIntVarOf<platform.Security.CMSSignedAttributes>

typealias CMSSignerStatus = platform.posix.uint32_t

typealias CMSSignerStatusVar = kotlinx.cinterop.UIntVarOf<platform.Security.CMSSignerStatus>

typealias CSSM_ACCESS_CREDENTIALS = platform.Security.cssm_access_credentials

typealias CSSM_ACCESS_CREDENTIALS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>

typealias CSSM_ACCESS_CREDENTIALS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACCESS_CREDENTIALS_PTR>

typealias CSSM_ACL_AUTHORIZATION_TAG = platform.Security.sint32

typealias CSSM_ACL_AUTHORIZATION_TAGVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_AUTHORIZATION_TAG>

typealias CSSM_ACL_EDIT = platform.Security.cssm_acl_edit

typealias CSSM_ACL_EDIT_MODE = platform.Security.uint32

typealias CSSM_ACL_EDIT_MODEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ACL_EDIT_MODE>

typealias CSSM_ACL_EDIT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_edit>

typealias CSSM_ACL_EDIT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_EDIT_PTR>

typealias CSSM_ACL_ENTRY_INFO = platform.Security.cssm_acl_entry_info

typealias CSSM_ACL_ENTRY_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info>

typealias CSSM_ACL_ENTRY_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR>

typealias CSSM_ACL_ENTRY_INPUT = platform.Security.cssm_acl_entry_input

typealias CSSM_ACL_ENTRY_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_input>

typealias CSSM_ACL_ENTRY_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INPUT_PTR>

typealias CSSM_ACL_ENTRY_PROTOTYPE = platform.Security.cssm_acl_entry_prototype

typealias CSSM_ACL_ENTRY_PROTOTYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_prototype>

typealias CSSM_ACL_ENTRY_PROTOTYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_PROTOTYPE_PTR>

typealias CSSM_ACL_HANDLE = platform.Security.CSSM_HANDLE

typealias CSSM_ACL_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_ACL_HANDLE>

typealias CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR = platform.Security.cssm_acl_keychain_prompt_selector

typealias CSSM_ACL_OWNER_PROTOTYPE = platform.Security.cssm_acl_owner_prototype

typealias CSSM_ACL_OWNER_PROTOTYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>

typealias CSSM_ACL_OWNER_PROTOTYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR>

typealias CSSM_ACL_PREAUTH_TRACKING_STATE = platform.Security.uint32

typealias CSSM_ACL_PREAUTH_TRACKING_STATEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ACL_PREAUTH_TRACKING_STATE>

typealias CSSM_ACL_PROCESS_SUBJECT_SELECTOR = platform.Security.cssm_acl_process_subject_selector

typealias CSSM_ACL_SUBJECT_CALLBACK = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST>?, platform.Security.CSSM_LIST_PTR?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS>?) -> platform.Security.CSSM_RETURN>>

typealias CSSM_ACL_SUBJECT_CALLBACKVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_SUBJECT_CALLBACK>

typealias CSSM_ACL_SUBJECT_TYPE = platform.Security.sint32

typealias CSSM_ACL_SUBJECT_TYPEVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_SUBJECT_TYPE>

typealias CSSM_ACL_VALIDITY_PERIOD = platform.Security.cssm_acl_validity_period

typealias CSSM_ACL_VALIDITY_PERIOD_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_validity_period>

typealias CSSM_ACL_VALIDITY_PERIOD_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_VALIDITY_PERIOD_PTR>

typealias CSSM_AC_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_AC_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_AC_HANDLE>

typealias CSSM_ALGORITHMS = platform.Security.uint32

typealias CSSM_ALGORITHMSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ALGORITHMS>

typealias CSSM_API_MEMORY_FUNCS = platform.Security.CSSM_MEMORY_FUNCS

typealias CSSM_API_MEMORY_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_API_MEMORY_FUNCS>

typealias CSSM_API_MEMORY_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_API_MEMORY_FUNCS_PTR>

typealias CSSM_API_ModuleEventHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID>?, kotlinx.cinterop.COpaquePointer?, platform.Security.uint32, platform.Security.CSSM_SERVICE_TYPE, platform.Security.CSSM_MODULE_EVENT) -> platform.Security.CSSM_RETURN>>

typealias CSSM_API_ModuleEventHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_API_ModuleEventHandler>

typealias CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS = platform.Security.cssm_applecspdl_db_change_password_parameters

typealias CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_applecspdl_db_change_password_parameters>

typealias CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_APPLECSPDL_DB_CHANGE_PASSWORD_PARAMETERS_PTR>

typealias CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS = platform.Security.cssm_applecspdl_db_is_locked_parameters

typealias CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_applecspdl_db_is_locked_parameters>

typealias CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_APPLECSPDL_DB_IS_LOCKED_PARAMETERS_PTR>

typealias CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS = platform.Security.cssm_applecspdl_db_settings_parameters

typealias CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_applecspdl_db_settings_parameters>

typealias CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_APPLECSPDL_DB_SETTINGS_PARAMETERS_PTR>

typealias CSSM_APPLEDL_OPEN_PARAMETERS = platform.Security.cssm_appledl_open_parameters

typealias CSSM_APPLEDL_OPEN_PARAMETERS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_appledl_open_parameters>

typealias CSSM_APPLEDL_OPEN_PARAMETERS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_APPLEDL_OPEN_PARAMETERS_PTR>

typealias CSSM_APPLE_TP_ACTION_FLAGS = platform.Security.uint32

typealias CSSM_APPLE_TP_ACTION_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_APPLE_TP_ACTION_FLAGS>

typealias CSSM_APPLE_TP_CRL_OPT_FLAGS = platform.Security.uint32

typealias CSSM_APPLE_TP_CRL_OPT_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_APPLE_TP_CRL_OPT_FLAGS>

typealias CSSM_ATTACH_FLAGS = platform.Security.uint32

typealias CSSM_ATTACH_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ATTACH_FLAGS>

typealias CSSM_ATTRIBUTE_TYPE = platform.Security.uint32

typealias CSSM_ATTRIBUTE_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ATTRIBUTE_TYPE>

typealias CSSM_AUTHORIZATIONGROUP = platform.Security.cssm_authorizationgroup

typealias CSSM_AUTHORIZATIONGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_authorizationgroup>

typealias CSSM_AUTHORIZATIONGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_AUTHORIZATIONGROUP_PTR>

typealias CSSM_BASE_CERTS = platform.Security.cssm_base_certs

typealias CSSM_BASE_CERTS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_base_certs>

typealias CSSM_BASE_CERTS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_BASE_CERTS_PTR>

typealias CSSM_BER_TAG = platform.Security.uint8

typealias CSSM_BER_TAGVar = kotlinx.cinterop.UByteVarOf<platform.Security.CSSM_BER_TAG>

typealias CSSM_BITMASK = platform.Security.uint32

typealias CSSM_BITMASKVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_BITMASK>

typealias CSSM_BOOL = platform.Security.sint32

typealias CSSM_BOOLVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL>

typealias CSSM_CALLBACK = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_DATA_PTR?, kotlinx.cinterop.COpaquePointer?) -> platform.Security.CSSM_RETURN>>

typealias CSSM_CALLBACKVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CALLBACK>

typealias CSSM_CALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.uint32, platform.Security.CSSM_SIZE, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_CALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CALLOC>

typealias CSSM_CC_HANDLE = platform.Security.CSSM_LONG_HANDLE

typealias CSSM_CC_HANDLEVar = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE>

typealias CSSM_CERTGROUP = platform.Security.cssm_certgroup

typealias CSSM_CERTGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup>

typealias CSSM_CERTGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR>

typealias CSSM_CERTGROUP_TYPE = platform.Security.uint32

typealias CSSM_CERTGROUP_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERTGROUP_TYPE>

typealias CSSM_CERTGROUP_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CERTGROUP_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_TYPE_PTR>

typealias CSSM_CERT_BUNDLE = platform.Security.cssm_cert_bundle

typealias CSSM_CERT_BUNDLE_ENCODING = platform.Security.uint32

typealias CSSM_CERT_BUNDLE_ENCODINGVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_BUNDLE_ENCODING>

typealias CSSM_CERT_BUNDLE_HEADER = platform.Security.cssm_cert_bundle_header

typealias CSSM_CERT_BUNDLE_HEADER_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_cert_bundle_header>

typealias CSSM_CERT_BUNDLE_HEADER_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_BUNDLE_HEADER_PTR>

typealias CSSM_CERT_BUNDLE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_cert_bundle>

typealias CSSM_CERT_BUNDLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_BUNDLE_PTR>

typealias CSSM_CERT_BUNDLE_TYPE = platform.Security.uint32

typealias CSSM_CERT_BUNDLE_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_BUNDLE_TYPE>

typealias CSSM_CERT_ENCODING = platform.Security.uint32

typealias CSSM_CERT_ENCODINGVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_ENCODING>

typealias CSSM_CERT_ENCODING_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CERT_ENCODING_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_ENCODING_PTR>

typealias CSSM_CERT_PAIR = platform.Security.cssm_cert_pair

typealias CSSM_CERT_PAIR_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_cert_pair>

typealias CSSM_CERT_PAIR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_PAIR_PTR>

typealias CSSM_CERT_PARSE_FORMAT = platform.Security.uint32

typealias CSSM_CERT_PARSE_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_PARSE_FORMAT>

typealias CSSM_CERT_PARSE_FORMAT_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CERT_PARSE_FORMAT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_PARSE_FORMAT_PTR>

typealias CSSM_CERT_TYPE = platform.Security.uint32

typealias CSSM_CERT_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_TYPE>

typealias CSSM_CERT_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CERT_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERT_TYPE_PTR>

typealias CSSM_CHALLENGE_CALLBACK = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_LIST>?, platform.Security.CSSM_SAMPLEGROUP_PTR?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.Security.CSSM_MEMORY_FUNCS>?) -> platform.Security.CSSM_RETURN>>

typealias CSSM_CHALLENGE_CALLBACKVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CHALLENGE_CALLBACK>

typealias CSSM_CL_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_CL_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_CL_HANDLE>

typealias CSSM_CL_TEMPLATE_TYPE = platform.Security.uint32

typealias CSSM_CL_TEMPLATE_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CL_TEMPLATE_TYPE>

typealias CSSM_CONTEXT = platform.Security.cssm_context

typealias CSSM_CONTEXT_ATTRIBUTE = platform.Security.cssm_context_attribute

typealias CSSM_CONTEXT_ATTRIBUTE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute>

typealias CSSM_CONTEXT_ATTRIBUTE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR>

typealias CSSM_CONTEXT_EVENT = platform.Security.uint32

typealias CSSM_CONTEXT_EVENTVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CONTEXT_EVENT>

typealias CSSM_CONTEXT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_context>

typealias CSSM_CONTEXT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_PTR>

typealias CSSM_CONTEXT_TYPE = platform.Security.uint32

typealias CSSM_CONTEXT_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CONTEXT_TYPE>

typealias CSSM_CRLGROUP = platform.Security.cssm_crlgroup

typealias CSSM_CRLGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_crlgroup>

typealias CSSM_CRLGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRLGROUP_PTR>

typealias CSSM_CRLGROUP_TYPE = platform.Security.uint32

typealias CSSM_CRLGROUP_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CRLGROUP_TYPE>

typealias CSSM_CRLGROUP_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CRLGROUP_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRLGROUP_TYPE_PTR>

typealias CSSM_CRL_ENCODING = platform.Security.uint32

typealias CSSM_CRL_ENCODINGVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CRL_ENCODING>

typealias CSSM_CRL_ENCODING_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CRL_ENCODING_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRL_ENCODING_PTR>

typealias CSSM_CRL_PAIR = platform.Security.cssm_crl_pair

typealias CSSM_CRL_PAIR_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_crl_pair>

typealias CSSM_CRL_PAIR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRL_PAIR_PTR>

typealias CSSM_CRL_PARSE_FORMAT = platform.Security.uint32

typealias CSSM_CRL_PARSE_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CRL_PARSE_FORMAT>

typealias CSSM_CRL_PARSE_FORMAT_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CRL_PARSE_FORMAT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRL_PARSE_FORMAT_PTR>

typealias CSSM_CRL_TYPE = platform.Security.uint32

typealias CSSM_CRL_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CRL_TYPE>

typealias CSSM_CRL_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_CRL_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRL_TYPE_PTR>

typealias CSSM_CRYPTO_DATA = platform.Security.cssm_crypto_data

typealias CSSM_CRYPTO_DATA_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_crypto_data>

typealias CSSM_CRYPTO_DATA_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CRYPTO_DATA_PTR>

typealias CSSM_CSPTYPE = platform.Security.uint32

typealias CSSM_CSPTYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CSPTYPE>

typealias CSSM_CSP_FLAGS = platform.Security.uint32

typealias CSSM_CSP_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CSP_FLAGS>

typealias CSSM_CSP_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_CSP_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_CSP_HANDLE>

typealias CSSM_CSP_OPERATIONAL_STATISTICS = platform.Security.cssm_csp_operational_statistics

typealias CSSM_CSP_OPERATIONAL_STATISTICS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_csp_operational_statistics>

typealias CSSM_CSP_OPERATIONAL_STATISTICS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CSP_OPERATIONAL_STATISTICS_PTR>

typealias CSSM_CSP_READER_FLAGS = platform.Security.uint32

typealias CSSM_CSP_READER_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CSP_READER_FLAGS>

typealias CSSM_DATA = platform.Security.cssm_data

typealias CSSM_DATA_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_data>

typealias CSSM_DATA_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR>

typealias CSSM_DATE = platform.Security.cssm_date

typealias CSSM_DATE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_date>

typealias CSSM_DATE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATE_PTR>

typealias CSSM_DBINFO = platform.Security.cssm_dbinfo

typealias CSSM_DBINFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_dbinfo>

typealias CSSM_DBINFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DBINFO_PTR>

typealias CSSM_DB_ACCESS_TYPE = platform.Security.uint32

typealias CSSM_DB_ACCESS_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_ACCESS_TYPE>

typealias CSSM_DB_ACCESS_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DB_ACCESS_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_ACCESS_TYPE_PTR>

typealias CSSM_DB_ATTRIBUTE_DATA = platform.Security.cssm_db_attribute_data

typealias CSSM_DB_ATTRIBUTE_DATA_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_data>

typealias CSSM_DB_ATTRIBUTE_DATA_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_ATTRIBUTE_DATA_PTR>

typealias CSSM_DB_ATTRIBUTE_FORMAT = platform.Security.uint32

typealias CSSM_DB_ATTRIBUTE_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_ATTRIBUTE_FORMAT>

typealias CSSM_DB_ATTRIBUTE_FORMAT_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DB_ATTRIBUTE_FORMAT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_ATTRIBUTE_FORMAT_PTR>

typealias CSSM_DB_ATTRIBUTE_INFO = platform.Security.cssm_db_attribute_info

typealias CSSM_DB_ATTRIBUTE_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_attribute_info>

typealias CSSM_DB_ATTRIBUTE_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_ATTRIBUTE_INFO_PTR>

typealias CSSM_DB_ATTRIBUTE_NAME_FORMAT = platform.Security.uint32

typealias CSSM_DB_ATTRIBUTE_NAME_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_ATTRIBUTE_NAME_FORMAT>

typealias CSSM_DB_ATTRIBUTE_NAME_FORMAT_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DB_ATTRIBUTE_NAME_FORMAT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_ATTRIBUTE_NAME_FORMAT_PTR>

typealias CSSM_DB_CONJUNCTIVE = platform.Security.uint32

typealias CSSM_DB_CONJUNCTIVEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_CONJUNCTIVE>

typealias CSSM_DB_CONJUNCTIVE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DB_CONJUNCTIVE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_CONJUNCTIVE_PTR>

typealias CSSM_DB_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_DB_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE>

typealias CSSM_DB_INDEXED_DATA_LOCATION = platform.Security.uint32

typealias CSSM_DB_INDEXED_DATA_LOCATIONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_INDEXED_DATA_LOCATION>

typealias CSSM_DB_INDEX_INFO = platform.Security.cssm_db_index_info

typealias CSSM_DB_INDEX_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_index_info>

typealias CSSM_DB_INDEX_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_INDEX_INFO_PTR>

typealias CSSM_DB_INDEX_TYPE = platform.Security.uint32

typealias CSSM_DB_INDEX_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_INDEX_TYPE>

typealias CSSM_DB_MODIFY_MODE = platform.Security.uint32

typealias CSSM_DB_MODIFY_MODEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_MODIFY_MODE>

typealias CSSM_DB_OPERATOR = platform.Security.uint32

typealias CSSM_DB_OPERATORVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_OPERATOR>

typealias CSSM_DB_OPERATOR_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DB_OPERATOR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_OPERATOR_PTR>

typealias CSSM_DB_PARSING_MODULE_INFO = platform.Security.cssm_db_parsing_module_info

typealias CSSM_DB_PARSING_MODULE_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_parsing_module_info>

typealias CSSM_DB_PARSING_MODULE_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_PARSING_MODULE_INFO_PTR>

typealias CSSM_DB_RECORDTYPE = platform.Security.uint32

typealias CSSM_DB_RECORDTYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_RECORDTYPE>

typealias CSSM_DB_RECORD_ATTRIBUTE_DATA = platform.Security.cssm_db_record_attribute_data

typealias CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>

typealias CSSM_DB_RECORD_ATTRIBUTE_DATA_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR>

typealias CSSM_DB_RECORD_ATTRIBUTE_INFO = platform.Security.cssm_db_record_attribute_info

typealias CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_info>

typealias CSSM_DB_RECORD_ATTRIBUTE_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_INFO_PTR>

typealias CSSM_DB_RECORD_INDEX_INFO = platform.Security.cssm_db_record_index_info

typealias CSSM_DB_RECORD_INDEX_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_index_info>

typealias CSSM_DB_RECORD_INDEX_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_RECORD_INDEX_INFO_PTR>

typealias CSSM_DB_RETRIEVAL_MODES = platform.Security.uint32

typealias CSSM_DB_RETRIEVAL_MODESVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DB_RETRIEVAL_MODES>

typealias CSSM_DB_SCHEMA_ATTRIBUTE_INFO = platform.Security.cssm_db_schema_attribute_info

typealias CSSM_DB_SCHEMA_ATTRIBUTE_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_schema_attribute_info>

typealias CSSM_DB_SCHEMA_ATTRIBUTE_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO_PTR>

typealias CSSM_DB_SCHEMA_INDEX_INFO = platform.Security.cssm_db_schema_index_info

typealias CSSM_DB_SCHEMA_INDEX_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_schema_index_info>

typealias CSSM_DB_SCHEMA_INDEX_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO_PTR>

typealias CSSM_DB_UNIQUE_RECORD = platform.Security.cssm_db_unique_record

typealias CSSM_DB_UNIQUE_RECORD_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>

typealias CSSM_DB_UNIQUE_RECORD_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR>

typealias CSSM_DLTYPE = platform.Security.uint32

typealias CSSM_DLTYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_DLTYPE>

typealias CSSM_DLTYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_DLTYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DLTYPE_PTR>

typealias CSSM_DL_CUSTOM_ATTRIBUTES = kotlinx.cinterop.COpaquePointer

typealias CSSM_DL_CUSTOM_ATTRIBUTESVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_CUSTOM_ATTRIBUTES>

typealias CSSM_DL_DB_HANDLE = platform.Security.cssm_dl_db_handle

typealias CSSM_DL_DB_HANDLE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_handle>

typealias CSSM_DL_DB_HANDLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_DB_HANDLE_PTR>

typealias CSSM_DL_DB_LIST = platform.Security.cssm_dl_db_list

typealias CSSM_DL_DB_LIST_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_db_list>

typealias CSSM_DL_DB_LIST_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_DB_LIST_PTR>

typealias CSSM_DL_FFS_ATTRIBUTES = kotlinx.cinterop.COpaquePointer

typealias CSSM_DL_FFS_ATTRIBUTESVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_FFS_ATTRIBUTES>

typealias CSSM_DL_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_DL_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DL_HANDLE>

typealias CSSM_DL_LDAP_ATTRIBUTES = kotlinx.cinterop.COpaquePointer

typealias CSSM_DL_LDAP_ATTRIBUTESVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_LDAP_ATTRIBUTES>

typealias CSSM_DL_ODBC_ATTRIBUTES = kotlinx.cinterop.COpaquePointer

typealias CSSM_DL_ODBC_ATTRIBUTESVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_ODBC_ATTRIBUTES>

typealias CSSM_DL_PKCS11_ATTRIBUTE = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_pkcs11_attributes>

typealias CSSM_DL_PKCS11_ATTRIBUTEVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_PKCS11_ATTRIBUTE>

typealias CSSM_DL_PKCS11_ATTRIBUTE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_dl_pkcs11_attributes>

typealias CSSM_DL_PKCS11_ATTRIBUTE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DL_PKCS11_ATTRIBUTE_PTR>

typealias CSSM_ENCODED_CERT = platform.Security.cssm_encoded_cert

typealias CSSM_ENCODED_CERT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_cert>

typealias CSSM_ENCODED_CERT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ENCODED_CERT_PTR>

typealias CSSM_ENCODED_CRL = platform.Security.cssm_encoded_crl

typealias CSSM_ENCODED_CRL_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_encoded_crl>

typealias CSSM_ENCODED_CRL_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ENCODED_CRL_PTR>

typealias CSSM_ENCRYPT_MODE = platform.Security.uint32

typealias CSSM_ENCRYPT_MODEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ENCRYPT_MODE>

typealias CSSM_EVIDENCE = platform.Security.cssm_evidence

typealias CSSM_EVIDENCE_FORM = platform.Security.uint32

typealias CSSM_EVIDENCE_FORMVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_EVIDENCE_FORM>

typealias CSSM_EVIDENCE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_evidence>

typealias CSSM_EVIDENCE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_EVIDENCE_PTR>

typealias CSSM_FIELD = platform.Security.cssm_field

typealias CSSM_FIELDGROUP = platform.Security.cssm_fieldgroup

typealias CSSM_FIELDGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_fieldgroup>

typealias CSSM_FIELDGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELDGROUP_PTR>

typealias CSSM_FIELD_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_field>

typealias CSSM_FIELD_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR>

typealias CSSM_FREE = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>>

typealias CSSM_FREEVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FREE>

typealias CSSM_FUNC_NAME_ADDR = platform.Security.cssm_func_name_addr

typealias CSSM_FUNC_NAME_ADDR_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_func_name_addr>

typealias CSSM_FUNC_NAME_ADDR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FUNC_NAME_ADDR_PTR>

typealias CSSM_GUID = platform.Security.cssm_guid

typealias CSSM_GUID_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>

typealias CSSM_GUID_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_GUID_PTR>

typealias CSSM_HANDLE = platform.Security.CSSM_INTPTR

typealias CSSM_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_HANDLE>

typealias CSSM_HANDLE_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar>

typealias CSSM_HANDLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_HANDLE_PTR>

typealias CSSM_HEADERVERSION = platform.Security.uint32

typealias CSSM_HEADERVERSIONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_HEADERVERSION>

typealias CSSM_INTPTR = platform.posix.intptr_t

typealias CSSM_INTPTRVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR>

typealias CSSM_KEA_DERIVE_PARAMS = platform.Security.cssm_kea_derive_params

typealias CSSM_KEA_DERIVE_PARAMS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_kea_derive_params>

typealias CSSM_KEA_DERIVE_PARAMS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEA_DERIVE_PARAMS_PTR>

typealias CSSM_KEY = platform.Security.cssm_key

typealias CSSM_KEYATTR_FLAGS = platform.Security.uint32

typealias CSSM_KEYATTR_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEYATTR_FLAGS>

typealias CSSM_KEYBLOB_FORMAT = platform.Security.uint32

typealias CSSM_KEYBLOB_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEYBLOB_FORMAT>

typealias CSSM_KEYBLOB_TYPE = platform.Security.uint32

typealias CSSM_KEYBLOB_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEYBLOB_TYPE>

typealias CSSM_KEYCLASS = platform.Security.uint32

typealias CSSM_KEYCLASSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEYCLASS>

typealias CSSM_KEYHEADER = platform.Security.cssm_keyheader

typealias CSSM_KEYHEADER_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_keyheader>

typealias CSSM_KEYHEADER_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEYHEADER_PTR>

typealias CSSM_KEYUSE = platform.Security.uint32

typealias CSSM_KEYUSEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEYUSE>

typealias CSSM_KEY_HIERARCHY = platform.Security.CSSM_BITMASK

typealias CSSM_KEY_HIERARCHYVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEY_HIERARCHY>

typealias CSSM_KEY_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_key>

typealias CSSM_KEY_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEY_PTR>

typealias CSSM_KEY_SIZE = platform.Security.cssm_key_size

typealias CSSM_KEY_SIZE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_key_size>

typealias CSSM_KEY_SIZE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEY_SIZE_PTR>

typealias CSSM_KEY_TYPE = platform.Security.CSSM_ALGORITHMS

typealias CSSM_KEY_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KEY_TYPE>

typealias CSSM_KRSP_HANDLE = platform.Security.uint32

typealias CSSM_KRSP_HANDLEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KRSP_HANDLE>

typealias CSSM_KRSUBSERVICE = platform.Security.cssm_krsubservice

typealias CSSM_KRSUBSERVICE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_krsubservice>

typealias CSSM_KRSUBSERVICE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KRSUBSERVICE_PTR>

typealias CSSM_KR_NAME = platform.Security.cssm_kr_name

typealias CSSM_KR_POLICY_FLAGS = platform.Security.uint32

typealias CSSM_KR_POLICY_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KR_POLICY_FLAGS>

typealias CSSM_KR_POLICY_INFO = platform.Security.cssm_kr_policy_info

typealias CSSM_KR_POLICY_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_policy_info>

typealias CSSM_KR_POLICY_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KR_POLICY_INFO_PTR>

typealias CSSM_KR_POLICY_LIST_ITEM = platform.Security.cssm_kr_policy_list_item

typealias CSSM_KR_POLICY_LIST_ITEM_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_policy_list_item>

typealias CSSM_KR_POLICY_LIST_ITEM_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KR_POLICY_LIST_ITEM_PTR>

typealias CSSM_KR_POLICY_TYPE = platform.Security.uint32

typealias CSSM_KR_POLICY_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_KR_POLICY_TYPE>

typealias CSSM_KR_PROFILE = platform.Security.cssm_kr_profile

typealias CSSM_KR_PROFILE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_profile>

typealias CSSM_KR_PROFILE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KR_PROFILE_PTR>

typealias CSSM_KR_WRAPPEDPRODUCT_INFO = platform.Security.cssm_kr_wrappedproductinfo

typealias CSSM_KR_WRAPPEDPRODUCT_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_kr_wrappedproductinfo>

typealias CSSM_KR_WRAPPEDPRODUCT_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KR_WRAPPEDPRODUCT_INFO_PTR>

typealias CSSM_LIST = platform.Security.cssm_list

typealias CSSM_LIST_ELEMENT = platform.Security.cssm_list_element

typealias CSSM_LIST_ELEMENT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_list_element>

typealias CSSM_LIST_ELEMENT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_LIST_ELEMENT_PTR>

typealias CSSM_LIST_ELEMENT_TYPE = platform.Security.uint32

typealias CSSM_LIST_ELEMENT_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_LIST_ELEMENT_TYPE>

typealias CSSM_LIST_ELEMENT_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_LIST_ELEMENT_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_LIST_ELEMENT_TYPE_PTR>

typealias CSSM_LIST_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_list>

typealias CSSM_LIST_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_LIST_PTR>

typealias CSSM_LIST_TYPE = platform.Security.uint32

typealias CSSM_LIST_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_LIST_TYPE>

typealias CSSM_LIST_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_LIST_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_LIST_TYPE_PTR>

typealias CSSM_LONG_HANDLE = platform.Security.uint64

typealias CSSM_LONG_HANDLEVar = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_LONG_HANDLE>

typealias CSSM_LONG_HANDLE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint64Var>

typealias CSSM_LONG_HANDLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_LONG_HANDLE_PTR>

typealias CSSM_MALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_SIZE, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_MALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MALLOC>

typealias CSSM_MANAGER_EVENT_NOTIFICATION = platform.Security.cssm_manager_event_notification

typealias CSSM_MANAGER_EVENT_NOTIFICATION_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_manager_event_notification>

typealias CSSM_MANAGER_EVENT_NOTIFICATION_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MANAGER_EVENT_NOTIFICATION_PTR>

typealias CSSM_MANAGER_EVENT_TYPES = platform.Security.uint32

typealias CSSM_MANAGER_EVENT_TYPESVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_MANAGER_EVENT_TYPES>

typealias CSSM_MANAGER_REGISTRATION_INFO = platform.Security.cssm_manager_registration_info

typealias CSSM_MANAGER_REGISTRATION_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_manager_registration_info>

typealias CSSM_MANAGER_REGISTRATION_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MANAGER_REGISTRATION_INFO_PTR>

typealias CSSM_MEMORY_FUNCS = platform.Security.cssm_memory_funcs

typealias CSSM_MEMORY_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_memory_funcs>

typealias CSSM_MEMORY_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MEMORY_FUNCS_PTR>

typealias CSSM_MODULE_EVENT = platform.Security.uint32

typealias CSSM_MODULE_EVENTVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_MODULE_EVENT>

typealias CSSM_MODULE_EVENT_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_MODULE_EVENT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MODULE_EVENT_PTR>

typealias CSSM_MODULE_FUNCS = platform.Security.cssm_module_funcs

typealias CSSM_MODULE_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_module_funcs>

typealias CSSM_MODULE_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MODULE_FUNCS_PTR>

typealias CSSM_MODULE_HANDLE = platform.Security.CSSM_HANDLE

typealias CSSM_MODULE_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_MODULE_HANDLE>

typealias CSSM_MODULE_HANDLE_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_HANDLEVar>

typealias CSSM_MODULE_HANDLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_MODULE_HANDLE_PTR>

typealias CSSM_NAME_LIST = platform.Security.cssm_name_list

typealias CSSM_NAME_LIST_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>

typealias CSSM_NAME_LIST_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR>

typealias CSSM_NET_ADDRESS = platform.Security.cssm_net_address

typealias CSSM_NET_ADDRESS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_net_address>

typealias CSSM_NET_ADDRESS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NET_ADDRESS_PTR>

typealias CSSM_NET_ADDRESS_TYPE = platform.Security.uint32

typealias CSSM_NET_ADDRESS_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_NET_ADDRESS_TYPE>

typealias CSSM_NET_PROTOCOL = platform.Security.uint32

typealias CSSM_NET_PROTOCOLVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_NET_PROTOCOL>

typealias CSSM_OID = platform.Security.CSSM_DATA

typealias CSSM_OID_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA>

typealias CSSM_OID_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR>

typealias CSSM_PADDING = platform.Security.uint32

typealias CSSM_PADDINGVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PADDING>

typealias CSSM_PARSED_CERT = platform.Security.cssm_parsed_cert

typealias CSSM_PARSED_CERT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_cert>

typealias CSSM_PARSED_CERT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PARSED_CERT_PTR>

typealias CSSM_PARSED_CRL = platform.Security.cssm_parsed_crl

typealias CSSM_PARSED_CRL_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_parsed_crl>

typealias CSSM_PARSED_CRL_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PARSED_CRL_PTR>

typealias CSSM_PKCS1_OAEP_PARAMS = platform.Security.cssm_pkcs1_oaep_params

typealias CSSM_PKCS1_OAEP_PARAMS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_pkcs1_oaep_params>

typealias CSSM_PKCS1_OAEP_PARAMS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PKCS1_OAEP_PARAMS_PTR>

typealias CSSM_PKCS5_PBKDF1_PARAMS = platform.Security.cssm_pkcs5_pbkdf1_params

typealias CSSM_PKCS5_PBKDF1_PARAMS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_pkcs5_pbkdf1_params>

typealias CSSM_PKCS5_PBKDF1_PARAMS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PKCS5_PBKDF1_PARAMS_PTR>

typealias CSSM_PKCS5_PBKDF2_PARAMS = platform.Security.cssm_pkcs5_pbkdf2_params

typealias CSSM_PKCS5_PBKDF2_PARAMS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_pkcs5_pbkdf2_params>

typealias CSSM_PKCS5_PBKDF2_PARAMS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PKCS5_PBKDF2_PARAMS_PTR>

typealias CSSM_PKCS5_PBKDF2_PRF = platform.Security.uint32

typealias CSSM_PKCS5_PBKDF2_PRFVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PKCS5_PBKDF2_PRF>

typealias CSSM_PKCS_OAEP_MGF = platform.Security.uint32

typealias CSSM_PKCS_OAEP_MGFVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PKCS_OAEP_MGF>

typealias CSSM_PKCS_OAEP_PSOURCE = platform.Security.uint32

typealias CSSM_PKCS_OAEP_PSOURCEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PKCS_OAEP_PSOURCE>

typealias CSSM_PRIVILEGE = platform.Security.uint64

typealias CSSM_PRIVILEGEVar = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_PRIVILEGE>

typealias CSSM_PRIVILEGE_SCOPE = platform.Security.uint32

typealias CSSM_PRIVILEGE_SCOPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PRIVILEGE_SCOPE>

typealias CSSM_PROC_ADDR = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>

typealias CSSM_PROC_ADDRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PROC_ADDR>

typealias CSSM_PROC_ADDR_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_PROC_ADDRVar>

typealias CSSM_PROC_ADDR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_PROC_ADDR_PTR>

typealias CSSM_PVC_MODE = platform.Security.CSSM_BITMASK

typealias CSSM_PVC_MODEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PVC_MODE>

typealias CSSM_QUERY = platform.Security.cssm_query

typealias CSSM_QUERY_FLAGS = platform.Security.uint32

typealias CSSM_QUERY_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_QUERY_FLAGS>

typealias CSSM_QUERY_LIMITS = platform.Security.cssm_query_limits

typealias CSSM_QUERY_LIMITS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_query_limits>

typealias CSSM_QUERY_LIMITS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_QUERY_LIMITS_PTR>

typealias CSSM_QUERY_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_query>

typealias CSSM_QUERY_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_QUERY_PTR>

typealias CSSM_QUERY_SIZE_DATA = platform.Security.cssm_query_size_data

typealias CSSM_QUERY_SIZE_DATA_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_query_size_data>

typealias CSSM_QUERY_SIZE_DATA_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_QUERY_SIZE_DATA_PTR>

typealias CSSM_RANGE = platform.Security.cssm_range

typealias CSSM_RANGE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_range>

typealias CSSM_RANGE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_RANGE_PTR>

typealias CSSM_REALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, platform.Security.CSSM_SIZE, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_REALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_REALLOC>

typealias CSSM_RESOURCE_CONTROL_CONTEXT = platform.Security.cssm_resource_control_context

typealias CSSM_RESOURCE_CONTROL_CONTEXT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_resource_control_context>

typealias CSSM_RESOURCE_CONTROL_CONTEXT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT_PTR>

typealias CSSM_RETURN = platform.Security.sint32

typealias CSSM_RETURNVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_RETURN>

typealias CSSM_SAMPLE = platform.Security.cssm_sample

typealias CSSM_SAMPLEGROUP = platform.Security.cssm_samplegroup

typealias CSSM_SAMPLEGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_samplegroup>

typealias CSSM_SAMPLEGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SAMPLEGROUP_PTR>

typealias CSSM_SAMPLE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_sample>

typealias CSSM_SAMPLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SAMPLE_PTR>

typealias CSSM_SAMPLE_TYPE = platform.Security.CSSM_WORDID_TYPE

typealias CSSM_SAMPLE_TYPEVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_SAMPLE_TYPE>

typealias CSSM_SC_FLAGS = platform.Security.uint32

typealias CSSM_SC_FLAGSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_SC_FLAGS>

typealias CSSM_SELECTION_PREDICATE = platform.Security.cssm_selection_predicate

typealias CSSM_SELECTION_PREDICATE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_selection_predicate>

typealias CSSM_SELECTION_PREDICATE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SELECTION_PREDICATE_PTR>

typealias CSSM_SERVICE_MASK = platform.Security.uint32

typealias CSSM_SERVICE_MASKVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_SERVICE_MASK>

typealias CSSM_SERVICE_TYPE = platform.Security.CSSM_SERVICE_MASK

typealias CSSM_SERVICE_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_SERVICE_TYPE>

typealias CSSM_SIZE = platform.posix.size_t

typealias CSSM_SIZEVar = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE>

typealias CSSM_SPI_AC_FUNCS = platform.Security.cssm_spi_ac_funcs

typealias CSSM_SPI_AC_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_ac_funcs>

typealias CSSM_SPI_AC_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_AC_FUNCS_PTR>

typealias CSSM_SPI_CL_FUNCS = platform.Security.cssm_spi_cl_funcs

typealias CSSM_SPI_CL_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_cl_funcs>

typealias CSSM_SPI_CL_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_CL_FUNCS_PTR>

typealias CSSM_SPI_CSP_FUNCS = platform.Security.cssm_spi_csp_funcs

typealias CSSM_SPI_CSP_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_csp_funcs>

typealias CSSM_SPI_CSP_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_CSP_FUNCS_PTR>

typealias CSSM_SPI_DL_FUNCS = platform.Security.cssm_spi_dl_funcs

typealias CSSM_SPI_DL_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_dl_funcs>

typealias CSSM_SPI_DL_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_DL_FUNCS_PTR>

typealias CSSM_SPI_KR_FUNCS = platform.Security.cssm_spi_kr_funcs

typealias CSSM_SPI_KR_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_kr_funcs>

typealias CSSM_SPI_KR_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_KR_FUNCS_PTR>

typealias CSSM_SPI_ModuleEventHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID>?, kotlinx.cinterop.COpaquePointer?, platform.Security.uint32, platform.Security.CSSM_SERVICE_TYPE, platform.Security.CSSM_MODULE_EVENT) -> platform.Security.CSSM_RETURN>>

typealias CSSM_SPI_ModuleEventHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_ModuleEventHandler>

typealias CSSM_SPI_TP_FUNCS = platform.Security.cssm_spi_tp_funcs

typealias CSSM_SPI_TP_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_spi_tp_funcs>

typealias CSSM_SPI_TP_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SPI_TP_FUNCS_PTR>

typealias CSSM_STATE_FUNCS = platform.Security.cssm_state_funcs

typealias CSSM_STATE_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_state_funcs>

typealias CSSM_STATE_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_STATE_FUNCS_PTR>

typealias CSSM_STRING = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar>

typealias CSSM_STRINGVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_STRING>

typealias CSSM_SUBSERVICE_UID = platform.Security.cssm_subservice_uid

typealias CSSM_SUBSERVICE_UID_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_subservice_uid>

typealias CSSM_SUBSERVICE_UID_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_SUBSERVICE_UID_PTR>

typealias CSSM_TIMESTRING = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias CSSM_TIMESTRINGVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TIMESTRING>

typealias CSSM_TP_ACTION = platform.Security.uint32

typealias CSSM_TP_ACTIONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_ACTION>

typealias CSSM_TP_APPLE_CERT_STATUS = platform.Security.uint32

typealias CSSM_TP_APPLE_CERT_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_APPLE_CERT_STATUS>

typealias CSSM_TP_AUTHORITY_ID = platform.Security.cssm_tp_authority_id

typealias CSSM_TP_AUTHORITY_ID_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_authority_id>

typealias CSSM_TP_AUTHORITY_ID_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_AUTHORITY_ID_PTR>

typealias CSSM_TP_AUTHORITY_REQUEST_TYPE = platform.Security.uint32

typealias CSSM_TP_AUTHORITY_REQUEST_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_AUTHORITY_REQUEST_TYPE>

typealias CSSM_TP_AUTHORITY_REQUEST_TYPE_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_TP_AUTHORITY_REQUEST_TYPE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_AUTHORITY_REQUEST_TYPE_PTR>

typealias CSSM_TP_CALLERAUTH_CONTEXT = platform.Security.cssm_tp_callerauth_context

typealias CSSM_TP_CALLERAUTH_CONTEXT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_callerauth_context>

typealias CSSM_TP_CALLERAUTH_CONTEXT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT_PTR>

typealias CSSM_TP_CERTCHANGE_ACTION = platform.Security.uint32

typealias CSSM_TP_CERTCHANGE_ACTIONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTCHANGE_ACTION>

typealias CSSM_TP_CERTCHANGE_INPUT = platform.Security.cssm_tp_certchange_input

typealias CSSM_TP_CERTCHANGE_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certchange_input>

typealias CSSM_TP_CERTCHANGE_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTCHANGE_INPUT_PTR>

typealias CSSM_TP_CERTCHANGE_OUTPUT = platform.Security.cssm_tp_certchange_output

typealias CSSM_TP_CERTCHANGE_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certchange_output>

typealias CSSM_TP_CERTCHANGE_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTCHANGE_OUTPUT_PTR>

typealias CSSM_TP_CERTCHANGE_REASON = platform.Security.uint32

typealias CSSM_TP_CERTCHANGE_REASONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTCHANGE_REASON>

typealias CSSM_TP_CERTCHANGE_STATUS = platform.Security.uint32

typealias CSSM_TP_CERTCHANGE_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTCHANGE_STATUS>

typealias CSSM_TP_CERTISSUE_INPUT = platform.Security.cssm_tp_certissue_input

typealias CSSM_TP_CERTISSUE_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certissue_input>

typealias CSSM_TP_CERTISSUE_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTISSUE_INPUT_PTR>

typealias CSSM_TP_CERTISSUE_OUTPUT = platform.Security.cssm_tp_certissue_output

typealias CSSM_TP_CERTISSUE_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certissue_output>

typealias CSSM_TP_CERTISSUE_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTISSUE_OUTPUT_PTR>

typealias CSSM_TP_CERTISSUE_STATUS = platform.Security.uint32

typealias CSSM_TP_CERTISSUE_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTISSUE_STATUS>

typealias CSSM_TP_CERTNOTARIZE_INPUT = platform.Security.cssm_tp_certnotarize_input

typealias CSSM_TP_CERTNOTARIZE_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certnotarize_input>

typealias CSSM_TP_CERTNOTARIZE_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTNOTARIZE_INPUT_PTR>

typealias CSSM_TP_CERTNOTARIZE_OUTPUT = platform.Security.cssm_tp_certnotarize_output

typealias CSSM_TP_CERTNOTARIZE_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certnotarize_output>

typealias CSSM_TP_CERTNOTARIZE_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTNOTARIZE_OUTPUT_PTR>

typealias CSSM_TP_CERTNOTARIZE_STATUS = platform.Security.uint32

typealias CSSM_TP_CERTNOTARIZE_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTNOTARIZE_STATUS>

typealias CSSM_TP_CERTRECLAIM_INPUT = platform.Security.cssm_tp_certreclaim_input

typealias CSSM_TP_CERTRECLAIM_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certreclaim_input>

typealias CSSM_TP_CERTRECLAIM_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTRECLAIM_INPUT_PTR>

typealias CSSM_TP_CERTRECLAIM_OUTPUT = platform.Security.cssm_tp_certreclaim_output

typealias CSSM_TP_CERTRECLAIM_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certreclaim_output>

typealias CSSM_TP_CERTRECLAIM_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTRECLAIM_OUTPUT_PTR>

typealias CSSM_TP_CERTRECLAIM_STATUS = platform.Security.uint32

typealias CSSM_TP_CERTRECLAIM_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTRECLAIM_STATUS>

typealias CSSM_TP_CERTVERIFY_INPUT = platform.Security.cssm_tp_certverify_input

typealias CSSM_TP_CERTVERIFY_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certverify_input>

typealias CSSM_TP_CERTVERIFY_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTVERIFY_INPUT_PTR>

typealias CSSM_TP_CERTVERIFY_OUTPUT = platform.Security.cssm_tp_certverify_output

typealias CSSM_TP_CERTVERIFY_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_certverify_output>

typealias CSSM_TP_CERTVERIFY_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CERTVERIFY_OUTPUT_PTR>

typealias CSSM_TP_CERTVERIFY_STATUS = platform.Security.uint32

typealias CSSM_TP_CERTVERIFY_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CERTVERIFY_STATUS>

typealias CSSM_TP_CONFIRM_RESPONSE = platform.Security.cssm_tp_confirm_response

typealias CSSM_TP_CONFIRM_RESPONSE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_confirm_response>

typealias CSSM_TP_CONFIRM_RESPONSE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTR>

typealias CSSM_TP_CONFIRM_STATUS = platform.Security.uint32

typealias CSSM_TP_CONFIRM_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CONFIRM_STATUS>

typealias CSSM_TP_CONFIRM_STATUS_PTR = kotlinx.cinterop.CPointer<platform.Security.uint32Var>

typealias CSSM_TP_CONFIRM_STATUS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CONFIRM_STATUS_PTR>

typealias CSSM_TP_CRLISSUE_INPUT = platform.Security.cssm_tp_crlissue_input

typealias CSSM_TP_CRLISSUE_INPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_crlissue_input>

typealias CSSM_TP_CRLISSUE_INPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CRLISSUE_INPUT_PTR>

typealias CSSM_TP_CRLISSUE_OUTPUT = platform.Security.cssm_tp_crlissue_output

typealias CSSM_TP_CRLISSUE_OUTPUT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_crlissue_output>

typealias CSSM_TP_CRLISSUE_OUTPUT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CRLISSUE_OUTPUT_PTR>

typealias CSSM_TP_CRLISSUE_STATUS = platform.Security.uint32

typealias CSSM_TP_CRLISSUE_STATUSVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_CRLISSUE_STATUS>

typealias CSSM_TP_FORM_TYPE = platform.Security.uint32

typealias CSSM_TP_FORM_TYPEVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_FORM_TYPE>

typealias CSSM_TP_HANDLE = platform.Security.CSSM_MODULE_HANDLE

typealias CSSM_TP_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_TP_HANDLE>

typealias CSSM_TP_POLICYINFO = platform.Security.cssm_tp_policyinfo

typealias CSSM_TP_POLICYINFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_policyinfo>

typealias CSSM_TP_POLICYINFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_POLICYINFO_PTR>

typealias CSSM_TP_REQUEST_SET = platform.Security.cssm_tp_request_set

typealias CSSM_TP_REQUEST_SET_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_request_set>

typealias CSSM_TP_REQUEST_SET_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_REQUEST_SET_PTR>

typealias CSSM_TP_RESULT_SET = platform.Security.cssm_tp_result_set

typealias CSSM_TP_RESULT_SET_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_result_set>

typealias CSSM_TP_RESULT_SET_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_RESULT_SET_PTR>

typealias CSSM_TP_SERVICES = platform.Security.uint32

typealias CSSM_TP_SERVICESVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_SERVICES>

typealias CSSM_TP_STOP_ON = platform.Security.uint32

typealias CSSM_TP_STOP_ONVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_TP_STOP_ON>

typealias CSSM_TP_VERIFICATION_RESULTS_CALLBACK = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_MODULE_HANDLE, kotlinx.cinterop.COpaquePointer?, platform.Security.CSSM_DATA_PTR?) -> platform.Security.CSSM_RETURN>>

typealias CSSM_TP_VERIFICATION_RESULTS_CALLBACKVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_VERIFICATION_RESULTS_CALLBACK>

typealias CSSM_TP_VERIFY_CONTEXT = platform.Security.cssm_tp_verify_context

typealias CSSM_TP_VERIFY_CONTEXT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context>

typealias CSSM_TP_VERIFY_CONTEXT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_VERIFY_CONTEXT_PTR>

typealias CSSM_TP_VERIFY_CONTEXT_RESULT = platform.Security.cssm_tp_verify_context_result

typealias CSSM_TP_VERIFY_CONTEXT_RESULT_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>

typealias CSSM_TP_VERIFY_CONTEXT_RESULT_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR>

typealias CSSM_TUPLEGROUP = platform.Security.cssm_tuplegroup

typealias CSSM_TUPLEGROUP_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup>

typealias CSSM_TUPLEGROUP_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TUPLEGROUP_PTR>

typealias CSSM_TUPLE_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_TUPLE>

typealias CSSM_TUPLE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TUPLE_PTR>

typealias CSSM_UPCALLS = platform.Security.cssm_upcalls

typealias CSSM_UPCALLS_CALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE, platform.posix.size_t, platform.posix.size_t) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_UPCALLS_CALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_UPCALLS_CALLOC>

typealias CSSM_UPCALLS_FREE = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE, kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>>

typealias CSSM_UPCALLS_FREEVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_UPCALLS_FREE>

typealias CSSM_UPCALLS_MALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE, platform.posix.size_t) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_UPCALLS_MALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_UPCALLS_MALLOC>

typealias CSSM_UPCALLS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_upcalls>

typealias CSSM_UPCALLS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_UPCALLS_PTR>

typealias CSSM_UPCALLS_REALLOC = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.CSSM_HANDLE, kotlinx.cinterop.COpaquePointer?, platform.posix.size_t) -> kotlinx.cinterop.COpaquePointer?>>

typealias CSSM_UPCALLS_REALLOCVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_UPCALLS_REALLOC>

typealias CSSM_USEE_TAG = platform.Security.CSSM_PRIVILEGE

typealias CSSM_USEE_TAGVar = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_USEE_TAG>

typealias CSSM_VERSION = platform.Security.cssm_version

typealias CSSM_VERSION_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_version>

typealias CSSM_VERSION_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_VERSION_PTR>

typealias CSSM_WORDID_TYPE = platform.Security.sint32

typealias CSSM_WORDID_TYPEVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_WORDID_TYPE>

typealias CSSM_WRAP_KEY = platform.Security.CSSM_KEY

typealias CSSM_WRAP_KEY_PTR = kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY>

typealias CSSM_WRAP_KEY_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_WRAP_KEY_PTR>

typealias CSSM_X509EXT_BASICCONSTRAINTS = platform.Security.cssm_x509ext_basicConstraints

typealias CSSM_X509EXT_BASICCONSTRAINTS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509ext_basicConstraints>

typealias CSSM_X509EXT_BASICCONSTRAINTS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_BASICCONSTRAINTS_PTR>

typealias CSSM_X509EXT_DATA_FORMAT = platform.Security.extension_data_format

typealias CSSM_X509EXT_DATA_FORMATVar = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_X509EXT_DATA_FORMAT>

typealias CSSM_X509EXT_PAIR = platform.Security.cssm_x509ext_pair

typealias CSSM_X509EXT_PAIR_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509ext_pair>

typealias CSSM_X509EXT_PAIR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_PAIR_PTR>

typealias CSSM_X509EXT_POLICYINFO = platform.Security.cssm_x509ext_policyInfo

typealias CSSM_X509EXT_POLICYINFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509ext_policyInfo>

typealias CSSM_X509EXT_POLICYINFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_POLICYINFO_PTR>

typealias CSSM_X509EXT_POLICYQUALIFIERINFO = platform.Security.cssm_x509ext_policyQualifierInfo

typealias CSSM_X509EXT_POLICYQUALIFIERINFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509ext_policyQualifierInfo>

typealias CSSM_X509EXT_POLICYQUALIFIERINFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_POLICYQUALIFIERINFO_PTR>

typealias CSSM_X509EXT_POLICYQUALIFIERS = platform.Security.cssm_x509ext_policyQualifiers

typealias CSSM_X509EXT_POLICYQUALIFIERS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509ext_policyQualifiers>

typealias CSSM_X509EXT_POLICYQUALIFIERS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_POLICYQUALIFIERS_PTR>

typealias CSSM_X509EXT_TAGandVALUE = platform.Security.cssm_x509_extensionTagAndValue

typealias CSSM_X509EXT_TAGandVALUE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_extensionTagAndValue>

typealias CSSM_X509EXT_TAGandVALUE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509EXT_TAGandVALUE_PTR>

typealias CSSM_X509_ALGORITHM_IDENTIFIER = platform.Security.cssm_x509_algorithm_identifier

typealias CSSM_X509_ALGORITHM_IDENTIFIER_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_algorithm_identifier>

typealias CSSM_X509_ALGORITHM_IDENTIFIER_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER_PTR>

typealias CSSM_X509_EXTENSION = platform.Security.cssm_x509_extension

typealias CSSM_X509_EXTENSIONS = platform.Security.cssm_x509_extensions

typealias CSSM_X509_EXTENSIONS_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_extensions>

typealias CSSM_X509_EXTENSIONS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_EXTENSIONS_PTR>

typealias CSSM_X509_EXTENSION_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_extension>

typealias CSSM_X509_EXTENSION_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_EXTENSION_PTR>

typealias CSSM_X509_NAME = platform.Security.cssm_x509_name

typealias CSSM_X509_NAME_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_name>

typealias CSSM_X509_NAME_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_NAME_PTR>

typealias CSSM_X509_OPTION = platform.Security.CSSM_BOOL

typealias CSSM_X509_OPTIONVar = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_X509_OPTION>

typealias CSSM_X509_RDN = platform.Security.cssm_x509_rdn

typealias CSSM_X509_RDN_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_rdn>

typealias CSSM_X509_RDN_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_RDN_PTR>

typealias CSSM_X509_REVOKED_CERT_ENTRY = platform.Security.cssm_x509_revoked_cert_entry

typealias CSSM_X509_REVOKED_CERT_ENTRY_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_entry>

typealias CSSM_X509_REVOKED_CERT_ENTRY_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_REVOKED_CERT_ENTRY_PTR>

typealias CSSM_X509_REVOKED_CERT_LIST = platform.Security.cssm_x509_revoked_cert_list

typealias CSSM_X509_REVOKED_CERT_LIST_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_revoked_cert_list>

typealias CSSM_X509_REVOKED_CERT_LIST_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_REVOKED_CERT_LIST_PTR>

typealias CSSM_X509_SIGNATURE = platform.Security.cssm_x509_signature

typealias CSSM_X509_SIGNATURE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_signature>

typealias CSSM_X509_SIGNATURE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_SIGNATURE_PTR>

typealias CSSM_X509_SIGNED_CERTIFICATE = platform.Security.cssm_x509_signed_certificate

typealias CSSM_X509_SIGNED_CERTIFICATE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_signed_certificate>

typealias CSSM_X509_SIGNED_CERTIFICATE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_SIGNED_CERTIFICATE_PTR>

typealias CSSM_X509_SIGNED_CRL = platform.Security.cssm_x509_signed_crl

typealias CSSM_X509_SIGNED_CRL_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_signed_crl>

typealias CSSM_X509_SIGNED_CRL_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_SIGNED_CRL_PTR>

typealias CSSM_X509_SUBJECT_PUBLIC_KEY_INFO = platform.Security.cssm_x509_subject_public_key_info

typealias CSSM_X509_SUBJECT_PUBLIC_KEY_INFO_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_subject_public_key_info>

typealias CSSM_X509_SUBJECT_PUBLIC_KEY_INFO_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_SUBJECT_PUBLIC_KEY_INFO_PTR>

typealias CSSM_X509_TBS_CERTIFICATE = platform.Security.cssm_x509_tbs_certificate

typealias CSSM_X509_TBS_CERTIFICATE_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_tbs_certificate>

typealias CSSM_X509_TBS_CERTIFICATE_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_TBS_CERTIFICATE_PTR>

typealias CSSM_X509_TBS_CERTLIST = platform.Security.cssm_x509_tbs_certlist

typealias CSSM_X509_TBS_CERTLIST_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_tbs_certlist>

typealias CSSM_X509_TBS_CERTLIST_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_TBS_CERTLIST_PTR>

typealias CSSM_X509_TIME = platform.Security.cssm_x509_time

typealias CSSM_X509_TIME_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_time>

typealias CSSM_X509_TIME_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_TIME_PTR>

typealias CSSM_X509_TYPE_VALUE_PAIR = platform.Security.cssm_x509_type_value_pair

typealias CSSM_X509_TYPE_VALUE_PAIR_PTR = kotlinx.cinterop.CPointer<platform.Security.cssm_x509_type_value_pair>

typealias CSSM_X509_TYPE_VALUE_PAIR_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_TYPE_VALUE_PAIR_PTR>

typealias CSSM_X509_VALIDITY = platform.Security.x509_validity

typealias CSSM_X509_VALIDITY_PTR = kotlinx.cinterop.CPointer<platform.Security.x509_validity>

typealias CSSM_X509_VALIDITY_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_X509_VALIDITY_PTR>

typealias DERByte = platform.posix.uint8_t

typealias DERByteVar = kotlinx.cinterop.UByteVarOf<platform.Security.DERByte>

typealias DERSize = platform.posix.size_t

typealias DERSizeVar = kotlinx.cinterop.ULongVarOf<platform.Security.DERSize>

typealias MDS_DB_HANDLE = platform.Security.CSSM_DL_DB_HANDLE

typealias MDS_FUNCS = platform.Security.mds_funcs

typealias MDS_FUNCS_PTR = kotlinx.cinterop.CPointer<platform.Security.mds_funcs>

typealias MDS_FUNCS_PTRVar = kotlinx.cinterop.CPointerVarOf<platform.Security.MDS_FUNCS_PTR>

typealias MDS_HANDLE = platform.Security.CSSM_DL_HANDLE

typealias MDS_HANDLEVar = kotlinx.cinterop.LongVarOf<platform.Security.MDS_HANDLE>

typealias SSLCipherSuite = platform.posix.uint32_t

typealias SSLCipherSuiteVar = kotlinx.cinterop.UIntVarOf<platform.Security.SSLCipherSuite>

typealias SSLConnectionRef = kotlinx.cinterop.COpaquePointer

typealias SSLConnectionRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLConnectionRef>

typealias SSLContextRef = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>

typealias SSLContextRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLContextRef>

typealias SSLProtocolVar = kotlinx.cinterop.IntVarOf<platform.Security.SSLProtocol>

typealias SSLReadFunc = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SSLConnectionRef?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.posix.size_tVar>?) -> platform.darwin.OSStatus>>

typealias SSLReadFuncVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLReadFunc>

typealias SSLSessionOptionVar = kotlinx.cinterop.IntVarOf<platform.Security.SSLSessionOption>

typealias SSLWriteFunc = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SSLConnectionRef?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.posix.size_tVar>?) -> platform.darwin.OSStatus>>

typealias SSLWriteFuncVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLWriteFunc>

typealias SecACLRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>

typealias SecACLRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecACLRef>

typealias SecAFPServerSignature = kotlinx.cinterop.CArrayPointer<platform.darwin.UInt8Var>

typealias SecAFPServerSignatureVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAFPServerSignature>

typealias SecAccessControlCreateFlags = platform.CoreFoundation.CFOptionFlags

typealias SecAccessControlCreateFlagsVar = kotlinx.cinterop.ULongVarOf<platform.Security.SecAccessControlCreateFlags>

typealias SecAccessControlRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessControlRef>

typealias SecAccessControlRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessControlRef>

typealias SecAccessOwnerType = platform.darwin.UInt32

typealias SecAccessOwnerTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecAccessOwnerType>

typealias SecAccessRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>

typealias SecAccessRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessRef>

typealias SecAsn1AlgId = platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER

typealias SecAsn1Item = platform.Security.CSSM_DATA

typealias SecAsn1Oid = platform.Security.CSSM_OID

typealias SecAsn1PubKeyInfo = platform.Security.CSSM_X509_SUBJECT_PUBLIC_KEY_INFO

typealias SecAsn1Template = platform.Security.SecAsn1Template_struct

typealias SecAsn1TemplateChooser = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlin.Boolean, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, platform.posix.size_t, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.CPointer<platform.Security.SecAsn1Template>?>

typealias SecAsn1TemplateChooserPtr = kotlinx.cinterop.CPointer<platform.Security.SecAsn1TemplateChooser>

typealias SecAsn1TemplateChooserPtrVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAsn1TemplateChooserPtr>

typealias SecAuthenticationType = platform.darwin.FourCharCode

typealias SecAuthenticationTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecAuthenticationType>

typealias SecCSDigestAlgorithm = platform.posix.uint32_t

typealias SecCSDigestAlgorithmVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecCSDigestAlgorithm>

typealias SecCSFlags = platform.posix.uint32_t

typealias SecCSFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecCSFlags>

typealias SecCertificateRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>

typealias SecCertificateRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCertificateRef>

typealias SecCodeRef = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>

typealias SecCodeRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCodeRef>

typealias SecCodeSignatureFlags = platform.posix.uint32_t

typealias SecCodeSignatureFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecCodeSignatureFlags>

typealias SecCodeStatus = platform.posix.uint32_t

typealias SecCodeStatusVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecCodeStatus>

typealias SecCredentialType = platform.Security.uint32

typealias SecCredentialTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecCredentialType>

typealias SecExternalFormat = platform.posix.uint32_t

typealias SecExternalFormatVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecExternalFormat>

typealias SecGroupTransformRef = platform.CoreFoundation.CFTypeRef

typealias SecGroupTransformRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecGroupTransformRef>

typealias SecGuestRef = platform.posix.u_int32_t

typealias SecGuestRefVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecGuestRef>

typealias SecIdentityRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>

typealias SecIdentityRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentityRef>

typealias SecIdentitySearchRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentitySearchRef>

typealias SecIdentitySearchRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentitySearchRef>

typealias SecItemAttr = platform.darwin.FourCharCode

typealias SecItemAttrVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecItemAttr>

typealias SecItemClass = platform.darwin.FourCharCode

typealias SecItemClassVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecItemClass>

typealias SecItemImportExportFlags = platform.posix.uint32_t

typealias SecItemImportExportFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecItemImportExportFlags>

typealias SecKeyAlgorithm = platform.CoreFoundation.CFStringRef

typealias SecKeyAlgorithmVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyAlgorithm>

typealias SecKeyGeneratePairBlock = ((platform.Security.SecKeyRef?, platform.Security.SecKeyRef?, platform.CoreFoundation.CFErrorRef?) -> kotlin.Unit)?

typealias SecKeyGeneratePairBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecKeyGeneratePairBlock>

typealias SecKeyImportExportFlags = platform.posix.uint32_t

typealias SecKeyImportExportFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeyImportExportFlags>

typealias SecKeyKeyExchangeParameter = platform.CoreFoundation.CFStringRef

typealias SecKeyKeyExchangeParameterVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyKeyExchangeParameter>

typealias SecKeyOperationType = platform.CoreFoundation.CFIndex

typealias SecKeyOperationTypeVar = kotlinx.cinterop.LongVarOf<platform.Security.SecKeyOperationType>

typealias SecKeyRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>

typealias SecKeyRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef>

typealias SecKeySizes = platform.posix.uint32_t

typealias SecKeySizesVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeySizes>

typealias SecKeyUsage = platform.posix.uint32_t

typealias SecKeyUsageVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeyUsage>

typealias SecKeychainAttrType = platform.darwin.OSType

typealias SecKeychainAttrTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeychainAttrType>

typealias SecKeychainAttributePtr = kotlinx.cinterop.CPointer<platform.Security.SecKeychainAttribute>

typealias SecKeychainAttributePtrVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainAttributePtr>

typealias SecKeychainCallback = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SecKeychainEvent, kotlinx.cinterop.CPointer<platform.Security.SecKeychainCallbackInfo>?, kotlinx.cinterop.COpaquePointer?) -> platform.darwin.OSStatus>>

typealias SecKeychainCallbackVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainCallback>

typealias SecKeychainEvent = platform.darwin.UInt32

typealias SecKeychainEventMask = platform.darwin.UInt32

typealias SecKeychainEventMaskVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeychainEventMask>

typealias SecKeychainEventVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeychainEvent>

typealias SecKeychainItemRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>

typealias SecKeychainItemRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef>

typealias SecKeychainPromptSelector = platform.Security.uint16

typealias SecKeychainPromptSelectorVar = kotlinx.cinterop.UShortVarOf<platform.Security.SecKeychainPromptSelector>

typealias SecKeychainRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>

typealias SecKeychainRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef>

typealias SecKeychainSearchRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainSearchRef>

typealias SecKeychainSearchRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainSearchRef>

typealias SecKeychainStatus = platform.darwin.UInt32

typealias SecKeychainStatusVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeychainStatus>

typealias SecMessageBlock = ((platform.CoreFoundation.CFTypeRef?, platform.CoreFoundation.CFErrorRef?, kotlin.Boolean) -> kotlin.Unit)?

typealias SecMessageBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecMessageBlock>

typealias SecPadding = platform.posix.uint32_t

typealias SecPaddingVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecPadding>

typealias SecPasswordRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPasswordRef>

typealias SecPasswordRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPasswordRef>

typealias SecPolicyRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>

typealias SecPolicyRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPolicyRef>

typealias SecPolicySearchRef = kotlinx.cinterop.CPointer<cnames.structs.OpaquePolicySearchRef>

typealias SecPolicySearchRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPolicySearchRef>

typealias SecProtocolType = platform.darwin.FourCharCode

typealias SecProtocolTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecProtocolType>

typealias SecPublicKeyHash = kotlinx.cinterop.CArrayPointer<platform.darwin.UInt8Var>

typealias SecPublicKeyHashVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPublicKeyHash>

typealias SecRandomRef = kotlinx.cinterop.CPointer<cnames.structs.__SecRandom>

typealias SecRandomRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRandomRef>

typealias SecRequirementRef = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>

typealias SecRequirementRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRequirementRef>

typealias SecRequirementType = platform.posix.uint32_t

typealias SecRequirementTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecRequirementType>

typealias SecStaticCodeRef = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>

typealias SecStaticCodeRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecStaticCodeRef>

typealias SecTaskRef = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>

typealias SecTaskRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTaskRef>

typealias SecTransformActionBlock = (() -> platform.CoreFoundation.CFTypeRef?)?

typealias SecTransformActionBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecTransformActionBlock>

typealias SecTransformAttributeActionBlock = ((platform.Security.SecTransformAttributeRef?, platform.CoreFoundation.CFTypeRef?) -> platform.CoreFoundation.CFTypeRef?)?

typealias SecTransformAttributeActionBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecTransformAttributeActionBlock>

typealias SecTransformAttributeRef = platform.CoreFoundation.CFTypeRef

typealias SecTransformAttributeRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTransformAttributeRef>

typealias SecTransformCreateFP = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.CoreFoundation.CFStringRef?, platform.Security.SecTransformRef?, platform.Security.SecTransformImplementationRef?) -> platform.Security.SecTransformInstanceBlock?>>

typealias SecTransformCreateFPVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTransformCreateFP>

typealias SecTransformDataBlock = ((platform.CoreFoundation.CFTypeRef?) -> platform.CoreFoundation.CFTypeRef?)?

typealias SecTransformDataBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecTransformDataBlock>

typealias SecTransformImplementationRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>

typealias SecTransformImplementationRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTransformImplementationRef>

typealias SecTransformInstanceBlock = (() -> platform.CoreFoundation.CFErrorRef?)?

typealias SecTransformInstanceBlockVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecTransformInstanceBlock>

typealias SecTransformRef = platform.CoreFoundation.CFTypeRef

typealias SecTransformRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTransformRef>

typealias SecTransformStringOrAttributeRef = platform.CoreFoundation.CFTypeRef

typealias SecTransformStringOrAttributeRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTransformStringOrAttributeRef>

typealias SecTrustCallback = ((platform.Security.SecTrustRef?, platform.Security.SecTrustResultType) -> kotlin.Unit)?

typealias SecTrustCallbackVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.SecTrustCallback>

typealias SecTrustOptionFlags = platform.posix.uint32_t

typealias SecTrustOptionFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustOptionFlags>

typealias SecTrustRef = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>

typealias SecTrustRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustRef>

typealias SecTrustResultType = platform.posix.uint32_t

typealias SecTrustResultTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustResultType>

typealias SecTrustSettingsDomain = platform.posix.uint32_t

typealias SecTrustSettingsDomainVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustSettingsDomain>

typealias SecTrustSettingsKeyUsage = platform.posix.uint32_t

typealias SecTrustSettingsKeyUsageVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustSettingsKeyUsage>

typealias SecTrustSettingsResult = platform.posix.uint32_t

typealias SecTrustSettingsResultVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustSettingsResult>

typealias SecTrustUserSetting = platform.Security.SecTrustResultType

typealias SecTrustUserSettingVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustUserSetting>

typealias SecTrustedApplicationRef = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustedApplicationRef>

typealias SecTrustedApplicationRefVar = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustedApplicationRef>

typealias SecuritySessionId = platform.darwin.UInt32

typealias SecuritySessionIdVar = kotlinx.cinterop.UIntVarOf<platform.Security.SecuritySessionId>

typealias SessionAttributeBits = platform.darwin.UInt32

typealias SessionAttributeBitsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SessionAttributeBits>

typealias SessionCreationFlags = platform.darwin.UInt32

typealias SessionCreationFlagsVar = kotlinx.cinterop.UIntVarOf<platform.Security.SessionCreationFlags>

typealias __CE_GeneralNameType = kotlin.UInt

typealias __CE_GeneralNameTypeVar = kotlinx.cinterop.UIntVarOf<platform.Security.__CE_GeneralNameType>

typealias cssm_appledl_open_parameters_mask = kotlin.UInt

typealias cssm_appledl_open_parameters_maskVar = kotlinx.cinterop.UIntVarOf<platform.Security.cssm_appledl_open_parameters_mask>

typealias extension_data_format = kotlin.UInt

typealias extension_data_formatVar = kotlinx.cinterop.UIntVarOf<platform.Security.extension_data_format>

typealias sec_certificate_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_certificate_t>

typealias sec_identity_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_identity_t>

typealias sec_object_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_object_t>

typealias sec_protocol_challenge_complete_t = ((platform.Security.sec_identity_t?) -> kotlin.Unit)?

typealias sec_protocol_challenge_complete_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_challenge_complete_t>

typealias sec_protocol_challenge_t = ((platform.Security.sec_protocol_metadata_t?, platform.Security.sec_protocol_challenge_complete_t?) -> kotlin.Unit)?

typealias sec_protocol_challenge_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_challenge_t>

typealias sec_protocol_key_update_complete_t = (() -> kotlin.Unit)?

typealias sec_protocol_key_update_complete_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_key_update_complete_t>

typealias sec_protocol_key_update_t = ((platform.Security.sec_protocol_metadata_t?, platform.Security.sec_protocol_key_update_complete_t?) -> kotlin.Unit)?

typealias sec_protocol_key_update_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_key_update_t>

typealias sec_protocol_metadata_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_protocol_metadata_t>

typealias sec_protocol_options_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_protocol_options_t>

typealias sec_protocol_verify_complete_t = ((kotlin.Boolean) -> kotlin.Unit)?

typealias sec_protocol_verify_complete_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_verify_complete_t>

typealias sec_protocol_verify_t = ((platform.Security.sec_protocol_metadata_t?, platform.Security.sec_trust_t?, platform.Security.sec_protocol_verify_complete_t?) -> kotlin.Unit)?

typealias sec_protocol_verify_tVar = kotlinx.cinterop.ObjCBlockVar<platform.Security.sec_protocol_verify_t>

typealias sec_trust_tVar = kotlinx.cinterop.ObjCObjectVar<platform.Security.sec_trust_t>

typealias sint16 = platform.posix.int16_t

typealias sint16Var = kotlinx.cinterop.ShortVarOf<platform.Security.sint16>

typealias sint32 = platform.posix.int32_t

typealias sint32Var = kotlinx.cinterop.IntVarOf<platform.Security.sint32>

typealias sint64 = platform.posix.int64_t

typealias sint64Var = kotlinx.cinterop.LongVarOf<platform.Security.sint64>

typealias sint8 = platform.posix.int8_t

typealias sint8Var = kotlinx.cinterop.ByteVarOf<platform.Security.sint8>

typealias uint16 = platform.posix.uint16_t

typealias uint16Var = kotlinx.cinterop.UShortVarOf<platform.Security.uint16>

typealias uint32 = platform.posix.uint32_t

typealias uint32Var = kotlinx.cinterop.UIntVarOf<platform.Security.uint32>

typealias uint64 = platform.posix.uint64_t

typealias uint64Var = kotlinx.cinterop.ULongVarOf<platform.Security.uint64>

typealias uint8 = platform.posix.uint8_t

typealias uint8Var = kotlinx.cinterop.UByteVarOf<platform.Security.uint8>

const val APPLE_ADS_OID_LENGTH: kotlin.Int = 0

const val APPLE_ALG_OID_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_APPLEID_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_APPLEID_SHARING_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_MACAPPSTORE_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_MACAPPSTORE_RECEIPT_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_MOBILE_STORE_SIGNING_LENGTH: kotlin.Int = 0

const val APPLE_CERT_POLICIES_TEST_MOBILE_STORE_SIGNING_LENGTH: kotlin.Int = 0

const val APPLE_DOTMAC_CERT_EXTEN_OID_LENGTH: kotlin.Int = 0

const val APPLE_DOTMAC_CERT_OID_LENGTH: kotlin.Int = 0

const val APPLE_DOTMAC_CERT_REQ_OID_LENGTH: kotlin.Int = 0

const val APPLE_DOTMAC_CERT_REQ_VALUE_OID_LENGTH: kotlin.Int = 0

const val APPLE_EKU_CODE_SIGNING_LENGTH: kotlin.Int = 0

const val APPLE_EKU_OID_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_AAI_INTERMEDIATE_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_APPLEID_INTERMEDIATE_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_APPLEID_SHARING_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_CODE_SIGNING_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_DEVELOPER_AUTHENTICATION_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_ESCROW_SERVICE_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_INTERMEDIATE_MARKER_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_ITMS_INTERMEDIATE_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_MACAPPSTORE_RECEIPT_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_OID_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_PROVISIONING_PROFILE_SIGNING_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_SERVER_AUTHENTICATION_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_SYSINT2_INTERMEDIATE_LENGTH: kotlin.Int = 0

const val APPLE_EXTENSION_WWDR_INTERMEDIATE_LENGTH: kotlin.Int = 0

const val APPLE_OID_LENGTH: kotlin.Int = 0

const val APPLE_TP_OID_LENGTH: kotlin.Int = 0

const val BER_TAG_BIT_STRING: kotlin.Int = 0

const val BER_TAG_BOOLEAN: kotlin.Int = 0

const val BER_TAG_ENUMERATED: kotlin.Int = 0

const val BER_TAG_EXTERNAL: kotlin.Int = 0

const val BER_TAG_GENERALIZED_TIME: kotlin.Int = 0

const val BER_TAG_GENERAL_STRING: kotlin.Int = 0

const val BER_TAG_GRAPHIC_STRING: kotlin.Int = 0

const val BER_TAG_IA5_STRING: kotlin.Int = 0

const val BER_TAG_INTEGER: kotlin.Int = 0

const val BER_TAG_ISO646_STRING: kotlin.Int = 0

const val BER_TAG_NULL: kotlin.Int = 0

const val BER_TAG_NUMERIC_STRING: kotlin.Int = 0

const val BER_TAG_OBJECT_DESCRIPTOR: kotlin.Int = 0

const val BER_TAG_OCTET_STRING: kotlin.Int = 0

const val BER_TAG_OID: kotlin.Int = 0

const val BER_TAG_PKIX_BMP_STRING: kotlin.Int = 0

const val BER_TAG_PKIX_UNIVERSAL_STRING: kotlin.Int = 0

const val BER_TAG_PKIX_UTF8_STRING: kotlin.Int = 0

const val BER_TAG_PRINTABLE_STRING: kotlin.Int = 0

const val BER_TAG_REAL: kotlin.Int = 0

const val BER_TAG_SEQUENCE: kotlin.Int = 0

const val BER_TAG_SET: kotlin.Int = 0

const val BER_TAG_T61_STRING: kotlin.Int = 0

const val BER_TAG_TELETEX_STRING: kotlin.Int = 0

const val BER_TAG_UNKNOWN: kotlin.Int = 0

const val BER_TAG_UTC_TIME: kotlin.Int = 0

const val BER_TAG_VIDEOTEX_STRING: kotlin.Int = 0

const val BER_TAG_VISIBLE_STRING: kotlin.Int = 0

const val CE_CD_AffiliationChanged: kotlin.Int = 0

const val CE_CD_CACompromise: kotlin.Int = 0

const val CE_CD_CertificateHold: kotlin.Int = 0

const val CE_CD_CessationOfOperation: kotlin.Int = 0

const val CE_CD_KeyCompromise: kotlin.Int = 0

const val CE_CD_Superseded: kotlin.Int = 0

const val CE_CD_Unspecified: kotlin.Int = 0

const val CE_CR_AffiliationChanged: kotlin.Int = 0

const val CE_CR_CACompromise: kotlin.Int = 0

const val CE_CR_CertificateHold: kotlin.Int = 0

const val CE_CR_CessationOfOperation: kotlin.Int = 0

const val CE_CR_KeyCompromise: kotlin.Int = 0

const val CE_CR_RemoveFromCRL: kotlin.Int = 0

const val CE_CR_Superseded: kotlin.Int = 0

const val CE_CR_Unspecified: kotlin.Int = 0

const val CE_KU_CRLSign: kotlin.Int = 0

const val CE_KU_DataEncipherment: kotlin.Int = 0

const val CE_KU_DecipherOnly: kotlin.Int = 0

const val CE_KU_DigitalSignature: kotlin.Int = 0

const val CE_KU_EncipherOnly: kotlin.Int = 0

const val CE_KU_KeyAgreement: kotlin.Int = 0

const val CE_KU_KeyCertSign: kotlin.Int = 0

const val CE_KU_KeyEncipherment: kotlin.Int = 0

const val CE_KU_NonRepudiation: kotlin.Int = 0

const val CE_NCT_ObjSign: kotlin.Int = 0

const val CE_NCT_ObjSignCA: kotlin.Int = 0

const val CE_NCT_Reserved: kotlin.Int = 0

const val CE_NCT_SMIME: kotlin.Int = 0

const val CE_NCT_SMIME_CA: kotlin.Int = 0

const val CE_NCT_SSL_CA: kotlin.Int = 0

const val CE_NCT_SSL_Client: kotlin.Int = 0

const val CE_NCT_SSL_Server: kotlin.Int = 0

val CSSMERR_AC_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_AC_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_AC_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_AC_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_BASE_ACLS: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_CL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_CONTEXT_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_DB_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_DB_LIST: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_DB_LIST_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_DL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_ENCODING: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_PASSTHROUGH_ID: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_REQUESTOR: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_REQUEST_DESCRIPTOR: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_TP_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_TUPLE_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_AC_INVALID_VALIDITY_PERIOD: kotlin.Int
    get() = TODO()

val CSSMERR_AC_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_AC_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_AC_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_AC_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_AC_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_AC_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_AC_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_DISK_FULL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_FILE_TOO_BIG: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_INCOMPATIBLE_DATABASE_BLOB: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_INCOMPATIBLE_KEY_BLOB: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_INVALID_DATABASE_BLOB: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_INVALID_KEY_BLOB: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_INVALID_OPEN_PARAMETERS: kotlin.Int
    get() = TODO()

val CSSMERR_APPLEDL_QUOTA_EXCEEDED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_BAD_CERT_FROM_ISSUER: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CA_PIN_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CERT_NOT_FOUND_FROM_ISSUER: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CODE_SIGN_DEVELOPMENT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_BAD_URI: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_EXPIRED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_INVALID_ANCHOR_CERT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_NOT_TRUSTED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_NOT_VALID_YET: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_POLICY_FAIL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CRL_SERVER_DOWN: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CS_BAD_CERT_CHAIN_LENGTH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CS_BAD_PATH_LENGTH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CS_NO_BASIC_CONSTRAINTS: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_CS_NO_EXTENDED_KEY_USAGE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_EXT_KEYUSAGE_NOT_CRITICAL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_HOSTNAME_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_IDENTIFIER_MISSING: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_IDP_FAIL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INCOMPLETE_REVOCATION_CHECK: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_AUTHORITY_ID: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_CA: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_EMPTY_SUBJECT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_EXTENDED_KEY_USAGE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_ID_LINKAGE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_KEY_USAGE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_ROOT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_INVALID_SUBJECT_ID: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_MISSING_REQUIRED_EXTENSION: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_NETWORK_FAILURE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_NO_BASIC_CONSTRAINTS: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_BAD_REQUEST: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_BAD_RESPONSE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_INVALID_ANCHOR_CERT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_NONCE_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_NOT_TRUSTED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_NO_SIGNER: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_RESP_INTERNAL_ERR: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_RESP_MALFORMED_REQ: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_RESP_SIG_REQUIRED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_RESP_TRY_LATER: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_RESP_UNAUTHORIZED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_SIG_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_STATUS_UNRECOGNIZED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_OCSP_UNAVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_PATH_LEN_CONSTRAINT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_RS_BAD_CERT_CHAIN_LENGTH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_RS_BAD_EXTENDED_KEY_USAGE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_BAD_EXT_KEY_USE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_BAD_KEY_USE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_EMAIL_ADDRS_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_KEYUSAGE_NOT_CRITICAL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_NO_EMAIL_ADDRS: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SMIME_SUBJ_ALT_NAME_NOT_CRIT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_SSL_BAD_EXT_KEY_USE: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_TRUST_SETTING_DENY: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_UNKNOWN_CERT_EXTEN: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_UNKNOWN_CRITICAL_EXTEN: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_UNKNOWN_CRL_EXTEN: kotlin.Int
    get() = TODO()

val CSSMERR_APPLETP_UNKNOWN_QUAL_CERT_STATEMENT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_CSR_VERIFY_FAIL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_FAILED_CONSISTENCY_CHECK: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_NO_REQ_PENDING: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_IS_PENDING: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_QUEUED: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_REDIRECT: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_ALREADY_EXIST: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_AUTH: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_ERR: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_NOT_AVAIL: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_PARAM: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_SERVICE_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_APPLE_DOTMAC_REQ_SERVER_UNIMPL: kotlin.Int
    get() = TODO()

val CSSMERR_CL_CRL_ALREADY_SIGNED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_CL_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_BUNDLE_INFO: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_BUNDLE_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CACHE_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CERTGROUP_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CERT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CONTEXT_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CRL_INDEX: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_CRL_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_FIELD_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_NUMBER_OF_FIELDS: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_PASSTHROUGH_ID: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_RESULTS_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_INVALID_SCOPE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CL_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CL_NO_FIELD_VALUES: kotlin.Int
    get() = TODO()

val CSSMERR_CL_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_CL_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_SCOPE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_CL_UNKNOWN_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CL_UNKNOWN_TAG: kotlin.Int
    get() = TODO()

val CSSMERR_CL_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_CL_VERIFICATION_FAILURE: kotlin.Int
    get() = TODO()

val CSSMERR_CSPDL_APPLE_DL_CONVERSION_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_ADD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_BASE_CERTS_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_CHALLENGE_CALLBACK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_CHANGE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_DELETE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_ENTRY_TAG_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_REPLACE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ACL_SUBJECT_TYPE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ALGID_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ALREADY_LOGGED_IN: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_ADD_APPLICATION_ACL_SUBJECT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_INVALID_KEY_END_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_INVALID_KEY_START_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_PUBLIC_KEY_INCOMPLETE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_SIGNATURE_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_APPLE_SSLv2_ROLLBACK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_ATTACH_HANDLE_BUSY: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_BLOCK_SIZE_MISMATCH: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_CRYPTO_DATA_CALLBACK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_DEVICE_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_DEVICE_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_DEVICE_VERIFY_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INPUT_LENGTH_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACCESS_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACL_BASE_CERTS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACL_CHALLENGE_CALLBACK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACL_EDIT_MODE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACL_ENTRY_TAG: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ACL_SUBJECT_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ALGORITHM: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_ACCESS_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_ALG_PARAMS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_BASE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_BLOCK_SIZE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_DL_DB_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_EFFECTIVE_BITS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_END_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_INIT_VECTOR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_ITERATION_COUNT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_KEY: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_KEY_LENGTH: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_KEY_TYPE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_LABEL: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_MODE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_OUTPUT_SIZE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_PADDING: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_PASSPHRASE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_PRIME: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_PRIVATE_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_PUBLIC_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_RANDOM: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_ROUNDS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_SALT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_SEED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_START_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_SUBPRIME: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_SYMMETRIC_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_VERSION: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_ATTR_WRAPPED_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_CONTEXT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_CONTEXT_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_CRYPTO_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_DATA_COUNT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_DIGEST_ALGORITHM: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_INPUT_VECTOR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEYATTR_MASK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEYUSAGE_MASK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY_CLASS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY_LABEL: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_KEY_REFERENCE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_LOGIN_NAME: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_NEW_ACL_ENTRY: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_NEW_ACL_OWNER: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_OUTPUT_VECTOR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_PASSTHROUGH_ID: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_SAMPLE_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_INVALID_SIGNATURE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_KEY_BLOB_TYPE_INCORRECT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_KEY_HEADER_INCONSISTENT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_KEY_LABEL_ALREADY_EXISTS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_KEY_USAGE_INCORRECT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_ACCESS_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_ALG_PARAMS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_BASE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_BLOCK_SIZE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_DL_DB_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_EFFECTIVE_BITS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_END_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_INIT_VECTOR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_ITERATION_COUNT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_KEY: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_KEY_LENGTH: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_KEY_TYPE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_LABEL: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_MODE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_OUTPUT_SIZE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_PADDING: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_PASSPHRASE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_PRIME: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_PRIVATE_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_PUBLIC_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_RANDOM: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_ROUNDS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_SALT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_SEED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_START_DATE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_SUBPRIME: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_SYMMETRIC_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_VERSION: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_MISSING_ATTR_WRAPPED_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_NOT_LOGGED_IN: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OBJECT_ACL_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OBJECT_ACL_REQUIRED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OBJECT_MANIP_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OBJECT_USE_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OPERATION_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_OUTPUT_LENGTH_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_PRIVATE_KEY_ALREADY_EXISTS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_PRIVATE_KEY_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_PRIVILEGE_NOT_GRANTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_PRIVILEGE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_PUBLIC_KEY_INCONSISTENT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_QUERY_SIZE_UNKNOWN: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_SAMPLE_VALUE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_STAGED_OPERATION_IN_PROGRESS: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_STAGED_OPERATION_NOT_STARTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_UNSUPPORTED_KEYATTR_MASK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_UNSUPPORTED_KEYUSAGE_MASK: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_UNSUPPORTED_KEY_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_UNSUPPORTED_KEY_LABEL: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_UNSUPPORTED_KEY_SIZE: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_VECTOR_OF_BUFS_UNSUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSP_VERIFY_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_ADDIN_AUTHENTICATE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_ADDIN_LOAD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_ADDIN_UNLOAD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_ATTRIBUTE_NOT_IN_CONTEXT: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_BUFFER_TOO_SMALL: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_EMM_AUTHENTICATE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_EMM_LOAD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_EMM_UNLOAD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_EVENT_NOTIFICATION_CALLBACK_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_FUNCTION_INTEGRITY_FAIL: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INCOMPATIBLE_VERSION: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_ADDIN_FUNCTION_TABLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_ADDIN_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_ATTRIBUTE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_CONTEXT_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_GUID: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_HANDLE_USAGE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_KEY_HIERARCHY: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_PVC: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_SERVICE_MASK: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_INVALID_SUBSERVICEID: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_LIB_REF_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MODULE_MANAGER_INITIALIZE_FAIL: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MODULE_MANAGER_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MODULE_MANIFEST_VERIFY_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_MODULE_NOT_LOADED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_NOT_INITIALIZED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_PRIVILEGE_NOT_GRANTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_PVC_ALREADY_CONFIGURED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_PVC_REFERENT_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_SCOPE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_CSSM_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_ADD_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_BASE_CERTS_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_CHALLENGE_CALLBACK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_CHANGE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_DELETE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_ENTRY_TAG_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_REPLACE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ACL_SUBJECT_TYPE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DATABASE_CORRUPT: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DATASTORE_ALREADY_EXISTS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DATASTORE_DOESNOT_EXIST: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DATASTORE_IS_OPEN: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DB_LOCKED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_DL_ENDOFDATA: kotlin.Int
    get() = TODO()

val CSSMERR_DL_FIELD_SPECIFIED_MULTIPLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INCOMPATIBLE_FIELD_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACCESS_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACCESS_REQUEST: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACL_BASE_CERTS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACL_CHALLENGE_CALLBACK: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACL_EDIT_MODE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACL_ENTRY_TAG: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_ACL_SUBJECT_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_CL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_CSP_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_DB_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_DB_LIST_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_DB_LOCATION: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_DB_NAME: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_DL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_FIELD_NAME: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_INDEX_INFO: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_MODIFY_MODE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_NETWORK_ADDR: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_NEW_ACL_ENTRY: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_NEW_ACL_OWNER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_NEW_OWNER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_OPEN_PARAMETERS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_PARSING_MODULE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_PASSTHROUGH_ID: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_QUERY: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_RECORDTYPE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_RECORD_INDEX: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_RECORD_UID: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_RESULTS_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_SAMPLE_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_SELECTION_TAG: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_UNIQUE_INDEX_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_DL_INVALID_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_DL_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_DL_MISSING_VALUE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_MULTIPLE_VALUES_UNSUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OBJECT_ACL_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OBJECT_ACL_REQUIRED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OBJECT_MANIP_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OBJECT_USE_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OPERATION_AUTH_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_RECORD_MODIFIED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_RECORD_NOT_FOUND: kotlin.Int
    get() = TODO()

val CSSMERR_DL_SAMPLE_VALUE_NOT_SUPPORTED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_DL_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_STALE_UNIQUE_RECORD: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_FIELD_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_INDEX_INFO: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_LOCALITY: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_NUM_ATTRIBUTES: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_NUM_INDEXES: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_NUM_RECORDTYPES: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_NUM_SELECTION_PREDS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_OPERATOR: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_QUERY: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_QUERY_LIMITS: kotlin.Int
    get() = TODO()

val CSSMERR_DL_UNSUPPORTED_RECORDTYPE: kotlin.Int
    get() = TODO()

val CSSMERR_DL_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_AUTHENTICATION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERTGROUP_INCOMPLETE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERTIFICATE_CANT_OPERATE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERT_EXPIRED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERT_NOT_VALID_YET: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERT_REVOKED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CERT_SUSPENDED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_CRL_ALREADY_SIGNED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_DEVICE_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_DEVICE_RESET: kotlin.Int
    get() = TODO()

val CSSMERR_TP_FUNCTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_FUNCTION_NOT_IMPLEMENTED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INSUFFICIENT_CREDENTIALS: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INTERNAL_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_ACTION: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_ACTION_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_ANCHOR_CERT: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_AUTHORITY: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CALLBACK: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CALLERAUTH_CONTEXT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CERTGROUP: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CERTGROUP_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CERTIFICATE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CERT_AUTHORITY: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CERT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CONTEXT_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRL: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRLGROUP: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRLGROUP_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRL_AUTHORITY: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRL_ENCODING: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRL_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CRL_TYPE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_CSP_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_DATA: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_DB_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_DB_LIST: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_DB_LIST_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_DL_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_FIELD_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_FORM_TYPE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_ID: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_IDENTIFIER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_IDENTIFIER_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_INDEX: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_INPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_KEYCACHE_HANDLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_NAME: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_NETWORK_ADDR: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_NUMBER_OF_FIELDS: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_OUTPUT_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_PASSTHROUGH_ID: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_POLICY_IDENTIFIERS: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_REASON: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_REQUEST_INPUTS: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_RESPONSE_VECTOR: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_SIGNATURE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_STOP_ON_POLICY: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_TIMESTRING: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_TUPLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_TUPLEGROUP: kotlin.Int
    get() = TODO()

val CSSMERR_TP_INVALID_TUPLEGROUP_POINTER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_IN_DARK_WAKE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_MDS_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_TP_MEMORY_ERROR: kotlin.Int
    get() = TODO()

val CSSMERR_TP_NOT_SIGNER: kotlin.Int
    get() = TODO()

val CSSMERR_TP_NOT_TRUSTED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_NO_DEFAULT_AUTHORITY: kotlin.Int
    get() = TODO()

val CSSMERR_TP_NO_USER_INTERACTION: kotlin.Int
    get() = TODO()

val CSSMERR_TP_OS_ACCESS_DENIED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_REJECTED_FORM: kotlin.Int
    get() = TODO()

val CSSMERR_TP_REQUEST_LOST: kotlin.Int
    get() = TODO()

val CSSMERR_TP_REQUEST_REJECTED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_SELF_CHECK_FAILED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_SERVICE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_UNKNOWN_FORMAT: kotlin.Int
    get() = TODO()

val CSSMERR_TP_UNKNOWN_TAG: kotlin.Int
    get() = TODO()

val CSSMERR_TP_UNSUPPORTED_ADDR_TYPE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_UNSUPPORTED_SERVICE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_USER_CANCELED: kotlin.Int
    get() = TODO()

val CSSMERR_TP_VERIFICATION_FAILURE: kotlin.Int
    get() = TODO()

val CSSMERR_TP_VERIFY_ACTION_FAILED: kotlin.Int
    get() = TODO()

val CSSMOID_ADC_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AD_CA_ISSUERS: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AD_CA_REPOSITORY: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AD_OCSP: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AD_TIME_STAMPING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_EPHEM: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_EPHEM_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_HYBRID1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_HYBRID1_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_HYBRID2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_HYBRID2_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_HYBRID_ONEFLOW: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_ONE_FLOW: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_ONE_FLOW_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_PUB_NUMBER: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_STATIC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_DH_STATIC_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_MQV1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_MQV1_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_MQV2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ANSI_MQV2_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLEID_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLEID_SHARING_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_ASC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_ECDSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_CODE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_CODE_SIGNING_DEV: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_ICHAT_ENCRYPTION: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_ICHAT_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_PASSBOOK_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_PROFILE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_QA_PROFILE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_RESOURCE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EKU_SYSTEM_IDENTITY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_AAI_INTERMEDIATE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_ADC_APPLE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_ADC_DEV_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_APPLEID_INTERMEDIATE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_APPLEID_SHARING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_APPLE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_CODE_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_ESCROW_SERVICE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_INTERMEDIATE_MARKER: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_ITMS_INTERMEDIATE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_MACAPPSTORE_RECEIPT: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_PASSBOOK_SIGNING: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_SYSINT2_INTERMEDIATE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_EXTENSION_WWDR_INTERMEDIATE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_FEE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_FEED: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_FEEDEXP: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_FEE_MD5: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_FEE_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_ISIGN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_APPLEID_SHARING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_CODE_SIGN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_CODE_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_CSR_GEN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_EAP: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_ESCROW_SERVICE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_ICHAT: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_IP_SEC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_LOCAL_CERT_GEN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_MACAPPSTORE_RECEIPT: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_MOBILE_STORE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_PACKAGE_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_PASSBOOK_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_PKINIT_CLIENT: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_PKINIT_SERVER: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_PROFILE_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_QA_PROFILE_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_RESOURCE_SIGN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_REVOCATION: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_REVOCATION_CRL: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_REVOCATION_OCSP: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_SMIME: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_SSL: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_SW_UPDATE_SIGNING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_TEST_MOBILE_STORE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_TP_TIMESTAMPING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_APPLE_X509_BASIC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AliasedEntryName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AuthorityInfoAccess: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AuthorityKeyIdentifier: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_AuthorityRevocationList: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_BasicConstraints: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_BiometricInfo: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_BusinessCategory: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CACertificate: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CSSMKeyStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CertIssuer: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Certicom: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CerticomEllCurve: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CertificatePolicies: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CertificateRevocationList: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ChallengePassword: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ClientAuth: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveFacsimileTelephoneNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveInternationalISDNNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveOrganizationName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveOrganizationalUnitName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectivePhysicalDeliveryOfficeName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectivePostOfficeBox: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectivePostalAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectivePostalCode: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveStateProvinceName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveStreetAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveTelephoneNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveTelexNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CollectiveTelexTerminalIdentifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CommonName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ContentType: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CounterSignature: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CountryName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CrlDistributionPoints: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CrlNumber: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CrlReason: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_CrossCertificatePair: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DH: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DNQualifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_EMAIL_ENCRYPT: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_EMAIL_SIGN: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_EXTENSION: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_IDENTITY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_FETCH: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_LIST: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_REMOVE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_ARCHIVE_STORE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_EMAIL_ENCRYPT: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_EMAIL_SIGN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_IDENTITY: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_SHARED_SERVICES: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_ASYNC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_HOSTNAME: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_IS_PENDING: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_PASSWORD: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_RENEW: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DOTMAC_CERT_REQ_VALUE_USERNAME: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DSA_CMS: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DSA_JDK: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DeltaCrlIndicator: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Description: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DestinationIndicator: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_DistinguishedName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSHA224: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSHA256: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSHA384: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSHA512: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ECDSA_WithSpecified: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_EKU_IPSec: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ETSI_QCS_QC_COMPLIANCE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ETSI_QCS_QC_LIMIT_VALUE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ETSI_QCS_QC_RETENTION: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ETSI_QCS_QC_SSCD: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_EmailAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_EmailProtection: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_EnhancedSearchGuide: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ExtendedCertificateAttributes: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ExtendedKeyUsage: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ExtendedKeyUsageAny: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ExtendedUseCodeSigning: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_FacsimileTelephoneNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_GenerationQualifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_GivenName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_HoldInstructionCode: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_HouseIdentifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Initials: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_InternationalISDNNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_InvalidityDate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_IssuerAltName: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_IssuingDistributionPoint: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_IssuingDistributionPoints: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KERBv5_PKINIT_AUTH_DATA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KERBv5_PKINIT_DH_KEY_DATA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KERBv5_PKINIT_KP_CLIENT_AUTH: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KERBv5_PKINIT_KP_KDC: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KERBv5_PKINIT_RKEY_DATA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KeyUsage: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_KnowledgeInformation: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_LocalityName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MACAPPSTORE_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MACAPPSTORE_RECEIPT_CERT_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD2WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD4: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD4WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD5: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MD5WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MOBILE_STORE_SIGNING_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Member: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MessageDigest: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_MicrosoftSGC: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Name: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_NameConstraints: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_NetscapeCertSequence: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_NetscapeCertType: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_NetscapeSGC: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OAEP_ID_PSPECIFIED: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OAEP_MGF1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OCSPSigning: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OID_QCS_SYNTAX_V1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OID_QCS_SYNTAX_V2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ObjectClass: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OrganizationName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_OrganizationalUnitName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Owner: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PDA_COUNTRY_CITIZEN: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PDA_COUNTRY_RESIDENCE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PDA_DATE_OF_BIRTH: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PDA_GENDER: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PDA_PLACE_OF_BIRTH: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_certBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_crlBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_keyBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbeWithSHAAnd128BitRC2CBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbeWithSHAAnd128BitRC4: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbeWithSHAAnd2Key3DESCBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbeWithSHAAnd3Key3DESCBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbeWithSHAAnd40BitRC4: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_pbewithSHAAnd40BitRC2CBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_safeContentsBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_secretBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS12_shroudedKeyBag: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS3: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_DES_EDE3_CBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_DIGEST_ALG: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_ENCRYPT_ALG: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_HMAC_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_PBES2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_PBKDF2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_PBMAC1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_RC2_CBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_RC5_CBC: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithMD2AndDES: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithMD2AndRC2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithMD5AndDES: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithMD5AndRC2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithSHA1AndDES: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS5_pbeWithSHA1AndRC2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_Data: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_DataWithAttributes: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_DigestedData: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_EncryptedData: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_EncryptedPrivateKeyInfo: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_EnvelopedData: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_SignedAndEnvelopedData: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS7_SignedData: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_CertTypes: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_CrlTypes: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_FriendlyName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_Id_Ct_TSTInfo: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_LocalKeyId: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_SdsiCertificate: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_TimeStampToken: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_X509Certificate: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKCS9_X509Crl: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_ARCHIVE_CUTOFF: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_BASIC: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_CRL: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_NOCHECK: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_NONCE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_RESPONSE: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PKIX_OCSP_SERVICE_LOCATOR: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PhysicalDeliveryOfficeName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PolicyConstraints: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PolicyMappings: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PostOfficeBox: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PostalAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PostalCode: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PreferredDeliveryMethod: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PresentationAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_PrivateKeyUsagePeriod: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ProtocolInformation: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_QC_Statements: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_QT_CPS: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_QT_UNOTICE: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_RSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_RSAWithOAEP: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_RegisteredAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_RoleOccupant: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1WithDSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1WithDSA_CMS: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1WithDSA_JDK: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA1WithRSA_OIW: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA224: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA224WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA256: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA256WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA384: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA384WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA512: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SHA512WithRSA: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SearchGuide: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SeeAlso: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SerialNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ServerAuth: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SigningTime: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_StateProvinceName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_StreetAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectAltName: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectDirectoryAttributes: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectEmailAddress: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectInfoAccess: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectKeyIdentifier: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectPicture: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SubjectSignatureBitmap: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_SupportedApplicationContext: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Surname: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_TEST_MOBILE_STORE_SIGNING_POLICY: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_TelephoneNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_TelexNumber: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_TelexTerminalIdentifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_TimeStamping: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_Title: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UniqueIdentifier: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UniqueMember: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UnstructuredAddress: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UnstructuredName: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UseExemptions: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UserCertificate: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UserID: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_UserPassword: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLIssuerNameCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLIssuerNameLDAP: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLIssuerStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLNextUpdate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLNumberOfRevokedCertEntries: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedCertificatesCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedCertificatesStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedEntryCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedEntryRevocationDate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedEntrySerialNumber: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLRevokedEntryStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CRLThisUpdate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CertificateIssuerUniqueId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1CertificateSubjectUniqueId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1IssuerName: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1IssuerNameCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1IssuerNameLDAP: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1IssuerNameStd: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SerialNumber: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1Signature: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SignatureAlgorithm: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SignatureAlgorithmParameters: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SignatureAlgorithmTBS: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SignatureCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SignatureStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectName: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectNameCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectNameLDAP: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectNameStd: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectPublicKey: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectPublicKeyAlgorithm: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectPublicKeyAlgorithmParameters: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1SubjectPublicKeyCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1ValidityNotAfter: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1ValidityNotBefore: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V1Version: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLAllExtensionsCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLAllExtensionsStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLExtensionCritical: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLExtensionId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLExtensionType: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLNumberOfExtensions: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryAllExtensionsCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryAllExtensionsStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryExtensionCritical: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryExtensionId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryExtensionType: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryExtensionValue: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntryNumberOfExtensions: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntrySingleExtensionCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLRevokedEntrySingleExtensionStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLSignedCrlCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLSignedCrlStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLSingleExtensionCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLSingleExtensionStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLTbsCertListCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLTbsCertListStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V2CRLVersion: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3Certificate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionCritical: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionId: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionType: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionValue: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionsCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateExtensionsStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3CertificateNumberOfExtensions: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3SignedCertificate: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X509V3SignedCertificateCStruct: platform.Security.CSSM_OID /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_C_TwoCurve: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_EllCurve: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_FieldType: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_PrimeCurve: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_PubKeyType: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X9_62_SigType: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_X_121Address: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_ecPublicKey: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp112r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp112r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp128r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp128r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp160k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp160r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp160r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp192k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp192r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp224k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp224r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp256k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp256r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp384r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_secp521r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect113r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect113r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect131r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect131r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect163k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect163r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect163r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect193r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect193r2: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect233k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect233r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect239k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect283k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect283r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect409k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect409r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect571k1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSMOID_sect571r1: platform.Security.SecAsn1Oid /* = platform.Security.cssm_data */
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_ANY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_CHANGE_ACL: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_CHANGE_OWNER: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DBS_CREATE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DBS_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DB_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DB_INSERT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DB_MODIFY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DB_READ: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DECRYPT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_DERIVE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_ENCRYPT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_EXPORT_CLEAR: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_EXPORT_WRAPPED: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_GENKEY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_IMPORT_CLEAR: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_IMPORT_WRAPPED: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_INTEGRITY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_LOGIN: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_MAC: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_PARTITION_ID: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_PREAUTH_BASE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_PREAUTH_END: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_SIGN: kotlin.UInt
    get() = TODO()

val CSSM_ACL_AUTHORIZATION_TAG_VENDOR_DEFINED_START: kotlin.UInt
    get() = TODO()

val CSSM_ACL_CODE_SIGNATURE_INVALID: kotlin.UInt
    get() = TODO()

val CSSM_ACL_CODE_SIGNATURE_OSX: kotlin.UInt
    get() = TODO()

val CSSM_ACL_EDIT_MODE_ADD: kotlin.UInt
    get() = TODO()

val CSSM_ACL_EDIT_MODE_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_EDIT_MODE_REPLACE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_CURRENT_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_INVALID: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_INVALID_ACT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_REQUIRE_PASSPHRASE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_UNSIGNED: kotlin.UInt
    get() = TODO()

val CSSM_ACL_KEYCHAIN_PROMPT_UNSIGNED_ACT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_MATCH_BITS: kotlin.UInt
    get() = TODO()

val CSSM_ACL_MATCH_GID: kotlin.UInt
    get() = TODO()

val CSSM_ACL_MATCH_HONOR_ROOT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_MATCH_UID: kotlin.UInt
    get() = TODO()

val CSSM_ACL_PREAUTH_TRACKING_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_ACL_PREAUTH_TRACKING_BLOCKED: kotlin.UInt
    get() = TODO()

val CSSM_ACL_PREAUTH_TRACKING_COUNT_MASK: kotlin.UInt
    get() = TODO()

val CSSM_ACL_PREAUTH_TRACKING_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_ACL_PROCESS_SELECTOR_CURRENT_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_ANY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_ASYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_CODE_SIGNATURE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_COMMENT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_EXT_PAM_NAME: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_HASHED_SUBJECT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_KEYCHAIN_PROMPT: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_LOGIN_NAME: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PARTITION: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PREAUTH: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PREAUTH_SOURCE: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PROCESS: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PROMPTED_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PROMPTED_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PROTECTED_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PROTECTED_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_PUBLIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_SYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ACL_SUBJECT_TYPE_THRESHOLD: kotlin.UInt
    get() = TODO()

val CSSM_AC_BASE_AC_ERROR: kotlin.Int
    get() = TODO()

val CSSM_AC_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_AC_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_ADDR_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_ADDR_NAME: kotlin.UInt
    get() = TODO()

val CSSM_ADDR_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ADDR_SOCKADDR: kotlin.UInt
    get() = TODO()

val CSSM_ADDR_URL: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_ASYMMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_DERIVEKEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_DIGEST: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_KEYGEN: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_MAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_RANDOMGEN: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_SIGNATURE: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_SYMMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_ALGCLASS_UNIQUEGEN: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_1KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_1KEY_EEE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_2KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_2KEY_EDE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_2KEY_EEE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_3KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_3KEY_EDE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_3DES_3KEY_EEE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_AES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_APPLE_YARROW: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ASC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_BATON: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_BLOWFISH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CAST: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CAST3: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CAST5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CDMF: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CRAB: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ConcatBaseAndData: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ConcatBaseAndKey: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ConcatDataAndBase: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ConcatKeyAndBase: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DESRandom: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DESX: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_DSA_BSAFE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECAES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECDH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECDH_X963_KDF: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECDSA_SPECIFIED: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECMQV: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ECNRA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ENTROPY_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ElGamal: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_ExtractFromKey: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FASTHASH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEAL: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEED: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEEDEXP: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEE_MD5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FEE_SHA1: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FIPS186Random: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_FortezzaTimestamp: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_GOST: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_GenericSecret: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_HAVAL: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_HAVAL3: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_HAVAL4: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_HAVAL5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_IBCHASH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_IDEA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_IntelPlatformRandom: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_JUNIPER: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_KEA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_KEYCHAIN_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_KHAFRE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_KHUFU: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_LAST: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_LOKI: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_LUCIFER: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MADRYGA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MAYFLY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD2: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD2Random: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD2WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD4: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD5HMAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD5Random: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MD5WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MMB: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_MQV: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_NHASH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_NRA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_OPENSSH1: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PBE_OPENSSL_MD5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PH: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS12_PBE_ENCR: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS12_PBE_MAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS12_SHA1_PBE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS5_PBKDF1_MD2: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS5_PBKDF1_MD5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS5_PBKDF1_SHA1: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_PKCS5_PBKDF2: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RC2: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RC4: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RC5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RDES: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_REDOC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_REDOC3: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RIPEMAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RIPEMD: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_RUNNING_COUNTER: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SAFER: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SEAL: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SECURE_PASSPHRASE: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1HMAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1HMAC_LEGACY: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1WithDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1WithECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1WithECNRA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA1WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA224: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA224WithECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA224WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA256: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA256WithECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA256WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA384: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA384WithECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA384WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA512: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA512WithECDSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHA512WithRSA: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SHARandom: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SKIPJACK: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3KeyAndMacDerive: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3MD5: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3MD5_MAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3MasterDerive: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3PreMasterGen: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3SHA1: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_SSL3SHA1_MAC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_TIGER: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_UTC: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_VENDOR_DEFINED: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_WrapLynks: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_WrapSET_OAEP: kotlin.UInt
    get() = TODO()

val CSSM_ALGID_XORBaseAndData: kotlin.UInt
    get() = TODO()

val CSSM_ALGID__FIRST_UNUSED: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_BC: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBC: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBC128: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBC64: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBCC: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBCPD: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBCPadIV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CBC_IV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFB: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFB16: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFB32: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFB8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFBPadIV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CFB_IV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_COUNTER: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ECB: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ECB128: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ECB64: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ECB96: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ECBPad: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_ISO_9796: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_LAST: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OAEP_HASH: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OFB: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OFB64: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OFBNLF: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OFBPadIV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_OFB_IV8: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PBC: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PCBC: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PFB: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PKCS1_EME_OAEP: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PKCS1_EME_V15: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PKCS1_EMSA_V15: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PRIVATE_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PRIVATE_WRAP: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_PUBLIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_RELAYX: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_SHUFFLE: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_VENDOR_DEFINED: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_WRAP: kotlin.UInt
    get() = TODO()

val CSSM_ALGMODE_X9_31: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_CHANGE_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_GET_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_GET_SETTINGS: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_IS_LOCKED: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_SET_SETTINGS: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSPDL_DB_UNLOCK: kotlin.UInt
    get() = TODO()

val CSSM_APPLECSP_KEYDIGEST: kotlin.UInt
    get() = TODO()

val CSSM_APPLEDL_OPEN_PARAMETERS_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_COMMIT: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_DELETE_FILE: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_MAKE_BACKUP: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_MAKE_COPY: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_ROLLBACK: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_TAKE_FILE_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_APPLEFILEDL_TOGGLE_AUTOCOMMIT: kotlin.UInt
    get() = TODO()

val CSSM_APPLESCPDL_CSP_GET_KEYHANDLE: kotlin.UInt
    get() = TODO()

val CSSM_APPLEX509CL_OBTAIN_CSR: kotlin.UInt
    get() = TODO()

val CSSM_APPLEX509CL_VERIFY_CSR: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_ACL_TAG_INTEGRITY: kotlin.String
    get() = TODO()

val CSSM_APPLE_ACL_TAG_PARTITION_ID: kotlin.String
    get() = TODO()

val CSSM_APPLE_CRL_END_OF_TIME: kotlin.String
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_10: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_11: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_12: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_13: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_14: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_15: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_16: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_17: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_18: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_19: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_20: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_21: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_22: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_23: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_24: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_25: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_26: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_27: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_8: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_PRIVATE_CSPDL_CODE_9: kotlin.UInt
    get() = TODO()

const val CSSM_APPLE_TP_ACTION_VERSION: kotlin.Int = 0

const val CSSM_APPLE_TP_CRL_OPTS_VERSION: kotlin.Int = 0

const val CSSM_APPLE_TP_SMIME_OPTS_VERSION: kotlin.Int = 0

const val CSSM_APPLE_TP_SSL_CLIENT: kotlin.Int = 0

const val CSSM_APPLE_TP_SSL_OPTS_VERSION: kotlin.Int = 0

val CSSM_APPLE_UNLOCK_TYPE_KEYBAG: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_UNLOCK_TYPE_KEY_DIRECT: kotlin.UInt
    get() = TODO()

val CSSM_APPLE_UNLOCK_TYPE_WRAPPED_PRIVATE: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_ASCII: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_SECURITY: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_TIME: kotlin.UInt
    get() = TODO()

val CSSM_ASC_OPTIMIZE_TIME_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_ATTACH_READ_ONLY: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ACCESS_CREDENTIALS: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ALERT_TITLE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ALG_ID: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ALG_PARAMS: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ASC_OPTIMIZATION: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_BASE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_BLOCK_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_CSP_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_ACCESS_CREDENTIALS: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_CRYPTO_DATA: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_CSSM_DATA: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_DATE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_DL_DB_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_KR_PROFILE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_RANGE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_STRING: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_UINT32: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DATA_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DESCRIPTION: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_DL_DB_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_EFFECTIVE_BITS: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_END_DATE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_FEE_CURVE_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_FEE_PRIME_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_INIT_VECTOR: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ITERATION_COUNT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_IV_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEYATTR: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEYUSAGE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEY_LENGTH: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEY_LENGTH_RANGE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KEY_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KRPROFILE_LOCAL: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_KRPROFILE_REMOTE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_LABEL: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_MODE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_OUTPUT_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PADDING: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PARAM_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PASSPHRASE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PRIME: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PRIVATE_KEY_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PROMPT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PUBLIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_PUBLIC_KEY_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_RANDOM: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ROUNDS: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_ROUNDS_RANGE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_RSA_BLINDING: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_SALT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_SEED: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_START_DATE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_SUBPRIME: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_SYMMETRIC_KEY_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_TYPE_MASK: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_VENDOR_DEFINED: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_VERIFY_PASSPHRASE: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_ATTRIBUTE_WRAPPED_KEY_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CERTGROUP_CERT_PAIR: kotlin.UInt
    get() = TODO()

val CSSM_CERTGROUP_DATA: kotlin.UInt
    get() = TODO()

val CSSM_CERTGROUP_ENCODED_CERT: kotlin.UInt
    get() = TODO()

val CSSM_CERTGROUP_PARSED_CERT: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ACL_ENTRY: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_BER: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_DER: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_PGP: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_ENCODING_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_LAST: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_PFX: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_PGP_KEYRING: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_PKCS12: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_PKCS7_SIGNED_DATA: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_PKCS7_SIGNED_ENVELOPED_DATA: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_SPKI_SEQUENCE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_BUNDLE_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_BER: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_DER: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_LAST: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_NDR: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_PGP: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_CERT_ENCODING_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CERT_Intel: kotlin.UInt
    get() = TODO()

val CSSM_CERT_LAST: kotlin.UInt
    get() = TODO()

val CSSM_CERT_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_COMPLEX: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_LAST: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_OID_NAMED: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PARSE_FORMAT_TUPLE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_PGP: kotlin.UInt
    get() = TODO()

val CSSM_CERT_SDSIv1: kotlin.UInt
    get() = TODO()

val CSSM_CERT_SPKI: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_EXPIRED: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_IS_FROM_NET: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_IS_IN_ANCHORS: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_IS_IN_INPUT_CERTS: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_IS_ROOT: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_NOT_VALID_YET: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_DENY: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_ADMIN: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_SYSTEM: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_FOUND_USER: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_IGNORED_ERROR: kotlin.UInt
    get() = TODO()

val CSSM_CERT_STATUS_TRUST_SETTINGS_TRUST: kotlin.UInt
    get() = TODO()

val CSSM_CERT_TUPLE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CERT_X9_ATTRIBUTE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_X_509_ATTRIBUTE: kotlin.UInt
    get() = TODO()

val CSSM_CERT_X_509v1: kotlin.UInt
    get() = TODO()

val CSSM_CERT_X_509v2: kotlin.UInt
    get() = TODO()

val CSSM_CERT_X_509v3: kotlin.UInt
    get() = TODO()

val CSSM_CL_BASE_CL_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CL_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CL_CUSTOM_CERT_BUNDLE_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_CL_CUSTOM_CERT_ENCODING: kotlin.UInt
    get() = TODO()

val CSSM_CL_CUSTOM_CERT_PARSE_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_CL_CUSTOM_CERT_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_CL_CUSTOM_CRL_PARSE_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_CL_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CL_TEMPLATE_INTERMEDIATE_CERT: kotlin.UInt
    get() = TODO()

val CSSM_CL_TEMPLATE_PKIX_CERTTEMPLATE: kotlin.UInt
    get() = TODO()

val CSSM_CONTEXT_EVENT_CREATE: kotlin.UInt
    get() = TODO()

val CSSM_CONTEXT_EVENT_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_CONTEXT_EVENT_UPDATE: kotlin.UInt
    get() = TODO()

val CSSM_CRLGROUP_CRL_PAIR: kotlin.UInt
    get() = TODO()

val CSSM_CRLGROUP_DATA: kotlin.UInt
    get() = TODO()

val CSSM_CRLGROUP_ENCODED_CRL: kotlin.UInt
    get() = TODO()

val CSSM_CRLGROUP_PARSED_CRL: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_BER: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_BLOOM: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_DER: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_CRL_ENCODING_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_COMPLEX: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_LAST: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_OID_NAMED: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_CRL_PARSE_FORMAT_TUPLE: kotlin.UInt
    get() = TODO()

val CSSM_CRL_TYPE_MULTIPLE: kotlin.UInt
    get() = TODO()

val CSSM_CRL_TYPE_SPKI: kotlin.UInt
    get() = TODO()

val CSSM_CRL_TYPE_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_CRL_TYPE_X_509v1: kotlin.UInt
    get() = TODO()

val CSSM_CRL_TYPE_X_509v2: kotlin.UInt
    get() = TODO()

val CSSM_CSP_BASE_CSP_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CSP_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CSP_HARDWARE: kotlin.UInt
    get() = TODO()

val CSSM_CSP_HYBRID: kotlin.UInt
    get() = TODO()

val CSSM_CSP_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CSP_RDR_EXISTS: kotlin.UInt
    get() = TODO()

val CSSM_CSP_RDR_HW: kotlin.UInt
    get() = TODO()

val CSSM_CSP_RDR_TOKENPRESENT: kotlin.UInt
    get() = TODO()

val CSSM_CSP_SOFTWARE: kotlin.UInt
    get() = TODO()

val CSSM_CSP_STORES_CERTIFICATES: kotlin.UInt
    get() = TODO()

val CSSM_CSP_STORES_GENERIC: kotlin.UInt
    get() = TODO()

val CSSM_CSP_STORES_PRIVATE_KEYS: kotlin.UInt
    get() = TODO()

val CSSM_CSP_STORES_PUBLIC_KEYS: kotlin.UInt
    get() = TODO()

val CSSM_CSP_STORES_SESSION_KEYS: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_CLOCK_EXISTS: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_LOGIN_REQUIRED: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_PRIVATE_KEY_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_PROT_AUTHENTICATION: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_RNG: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_SESSION_KEY_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_USER_PIN_EXPIRED: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_USER_PIN_INITIALIZED: kotlin.UInt
    get() = TODO()

val CSSM_CSP_TOK_WRITE_PROTECTED: kotlin.UInt
    get() = TODO()

val CSSM_CSSM_BASE_CSSM_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CSSM_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CSSM_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_CUSTOM_COMMON_ERROR_EXTENT: kotlin.UInt
    get() = TODO()

val CSSM_DB_ACCESS_PRIVILEGED: kotlin.UInt
    get() = TODO()

val CSSM_DB_ACCESS_READ: kotlin.UInt
    get() = TODO()

val CSSM_DB_ACCESS_RESET: kotlin.UInt
    get() = TODO()

val CSSM_DB_ACCESS_WRITE: kotlin.UInt
    get() = TODO()

val CSSM_DB_AND: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_BIG_NUM: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_BLOB: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_COMPLEX: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_MULTI_UINT32: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_REAL: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_SINT32: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_STRING: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_TIME_DATE: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_FORMAT_UINT32: kotlin.UInt
    get() = TODO()

const val CSSM_DB_ATTRIBUTE_MDS_END: kotlin.Int = 0

const val CSSM_DB_ATTRIBUTE_MDS_START: kotlin.Int = 0

val CSSM_DB_ATTRIBUTE_NAME_AS_INTEGER: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_NAME_AS_OID: kotlin.UInt
    get() = TODO()

val CSSM_DB_ATTRIBUTE_NAME_AS_STRING: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_OWNER: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_PRIVACY: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_REVOKED: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_SIGNING: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_SYSTEM: kotlin.UInt
    get() = TODO()

val CSSM_DB_CERT_USE_TRUSTED: kotlin.UInt
    get() = TODO()

val CSSM_DB_CONTAINS: kotlin.UInt
    get() = TODO()

val CSSM_DB_CONTAINS_FINAL_SUBSTRING: kotlin.UInt
    get() = TODO()

val CSSM_DB_CONTAINS_INITIAL_SUBSTRING: kotlin.UInt
    get() = TODO()

val CSSM_DB_DATASTORES_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_DB_EQUAL: kotlin.UInt
    get() = TODO()

val CSSM_DB_FILESYSTEMSCAN_MODE: kotlin.UInt
    get() = TODO()

val CSSM_DB_GREATER_THAN: kotlin.UInt
    get() = TODO()

val CSSM_DB_INDEX_NONUNIQUE: kotlin.UInt
    get() = TODO()

val CSSM_DB_INDEX_ON_ATTRIBUTE: kotlin.UInt
    get() = TODO()

val CSSM_DB_INDEX_ON_RECORD: kotlin.UInt
    get() = TODO()

val CSSM_DB_INDEX_ON_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_DB_INDEX_UNIQUE: kotlin.UInt
    get() = TODO()

val CSSM_DB_LESS_THAN: kotlin.UInt
    get() = TODO()

val CSSM_DB_MODIFY_ATTRIBUTE_ADD: kotlin.UInt
    get() = TODO()

val CSSM_DB_MODIFY_ATTRIBUTE_DELETE: kotlin.UInt
    get() = TODO()

val CSSM_DB_MODIFY_ATTRIBUTE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_DB_MODIFY_ATTRIBUTE_REPLACE: kotlin.UInt
    get() = TODO()

val CSSM_DB_NONE: kotlin.UInt
    get() = TODO()

val CSSM_DB_NOT_EQUAL: kotlin.UInt
    get() = TODO()

val CSSM_DB_OR: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_APP_DEFINED_END: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_APP_DEFINED_START: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_OPEN_GROUP_END: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_OPEN_GROUP_START: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_SCHEMA_END: kotlin.UInt
    get() = TODO()

val CSSM_DB_RECORDTYPE_SCHEMA_START: kotlin.UInt
    get() = TODO()

const val CSSM_DB_RELATIONID_MDS_END: kotlin.Int = 0

const val CSSM_DB_RELATIONID_MDS_START: kotlin.Int = 0

val CSSM_DB_TRANSACTIONAL_MODE: kotlin.UInt
    get() = TODO()

val CSSM_DL_BASE_DL_ERROR: kotlin.Int
    get() = TODO()

val CSSM_DL_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_DL_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_ALL_KEYS: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_ANY: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_APPLESHARE_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_CERT: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_CRL: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_EXTENDED_ATTRIBUTE: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_GENERIC: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_GENERIC_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_INTERNET_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_METADATA: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_POLICY: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_PRIVATE_KEY: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_PUBLIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_SYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_UNLOCK_REFERRAL: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_USER_TRUST: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_X509_CERTIFICATE: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_RECORD_X509_CRL: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_SCHEMA_ATTRIBUTES: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_SCHEMA_INDEXES: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_SCHEMA_INFO: kotlin.UInt
    get() = TODO()

val CSSM_DL_DB_SCHEMA_PARSING_MODULE: kotlin.UInt
    get() = TODO()

val CSSM_DL_FFS: kotlin.UInt
    get() = TODO()

val CSSM_DL_LDAP: kotlin.UInt
    get() = TODO()

val CSSM_DL_MEMORY: kotlin.UInt
    get() = TODO()

val CSSM_DL_ODBC: kotlin.UInt
    get() = TODO()

val CSSM_DL_PKCS11: kotlin.UInt
    get() = TODO()

val CSSM_DL_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_DL_REMOTEDIR: kotlin.UInt
    get() = TODO()

val CSSM_DL_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_ELAPSED_TIME_COMPLETE: kotlin.Int
    get() = TODO()

val CSSM_ELAPSED_TIME_UNKNOWN: kotlin.Int
    get() = TODO()

val CSSM_ERRCODE_ACL_ADD_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_BASE_CERTS_NOT_SUPPORTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_CHALLENGE_CALLBACK_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_CHANGE_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_DELETE_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_ENTRY_TAG_NOT_FOUND: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_REPLACE_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_ACL_SUBJECT_TYPE_NOT_SUPPORTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_CRL_ALREADY_SIGNED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_DEVICE_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_DEVICE_RESET: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_FUNCTION_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_FUNCTION_NOT_IMPLEMENTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INCOMPATIBLE_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INSUFFICIENT_CLIENT_IDENTIFICATION: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INTERNAL_ERROR: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACCESS_CREDENTIALS: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACL_BASE_CERTS: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACL_CHALLENGE_CALLBACK: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACL_EDIT_MODE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACL_ENTRY_TAG: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_ACL_SUBJECT_VALUE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_AC_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CERTGROUP_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CERT_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CL_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CONTEXT_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CRL_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CRYPTO_DATA: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_CSP_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_DATA: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_DB_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_DB_LIST: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_DB_LIST_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_DL_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_FIELD_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_GUID: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_INPUT_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_KR_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_NETWORK_ADDR: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_NEW_ACL_ENTRY: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_NEW_ACL_OWNER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_NUMBER_OF_FIELDS: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_OUTPUT_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_PASSTHROUGH_ID: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_POINTER: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_SAMPLE_VALUE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_INVALID_TP_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_IN_DARK_WAKE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_MDS_ERROR: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_MEMORY_ERROR: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_MODULE_MANIFEST_VERIFY_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_NO_USER_INTERACTION: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OBJECT_ACL_NOT_SUPPORTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OBJECT_ACL_REQUIRED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OBJECT_MANIP_AUTH_DENIED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OBJECT_USE_AUTH_DENIED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OPERATION_AUTH_DENIED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_OS_ACCESS_DENIED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_PRIVILEGE_NOT_GRANTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_SAMPLE_VALUE_NOT_SUPPORTED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_SELF_CHECK_FAILED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_SERVICE_NOT_AVAILABLE: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_UNKNOWN_FORMAT: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_UNKNOWN_TAG: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_USER_CANCELED: kotlin.UInt
    get() = TODO()

val CSSM_ERRCODE_VERIFICATION_FAILURE: kotlin.UInt
    get() = TODO()

val CSSM_ERRORCODE_COMMON_EXTENT: kotlin.UInt
    get() = TODO()

val CSSM_ERRORCODE_CUSTOM_OFFSET: kotlin.UInt
    get() = TODO()

val CSSM_ERRORCODE_MODULE_EXTENT: kotlin.UInt
    get() = TODO()

val CSSM_ESTIMATED_TIME_UNKNOWN: kotlin.Int
    get() = TODO()

val CSSM_EVIDENCE_FORM_APPLE_CERTGROUP: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_APPLE_CERT_INFO: kotlin.UInt
    get() = TODO()

const val CSSM_EVIDENCE_FORM_APPLE_CUSTOM: kotlin.UInt = 0u

val CSSM_EVIDENCE_FORM_APPLE_HEADER: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CERT: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CERT_ID: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CRL: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CRL_ID: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CRL_NEXTTIME: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_CRL_THISTIME: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_POLICYINFO: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_TUPLEGROUP: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_UNSPECIFIC: kotlin.UInt
    get() = TODO()

val CSSM_EVIDENCE_FORM_VERIFIER_TIME: kotlin.UInt
    get() = TODO()

val CSSM_FALSE: kotlin.UInt
    get() = TODO()

val CSSM_FEE_CURVE_TYPE_ANSI_X9_62: kotlin.UInt
    get() = TODO()

val CSSM_FEE_CURVE_TYPE_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_FEE_CURVE_TYPE_MONTGOMERY: kotlin.UInt
    get() = TODO()

val CSSM_FEE_CURVE_TYPE_WEIERSTRASS: kotlin.UInt
    get() = TODO()

val CSSM_FEE_PRIME_TYPE_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_FEE_PRIME_TYPE_FEE: kotlin.UInt
    get() = TODO()

val CSSM_FEE_PRIME_TYPE_GENERAL: kotlin.UInt
    get() = TODO()

val CSSM_FEE_PRIME_TYPE_MERSENNE: kotlin.UInt
    get() = TODO()

val CSSM_FIELDVALUE_COMPLEX_DATA_TYPE: kotlin.UInt
    get() = TODO()

val CSSM_HINT_ADDRESS_APP: kotlin.UInt
    get() = TODO()

val CSSM_HINT_ADDRESS_SP: kotlin.UInt
    get() = TODO()

const val CSSM_HINT_CALLBACK: kotlin.Int = 0

val CSSM_HINT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_INVALID_HANDLE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_ALWAYS_SENSITIVE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_EXTRACTABLE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_MODIFIABLE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_NEVER_EXTRACTABLE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_PARTIAL: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_PERMANENT: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_PRIVATE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_PUBLIC_KEY_ENCRYPT: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_RETURN_DATA: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_RETURN_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_RETURN_NONE: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_RETURN_REF: kotlin.UInt
    get() = TODO()

val CSSM_KEYATTR_SENSITIVE: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_OTHER: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_BSAFE: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_CCA: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_FIPS186: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_MSCAPI: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_OCTET_STRING: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_OPENSSH: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_OPENSSH2: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_OPENSSL: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_OTHER: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_PGP: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_PKCS1: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_PKCS3: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_PKCS8: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_SPKI: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_VENDOR_DEFINED: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_RAW_FORMAT_X509: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_REFERENCE: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_REF_FORMAT_INTEGER: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_REF_FORMAT_OTHER: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_REF_FORMAT_SPKI: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_REF_FORMAT_STRING: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_APPLE_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_MSCAPI: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_OPENSSH1: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_OPENSSL: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_OTHER: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_PKCS7: kotlin.UInt
    get() = TODO()

val CSSM_KEYBLOB_WRAPPED_FORMAT_PKCS8: kotlin.UInt
    get() = TODO()

val CSSM_KEYCLASS_OTHER: kotlin.UInt
    get() = TODO()

val CSSM_KEYCLASS_PRIVATE_KEY: kotlin.UInt
    get() = TODO()

val CSSM_KEYCLASS_PUBLIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_KEYCLASS_SECRET_PART: kotlin.UInt
    get() = TODO()

val CSSM_KEYCLASS_SESSION_KEY: kotlin.UInt
    get() = TODO()

val CSSM_KEYHEADER_VERSION: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_ANY: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_DECRYPT: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_DERIVE: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_ENCRYPT: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_SIGN: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_SIGN_RECOVER: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_UNWRAP: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_VERIFY: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_VERIFY_RECOVER: kotlin.UInt
    get() = TODO()

val CSSM_KEYUSE_WRAP: kotlin.UInt
    get() = TODO()

val CSSM_KEY_HIERARCHY_EXPORT: kotlin.UInt
    get() = TODO()

val CSSM_KEY_HIERARCHY_INTEG: kotlin.UInt
    get() = TODO()

val CSSM_KEY_HIERARCHY_NONE: kotlin.UInt
    get() = TODO()

val CSSM_KR_BASE_ERROR: kotlin.Int
    get() = TODO()

const val CSSM_KR_DROP_WORKFACTOR: kotlin.Int = 0

const val CSSM_KR_ENT: kotlin.Int = 0

const val CSSM_KR_ENT_POLICY: kotlin.Int = 0

const val CSSM_KR_INDIV: kotlin.Int = 0

const val CSSM_KR_INDIV_POLICY: kotlin.Int = 0

const val CSSM_KR_LE: kotlin.Int = 0

const val CSSM_KR_LE_MAN: kotlin.Int = 0

const val CSSM_KR_LE_MAN_POLICY: kotlin.Int = 0

const val CSSM_KR_LE_USE: kotlin.Int = 0

const val CSSM_KR_LE_USE_POLICY: kotlin.Int = 0

const val CSSM_KR_OPTIMIZE: kotlin.Int = 0

val CSSM_KR_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_LIST_ELEMENT_DATUM: kotlin.UInt
    get() = TODO()

val CSSM_LIST_ELEMENT_SUBLIST: kotlin.UInt
    get() = TODO()

val CSSM_LIST_ELEMENT_WORDID: kotlin.UInt
    get() = TODO()

val CSSM_LIST_TYPE_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_LIST_TYPE_SEXPR: kotlin.UInt
    get() = TODO()

val CSSM_LIST_TYPE_UNKNOWN: kotlin.UInt
    get() = TODO()

const val CSSM_MANAGER_REPLY: kotlin.Int = 0

const val CSSM_MANAGER_SERVICE_REQUEST: kotlin.Int = 0

val CSSM_MDS_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_MDS_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_MODULE_STRING_SIZE: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_CMP: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_CMPS: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_FTP: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_FTPS: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_LDAP: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_LDAPNS: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_LDAPS: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_NONE: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_OCSP: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_UNSPECIFIED: kotlin.UInt
    get() = TODO()

val CSSM_NET_PROTO_X500DAP: kotlin.UInt
    get() = TODO()

val CSSM_NOTIFY_FAULT: kotlin.UInt
    get() = TODO()

val CSSM_NOTIFY_INSERT: kotlin.UInt
    get() = TODO()

val CSSM_NOTIFY_REMOVE: kotlin.UInt
    get() = TODO()

val CSSM_OK: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_ALTERNATE: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_APPLE_SSLv2: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_CIPHERSTEALING: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_CUSTOM: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_FF: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_NONE: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_ONE: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_PKCS1: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_PKCS5: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_PKCS7: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_RANDOM: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_SIGRAW: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_VENDOR_DEFINED: kotlin.UInt
    get() = TODO()

val CSSM_PADDING_ZERO: kotlin.UInt
    get() = TODO()

val CSSM_PKCS5_PBKDF2_PRF_HMAC_SHA1: kotlin.UInt
    get() = TODO()

val CSSM_PKCS_OAEP_MGF1_MD5: kotlin.UInt
    get() = TODO()

val CSSM_PKCS_OAEP_MGF1_SHA1: kotlin.UInt
    get() = TODO()

val CSSM_PKCS_OAEP_MGF_NONE: kotlin.UInt
    get() = TODO()

val CSSM_PKCS_OAEP_PSOURCE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_PKCS_OAEP_PSOURCE_Pspecified: kotlin.UInt
    get() = TODO()

val CSSM_PRIVILEGE_SCOPE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_PRIVILEGE_SCOPE_PROCESS: kotlin.UInt
    get() = TODO()

val CSSM_PRIVILEGE_SCOPE_THREAD: kotlin.UInt
    get() = TODO()

val CSSM_PVC_APP: kotlin.UInt
    get() = TODO()

val CSSM_PVC_NONE: kotlin.UInt
    get() = TODO()

val CSSM_PVC_SP: kotlin.UInt
    get() = TODO()

val CSSM_QUERY_RETURN_DATA: kotlin.UInt
    get() = TODO()

val CSSM_QUERY_SIZELIMIT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_QUERY_TIMELIMIT_NONE: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_ASYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_COMMENT: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_HASHED_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_KEYBAG_KEY: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_KEYCHAIN_CHANGE_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_KEYCHAIN_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_KEYCHAIN_PROMPT: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PREAUTH: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PROCESS: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PROMPTED_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PROMPTED_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PROTECTED_BIOMETRIC: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_PROTECTED_PASSWORD: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_RETRY_ID: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_SIGNED_NONCE: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_SIGNED_SECRET: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_SYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_SAMPLE_TYPE_THRESHOLD: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_AC: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_CL: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_CSP: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_CSSM: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_DL: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_KR: kotlin.UInt
    get() = TODO()

val CSSM_SERVICE_TP: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_ALLOW_EXPIRED: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_ALLOW_EXPIRED_ROOT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_CRL_SUFFICIENT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_DEFAULT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_FETCH_CERT_FROM_NET: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_FETCH_CRL_FROM_NET: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_IMPLICIT_ANCHORS: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_LEAF_IS_CA: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_REQUIRE_CRL_IF_PRESENT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_REQUIRE_CRL_PER_CERT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_REQUIRE_REV_PER_CERT: kotlin.UInt
    get() = TODO()

val CSSM_TP_ACTION_TRUST_SETTINGS: kotlin.UInt
    get() = TODO()

const val CSSM_TP_APPLE_EVIDENCE_VERSION: kotlin.Int = 0

val CSSM_TP_AUTHORITY_REQUEST_CERTISSUE: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTNOTARIZE: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTRESUME: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTREVOKE: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTSUSPEND: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTUSERECOVER: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CERTVERIFY: kotlin.UInt
    get() = TODO()

val CSSM_TP_AUTHORITY_REQUEST_CRLISSUE: kotlin.UInt
    get() = TODO()

val CSSM_TP_BASE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_TP_BASE_TP_ERROR: kotlin.Int
    get() = TODO()

val CSSM_TP_CERTCHANGE_HOLD: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_NOT_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_OK: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_OKWITHNEWTIME: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_AFFILIATIONCHANGE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_CACOMPROMISE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_CEASEOPERATION: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_HOLDRELEASE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_KEYCOMPROMISE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_SUPERCEDED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_SUSPECTEDCOMPROMISE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REASON_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REJECTED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_RELEASE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_REVOKE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTCHANGE_WRONGCA: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_NOT_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_OK: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_OKWITHCERTMODS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_OKWITHSERVICEMODS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_REJECTED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTISSUE_WILL_BE_REVOKED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_NOT_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_OK: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_OKWITHOUTFIELDS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_OKWITHSERVICEMODS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_REJECTED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTNOTARIZE_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTRECLAIM_NOMATCH: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTRECLAIM_NOT_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTRECLAIM_OK: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTRECLAIM_REJECTED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTRECLAIM_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_EXPIRED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_AUTHORITY: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_BASIC_CONSTRAINTS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_CERTGROUP: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_CERT_VALUE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_CRL_DIST_PT: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_NAME_TREE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_POLICY: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_POLICY_IDS: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_INVALID_SIGNATURE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_NOT_VALID_YET: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_REVOKED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_SUSPENDED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_UNKNOWN_CRITICAL_EXT: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERTVERIFY_VALID: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERT_DIR_UPDATE: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERT_NOTIFY_RENEW: kotlin.UInt
    get() = TODO()

val CSSM_TP_CERT_PUBLISH: kotlin.UInt
    get() = TODO()

val CSSM_TP_CONFIRM_ACCEPT: kotlin.UInt
    get() = TODO()

val CSSM_TP_CONFIRM_REJECT: kotlin.UInt
    get() = TODO()

val CSSM_TP_CONFIRM_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_INVALID_DOMAIN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_NOT_AUTHORIZED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_NOT_CURRENT: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_OK: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_REJECTED: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_STATUS_UNKNOWN: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRLISSUE_UNKNOWN_IDENTIFIER: kotlin.UInt
    get() = TODO()

val CSSM_TP_CRL_DISTRIBUTE: kotlin.UInt
    get() = TODO()

val CSSM_TP_FORM_TYPE_GENERIC: kotlin.UInt
    get() = TODO()

val CSSM_TP_FORM_TYPE_REGISTRATION: kotlin.UInt
    get() = TODO()

val CSSM_TP_KEY_ARCHIVE: kotlin.UInt
    get() = TODO()

val CSSM_TP_PRIVATE_ERROR: kotlin.Int
    get() = TODO()

val CSSM_TP_STOP_ON_FIRST_FAIL: kotlin.UInt
    get() = TODO()

val CSSM_TP_STOP_ON_FIRST_PASS: kotlin.UInt
    get() = TODO()

val CSSM_TP_STOP_ON_NONE: kotlin.UInt
    get() = TODO()

val CSSM_TP_STOP_ON_POLICY: kotlin.UInt
    get() = TODO()

val CSSM_TRUE: kotlin.UInt
    get() = TODO()

val CSSM_USEE_AUTHENTICATION: kotlin.UInt
    get() = TODO()

val CSSM_USEE_DOMESTIC: kotlin.UInt
    get() = TODO()

val CSSM_USEE_FINANCIAL: kotlin.UInt
    get() = TODO()

val CSSM_USEE_INSURANCE: kotlin.UInt
    get() = TODO()

val CSSM_USEE_KEYEXCH: kotlin.UInt
    get() = TODO()

val CSSM_USEE_KRENT: kotlin.UInt
    get() = TODO()

val CSSM_USEE_KRLE: kotlin.UInt
    get() = TODO()

val CSSM_USEE_LAST: kotlin.UInt
    get() = TODO()

val CSSM_USEE_MEDICAL: kotlin.UInt
    get() = TODO()

val CSSM_USEE_NONE: kotlin.UInt
    get() = TODO()

val CSSM_USEE_SSL: kotlin.UInt
    get() = TODO()

val CSSM_USEE_WEAK: kotlin.UInt
    get() = TODO()

val CSSM_VALUE_NOT_AVAILABLE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_A: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ACL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ALPHA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ASYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_B: kotlin.Int
    get() = TODO()

val CSSM_WORDID_BER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_BINARY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_BIOMETRIC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_C: kotlin.Int
    get() = TODO()

val CSSM_WORDID_CANCELED: kotlin.Int
    get() = TODO()

val CSSM_WORDID_CERT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_COMMENT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_CRL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_CUSTOM: kotlin.Int
    get() = TODO()

val CSSM_WORDID_D: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DATE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DBS_CREATE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DBS_DELETE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DB_DELETE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DB_EXEC_STORED_QUERY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DB_INSERT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DB_MODIFY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DB_READ: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DECRYPT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DELETE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DELTA_CRL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DERIVE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DISPLAY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DO: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_DSA_SHA1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_E: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ELGAMAL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ENCRYPT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ENTRY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_EXPORT_CLEAR: kotlin.Int
    get() = TODO()

val CSSM_WORDID_EXPORT_WRAPPED: kotlin.Int
    get() = TODO()

val CSSM_WORDID_G: kotlin.Int
    get() = TODO()

val CSSM_WORDID_GE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_GENKEY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_HASH: kotlin.Int
    get() = TODO()

val CSSM_WORDID_HASHED_PASSWORD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_HASHED_SUBJECT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_HAVAL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_IBCHASH: kotlin.Int
    get() = TODO()

val CSSM_WORDID_IMPORT_CLEAR: kotlin.Int
    get() = TODO()

val CSSM_WORDID_IMPORT_WRAPPED: kotlin.Int
    get() = TODO()

val CSSM_WORDID_INTEL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ISSUER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ISSUER_INFO: kotlin.Int
    get() = TODO()

val CSSM_WORDID_KEA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_KEY: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_KEYBAG_KEY: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_KEYCHAIN_CHANGE_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_KEYCHAIN_LOCK: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_KEYCHAIN_PROMPT: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_KEYHOLDER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_K_OF_N: kotlin.Int
    get() = TODO()

val CSSM_WORDID_L: kotlin.Int
    get() = TODO()

val CSSM_WORDID_LE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_LOGIN: kotlin.Int
    get() = TODO()

val CSSM_WORDID_LOGIN_NAME: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MAC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MD2: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MD2WITHRSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MD4: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MD5: kotlin.Int
    get() = TODO()

val CSSM_WORDID_MD5WITHRSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_N: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NAME: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NDR: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NHASH: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NOT_AFTER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NOT_BEFORE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NULL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_NUMERIC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_OBJECT_HASH: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ONE_TIME: kotlin.Int
    get() = TODO()

val CSSM_WORDID_ONLINE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_OWNER: kotlin.Int
    get() = TODO()

val CSSM_WORDID_P: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PAM_NAME: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PARTITION: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_PASSWORD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PGP: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PIN: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_PREAUTH: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_PREAUTH_SOURCE: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_PREFIX: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PRIVATE_KEY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROCESS: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_PROMPTED_BIOMETRIC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROMPTED_PASSWORD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROPAGATE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROTECTED_BIOMETRIC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROTECTED_PASSWORD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PROTECTED_PIN: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PUBLIC_KEY: kotlin.Int
    get() = TODO()

val CSSM_WORDID_PUBLIC_KEY_FROM_CERT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_Q: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RANGE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_REVAL: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RIPEMAC: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RIPEMD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RIPEMD160: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_ISO9796: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS1_MD5: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS1_SHA1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS1_SIG: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS_MD5: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_PKCS_SHA1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_RSA_RAW: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SDSIV1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SEQUENCE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SET: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SEXPR: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SHA1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SHA1WITHDSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SHA1WITHECDSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SHA1WITHRSA: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SIGN: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SIGNATURE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SIGNED_NONCE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SIGNED_SECRET: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SPKI: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SUBJECT: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SUBJECT_INFO: kotlin.Int
    get() = TODO()

val CSSM_WORDID_SYMMETRIC_KEY: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_SYSTEM: kotlin.UInt
    get() = TODO()

val CSSM_WORDID_TAG: kotlin.Int
    get() = TODO()

val CSSM_WORDID_THRESHOLD: kotlin.Int
    get() = TODO()

val CSSM_WORDID_TIME: kotlin.Int
    get() = TODO()

val CSSM_WORDID_URI: kotlin.Int
    get() = TODO()

val CSSM_WORDID_VENDOR_END: kotlin.Int
    get() = TODO()

val CSSM_WORDID_VENDOR_START: kotlin.Int
    get() = TODO()

val CSSM_WORDID_VERSION: kotlin.Int
    get() = TODO()

val CSSM_WORDID_X509V1: kotlin.Int
    get() = TODO()

val CSSM_WORDID_X509V2: kotlin.Int
    get() = TODO()

val CSSM_WORDID_X509V3: kotlin.Int
    get() = TODO()

val CSSM_WORDID_X509_ATTRIBUTE: kotlin.Int
    get() = TODO()

val CSSM_WORDID_X9_ATTRIBUTE: kotlin.Int
    get() = TODO()

val CSSM_WORDID__FIRST_UNUSED: kotlin.UInt
    get() = TODO()

val CSSM_WORDID__NLU_: kotlin.Int
    get() = TODO()

val CSSM_WORDID__RESERVED_1: kotlin.UInt
    get() = TODO()

val CSSM_WORDID__STAR_: kotlin.Int
    get() = TODO()

val CSSM_WORDID__UNK_: kotlin.Int
    get() = TODO()

val CSSM_X509_DATAFORMAT_ENCODED: platform.Security.extension_data_format /* = kotlin.UInt */
    get() = TODO()

val CSSM_X509_DATAFORMAT_PAIR: platform.Security.extension_data_format /* = kotlin.UInt */
    get() = TODO()

val CSSM_X509_DATAFORMAT_PARSED: platform.Security.extension_data_format /* = kotlin.UInt */
    get() = TODO()

const val CSSM_X509_OPTION_NOT_PRESENT: kotlin.Int = 0

const val CSSM_X509_OPTION_PRESENT: kotlin.Int = 0

val GNT_DNSName: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_DirectoryName: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_EdiPartyName: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_IPAddress: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_OtherName: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_RFC822Name: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_RegisteredID: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_URI: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

val GNT_X400Address: platform.Security.__CE_GeneralNameType /* = kotlin.UInt */
    get() = TODO()

const val INTEL_CDSASECURITY_LENGTH: kotlin.Int = 0

const val INTEL_CERT_AND_PRIVATE_KEY_2_0_LENGTH: kotlin.Int = 0

const val INTEL_LENGTH: kotlin.Int = 0

const val INTEL_SEC_ALGS_LENGTH: kotlin.Int = 0

const val INTEL_SEC_FORMATS_LENGTH: kotlin.Int = 0

const val INTEL_SEC_OBJECT_BUNDLE_LENGTH: kotlin.Int = 0

const val INTEL_X509V2_CRL_R08_LENGTH: kotlin.Int = 0

const val INTEL_X509V3_CERT_PRIVATE_EXTENSIONS_LENGTH: kotlin.Int = 0

const val INTEL_X509V3_CERT_R08_LENGTH: kotlin.Int = 0

const val INTEL_X509V3_SIGN_R08_LENGTH: kotlin.Int = 0

const val INTEL_X509_C_DATATYPE: kotlin.Int = 0

const val INTEL_X509_LDAPSTRING_DATATYPE: kotlin.Int = 0

const val MDS_CDSAATTR_ACLSUBJECTTYPES: kotlin.Int = 0

const val MDS_CDSAATTR_ALG_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_ATTRIBUTE_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_ATTRIBUTE_VALUE: kotlin.Int = 0

const val MDS_CDSAATTR_AUTHORITY_REQUEST_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_AUTHTAGS: kotlin.Int = 0

const val MDS_CDSAATTR_BUNDLE_TYPEFORMAT: kotlin.Int = 0

const val MDS_CDSAATTR_CDSAVERSION: kotlin.Int = 0

const val MDS_CDSAATTR_CERT_CLASSNAME: kotlin.Int = 0

const val MDS_CDSAATTR_CERT_FIELDNAMES: kotlin.Int = 0

const val MDS_CDSAATTR_CERT_TYPEFORMAT: kotlin.Int = 0

const val MDS_CDSAATTR_CONJUNCTIVE_OPS: kotlin.Int = 0

const val MDS_CDSAATTR_CONTEXT_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_CRL_TYPEFORMAT: kotlin.Int = 0

const val MDS_CDSAATTR_CSP_CUSTOMFLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_CSP_FLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_CSP_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_DEFAULT_TEMPLATE_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_DESC: kotlin.Int = 0

const val MDS_CDSAATTR_DL_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_DYNAMIC_FLAG: kotlin.Int = 0

const val MDS_CDSAATTR_EMMSPECVERSION: kotlin.Int = 0

const val MDS_CDSAATTR_EMM_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_EMM_VENDOR: kotlin.Int = 0

const val MDS_CDSAATTR_EMM_VERSION: kotlin.Int = 0

const val MDS_CDSAATTR_GROUP_ID: kotlin.Int = 0

const val MDS_CDSAATTR_INTERFACE_GUID: kotlin.Int = 0

const val MDS_CDSAATTR_MANIFEST: kotlin.Int = 0

const val MDS_CDSAATTR_MODULE_ID: kotlin.Int = 0

const val MDS_CDSAATTR_MODULE_NAME: kotlin.Int = 0

const val MDS_CDSAATTR_MULTITHREAD_FLAG: kotlin.Int = 0

const val MDS_CDSAATTR_NATIVE_SERVICES: kotlin.Int = 0

const val MDS_CDSAATTR_OID: kotlin.Int = 0

const val MDS_CDSAATTR_PATH: kotlin.Int = 0

const val MDS_CDSAATTR_POLICY_STMT: kotlin.Int = 0

const val MDS_CDSAATTR_PRODUCT_CUSTOMFLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_PRODUCT_DESC: kotlin.Int = 0

const val MDS_CDSAATTR_PRODUCT_FLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_PRODUCT_VENDOR: kotlin.Int = 0

const val MDS_CDSAATTR_PRODUCT_VERSION: kotlin.Int = 0

const val MDS_CDSAATTR_PROTOCOL: kotlin.Int = 0

const val MDS_CDSAATTR_QUERY_LIMITS: kotlin.Int = 0

const val MDS_CDSAATTR_READER_CUSTOMFLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_READER_DESC: kotlin.Int = 0

const val MDS_CDSAATTR_READER_FLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_READER_FWVERSION: kotlin.Int = 0

const val MDS_CDSAATTR_READER_SERIALNUMBER: kotlin.Int = 0

const val MDS_CDSAATTR_READER_VENDOR: kotlin.Int = 0

const val MDS_CDSAATTR_READER_VERSION: kotlin.Int = 0

const val MDS_CDSAATTR_RELATIONAL_OPS: kotlin.Int = 0

const val MDS_CDSAATTR_REQCREDENTIALS: kotlin.Int = 0

const val MDS_CDSAATTR_RETRIEVALMODE: kotlin.Int = 0

const val MDS_CDSAATTR_ROOTCERT: kotlin.Int = 0

const val MDS_CDSAATTR_ROOTCERT_TYPEFORMAT: kotlin.Int = 0

const val MDS_CDSAATTR_SAMPLETYPES: kotlin.Int = 0

const val MDS_CDSAATTR_SC_CUSTOMFLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_SC_DESC: kotlin.Int = 0

const val MDS_CDSAATTR_SC_FLAGS: kotlin.Int = 0

const val MDS_CDSAATTR_SC_FWVERSION: kotlin.Int = 0

const val MDS_CDSAATTR_SC_SERIALNUMBER: kotlin.Int = 0

const val MDS_CDSAATTR_SC_VENDOR: kotlin.Int = 0

const val MDS_CDSAATTR_SC_VERSION: kotlin.Int = 0

const val MDS_CDSAATTR_SERVICE_MASK: kotlin.Int = 0

const val MDS_CDSAATTR_SERVICE_TYPE: kotlin.Int = 0

const val MDS_CDSAATTR_SSID: kotlin.Int = 0

const val MDS_CDSAATTR_STANDARD_DESC: kotlin.Int = 0

const val MDS_CDSAATTR_STANDARD_VERSION: kotlin.Int = 0

const val MDS_CDSAATTR_TEMPLATE_FIELD_NAMES: kotlin.Int = 0

const val MDS_CDSAATTR_USEETAG: kotlin.Int = 0

const val MDS_CDSAATTR_USEE_TAGS: kotlin.Int = 0

const val MDS_CDSAATTR_VALUE: kotlin.Int = 0

const val MDS_CDSAATTR_VENDOR: kotlin.Int = 0

const val MDS_CDSAATTR_XLATIONTYPEFORMAT: kotlin.Int = 0

const val MDS_CDSADIR_AC_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_AC_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CL_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CL_ENCAPSULATED_PRODUCT_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CL_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CL_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_COMMON_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_COMMON_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CSP_CAPABILITY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CSP_CAPABILITY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CSP_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CSP_ENCAPSULATED_PRODUCT_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CSP_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CSP_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CSP_SC_INFO_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CSP_SC_INFO_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_CSSM_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_CSSM_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_DL_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_DL_ENCAPSULATED_PRODUCT_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_DL_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_DL_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_EMM_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_EMM_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_EMM_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_EMM_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_KRMM_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_KR_PRIMARY_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_MDS_SCHEMA_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_MDS_SCHEMA_INDEXES: kotlin.Int = 0

const val MDS_CDSADIR_MDS_SCHEMA_RELATIONS: kotlin.Int = 0

const val MDS_CDSADIR_NUM_RELATIONS: kotlin.Int = 0

const val MDS_CDSADIR_SCHEMA_ATTRIBUTES_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_SCHEMA_INDEXES_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_SCHEMA_RELATONS_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_TP_ENCAPSULATED_PRODUCT_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_TP_ENCAPSULATED_PRODUCT_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_TP_OIDS_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_TP_OIDS_RECORDTYPE: kotlin.Int = 0

const val MDS_CDSADIR_TP_PRIMARY_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_CDSADIR_TP_PRIMARY_RECORDTYPE: kotlin.Int = 0

val MDS_CDSA_DIRECTORY_NAME: kotlin.String
    get() = TODO()

const val MDS_CDSA_SCHEMA_START: kotlin.Int = 0

val MDS_OBJECT_DIRECTORY_NAME: kotlin.String
    get() = TODO()

const val MDS_OBJECT_NUM_ATTRIBUTES: kotlin.Int = 0

const val MDS_OBJECT_NUM_RELATIONS: kotlin.Int = 0

const val MDS_OBJECT_RECORDTYPE: kotlin.Int = 0

const val NETSCAPE_BASE_OID_LEN: kotlin.Int = 0

const val NETSCAPE_CERT_EXTEN_LENGTH: kotlin.Int = 0

const val NETSCAPE_CERT_POLICY_LENGTH: kotlin.Int = 0

const val OID_AD_LENGTH: kotlin.Int = 0

const val OID_AD_OCSP_LENGTH: kotlin.Int = 0

const val OID_ANSI_X9_42_LEN: kotlin.Int = 0

const val OID_ANSI_X9_42_NAMED_SCHEME_LEN: kotlin.Int = 0

const val OID_ANSI_X9_42_SCHEME_LEN: kotlin.Int = 0

const val OID_ANSI_X9_62_ELL_CURVE_LEN: kotlin.Int = 0

const val OID_ANSI_X9_62_LEN: kotlin.Int = 0

const val OID_ANSI_X9_62_SIG_TYPE_LEN: kotlin.Int = 0

const val OID_ATTR_TYPE_LENGTH: kotlin.Int = 0

const val OID_CERTICOM_ELL_CURVE_LEN: kotlin.Int = 0

const val OID_CERTICOM_LEN: kotlin.Int = 0

const val OID_DS: kotlin.Int = 0

const val OID_DS_LENGTH: kotlin.Int = 0

const val OID_ETSI_LENGTH: kotlin.Int = 0

const val OID_ETSI_QCS_LENGTH: kotlin.Int = 0

const val OID_EXTENSION_LENGTH: kotlin.Int = 0

const val OID_ISO_CCITT_DIR_SERVICE: kotlin.Int = 0

const val OID_ISO_IDENTIFIED_ORG: kotlin.Int = 0

const val OID_ISO_MEMBER: kotlin.Int = 0

const val OID_ISO_MEMBER_LENGTH: kotlin.Int = 0

const val OID_ISO_STANDARD: kotlin.Int = 0

const val OID_ITU_RFCDATA: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_DOMAINCOMPONENT_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_ATTRIBUTES_USERID_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_UCL_DIRECTORYPILOT_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_2342_UCL_LENGTH: kotlin.Int = 0

const val OID_ITU_RFCDATA_MEMBER_LENGTH: kotlin.Int = 0

const val OID_KERBv5_LEN: kotlin.Int = 0

const val OID_KERBv5_PKINIT_LEN: kotlin.Int = 0

const val OID_KP_LENGTH: kotlin.Int = 0

const val OID_NIST_HASHALG_LENGTH: kotlin.Int = 0

const val OID_OIW_ALGORITHM_LENGTH: kotlin.Int = 0

const val OID_OIW_LENGTH: kotlin.Int = 0

const val OID_OIW_SECSIG_LENGTH: kotlin.Int = 0

const val OID_OTHER_NAME_LENGTH: kotlin.Int = 0

const val OID_PDA_LENGTH: kotlin.Int = 0

const val OID_PE_LENGTH: kotlin.Int = 0

const val OID_PKCS_11_LENGTH: kotlin.Int = 0

const val OID_PKCS_12_LENGTH: kotlin.Int = 0

const val OID_PKCS_1_LENGTH: kotlin.Int = 0

const val OID_PKCS_3_LENGTH: kotlin.Int = 0

const val OID_PKCS_5_LENGTH: kotlin.Int = 0

const val OID_PKCS_7_LENGTH: kotlin.Int = 0

const val OID_PKCS_9_LENGTH: kotlin.Int = 0

const val OID_PKCS_LENGTH: kotlin.Int = 0

const val OID_PKIX_LENGTH: kotlin.Int = 0

const val OID_QCS_LENGTH: kotlin.Int = 0

const val OID_QT_LENGTH: kotlin.Int = 0

const val OID_RSA_ENCRYPT_LENGTH: kotlin.Int = 0

const val OID_RSA_HASH_LENGTH: kotlin.Int = 0

const val OID_RSA_LENGTH: kotlin.Int = 0

const val OID_US_LENGTH: kotlin.Int = 0

const val SEC_ASN1_ANY: kotlin.Int = 0

const val SEC_ASN1_ANY_CONTENTS: kotlin.Int = 0

const val SEC_ASN1_APPLICATION: kotlin.Int = 0

const val SEC_ASN1_BIT_STRING: kotlin.Int = 0

const val SEC_ASN1_BMP_STRING: kotlin.Int = 0

const val SEC_ASN1_BOOLEAN: kotlin.Int = 0

const val SEC_ASN1_CHOICE: kotlin.Int = 0

const val SEC_ASN1_CLASS_MASK: kotlin.Int = 0

const val SEC_ASN1_CONSTRUCTED: kotlin.Int = 0

const val SEC_ASN1_CONTEXT_SPECIFIC: kotlin.Int = 0

const val SEC_ASN1_DYNAMIC: kotlin.Int = 0

const val SEC_ASN1_EMBEDDED_PDV: kotlin.Int = 0

const val SEC_ASN1_ENUMERATED: kotlin.Int = 0

const val SEC_ASN1_EXPLICIT: kotlin.Int = 0

const val SEC_ASN1_GENERALIZED_TIME: kotlin.Int = 0

const val SEC_ASN1_GENERAL_STRING: kotlin.Int = 0

const val SEC_ASN1_GRAPHIC_STRING: kotlin.Int = 0

const val SEC_ASN1_GROUP: kotlin.Int = 0

const val SEC_ASN1_HIGH_TAG_NUMBER: kotlin.Int = 0

const val SEC_ASN1_IA5_STRING: kotlin.Int = 0

const val SEC_ASN1_INLINE: kotlin.Int = 0

const val SEC_ASN1_INNER: kotlin.Int = 0

const val SEC_ASN1_INTEGER: kotlin.Int = 0

const val SEC_ASN1_METHOD_MASK: kotlin.Int = 0

const val SEC_ASN1_NULL: kotlin.Int = 0

const val SEC_ASN1_NUMERIC_STRING: kotlin.Int = 0

const val SEC_ASN1_OBJECT_DESCRIPTOR: kotlin.Int = 0

const val SEC_ASN1_OBJECT_ID: kotlin.Int = 0

const val SEC_ASN1_OCTET_STRING: kotlin.Int = 0

const val SEC_ASN1_OPTIONAL: kotlin.Int = 0

const val SEC_ASN1_POINTER: kotlin.Int = 0

const val SEC_ASN1_PRIMITIVE: kotlin.Int = 0

const val SEC_ASN1_PRINTABLE_STRING: kotlin.Int = 0

const val SEC_ASN1_PRIVATE: kotlin.Int = 0

const val SEC_ASN1_REAL: kotlin.Int = 0

const val SEC_ASN1_SAVE: kotlin.Int = 0

const val SEC_ASN1_SEQUENCE: kotlin.Int = 0

const val SEC_ASN1_SEQUENCE_OF: kotlin.Int = 0

const val SEC_ASN1_SET: kotlin.Int = 0

const val SEC_ASN1_SET_OF: kotlin.Int = 0

const val SEC_ASN1_SIGNED_INT: kotlin.Int = 0

const val SEC_ASN1_SKIP: kotlin.Int = 0

const val SEC_ASN1_SKIP_REST: kotlin.Int = 0

const val SEC_ASN1_T61_STRING: kotlin.Int = 0

const val SEC_ASN1_TAGNUM_MASK: kotlin.Int = 0

const val SEC_ASN1_TAG_MASK: kotlin.Int = 0

const val SEC_ASN1_TELETEX_STRING: kotlin.Int = 0

const val SEC_ASN1_UNIVERSAL: kotlin.Int = 0

const val SEC_ASN1_UNIVERSAL_STRING: kotlin.Int = 0

const val SEC_ASN1_UTC_TIME: kotlin.Int = 0

const val SEC_ASN1_UTF8_STRING: kotlin.Int = 0

const val SEC_ASN1_VIDEOTEX_STRING: kotlin.Int = 0

const val SEC_ASN1_VISIBLE_STRING: kotlin.Int = 0

const val SEC_KEYCHAIN_SETTINGS_VERS1: kotlin.Int = 0

const val SEC_KEY_IMPORT_EXPORT_PARAMS_VERSION: kotlin.Int = 0

const val SEC_OS_IPHONE: kotlin.Int = 0

const val SEC_OS_OSX: kotlin.Int = 0

const val SEC_OS_OSX_INCLUDES: kotlin.Int = 0

val SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DHE_DSS_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DHE_RSA_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_DSS_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_RSA_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_anon_EXPORT_WITH_RC4_40_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_anon_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_anon_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_DH_anon_WITH_RC4_128_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_FORTEZZA_DMS_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_NO_SUCH_CIPHERSUITE: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_NULL_WITH_NULL_NULL: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_EXPORT_WITH_DES40_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_EXPORT_WITH_RC4_40_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_3DES_EDE_CBC_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_DES_CBC_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_DES_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_IDEA_CBC_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_IDEA_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_NULL_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_RC2_CBC_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_RC4_128_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val SSL_RSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

const val TIMESTAMPING_SUPPORTED: kotlin.Int = 0

val TLS_AES_128_CCM_8_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_AES_128_CCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_CHACHA20_POLY1305_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_DSS_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_NULL_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_NULL_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_PSK_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DHE_RSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_DSS_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_RSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_DH_anon_WITH_RC4_128_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_ECDSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDHE_RSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_ECDSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_RSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_anon_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_anon_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_anon_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_ECDH_anon_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_EMPTY_RENEGOTIATION_INFO_SCSV: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_NULL_WITH_NULL_NULL: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_NULL_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_NULL_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_PSK_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_256_CBC_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_NULL_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_NULL_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_PSK_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_3DES_EDE_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_128_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_128_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_128_GCM_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_256_CBC_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_256_CBC_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_AES_256_GCM_SHA384: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_NULL_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_NULL_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_NULL_SHA256: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_RC4_128_MD5: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

val TLS_RSA_WITH_RC4_128_SHA: platform.Security.SSLCipherSuite /* = kotlin.UInt */
    get() = TODO()

const val _CSSMACI_H_: kotlin.Int = 0

const val _CSSMAPI_H_: kotlin.Int = 0

const val _CSSMAPPLE_H_: kotlin.Int = 0

const val _CSSMCLI_H_: kotlin.Int = 0

const val _CSSMCONFIG_H_: kotlin.Int = 0

const val _CSSMCSPI_H_: kotlin.Int = 0

const val _CSSMDLI_H_: kotlin.Int = 0

const val _CSSMERR_H_: kotlin.Int = 0

const val _CSSMKRAPI_H_: kotlin.Int = 0

const val _CSSMKRSPI_H_: kotlin.Int = 0

const val _CSSMSPI_H_: kotlin.Int = 0

const val _CSSMTPI_H_: kotlin.Int = 0

const val _CSSMTYPE_H_: kotlin.Int = 0

const val _CSSM_H_: kotlin.Int = 0

const val _EMMSPI_H_: kotlin.Int = 0

const val _EMMTYPE_H_: kotlin.Int = 0

const val _MDS_H_: kotlin.Int = 0

const val _MDS_SCHEMA_H_: kotlin.Int = 0

const val _OIDSBASE_H_: kotlin.Int = 0

const val _OIDSCERT_H_: kotlin.Int = 0

const val _OIDSCRL_H_: kotlin.Int = 0

const val _X509DEFS_H_: kotlin.Int = 0

const val __AuthSession__: kotlin.Int = 0

const val __SEC_ENCRYPT_TRANSFORM__: kotlin.Int = 0

val callerSecuritySession: platform.Security.SecuritySessionId /* = kotlin.UInt */
    get() = TODO()

val errAuthorizationBadAddress: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationCanceled: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationDenied: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationExternalizeNotAllowed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInteractionNotAllowed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInternal: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInternalizeNotAllowed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInvalidFlags: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInvalidPointer: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInvalidRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInvalidSet: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationInvalidTag: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationSuccess: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationToolEnvironmentError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errAuthorizationToolExecuteFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBadCert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBadCertificateStatusResponse: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBadCipherSuite: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBadConfiguration: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBadRecordMac: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLBufferOverflow: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLCertExpired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLCertNotYetValid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLCertificateRequired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

const val errSSLClientAuthCompleted: platform.darwin.OSStatus /* = kotlin.Int */ = 0

val errSSLClientCertRequested: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLClientHelloReceived: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLClosedAbort: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLClosedGraceful: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLClosedNoNotify: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLConfigurationFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLConnectionRefused: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLCrypto: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLDecodeError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLDecompressFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLDecryptionFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLFatalAlert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLHandshakeFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLHostNameMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLIllegalParam: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLInappropriateFallback: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLInternal: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

const val errSSLLast: platform.darwin.OSStatus /* = kotlin.Int */ = 0

val errSSLMissingExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLModuleAttach: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLNegotiation: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLNetworkTimeout: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLNoRootCert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerAccessDenied: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerAuthCompleted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerBadCert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerBadRecordMac: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerCertExpired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerCertRevoked: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerCertUnknown: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerDecodeError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerDecompressFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerDecryptError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerDecryptionFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerExportRestriction: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerHandshakeFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerInsufficientSecurity: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerInternalError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerNoRenegotiation: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerProtocolVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerRecordOverflow: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerUnexpectedMsg: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerUnknownCA: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerUnsupportedCert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLPeerUserCancelled: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLProtocol: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLRecordOverflow: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

const val errSSLServerAuthCompleted: platform.darwin.OSStatus /* = kotlin.Int */ = 0

val errSSLSessionNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLTransportReset: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnexpectedMessage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnexpectedRecord: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnknownPSKIdentity: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnknownRootCert: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnrecognizedName: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLUnsupportedExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLWeakPeerEphemeralDHKey: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLWouldBlock: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSSLXCertChainInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecACLAddFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecACLChangeFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecACLDeleteFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecACLNotSimple: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecACLReplaceFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAddinLoadFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAddinUnloadFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAlgorithmMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAllocate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAlreadyLoggedIn: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAppleAddAppACLSubject: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAppleInvalidKeyEndDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAppleInvalidKeyStartDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecApplePublicKeyIncomplete: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAppleSSLv2Rollback: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAppleSignatureMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAttachHandleBusy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAttributeNotInContext: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecAuthFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecBadReq: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecBlockSizeMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecBufferTooSmall: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLAlreadySigned: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLBadURI: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLExpired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLNotTrusted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLNotValidYet: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLPolicyFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCRLServerDown: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSAmbiguousBundleFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadBundleFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadCallbackValue: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadDictionaryFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadDiskImageFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadFrameworkVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadLVArch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadMainExecutable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadNestedCode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadObjectFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadResource: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSBadTeamIdentifier: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSCMSTooLarge: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSCancelled: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSDBAccess: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSDBDenied: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSDSStoreSymlink: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSDbCorrupt: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSFileHardQuarantined: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSGuestInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHelperFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolContradiction: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolDedicationError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolInvalidAttribute: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolInvalidHash: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolNotProxy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolRelativePath: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolStateError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostProtocolUnrelated: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSHostReject: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInfoPlistFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInternalError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidAssociatedFileData: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidAttributeValues: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidEntitlements: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidFlags: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidObjectRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidPlatform: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidRuntimeVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidSymlink: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSInvalidTeamIdentifier: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSMultipleGuests: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNoMainExecutable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNoMatches: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNoSuchCode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNotAHost: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNotAppLike: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSNotSupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSObjectRequired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSOutdated: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSRegularFile: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSReqFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSReqInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSReqUnsupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourceDirectoryFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourceNotSupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourceRulesInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourcesInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourcesNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSResourcesNotSealed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSRevokedNotarization: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSigDBAccess: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSigDBDenied: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSignatureFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSignatureInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSignatureNotVerifiable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSignatureUnsupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSSignatureUntrusted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSStaticCodeChanged: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSStaticCodeNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSTooBig: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnimplemented: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsealedAppRoot: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsealedFrameworkRoot: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsigned: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsignedNestedCode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsupportedDigestAlgorithm: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSUnsupportedGuestAttributes: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSVetoed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSWeakResourceEnvelope: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCSWeakResourceRules: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCallbackFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCertificateCannotOperate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCertificateExpired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCertificateNotValidYet: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCertificateRevoked: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCertificateSuspended: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCodeSigningBadCertChainLength: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCodeSigningBadPathLengthConstraint: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCodeSigningDevelopment: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCodeSigningNoBasicConstraints: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCodeSigningNoExtendedKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecConversionError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCoreFoundationUnknown: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecCreateChainFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDataNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDataNotModifiable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDataTooLarge: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDatabaseLocked: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDatastoreIsOpen: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDecode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDeviceError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDeviceFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDeviceReset: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDeviceVerifyFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDiskFull: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDskFull: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDuplicateCallback: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDuplicateItem: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecDuplicateKeychain: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecEMMLoadFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecEMMUnloadFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecEndOfData: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

const val errSecErrnoBase: kotlin.Int = 0

const val errSecErrnoLimit: kotlin.Int = 0

val errSecEventNotificationCallbackNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecExtendedKeyUsageNotCritical: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecFieldSpecifiedMultiple: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecFileTooBig: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecFunctionFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecFunctionIntegrityFail: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecHostNameMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIDPFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIO: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInDarkWake: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIncompatibleDatabaseBlob: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIncompatibleFieldFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIncompatibleKeyBlob: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIncompatibleVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecIncompleteCertRevocationCheck: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInputLengthError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInsufficientClientID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInsufficientCredentials: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInteractionNotAllowed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInteractionRequired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInternalComponent: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInternalError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvaldCRLAuthority: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidACL: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAccessCredentials: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAccessRequest: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAction: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAddinFunctionTable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAlgorithm: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAlgorithmParms: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeAccessCredentials: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeBase: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeBlockSize: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeDLDBHandle: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeEffectiveBits: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeEndDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeInitVector: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeIterationCount: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeKey: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeKeyLength: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeKeyType: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeLabel: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeMode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeOutputSize: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributePadding: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributePassphrase: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributePrime: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributePrivateKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributePublicKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeRandom: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeRounds: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeSalt: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeSeed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeStartDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeSubprime: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeSymmetricKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAttributeWrappedKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAuthority: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidAuthorityKeyID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidBaseACLs: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidBundleInfo: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCRL: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCRLEncoding: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCRLGroup: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCRLIndex: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCRLType: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCallback: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCertAuthority: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCertificateGroup: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidCertificateRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidContext: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidDBList: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidDBLocation: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidData: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidDatabaseBlob: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidDigestAlgorithm: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidEncoding: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidExtendedKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidFormType: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidGUID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidHandle: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidHandleUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidIDLinkage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidIdentifier: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidIndex: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidIndexInfo: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidInputVector: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidItemRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyAttributeMask: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyBlob: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyHierarchy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyLabel: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyUsageForPolicy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeyUsageMask: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidKeychain: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidLoginName: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidModifyMode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidName: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidNetworkAddress: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidNewOwner: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidNumberOfFields: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidOutputVector: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidOwnerEdit: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPVC: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidParsingModule: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPassthroughID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPasswordRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPointer: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPolicyIdentifiers: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidPrefsDomain: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidQuery: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidReason: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidRecord: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidRequestInputs: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidRequestor: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidResponseVector: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidRoot: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSampleValue: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidScope: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSearchRef: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidServiceMask: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSignature: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidStopOnPolicy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSubServiceID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSubjectKeyID: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidSubjectName: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTimeString: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTrustSetting: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTrustSettings: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTuple: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTupleCredendtials: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidTupleGroup: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidValidityPeriod: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecInvalidValue: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecItemNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecKeyBlobTypeIncorrect: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecKeyHeaderInconsistent: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecKeyIsSensitive: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecKeySizeNotAllowed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecKeyUsageIncorrect: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecLibraryReferenceNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMDSError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMemoryError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAlgorithmParms: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeAccessCredentials: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeBase: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeBlockSize: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeDLDBHandle: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeEffectiveBits: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeEndDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeInitVector: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeIterationCount: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeKey: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeKeyLength: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeKeyType: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeLabel: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeMode: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeOutputSize: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributePadding: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributePassphrase: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributePrime: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributePrivateKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributePublicKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeRandom: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeRounds: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeSalt: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeSeed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeStartDate: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeSubprime: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeSymmetricKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingAttributeWrappedKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingEntitlement: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingRequiredExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMissingValue: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeCSRVerifyFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeFailedConsistencyCheck: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeNoRequestPending: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeRequestAlreadyPending: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeRequestQueued: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeRequestRedirected: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeServerAlreadyExists: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeServerError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeServerNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMobileMeServerServiceErr: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecModuleManagerInitializeFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecModuleManagerNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecModuleManifestVerifyFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecModuleNotLoaded: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMultipleExecSegments: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMultiplePrivKeys: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecMultipleValuesUnsupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNetworkFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoAccessForItem: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoBasicConstraints: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoBasicConstraintsCA: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoCertificateModule: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoDefaultAuthority: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoDefaultKeychain: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoFieldValues: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoPolicyModule: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoStorageModule: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoSuchAttr: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoSuchClass: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoSuchKeychain: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNoTrustSettings: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNotInitialized: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNotLoggedIn: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNotSigner: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecNotTrusted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPBadRequest: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPBadResponse: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPNoSigner: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPNotTrustedToAnchor: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponderInternalError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponderMalformedReq: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponderSignatureRequired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponderTryLater: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponderUnauthorized: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPResponseNonceMismatch: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPSignatureError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPStatusUnrecognized: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOCSPUnavailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOpWr: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecOutputLengthError: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPVCAlreadyConfigured: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPVCReferentNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecParam: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPassphraseRequired: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPathLengthConstraintExceeded: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPkcs12VerifyFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPolicyNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPrivilegeNotGranted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPrivilegeNotSupported: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecPublicKeyInconsistent: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecQuerySizeUnknown: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecQuotaExceeded: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecReadOnly: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecReadOnlyAttr: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecRecordModified: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecRejectedForm: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecRequestDescriptor: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecRequestLost: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecRequestRejected: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecResourceSignBadCertChainLength: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecResourceSignBadExtKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMEBadExtendedKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMEBadKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMEEmailAddressesNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMEKeyUsageNotCritical: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMENoEmailAddress: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSMIMESubjAltNameNotCritical: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSSLBadExtendedKeyUsage: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSelfCheckFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecServiceNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSigningTimeMissing: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecStagedOperationInProgress: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecStagedOperationNotStarted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecSuccess: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTagNotFound: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampAddInfoNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampBadAlg: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampBadDataFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampBadRequest: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampInvalid: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampMissing: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampNotTrusted: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampRejection: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampRevocationNotification: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampRevocationWarning: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampServiceNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampSystemFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampTimeNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampUnacceptedExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampUnacceptedPolicy: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTimestampWaiting: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTrustNotAvailable: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecTrustSettingDeny: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnimplemented: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownCRLExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownCertExtension: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownCriticalExtensionFlag: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownQualifiedCertStatement: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnknownTag: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedAddressType: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedFieldFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedIndexInfo: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedKeyAttributeMask: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedKeyFormat: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedKeyLabel: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedKeySize: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedKeyUsageMask: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedLocality: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedNumAttributes: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedNumIndexes: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedNumRecordTypes: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedNumSelectionPreds: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedOperator: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedQueryLimits: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedService: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUnsupportedVectorOfBuffers: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecUserCanceled: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecVerificationFailure: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecVerifyActionFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecVerifyFailed: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecWrPerm: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSecWrongSecVersion: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionAuthorizationDenied: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionInternal: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionInvalidAttributes: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionInvalidFlags: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionInvalidId: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionSuccess: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val errSessionValueNotSet: platform.darwin.OSStatus /* = kotlin.Int */
    get() = TODO()

val gGuidAppleCSP: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleCSPDL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleDotMacDL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleDotMacTP: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleFileDL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleLDAPDL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleSdCSPDL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleX509CL: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidAppleX509TP: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val gGuidCssm: platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */
    get() = TODO()

val kAuthorizationComment: kotlin.String
    get() = TODO()

val kAuthorizationEnvironmentIcon: kotlin.String
    get() = TODO()

val kAuthorizationEnvironmentPassword: kotlin.String
    get() = TODO()

val kAuthorizationEnvironmentPrompt: kotlin.String
    get() = TODO()

val kAuthorizationEnvironmentShared: kotlin.String
    get() = TODO()

val kAuthorizationEnvironmentUsername: kotlin.String
    get() = TODO()

val kAuthorizationExternalFormLength: platform.posix.size_t /* = kotlin.ULong */
    get() = TODO()

val kAuthorizationFlagCanNotPreAuthorize: kotlin.UInt
    get() = TODO()

val kAuthorizationFlagDefaults: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagDestroyRights: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagExtendRights: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagInteractionAllowed: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagNoData: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagPartialRights: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationFlagPreAuthorize: platform.Security.AuthorizationFlags /* = kotlin.UInt */
    get() = TODO()

val kAuthorizationRightExecute: kotlin.String
    get() = TODO()

val kAuthorizationRightRule: kotlin.String
    get() = TODO()

val kAuthorizationRuleAuthenticateAsAdmin: kotlin.String
    get() = TODO()

val kAuthorizationRuleAuthenticateAsSessionUser: kotlin.String
    get() = TODO()

val kAuthorizationRuleClassAllow: kotlin.String
    get() = TODO()

val kAuthorizationRuleClassDeny: kotlin.String
    get() = TODO()

val kAuthorizationRuleIsAdmin: kotlin.String
    get() = TODO()

val kCMSAttrAppleCodesigningHashAgility: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrAppleCodesigningHashAgilityV2: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrAppleExpirationTime: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrNone: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrSigningTime: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrSmimeCapabilities: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrSmimeEncryptionKeyPrefs: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSAttrSmimeMSEncryptionKeyPrefs: platform.Security.CMSSignedAttributes /* = kotlin.UInt */
    get() = TODO()

val kCMSCertificateChain: platform.Security.CMSCertificateChainMode /* = kotlin.UInt */
    get() = TODO()

val kCMSCertificateChainWithRoot: platform.Security.CMSCertificateChainMode /* = kotlin.UInt */
    get() = TODO()

val kCMSCertificateNone: platform.Security.CMSCertificateChainMode /* = kotlin.UInt */
    get() = TODO()

val kCMSCertificateSignerOnly: platform.Security.CMSCertificateChainMode /* = kotlin.UInt */
    get() = TODO()

val kCMSEncoderDigestAlgorithmSHA1: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kCMSEncoderDigestAlgorithmSHA256: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kCMSSignerInvalidCert: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCMSSignerInvalidIndex: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCMSSignerInvalidSignature: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCMSSignerNeedsDetachedContent: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCMSSignerUnsigned: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCMSSignerValid: platform.Security.CMSSignerStatus /* = kotlin.UInt */
    get() = TODO()

val kCSSM_APPLEDL_MASK_MODE: platform.Security.cssm_appledl_open_parameters_mask /* = kotlin.UInt */
    get() = TODO()

val kDTLSProtocol1: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kKeychainDbSuffix: kotlin.String
    get() = TODO()

val kKeychainSuffix: kotlin.String
    get() = TODO()

val kSSLProtocol2: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kSSLProtocol3: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kSSLProtocol3Only: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kSSLProtocolAll: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kSSLProtocolUnknown: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kSSLSessionConfig_3DES_fallback: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_ATSv1: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_ATSv1_noPFS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_RC4_fallback: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_TLSv1_3DES_fallback: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_TLSv1_RC4_fallback: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_TLSv1_fallback: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_anonymous: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_default: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_legacy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_legacy_DHE: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionConfig_standard: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSSLSessionOptionAllowRenegotiation: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionAllowServerIdentityChange: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionBreakOnCertRequested: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionBreakOnClientAuth: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionBreakOnClientHello: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionBreakOnServerAuth: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionEnableSessionTickets: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionFallback: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionFalseStart: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSSLSessionOptionSendOneByteRecord: platform.Security.SSLSessionOption /* = kotlin.Int */
    get() = TODO()

val kSec3DES192: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecACLAuthorizationAny: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationDecrypt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationDelete: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationDerive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationEncrypt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationExportClear: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationExportWrapped: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationGenKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationImportClear: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationImportWrapped: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationIntegrity: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainCreate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainDelete: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainItemDelete: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainItemInsert: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainItemModify: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationKeychainItemRead: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationLogin: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationMAC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationPartitionID: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecACLAuthorizationSign: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAES128: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecAES192: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecAES256: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecAccessControlAnd: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlApplicationPassword: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlBiometryAny: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlBiometryCurrentSet: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlDevicePasscode: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlOr: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlPrivateKeyUsage: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlTouchIDAny: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlTouchIDCurrentSet: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccessControlUserPresence: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */
    get() = TODO()

val kSecAccountItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecAddEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecAddEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecAddressItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecAlias: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecAppleSharePasswordItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecAttrAccess: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessControl: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessGroup: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessGroupToken: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessible: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleAfterFirstUnlock: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleAlways: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleAlwaysThisDeviceOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleWhenUnlocked: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccessibleWhenUnlockedThisDeviceOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAccount: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrApplicationLabel: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrApplicationTag: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeDPA: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeDefault: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeHTMLForm: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeHTTPBasic: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeHTTPDigest: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeMSN: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeNTLM: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrAuthenticationTypeRPA: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanDecrypt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanDerive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanEncrypt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanSign: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanUnwrap: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanVerify: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCanWrap: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCertificateEncoding: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCertificateType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrComment: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCreationDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrCreator: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrDescription: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrEffectiveKeySize: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrGeneric: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIsExtractable: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIsInvisible: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIsNegative: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIsPermanent: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIsSensitive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrIssuer: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyClass: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyClassPrivate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyClassPublic: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyClassSymmetric: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeySizeInBits: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyType3DES: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeAES: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeCAST: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeDES: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeDSA: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeEC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeECDSA: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeECSECPrimeRandom: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeRC2: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeRC4: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrKeyTypeRSA: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrLabel: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrModificationDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRF: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRFHmacAlgSHA1: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRFHmacAlgSHA224: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRFHmacAlgSHA256: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRFHmacAlgSHA384: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPRFHmacAlgSHA512: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPath: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPersistantReference: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPersistentReference: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPort: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocol: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolAFP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolAppleTalk: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolDAAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolEPPC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolFTP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolFTPAccount: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolFTPProxy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolFTPS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolHTTP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolHTTPProxy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolHTTPS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolHTTPSProxy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolIMAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolIMAPS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolIPP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolIRC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolIRCS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolLDAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolLDAPS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolNNTP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolNNTPS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolPOP3: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolPOP3S: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolRTSP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolRTSPProxy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolSMB: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolSMTP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolSOCKS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolSSH: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolTelnet: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrProtocolTelnetS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrPublicKeyHash: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrRounds: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSalt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSecurityDomain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSerialNumber: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrServer: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrService: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSubject: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSubjectKeyID: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSyncViewHint: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSynchronizable: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrSynchronizableAny: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrTokenID: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrTokenIDSecureEnclave: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAttrType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecAuthenticationTypeAny: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeDPA: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeDefault: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeHTMLForm: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeHTTPBasic: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeHTTPDigest: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeMSN: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeNTLM: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecAuthenticationTypeRPA: platform.Security.SecAuthenticationType /* = kotlin.UInt */
    get() = TODO()

val kSecBase32Encoding: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecBase64Encoding: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorArchitecture: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorGuestAttributes: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorInfoPlist: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorPath: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorPattern: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorRequirementSyntax: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorResourceAdded: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorResourceAltered: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorResourceMissing: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorResourceSeal: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCFErrorResourceSideband: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCSBasicValidateOnly: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSCheckAllArchitectures: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSCheckGatekeeperArchitectures: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSCheckNestedCode: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSCheckTrustedAnchors: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSConsiderExpiration: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSContentInformation: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSDedicatedHost: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSDefaultFlags: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSDoNotValidateExecutable: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSDoNotValidateResources: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSDynamicInformation: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSEnforceRevocationChecks: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSFullReport: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSGenerateGuestHash: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSInternalInformation: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSNoNetworkAccess: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSQuickCheck: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSReportProgress: platform.Security.SecCSFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCSRequirementInformation: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSRestrictSidebandData: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSRestrictSymlinks: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSRestrictToAppLike: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSSigningInformation: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSSkipResourceDirectory: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSStrictValidate: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSUseAllArchitectures: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSUseSoftwareSigningCert: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCSValidatePEH: platform.posix.uint32_t /* = kotlin.UInt */
    get() = TODO()

val kSecCertEncodingItemAttr: kotlin.UInt
    get() = TODO()

val kSecCertTypeItemAttr: kotlin.UInt
    get() = TODO()

val kSecCertificateEncoding: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCertificateItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecCertificateType: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecClass: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecClassCertificate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecClassGenericPassword: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecClassIdentity: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecClassInternetPassword: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecClassKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeAttributeArchitecture: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeAttributeBundleVersion: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeAttributeSubarchitecture: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeAttributeUniversalFileOffset: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoCMS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoCdHashes: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoCertificates: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoChangedFiles: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoDesignatedRequirement: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoDigestAlgorithm: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoDigestAlgorithms: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoEntitlements: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoEntitlementsDict: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoFlags: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoFormat: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoIdentifier: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoImplicitDesignatedRequirement: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoMainExecutable: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoPList: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoRequirementData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoRequirements: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoRuntimeVersion: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoSource: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoStatus: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoTeamIdentifier: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoTime: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoTimestamp: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoTrust: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeInfoUnique: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCodeSignatureAdhoc: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureEnforcement: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureForceExpiration: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureForceHard: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureForceKill: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHashSHA1: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHashSHA256: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHashSHA256Truncated: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHashSHA384: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHashSHA512: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureHost: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureLibraryValidation: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureNoHash: platform.Security.SecCSDigestAlgorithm /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureRestrict: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeSignatureRuntime: platform.Security.SecCodeSignatureFlags /* = kotlin.UInt */
    get() = TODO()

val kSecCodeStatusDebugged: platform.Security.SecCodeStatus /* = kotlin.UInt */
    get() = TODO()

val kSecCodeStatusHard: platform.Security.SecCodeStatus /* = kotlin.UInt */
    get() = TODO()

val kSecCodeStatusKill: platform.Security.SecCodeStatus /* = kotlin.UInt */
    get() = TODO()

val kSecCodeStatusPlatform: platform.Security.SecCodeStatus /* = kotlin.UInt */
    get() = TODO()

val kSecCodeStatusValid: platform.Security.SecCodeStatus /* = kotlin.UInt */
    get() = TODO()

val kSecCommentItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCompressionRatio: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecCreationDateItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCreatorItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCredentialTypeDefault: platform.Security.SecCredentialType /* = kotlin.UInt */
    get() = TODO()

val kSecCredentialTypeNoUI: platform.Security.SecCredentialType /* = kotlin.UInt */
    get() = TODO()

val kSecCredentialTypeWithUI: platform.Security.SecCredentialType /* = kotlin.UInt */
    get() = TODO()

val kSecCrlEncoding: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCrlType: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecCustomIconItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecDataAccessEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecDataAccessEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecDecodeTypeAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDefaultChangedEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecDefaultChangedEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecDefaultKeySize: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecDeleteEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecDeleteEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecDescriptionItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecDesignatedRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecDigestHMACKeyAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestHMACMD5: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestHMACSHA1: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestHMACSHA2: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestLengthAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestMD2: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestMD4: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestMD5: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestSHA1: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestSHA2: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecDigestTypeAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecEncodeLineLengthAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecEncodeTypeAttribute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecEncryptKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecEncryptionMode: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecEveryEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecFormatBSAFE: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatNetscapeCertSequence: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatOpenSSL: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatPEMSequence: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatPKCS12: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatPKCS7: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatRawKey: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatSSH: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatSSHv2: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatUnknown: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatWrappedLSH: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatWrappedOpenSSL: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatWrappedPKCS8: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatWrappedSSH: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecFormatX509Cert: platform.Security.SecExternalFormat /* = kotlin.UInt */
    get() = TODO()

val kSecGenericItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecGenericPasswordItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecGuestAttributeAudit: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributeCanonical: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributeDynamicCode: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributeDynamicCodeInfoPlist: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributeHash: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributeMachPort: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestAttributePid: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecGuestRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecHonorRoot: kotlin.UInt
    get() = TODO()

val kSecHostRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecIVKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecIdentityDomainDefault: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecIdentityDomainKerberosKDC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportExportAccess: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportExportKeychain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportExportPassphrase: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportItemCertChain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportItemIdentity: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportItemKeyID: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportItemLabel: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecImportItemTrust: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

var kSecInputIsAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()
    set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

var kSecInputIsDigest: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()
    set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

val kSecInputIsPlainText: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

var kSecInputIsRaw: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()
    set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

val kSecInternetPasswordItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecInvalidRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecInvisibleItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecIssuerItemAttr: kotlin.UInt
    get() = TODO()

val kSecItemPemArmour: platform.Security.SecItemImportExportFlags /* = kotlin.UInt */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactor: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandard: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureDigestX962SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureMessageX962SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureMessageX962SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureMessageX962SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureMessageX962SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureMessageX962SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECDSASignatureRFC4754: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA224AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA256AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA384AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA512AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorX963SHA1AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorX963SHA224AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorX963SHA256AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorX963SHA384AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionCofactorX963SHA512AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA224AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA256AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA384AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA512AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardX963SHA1AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardX963SHA224AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardX963SHA256AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardX963SHA384AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmECIESEncryptionStandardX963SHA512AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA224AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA256AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA384AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionOAEPSHA512AESGCM: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionPKCS1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSAEncryptionRaw: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPSSSHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPSSSHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPSSSHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPSSSHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureDigestPSSSHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePSSSHA1: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePSSSHA224: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePSSSHA256: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePSSSHA384: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureMessagePSSSHA512: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlgorithmRSASignatureRaw: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyAlias: kotlin.Int
    get() = TODO()

val kSecKeyAlwaysSensitive: kotlin.Int
    get() = TODO()

val kSecKeyApplicationTag: kotlin.Int
    get() = TODO()

val kSecKeyAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyDecrypt: kotlin.Int
    get() = TODO()

val kSecKeyDerive: kotlin.Int
    get() = TODO()

val kSecKeyEffectiveKeySize: kotlin.Int
    get() = TODO()

val kSecKeyEncrypt: kotlin.Int
    get() = TODO()

val kSecKeyEndDate: kotlin.Int
    get() = TODO()

val kSecKeyExtractable: kotlin.Int
    get() = TODO()

val kSecKeyImportOnlyOne: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */
    get() = TODO()

val kSecKeyKeyClass: kotlin.Int
    get() = TODO()

val kSecKeyKeyCreator: kotlin.Int
    get() = TODO()

val kSecKeyKeyExchangeParameterRequestedSize: platform.Security.SecKeyKeyExchangeParameter? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyKeyExchangeParameterSharedInfo: platform.Security.SecKeyKeyExchangeParameter? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecKeyKeySizeInBits: kotlin.Int
    get() = TODO()

val kSecKeyKeyType: kotlin.Int
    get() = TODO()

val kSecKeyLabel: kotlin.Int
    get() = TODO()

val kSecKeyModifiable: kotlin.Int
    get() = TODO()

val kSecKeyNeverExtractable: kotlin.Int
    get() = TODO()

val kSecKeyNoAccessControl: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */
    get() = TODO()

val kSecKeyOperationTypeDecrypt: platform.Security.SecKeyOperationType /* = kotlin.Long */
    get() = TODO()

val kSecKeyOperationTypeEncrypt: platform.Security.SecKeyOperationType /* = kotlin.Long */
    get() = TODO()

val kSecKeyOperationTypeKeyExchange: platform.Security.SecKeyOperationType /* = kotlin.Long */
    get() = TODO()

val kSecKeyOperationTypeSign: platform.Security.SecKeyOperationType /* = kotlin.Long */
    get() = TODO()

val kSecKeyOperationTypeVerify: platform.Security.SecKeyOperationType /* = kotlin.Long */
    get() = TODO()

val kSecKeyPermanent: kotlin.Int
    get() = TODO()

val kSecKeyPrintName: kotlin.Int
    get() = TODO()

val kSecKeyPrivate: kotlin.Int
    get() = TODO()

val kSecKeySecurePassphrase: platform.Security.SecKeyImportExportFlags /* = kotlin.UInt */
    get() = TODO()

val kSecKeySensitive: kotlin.Int
    get() = TODO()

val kSecKeySign: kotlin.Int
    get() = TODO()

val kSecKeySignRecover: kotlin.Int
    get() = TODO()

val kSecKeyStartDate: kotlin.Int
    get() = TODO()

val kSecKeyUnwrap: kotlin.Int
    get() = TODO()

val kSecKeyUsageAll: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageCRLSign: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageContentCommitment: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageCritical: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageDataEncipherment: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageDecipherOnly: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageDigitalSignature: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageEncipherOnly: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageKeyAgreement: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageKeyCertSign: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageKeyEncipherment: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageNonRepudiation: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyUsageUnspecified: platform.Security.SecKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecKeyVerify: kotlin.Int
    get() = TODO()

val kSecKeyVerifyRecover: kotlin.Int
    get() = TODO()

val kSecKeyWrap: kotlin.Int
    get() = TODO()

val kSecKeychainListChangedEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecKeychainListChangedMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecKeychainPromptInvalid: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */
    get() = TODO()

val kSecKeychainPromptInvalidAct: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */
    get() = TODO()

val kSecKeychainPromptRequirePassphase: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */
    get() = TODO()

val kSecKeychainPromptUnsigned: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */
    get() = TODO()

val kSecKeychainPromptUnsignedAct: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */
    get() = TODO()

val kSecLabelItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecLibraryRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecLineLength64: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecLineLength76: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecLockEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecLockEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecMatchBits: kotlin.UInt
    get() = TODO()

val kSecMatchCaseInsensitive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchDiacriticInsensitive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchEmailAddressIfPresent: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchIssuers: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchItemList: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchLimit: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchLimitAll: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchLimitOne: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchPolicy: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchSearchList: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchSubjectContains: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchSubjectEndsWith: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchSubjectStartsWith: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchSubjectWholeString: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchTrustedOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchValidOnDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecMatchWidthInsensitive: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecModDateItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecModeCBCKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecModeCFBKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecModeECBKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecModeNoneKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecModeOFBKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecNegativeItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecNoGuest: platform.Security.SecGuestRef /* = kotlin.UInt */
    get() = TODO()

val kSecOAEPEncodingParametersAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDADC_CERT_POLICY: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_CERT_POLICY: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_CODE_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_CODE_SIGNING_DEV: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_ICHAT_ENCRYPTION: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_ICHAT_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_RESOURCE_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EKU_SYSTEM_IDENTITY: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EXTENSION: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EXTENSION_ADC_APPLE_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EXTENSION_ADC_DEV_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EXTENSION_APPLE_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAPPLE_EXTENSION_CODE_SIGNING: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAuthorityInfoAccess: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDAuthorityKeyIdentifier: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDBasicConstraints: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDBiometricInfo: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCSSMKeyStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCertIssuer: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCertificatePolicies: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDClientAuth: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCollectiveStateProvinceName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCollectiveStreetAddress: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCommonName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCountryName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCrlDistributionPoints: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCrlNumber: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDCrlReason: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDOTMAC_CERT_EMAIL_ENCRYPT: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDOTMAC_CERT_EMAIL_SIGN: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDOTMAC_CERT_EXTENSION: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDOTMAC_CERT_IDENTITY: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDOTMAC_CERT_POLICY: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDeltaCrlIndicator: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDDescription: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDEKU_IPSec: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDEmailAddress: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDEmailProtection: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDExtendedKeyUsage: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDExtendedKeyUsageAny: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDExtendedUseCodeSigning: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDGivenName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDHoldInstructionCode: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDInvalidityDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDIssuerAltName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDIssuingDistributionPoint: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDIssuingDistributionPoints: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDKERBv5_PKINIT_KP_CLIENT_AUTH: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDKERBv5_PKINIT_KP_KDC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDKeyUsage: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDLocalityName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDMS_NTPrincipalName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDMicrosoftSGC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDNameConstraints: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDNetscapeCertSequence: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDNetscapeCertType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDNetscapeSGC: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDOCSPSigning: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDOrganizationName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDOrganizationalUnitName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDPolicyConstraints: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDPolicyMappings: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDPrivateKeyUsagePeriod: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDQC_Statements: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSRVName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSerialNumber: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDServerAuth: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDStateProvinceName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDStreetAddress: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectAltName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectDirectoryAttributes: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectEmailAddress: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectInfoAccess: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectKeyIdentifier: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectPicture: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSubjectSignatureBitmap: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDSurname: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDTimeStamping: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDTitle: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDUseExemptions: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1CertificateIssuerUniqueId: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1CertificateSubjectUniqueId: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1IssuerName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1IssuerNameCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1IssuerNameLDAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1IssuerNameStd: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SerialNumber: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1Signature: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SignatureAlgorithm: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SignatureAlgorithmParameters: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SignatureAlgorithmTBS: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SignatureCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SignatureStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectNameCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectNameLDAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectNameStd: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectPublicKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectPublicKeyAlgorithm: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectPublicKeyAlgorithmParameters: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1SubjectPublicKeyCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1ValidityNotAfter: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1ValidityNotBefore: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V1Version: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3Certificate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionCritical: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionId: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionValue: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionsCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateExtensionsStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3CertificateNumberOfExtensions: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3SignedCertificate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecOIDX509V3SignedCertificateCStruct: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingNone: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingNoneKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingOAEP: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingOAEPKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingPKCS1: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1Key: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingPKCS1MD2: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1MD5: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1SHA1: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1SHA224: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1SHA256: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1SHA384: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS1SHA512: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPaddingPKCS5Key: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingPKCS7Key: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPaddingSigRaw: platform.Security.SecPadding /* = kotlin.UInt */
    get() = TODO()

val kSecPasswordChangedEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecPasswordChangedEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecPathItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecPluginRequirementType: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecPolicyAppleCodeSigning: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleEAP: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleIDValidation: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleIPsec: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyApplePKINITClient: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyApplePKINITServer: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyApplePassbookSigning: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyApplePayIssuerEncryption: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleRevocation: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleSMIME: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleSSL: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleTimeStamping: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyAppleX509Basic: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyClient: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_CRLSign: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_DataEncipherment: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_DecipherOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_DigitalSignature: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_EncipherOnly: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_KeyAgreement: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_KeyCertSign: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_KeyEncipherment: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyKU_NonRepudiation: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyMacAppStoreReceipt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyOid: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyRevocationFlags: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPolicyTeamIdentifier: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPortItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecPrivateKeyAttrs: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPrivateKeyItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecPropertyKeyLabel: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyKeyLocalizedLabel: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyKeyType: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyKeyValue: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeError: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeSection: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeString: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeSuccess: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeTitle: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeURL: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPropertyTypeWarning: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecProtocolItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeAFP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeAny: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeAppleTalk: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeCIFS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeCVSpserver: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeDAAP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeEPPC: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeFTP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeFTPAccount: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeFTPProxy: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeFTPS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeHTTP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeHTTPProxy: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeHTTPS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeHTTPSProxy: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeIMAP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeIMAPS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeIPP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeIRC: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeIRCS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeLDAP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeLDAPS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeNNTP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeNNTPS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypePOP3: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypePOP3S: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeRTSP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeRTSPProxy: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeSMB: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeSMTP: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeSOCKS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeSSH: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeSVN: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeTelnet: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecProtocolTypeTelnetS: platform.Security.SecProtocolType /* = kotlin.UInt */
    get() = TODO()

val kSecPublicKeyAttrs: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecPublicKeyHashItemAttr: kotlin.UInt
    get() = TODO()

val kSecPublicKeyItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecRSAMax: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecRSAMin: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecRandomDefault: platform.Security.SecRandomRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRandom>? */
    get() = TODO()

val kSecReadPermStatus: platform.darwin.UInt32 /* = kotlin.UInt */
    get() = TODO()

val kSecRequirementTypeCount: platform.Security.SecRequirementType /* = kotlin.UInt */
    get() = TODO()

val kSecReturnAttributes: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecReturnData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecReturnPersistentRef: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecReturnRef: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecRevocationCRLMethod: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecRevocationNetworkAccessDisabled: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecRevocationOCSPMethod: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecRevocationPreferCRL: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecRevocationRequirePositiveResponse: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecRevocationUseAnyAvailableMethod: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */
    get() = TODO()

val kSecScriptCodeItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecSecurityDomainItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecSerialNumberItemAttr: kotlin.UInt
    get() = TODO()

val kSecServerItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecServiceItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecSharedPassword: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

var kSecSignatureAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()
    set(value: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */) = TODO()

val kSecSignatureItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecSubjectItemAttr: kotlin.UInt
    get() = TODO()

val kSecSubjectKeyIdentifierItemAttr: kotlin.UInt
    get() = TODO()

val kSecSymmetricKeyItemClass: platform.Security.SecItemClass /* = kotlin.UInt */
    get() = TODO()

val kSecTransformAbortAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformAbortOriginatorKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionAttributeNotification: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionAttributeValidation: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionCanExecute: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionExternalizeExtraData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionFinalize: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionInternalizeExtraData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionProcessData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformActionStartingExecution: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformDebugAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformErrorAbortInProgress: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorAborted: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorAttributeNotFound: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorDomain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformErrorInvalidAlgorithm: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidConnection: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidInput: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidInputDictionary: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidLength: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidOperation: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorInvalidType: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorMissingParameter: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorMoreThanOneOutput: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorNameAlreadyRegistered: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorNotInitializedCorrectly: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformErrorUnsupportedAttribute: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformInputAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformInvalidArgument: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformInvalidOverride: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformOperationNotSupportedOnGroup: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformOutputAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformPreviousErrorKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTransformTransformIsExecuting: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformTransformIsNotRegistered: platform.CoreFoundation.CFIndex /* = kotlin.Long */
    get() = TODO()

val kSecTransformTransformName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustCertificateTransparency: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustCertificateTransparencyWhiteList: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustEvaluationDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustExtendedValidation: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustOptionAllowExpired: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionAllowExpiredRoot: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionFetchIssuerFromNet: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionImplicitAnchors: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionLeafIsCA: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionRequireRevPerCert: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOptionUseTrustSettings: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */
    get() = TODO()

val kSecTrustOrganizationName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustResultConfirm: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultDeny: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultFatalTrustFailure: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultInvalid: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultOtherError: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultProceed: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultRecoverableTrustFailure: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultUnspecified: platform.Security.SecTrustResultType /* = kotlin.UInt */
    get() = TODO()

val kSecTrustResultValue: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustRevocationChecked: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustRevocationValidUntilDate: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecTrustSettingsAllowedError: kotlin.String
    get() = TODO()

val kSecTrustSettingsApplication: kotlin.String
    get() = TODO()

val kSecTrustSettingsChangedEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsChangedEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsDomainAdmin: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsDomainSystem: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsDomainUser: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUsage: kotlin.String
    get() = TODO()

val kSecTrustSettingsKeyUseAny: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseEnDecryptData: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseEnDecryptKey: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseKeyExchange: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseSignCert: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseSignRevocation: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsKeyUseSignature: platform.Security.SecTrustSettingsKeyUsage /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsPolicy: kotlin.String
    get() = TODO()

val kSecTrustSettingsPolicyString: kotlin.String
    get() = TODO()

val kSecTrustSettingsResult: kotlin.String
    get() = TODO()

val kSecTrustSettingsResultDeny: platform.Security.SecTrustSettingsResult /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsResultInvalid: platform.Security.SecTrustSettingsResult /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsResultTrustAsRoot: platform.Security.SecTrustSettingsResult /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsResultTrustRoot: platform.Security.SecTrustSettingsResult /* = kotlin.UInt */
    get() = TODO()

val kSecTrustSettingsResultUnspecified: platform.Security.SecTrustSettingsResult /* = kotlin.UInt */
    get() = TODO()

val kSecTypeItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecUnlockEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecUnlockEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecUnlockStateStatus: platform.darwin.UInt32 /* = kotlin.UInt */
    get() = TODO()

val kSecUpdateEvent: platform.Security.SecKeychainEvent /* = kotlin.UInt */
    get() = TODO()

val kSecUpdateEventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */
    get() = TODO()

val kSecUseAuthenticationContext: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseAuthenticationUI: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseAuthenticationUIAllow: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseAuthenticationUIFail: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseAuthenticationUISkip: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseItemList: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseKeychain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseNoAuthenticationUI: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecUseOnlyGID: kotlin.UInt
    get() = TODO()

val kSecUseOnlyUID: kotlin.UInt
    get() = TODO()

val kSecUseOperationPrompt: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecValueData: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecValuePersistentRef: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecValueRef: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecVolumeItemAttr: platform.Security.SecItemAttr /* = kotlin.UInt */
    get() = TODO()

val kSecWritePermStatus: platform.darwin.UInt32 /* = kotlin.UInt */
    get() = TODO()

val kSecZLibEncoding: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */
    get() = TODO()

val kSecp192r1: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecp256r1: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecp384r1: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSecp521r1: platform.Security.SecKeySizes /* = kotlin.UInt */
    get() = TODO()

val kSystemKeychainDir: kotlin.String
    get() = TODO()

val kSystemKeychainName: kotlin.String
    get() = TODO()

val kSystemUnlockFile: kotlin.String
    get() = TODO()

val kTLSProtocol1: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kTLSProtocol11: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kTLSProtocol12: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kTLSProtocol13: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kTLSProtocol1Only: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val kTLSProtocolMaxSupported: platform.Security.SSLProtocol /* = kotlin.Int */
    get() = TODO()

val noSecuritySession: platform.Security.SecuritySessionId /* = kotlin.UInt */
    get() = TODO()

val oidAdCAIssuer: platform.Security.DERItem
    get() = TODO()

val oidAdOCSP: platform.Security.DERItem
    get() = TODO()

val oidAnyExtendedKeyUsage: platform.Security.DERItem
    get() = TODO()

val oidAnyPolicy: platform.Security.DERItem
    get() = TODO()

val oidAuthorityInfoAccess: platform.Security.DERItem
    get() = TODO()

val oidAuthorityKeyIdentifier: platform.Security.DERItem
    get() = TODO()

val oidBasicConstraints: platform.Security.DERItem
    get() = TODO()

val oidCertificatePolicies: platform.Security.DERItem
    get() = TODO()

val oidCommonName: platform.Security.DERItem
    get() = TODO()

val oidCountryName: platform.Security.DERItem
    get() = TODO()

val oidCrlDistributionPoints: platform.Security.DERItem
    get() = TODO()

val oidDescription: platform.Security.DERItem
    get() = TODO()

val oidEcPubKey: platform.Security.DERItem
    get() = TODO()

val oidEmailAddress: platform.Security.DERItem
    get() = TODO()

val oidEntrustVersInfo: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsage: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageClientAuth: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageCodeSigning: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageEmailProtection: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageIPSec: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageMicrosoftSGC: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageNetscapeSGC: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageOCSPSigning: platform.Security.DERItem
    get() = TODO()

val oidExtendedKeyUsageServerAuth: platform.Security.DERItem
    get() = TODO()

val oidFee: platform.Security.DERItem
    get() = TODO()

val oidFriendlyName: platform.Security.DERItem
    get() = TODO()

val oidGoogleEmbeddedSignedCertificateTimestamp: platform.Security.DERItem
    get() = TODO()

val oidGoogleOCSPSignedCertificateTimestamp: platform.Security.DERItem
    get() = TODO()

val oidInhibitAnyPolicy: platform.Security.DERItem
    get() = TODO()

val oidIssuerAltName: platform.Security.DERItem
    get() = TODO()

val oidKeyUsage: platform.Security.DERItem
    get() = TODO()

val oidLocalKeyId: platform.Security.DERItem
    get() = TODO()

val oidLocalityName: platform.Security.DERItem
    get() = TODO()

val oidMSNTPrincipalName: platform.Security.DERItem
    get() = TODO()

val oidMd2: platform.Security.DERItem
    get() = TODO()

val oidMd2Rsa: platform.Security.DERItem
    get() = TODO()

val oidMd4: platform.Security.DERItem
    get() = TODO()

val oidMd4Rsa: platform.Security.DERItem
    get() = TODO()

val oidMd5: platform.Security.DERItem
    get() = TODO()

val oidMd5Fee: platform.Security.DERItem
    get() = TODO()

val oidMd5Rsa: platform.Security.DERItem
    get() = TODO()

val oidNetscapeCertType: platform.Security.DERItem
    get() = TODO()

val oidOrganizationName: platform.Security.DERItem
    get() = TODO()

val oidOrganizationalUnitName: platform.Security.DERItem
    get() = TODO()

val oidPolicyConstraints: platform.Security.DERItem
    get() = TODO()

val oidPolicyMappings: platform.Security.DERItem
    get() = TODO()

val oidPrivateKeyUsagePeriod: platform.Security.DERItem
    get() = TODO()

val oidQtCps: platform.Security.DERItem
    get() = TODO()

val oidQtUNotice: platform.Security.DERItem
    get() = TODO()

val oidRsa: platform.Security.DERItem
    get() = TODO()

val oidSha1: platform.Security.DERItem
    get() = TODO()

val oidSha1Dsa: platform.Security.DERItem
    get() = TODO()

val oidSha1DsaCommonOIW: platform.Security.DERItem
    get() = TODO()

val oidSha1DsaOIW: platform.Security.DERItem
    get() = TODO()

val oidSha1Ecdsa: platform.Security.DERItem
    get() = TODO()

val oidSha1Fee: platform.Security.DERItem
    get() = TODO()

val oidSha1Rsa: platform.Security.DERItem
    get() = TODO()

val oidSha1RsaOIW: platform.Security.DERItem
    get() = TODO()

val oidSha224: platform.Security.DERItem
    get() = TODO()

val oidSha224Ecdsa: platform.Security.DERItem
    get() = TODO()

val oidSha224Rsa: platform.Security.DERItem
    get() = TODO()

val oidSha256: platform.Security.DERItem
    get() = TODO()

val oidSha256Ecdsa: platform.Security.DERItem
    get() = TODO()

val oidSha256Rsa: platform.Security.DERItem
    get() = TODO()

val oidSha384: platform.Security.DERItem
    get() = TODO()

val oidSha384Ecdsa: platform.Security.DERItem
    get() = TODO()

val oidSha384Rsa: platform.Security.DERItem
    get() = TODO()

val oidSha512: platform.Security.DERItem
    get() = TODO()

val oidSha512Ecdsa: platform.Security.DERItem
    get() = TODO()

val oidSha512Rsa: platform.Security.DERItem
    get() = TODO()

val oidStateOrProvinceName: platform.Security.DERItem
    get() = TODO()

val oidSubjectAltName: platform.Security.DERItem
    get() = TODO()

val oidSubjectInfoAccess: platform.Security.DERItem
    get() = TODO()

val oidSubjectKeyIdentifier: platform.Security.DERItem
    get() = TODO()

val sessionHasGraphicAccess: platform.Security.SessionAttributeBits /* = kotlin.UInt */
    get() = TODO()

val sessionHasTTY: platform.Security.SessionAttributeBits /* = kotlin.UInt */
    get() = TODO()

val sessionIsRemote: platform.Security.SessionAttributeBits /* = kotlin.UInt */
    get() = TODO()

val sessionIsRoot: platform.Security.SessionAttributeBits /* = kotlin.UInt */
    get() = TODO()

val sessionKeepCurrentBootstrap: platform.Security.SessionCreationFlags /* = kotlin.UInt */
    get() = TODO()

fun AuthorizationCopyInfo(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ tag: kotlin.String?, /*2*/ info: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.AuthorizationItemSet> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.AuthorizationItemSet>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationCopyPrivilegedReference(/*0*/ authorization: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.AuthorizationRef /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef> */> */>?, /*1*/ flags: platform.Security.AuthorizationFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationCopyRights(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ rights: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */>?, /*2*/ environment: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationEnvironment /* = platform.Security.AuthorizationItemSet */>?, /*3*/ flags: platform.Security.AuthorizationFlags /* = kotlin.UInt */, /*4*/ authorizedRights: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationCopyRightsAsync(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ rights: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */>?, /*2*/ environment: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationEnvironment /* = platform.Security.AuthorizationItemSet */>?, /*3*/ flags: platform.Security.AuthorizationFlags /* = kotlin.UInt */, /*4*/ callbackBlock: platform.Security.AuthorizationAsyncCallback? /* = ((platform.darwin.OSStatus /* = kotlin.Int */, kotlinx.cinterop.CPointer<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */>?) -> kotlin.Unit)? */) { TODO() }

fun AuthorizationCreate(/*0*/ rights: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRights /* = platform.Security.AuthorizationItemSet */>?, /*1*/ environment: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationEnvironment /* = platform.Security.AuthorizationItemSet */>?, /*2*/ flags: platform.Security.AuthorizationFlags /* = kotlin.UInt */, /*3*/ authorization: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.AuthorizationRef /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationCreateFromExternalForm(/*0*/ extForm: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationExternalForm>?, /*1*/ authorization: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.AuthorizationRef /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationExecuteWithPrivileges(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ pathToTool: kotlin.String?, /*2*/ options: platform.Security.AuthorizationFlags /* = kotlin.UInt */, /*3*/ arguments: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*4*/ communicationsPipe: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.FILE /* = platform.posix.__sFILE */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationFree(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ flags: platform.Security.AuthorizationFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationFreeItemSet(/*0*/ set: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationItemSet>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationMakeExternalForm(/*0*/ authorization: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ extForm: kotlinx.cinterop.CValuesRef<platform.Security.AuthorizationExternalForm>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationRightGet(/*0*/ rightName: kotlin.String?, /*1*/ rightDefinition: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDictionaryRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDictionaryRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationRightRemove(/*0*/ authRef: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ rightName: kotlin.String?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun AuthorizationRightSet(/*0*/ authRef: platform.Security.AuthorizationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.AuthorizationOpaqueRef>? */, /*1*/ rightName: kotlin.String?, /*2*/ rightDefinition: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ descriptionKey: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*4*/ bundle: platform.CoreFoundation.CFBundleRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFBundle>? */, /*5*/ localeTableName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopyAllCerts(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ certsOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopyContent(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ contentOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopyDetachedContent(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ detachedContentOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopyEncapsulatedContentType(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ eContentTypeOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerCert(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ signerCertOut: kotlinx.cinterop.CValuesRef<platform.Security.SecCertificateRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCertificateRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerEmailAddress(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ signerEmailAddressOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerSigningTime(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ signingTime: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFAbsoluteTimeVar /* = kotlinx.cinterop.DoubleVarOf<platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerStatus(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ policyOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ evaluateSecTrust: kotlin.Boolean, /*4*/ signerStatusOut: kotlinx.cinterop.CValuesRef<platform.Security.CMSSignerStatusVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CMSSignerStatus /* = kotlin.UInt */> */>?, /*5*/ secTrustOut: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust> */> */>?, /*6*/ certVerifyResultCodeOut: kotlinx.cinterop.CValuesRef<platform.darwin.OSStatusVar /* = kotlinx.cinterop.IntVarOf<platform.darwin.OSStatus /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerTimestamp(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ timestamp: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFAbsoluteTimeVar /* = kotlinx.cinterop.DoubleVarOf<platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerTimestampCertificates(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ certificateRefs: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCopySignerTimestampWithPolicy(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ timeStampPolicy: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*3*/ timestamp: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFAbsoluteTimeVar /* = kotlinx.cinterop.DoubleVarOf<platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderCreate(/*0*/ cmsDecoderOut: kotlinx.cinterop.CValuesRef<platform.Security.CMSDecoderRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CMSDecoderRef /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderFinalizeMessage(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderGetNumSigners(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ numSignersOut: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun CMSDecoderIsContentEncrypted(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ isEncryptedOut: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderSetDetachedContent(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ detachedContent: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderSetSearchKeychain(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSDecoderUpdateMessage(/*0*/ cmsDecoder: platform.Security.CMSDecoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSDecoder>? */, /*1*/ msgBytes: kotlinx.cinterop.CValuesRef<*>?, /*2*/ msgBytesLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncode(/*0*/ signers: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ recipients: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ eContentType: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*3*/ detachedContent: kotlin.Boolean, /*4*/ signedAttributes: platform.Security.CMSSignedAttributes /* = kotlin.UInt */, /*5*/ content: kotlinx.cinterop.CValuesRef<*>?, /*6*/ contentLen: platform.posix.size_t /* = kotlin.ULong */, /*7*/ encodedContentOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncodeContent(/*0*/ signers: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ recipients: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ eContentTypeOID: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ detachedContent: kotlin.Boolean, /*4*/ signedAttributes: platform.Security.CMSSignedAttributes /* = kotlin.UInt */, /*5*/ content: kotlinx.cinterop.CValuesRef<*>?, /*6*/ contentLen: platform.posix.size_t /* = kotlin.ULong */, /*7*/ encodedContentOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderAddRecipients(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ recipientOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderAddSignedAttributes(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ signedAttributes: platform.Security.CMSSignedAttributes /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderAddSigners(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ signerOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderAddSupportingCerts(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ certOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopyEncapsulatedContentType(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ eContentTypeOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopyEncodedContent(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ encodedContentOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopyRecipients(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ recipientsOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopySignerTimestamp(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*2*/ timestamp: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFAbsoluteTimeVar /* = kotlinx.cinterop.DoubleVarOf<platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopySignerTimestampWithPolicy(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ timeStampPolicy: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ signerIndex: platform.posix.size_t /* = kotlin.ULong */, /*3*/ timestamp: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFAbsoluteTimeVar /* = kotlinx.cinterop.DoubleVarOf<platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopySigners(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ signersOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCopySupportingCerts(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ certsOut: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderCreate(/*0*/ cmsEncoderOut: kotlinx.cinterop.CValuesRef<platform.Security.CMSEncoderRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CMSEncoderRef /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderGetCertificateChainMode(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ chainModeOut: kotlinx.cinterop.CValuesRef<platform.Security.CMSCertificateChainModeVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CMSCertificateChainMode /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderGetHasDetachedContent(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ detachedContentOut: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun CMSEncoderSetCertificateChainMode(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ chainMode: platform.Security.CMSCertificateChainMode /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderSetEncapsulatedContentType(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ eContentType: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderSetEncapsulatedContentTypeOID(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ eContentTypeOID: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderSetHasDetachedContent(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ detachedContent: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderSetSignerAlgorithm(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ digestAlgorithm: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CMSEncoderUpdateContent(/*0*/ cmsEncoder: platform.Security.CMSEncoderRef? /* = kotlinx.cinterop.CPointer<cnames.structs._CMSEncoder>? */, /*1*/ content: kotlinx.cinterop.CValuesRef<*>?, /*2*/ contentLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun CSSM_AC_AuthCompute(/*0*/ ACHandle: platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, /*1*/ BaseAuthorizations: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, /*2*/ Credentials: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, /*3*/ NumberOfRequestors: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ Requestors: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, /*5*/ RequestedAuthorizationPeriod: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, /*6*/ RequestedAuthorization: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_LIST /* = platform.Security.cssm_list */>?, /*7*/ AuthorizationResult: platform.Security.CSSM_TUPLEGROUP_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_AC_PassThrough(/*0*/ ACHandle: platform.Security.CSSM_AC_HANDLE /* = kotlin.Long */, /*1*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*2*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*3*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*4*/ DBList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, /*5*/ PassThroughId: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ InputParams: kotlinx.cinterop.CValuesRef<*>?, /*7*/ OutputParams: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertAbortCache(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CertHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertAbortQuery(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertCache(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CertHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertCreateTemplate(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ CertFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*3*/ CertTemplate: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertDescribeFormat(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*2*/ OidList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetAllFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ CertFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetAllTemplateFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CertTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ CertFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetFirstCachedFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CertHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ CertField: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*3*/ ResultsHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, /*4*/ NumberOfMatchedFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*5*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetFirstFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CertField: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*3*/ ResultsHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, /*4*/ NumberOfMatchedFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*5*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetKeyInfo(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_KEY_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetNextCachedFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGetNextFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGroupFromVerifiedBundle(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CertBundle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERT_BUNDLE /* = platform.Security.cssm_cert_bundle */>?, /*3*/ SignerCert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ CertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertGroupToSignedBundle(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CertGroupToBundle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*3*/ BundleInfo: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERT_BUNDLE_HEADER /* = platform.Security.cssm_cert_bundle_header */>?, /*4*/ SignedBundle: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertSign(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CertTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ SignScope: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*4*/ ScopeSize: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ SignedCert: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertVerify(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CertToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ SignerCert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ VerifyScope: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*5*/ ScopeSize: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CertVerifyWithKey(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CertToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlAbortCache(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CrlHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlAbortQuery(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlAddCert(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ CrlEntryFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*5*/ OldCrl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*6*/ NewCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlCache(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Crl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CrlHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlCreateTemplate(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ CrlTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*3*/ NewCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlDescribeFormat(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*2*/ OidList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_OID_PTR /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetAllCachedRecordFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CrlHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ CrlRecordIndex: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*4*/ CrlFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetAllFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Crl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ NumberOfCrlFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ CrlFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetFirstCachedFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CrlHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ CrlRecordIndex: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ CrlField: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*4*/ ResultsHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, /*5*/ NumberOfMatchedFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*6*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetFirstFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Crl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CrlField: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*3*/ ResultsHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, /*4*/ NumberOfMatchedFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*5*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetNextCachedFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlGetNextFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ Value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DATA_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlRemoveCert(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ OldCrl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ NewCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlSetFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ CrlTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*3*/ OldCrl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ ModifiedCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlSign(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ UnsignedCrl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ SignScope: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*4*/ ScopeSize: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ SignedCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlVerify(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CrlToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ SignerCert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ VerifyScope: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*5*/ ScopeSize: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_CrlVerifyWithKey(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ CrlToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_FreeFieldValue(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CertOrCrlOid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*2*/ Value: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_FreeFields(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ Fields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_IsCertInCachedCrl(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CrlHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*3*/ CertFound: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, /*4*/ CrlRecordIndex: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_IsCertInCrl(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ Cert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ Crl: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ CertFound: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CL_PassThrough(/*0*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ PassThroughId: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ InputParams: kotlinx.cinterop.CValuesRef<*>?, /*4*/ OutputParams: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_ChangeLoginAcl(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ AclEdit: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_ChangeLoginOwner(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ NewOwner: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateAsymmetricContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*3*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*4*/ Padding: platform.Security.CSSM_PADDING /* = kotlin.UInt */, /*5*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateDeriveKeyContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ DeriveKeyType: platform.Security.CSSM_KEY_TYPE /* = kotlin.UInt */, /*3*/ DeriveKeyLengthInBits: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*5*/ BaseKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*6*/ IterationCount: platform.Security.uint32 /* = kotlin.UInt */, /*7*/ Salt: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*8*/ Seed: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CRYPTO_DATA /* = platform.Security.cssm_crypto_data */>?, /*9*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateDigestContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateKeyGenContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ KeySizeInBits: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ Seed: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CRYPTO_DATA /* = platform.Security.cssm_crypto_data */>?, /*4*/ Salt: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*5*/ StartDate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATE /* = platform.Security.cssm_date */>?, /*6*/ EndDate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATE /* = platform.Security.cssm_date */>?, /*7*/ Params: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*8*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateMacContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*3*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreatePassThroughContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateRandomGenContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ Seed: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CRYPTO_DATA /* = platform.Security.cssm_crypto_data */>?, /*3*/ Length: platform.Security.CSSM_SIZE /* = kotlin.ULong */, /*4*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateSignatureContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*3*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*4*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_CreateSymmetricContext(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AlgorithmID: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ Mode: platform.Security.CSSM_ENCRYPT_MODE /* = kotlin.UInt */, /*3*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*4*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*5*/ InitVector: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*6*/ Padding: platform.Security.CSSM_PADDING /* = kotlin.UInt */, /*7*/ Reserved: kotlinx.cinterop.CValuesRef<*>?, /*8*/ NewContextHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_GetLoginAcl(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ SelectionTag: platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ NumberOfAclInfos: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ AclInfos: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_GetLoginOwner(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Owner: platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_GetOperationalStatistics(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Statistics: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CSP_OPERATIONAL_STATISTICS /* = platform.Security.cssm_csp_operational_statistics */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_Login(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ LoginName: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ Reserved: kotlinx.cinterop.CValuesRef<*>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_Logout(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_ObtainPrivateKeyFromPublicKey(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ PublicKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ PrivateKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_CSP_PassThrough(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ PassThroughId: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ InData: kotlinx.cinterop.CValuesRef<*>?, /*3*/ OutData: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ChangeKeyAcl(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ AclEdit: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?, /*3*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ChangeKeyOwner(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*3*/ NewOwner: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_Authenticate(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ AccessRequest: platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, /*2*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_ChangeDbAcl(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ AclEdit: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_EDIT /* = platform.Security.cssm_acl_edit */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_ChangeDbOwner(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ NewOwner: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_CreateRelation(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ RelationID: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, /*2*/ RelationName: kotlin.String?, /*3*/ NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ pAttributeInfo: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_SCHEMA_ATTRIBUTE_INFO /* = platform.Security.cssm_db_schema_attribute_info */>?, /*5*/ NumberOfIndexes: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ pIndexInfo: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_SCHEMA_INDEX_INFO /* = platform.Security.cssm_db_schema_index_info */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataAbortQuery(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataDelete(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ UniqueRecordIdentifier: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataGetFirst(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ Query: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_QUERY /* = platform.Security.cssm_query */>?, /*2*/ ResultsHandle: platform.Security.CSSM_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_INTPTRVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_INTPTR /* = kotlin.Long */> */>? */, /*3*/ Attributes: platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, /*4*/ Data: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*5*/ UniqueId: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataGetFromUniqueRecordId(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ UniqueRecord: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>?, /*2*/ Attributes: platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, /*3*/ Data: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataGetNext(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ ResultsHandle: platform.Security.CSSM_HANDLE /* = kotlin.Long */, /*2*/ Attributes: platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_record_attribute_data>? */, /*3*/ Data: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ UniqueId: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataInsert(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ RecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, /*2*/ Attributes: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, /*3*/ Data: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ UniqueId: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_UNIQUE_RECORD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_DB_UNIQUE_RECORD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DataModify(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ RecordType: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */, /*2*/ UniqueRecordIdentifier: platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */, /*3*/ AttributesToBeModified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_RECORD_ATTRIBUTE_DATA /* = platform.Security.cssm_db_record_attribute_data */>?, /*4*/ DataToBeModified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*5*/ ModifyMode: platform.Security.CSSM_DB_MODIFY_MODE /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DbClose(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DbCreate(/*0*/ DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, /*1*/ DbName: kotlin.String?, /*2*/ DbLocation: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, /*3*/ DBInfo: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DBINFO /* = platform.Security.cssm_dbinfo */>?, /*4*/ AccessRequest: platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, /*5*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*6*/ OpenParameters: kotlinx.cinterop.CValuesRef<*>?, /*7*/ DbHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DbDelete(/*0*/ DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, /*1*/ DbName: kotlin.String?, /*2*/ DbLocation: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, /*3*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DbOpen(/*0*/ DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, /*1*/ DbName: kotlin.String?, /*2*/ DbLocation: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_NET_ADDRESS /* = platform.Security.cssm_net_address */>?, /*3*/ AccessRequest: platform.Security.CSSM_DB_ACCESS_TYPE /* = kotlin.UInt */, /*4*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*5*/ OpenParameters: kotlinx.cinterop.CValuesRef<*>?, /*6*/ DbHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DB_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_DB_HANDLE /* = kotlin.Long */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_DestroyRelation(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ RelationID: platform.Security.CSSM_DB_RECORDTYPE /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_FreeNameList(/*0*/ DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, /*1*/ NameList: platform.Security.CSSM_NAME_LIST_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_FreeUniqueRecord(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ UniqueRecord: platform.Security.CSSM_DB_UNIQUE_RECORD_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_db_unique_record>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_GetDbAcl(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ SelectionTag: platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ NumberOfAclInfos: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ AclInfos: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_GetDbNameFromHandle(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ DbName: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_GetDbNames(/*0*/ DLHandle: platform.Security.CSSM_DL_HANDLE /* = kotlin.Long */, /*1*/ NameList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_NAME_LIST_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_NAME_LIST_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_name_list> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_GetDbOwner(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ Owner: platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DL_PassThrough(/*0*/ DLDBHandle: kotlinx.cinterop.CValue<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>, /*1*/ PassThroughId: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ InputParams: kotlinx.cinterop.CValuesRef<*>?, /*3*/ OutputParams: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptData(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ CipherBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ ClearBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesDecrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, /*6*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptDataFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptDataInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptDataInitP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptDataP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ CipherBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ ClearBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesDecrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, /*6*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*7*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DecryptDataUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ CipherBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ ClearBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesDecrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DeleteContext(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DeleteContextAttributes(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ ContextAttributes: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT_ATTRIBUTE /* = platform.Security.cssm_context_attribute */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DeriveKey(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Param: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*2*/ KeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ KeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ KeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*5*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*6*/ DerivedKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DigestData(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ Digest: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DigestDataClone(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ ClonednewCCHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CC_HANDLEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DigestDataFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Digest: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DigestDataInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_DigestDataUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptData(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ ClearBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ CipherBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesEncrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, /*6*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptDataFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptDataInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptDataInitP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptDataP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ ClearBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ CipherBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesEncrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?, /*6*/ RemData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*7*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_EncryptDataUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ ClearBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ ClearBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ CipherBufs: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*4*/ CipherBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ bytesEncrypted: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_SIZEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_SIZE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_FreeContext(/*0*/ Context: platform.Security.CSSM_CONTEXT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_FreeKey(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ KeyPtr: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*3*/ Delete: platform.Security.CSSM_BOOL /* = kotlin.Int */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateAlgorithmParams(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ ParamBits: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ Param: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateKey(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ KeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ KeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ KeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*5*/ Key: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateKeyP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ KeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ KeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ KeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*5*/ Key: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*6*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateKeyPair(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ PublicKeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ PublicKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ PublicKeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ PublicKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*5*/ PrivateKeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ PrivateKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*7*/ PrivateKeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*8*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*9*/ PrivateKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateKeyPairP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ PublicKeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ PublicKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ PublicKeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ PublicKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*5*/ PrivateKeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ PrivateKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*7*/ PrivateKeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*8*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*9*/ PrivateKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*10*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateMac(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ Mac: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateMacFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Mac: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateMacInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateMacUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GenerateRandom(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ RandomNumber: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetAPIMemoryFunctions(/*0*/ AddInHandle: platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, /*1*/ AppMemoryFuncs: platform.Security.CSSM_API_MEMORY_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_API_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetContext(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Context: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetContextAttribute(/*0*/ Context: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?, /*1*/ AttributeType: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ ContextAttribute: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CONTEXT_ATTRIBUTE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_context_attribute> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetKeyAcl(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ SelectionTag: platform.Security.CSSM_STRING? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*3*/ NumberOfAclInfos: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*4*/ AclInfos: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetKeyOwner(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ Owner: platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetModuleGUIDFromHandle(/*0*/ ModuleHandle: platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, /*1*/ ModuleGUID: platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetPrivilege(/*0*/ Privilege: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_PRIVILEGEVar /* = kotlinx.cinterop.ULongVarOf<platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetSubserviceUIDFromHandle(/*0*/ ModuleHandle: platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */, /*1*/ SubserviceUID: platform.Security.CSSM_SUBSERVICE_UID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_subservice_uid>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_GetTimeValue(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ TimeAlgorithm: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ TimeData: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_Init(/*0*/ Version: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_VERSION /* = platform.Security.cssm_version */>?, /*1*/ Scope: platform.Security.CSSM_PRIVILEGE_SCOPE /* = kotlin.UInt */, /*2*/ CallerGuid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*3*/ KeyHierarchy: platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */, /*4*/ PvcPolicy: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_PVC_MODEVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_PVC_MODE /* = kotlin.UInt */> */>?, /*5*/ Reserved: kotlinx.cinterop.CValuesRef<*>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_Introduce(/*0*/ ModuleID: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*1*/ KeyHierarchy: platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ListAttachedModuleManagers(/*0*/ NumberOfModuleManagers: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*1*/ ModuleManagerGuids: platform.Security.CSSM_GUID_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_guid>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ModuleAttach(/*0*/ ModuleGuid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*1*/ Version: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_VERSION /* = platform.Security.cssm_version */>?, /*2*/ MemoryFuncs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_API_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?, /*3*/ SubserviceID: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ SubServiceType: platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */, /*5*/ AttachFlags: platform.Security.CSSM_ATTACH_FLAGS /* = kotlin.UInt */, /*6*/ KeyHierarchy: platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */, /*7*/ FunctionTable: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FUNC_NAME_ADDR /* = platform.Security.cssm_func_name_addr */>?, /*8*/ NumFunctionTable: platform.Security.uint32 /* = kotlin.UInt */, /*9*/ Reserved: kotlinx.cinterop.CValuesRef<*>?, /*10*/ NewModuleHandle: platform.Security.CSSM_MODULE_HANDLE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_HANDLE /* = kotlin.Long */> */>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ModuleDetach(/*0*/ ModuleHandle: platform.Security.CSSM_MODULE_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ModuleLoad(/*0*/ ModuleGuid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*1*/ KeyHierarchy: platform.Security.CSSM_KEY_HIERARCHY /* = kotlin.UInt */, /*2*/ AppNotifyCallback: platform.Security.CSSM_API_ModuleEventHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */, platform.Security.CSSM_MODULE_EVENT /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */, /*3*/ AppNotifyCallbackCtx: kotlinx.cinterop.CValuesRef<*>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_ModuleUnload(/*0*/ ModuleGuid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*1*/ AppNotifyCallback: platform.Security.CSSM_API_ModuleEventHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.uint32 /* = kotlin.UInt */, platform.Security.CSSM_SERVICE_TYPE /* = kotlin.UInt */, platform.Security.CSSM_MODULE_EVENT /* = kotlin.UInt */) -> platform.Security.CSSM_RETURN /* = kotlin.Int */>>? */, /*2*/ AppNotifyCallbackCtx: kotlinx.cinterop.CValuesRef<*>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_QueryKeySizeInBits(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*3*/ KeySize: platform.Security.CSSM_KEY_SIZE_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key_size>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_QuerySize(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Encrypt: platform.Security.CSSM_BOOL /* = kotlin.Int */, /*2*/ QuerySizeCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ DataBlockSizes: platform.Security.CSSM_QUERY_SIZE_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_query_size_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_RetrieveCounter(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ Counter: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_RetrieveUniqueId(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ UniqueID: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SetContext(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Context: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT /* = platform.Security.cssm_context */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SetPrivilege(/*0*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SignData(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ DigestAlgorithm: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*4*/ Signature: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SignDataFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Signature: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SignDataInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_SignDataUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_ApplyCrlToDb(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ CrlToBeApplied: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, /*4*/ SignerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ ApplyCrlVerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*6*/ ApplyCrlVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertCreateTemplate(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ CertFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*4*/ CertTemplate: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertGetAllTemplateFields(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CertTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ NumberOfFields: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*4*/ CertFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_FIELD_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_field> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertGroupConstruct(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ DBList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, /*4*/ ConstructParams: kotlinx.cinterop.CValuesRef<*>?, /*5*/ CertGroupFrag: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*6*/ CertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertGroupPrune(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ DBList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, /*3*/ OrderedCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*4*/ PrunedCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertGroupToTupleGroup(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*3*/ TupleGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TUPLEGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TUPLEGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tuplegroup> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertGroupVerify(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ CertGroupToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*4*/ VerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*5*/ VerifyContextResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertReclaimAbort(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ KeyCacheHandle: platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertReclaimKey(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*2*/ CertIndex: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ KeyCacheHandle: platform.Security.CSSM_LONG_HANDLE /* = kotlin.ULong */, /*4*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*5*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertRemoveFromCrlTemplate(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ OldCrlTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ CertGroupToBeRemoved: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ RevokerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*6*/ RevokerVerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*7*/ RevokerVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, /*8*/ NewCrlTemplate: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertRevoke(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ OldCrlTemplate: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ CertGroupToBeRevoked: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ RevokerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*6*/ RevokerVerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*7*/ RevokerVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, /*8*/ Reason: platform.Security.CSSM_TP_CERTCHANGE_REASON /* = kotlin.UInt */, /*9*/ NewCrlTemplate: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CertSign(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*3*/ CertTemplateToBeSigned: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ SignerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ SignerVerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*6*/ SignerVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, /*7*/ SignedCert: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_ConfirmCredResult(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ ReferenceIdentifier: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CallerAuthCredentials: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, /*3*/ Responses: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_CONFIRM_RESPONSE /* = platform.Security.cssm_tp_confirm_response */>?, /*4*/ PreferredAuthority: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CrlCreateTemplate(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ NumberOfFields: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ CrlFields: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_FIELD /* = platform.Security.cssm_field */>?, /*4*/ NewCrlTemplate: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CrlSign(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*3*/ CrlToBeSigned: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, /*4*/ SignerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ SignerVerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*6*/ SignerVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */, /*7*/ SignedCrl: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_CrlVerify(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*3*/ CrlToBeVerified: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ENCODED_CRL /* = platform.Security.cssm_encoded_crl */>?, /*4*/ SignerCertGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP /* = platform.Security.cssm_certgroup */>?, /*5*/ VerifyContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT /* = platform.Security.cssm_tp_verify_context */>?, /*6*/ RevokerVerifyResult: platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_FormRequest(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ PreferredAuthority: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, /*2*/ FormType: platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, /*3*/ BlankForm: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_FormSubmit(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ FormType: platform.Security.CSSM_TP_FORM_TYPE /* = kotlin.UInt */, /*2*/ Form: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ ClearanceAuthority: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, /*4*/ RepresentedAuthority: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, /*5*/ Credentials: platform.Security.CSSM_ACCESS_CREDENTIALS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_access_credentials>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_PassThrough(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*3*/ DBList: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_LIST /* = platform.Security.cssm_dl_db_list */>?, /*4*/ PassThroughId: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ InputParams: kotlinx.cinterop.CValuesRef<*>?, /*6*/ OutputParams: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_ReceiveConfirmation(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ ReferenceIdentifier: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ Responses: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_CONFIRM_RESPONSE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_confirm_response> */> */>?, /*3*/ ElapsedTime: kotlinx.cinterop.CValuesRef<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_RetrieveCredResult(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ ReferenceIdentifier: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ CallerAuthCredentials: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, /*3*/ EstimatedTime: kotlinx.cinterop.CValuesRef<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, /*4*/ ConfirmationRequired: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_BOOLVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_BOOL /* = kotlin.Int */> */>?, /*5*/ RetrieveOutput: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_RESULT_SET_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_RESULT_SET_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_result_set> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_SubmitCredRequest(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ PreferredAuthority: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_AUTHORITY_ID /* = platform.Security.cssm_tp_authority_id */>?, /*2*/ RequestType: platform.Security.CSSM_TP_AUTHORITY_REQUEST_TYPE /* = kotlin.UInt */, /*3*/ RequestInput: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_REQUEST_SET /* = platform.Security.cssm_tp_request_set */>?, /*4*/ CallerAuthContext: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_CALLERAUTH_CONTEXT /* = platform.Security.cssm_tp_callerauth_context */>?, /*5*/ EstimatedTime: kotlinx.cinterop.CValuesRef<platform.Security.sint32Var /* = kotlinx.cinterop.IntVarOf<platform.Security.sint32 /* = kotlin.Int */> */>?, /*6*/ ReferenceIdentifier: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_TP_TupleGroupToCertGroup(/*0*/ TPHandle: platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */, /*1*/ CLHandle: platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */, /*2*/ TupleGroup: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TUPLEGROUP /* = platform.Security.cssm_tuplegroup */>?, /*3*/ CertTemplates: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERTGROUP_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_CERTGROUP_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_certgroup> */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_Terminate(): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_Unintroduce(/*0*/ ModuleID: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_UnwrapKey(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ PublicKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ WrappedKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_WRAP_KEY /* = platform.Security.cssm_key */>?, /*3*/ KeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ KeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ KeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*6*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*7*/ UnwrappedKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*8*/ DescriptiveData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_UnwrapKeyP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ PublicKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*2*/ WrappedKey: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_WRAP_KEY /* = platform.Security.cssm_key */>?, /*3*/ KeyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*4*/ KeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*5*/ KeyLabel: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*6*/ CredAndAclEntry: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_RESOURCE_CONTROL_CONTEXT /* = platform.Security.cssm_resource_control_context */>?, /*7*/ UnwrappedKey: platform.Security.CSSM_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_key>? */, /*8*/ DescriptiveData: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */, /*9*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_UpdateContextAttributes(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ NumberOfAttributes: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ ContextAttributes: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CONTEXT_ATTRIBUTE /* = platform.Security.cssm_context_attribute */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyData(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ DigestAlgorithm: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*4*/ Signature: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyDataFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Signature: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyDataInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyDataUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyDevice(/*0*/ CSPHandle: platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */, /*1*/ DeviceCert: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyMac(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ Mac: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyMacFinal(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ Mac: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyMacInit(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_VerifyMacUpdate(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ DataBufs: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*2*/ DataBufCount: platform.Security.uint32 /* = kotlin.UInt */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_WrapKey(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*3*/ DescriptiveData: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ WrappedKey: platform.Security.CSSM_WRAP_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>? */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun CSSM_WrapKeyP(/*0*/ CCHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*1*/ AccessCred: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>?, /*2*/ Key: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>?, /*3*/ DescriptiveData: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*4*/ WrappedKey: platform.Security.CSSM_WRAP_KEY_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>? */, /*5*/ Privilege: platform.Security.CSSM_PRIVILEGE /* = kotlin.ULong */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun MDS_Initialize(/*0*/ pCallerGuid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_GUID /* = platform.Security.cssm_guid */>?, /*1*/ pMemoryFunctions: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_MEMORY_FUNCS /* = platform.Security.cssm_memory_funcs */>?, /*2*/ pDlFunctions: platform.Security.MDS_FUNCS_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.mds_funcs>? */, /*3*/ hMds: kotlinx.cinterop.CValuesRef<platform.Security.MDS_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.MDS_HANDLE /* = kotlin.Long */> */>?): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun MDS_Install(/*0*/ MdsHandle: platform.Security.MDS_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun MDS_Terminate(/*0*/ MdsHandle: platform.Security.MDS_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun MDS_Uninstall(/*0*/ MdsHandle: platform.Security.MDS_HANDLE /* = kotlin.Long */): platform.Security.CSSM_RETURN /* = kotlin.Int */ { TODO() }

fun SSLAddDistinguishedName(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ derDN: kotlinx.cinterop.CValuesRef<*>?, /*2*/ derDNLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLClose(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLContextGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SSLCopyALPNProtocols(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocols: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyCertificateAuthorities(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ certificates: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyDistinguishedNames(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyPeerCertificates(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ certs: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyPeerTrust(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ trust: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyRequestedPeerName(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerName: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ peerNameLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyRequestedPeerNameLength(/*0*/ ctx: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerNameLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCopyTrustedRoots(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ trustedRoots: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLCreateContext(/*0*/ alloc: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ protocolSide: platform.Security.SSLProtocolSide, /*2*/ connectionType: platform.Security.SSLConnectionType): platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */ { TODO() }

fun SSLDisposeContext(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetAllowsAnyRoot(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ anyRoot: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetAllowsExpiredCerts(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ allowsExpired: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetAllowsExpiredRoots(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ allowsExpired: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetBufferedReadSize(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ bufSize: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetClientCertificateState(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ clientState: kotlinx.cinterop.CValuesRef<platform.Security.SSLClientCertificateState.Var>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetConnection(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ connection: kotlinx.cinterop.CValuesRef<platform.Security.SSLConnectionRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLConnectionRef /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetDatagramWriteSize(/*0*/ dtlsContext: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ bufSize: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetDiffieHellmanParams(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ dhParams: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ dhParamsLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetEnableCertVerify(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ enableVerify: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetEnabledCiphers(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ ciphers: kotlinx.cinterop.CValuesRef<platform.Security.SSLCipherSuiteVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SSLCipherSuite /* = kotlin.UInt */> */>?, /*2*/ numCiphers: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetMaxDatagramRecordSize(/*0*/ dtlsContext: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ maxSize: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetNegotiatedCipher(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ cipherSuite: kotlinx.cinterop.CValuesRef<platform.Security.SSLCipherSuiteVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SSLCipherSuite /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetNegotiatedProtocolVersion(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocol: kotlinx.cinterop.CValuesRef<platform.Security.SSLProtocolVar /* = kotlinx.cinterop.IntVarOf<platform.Security.SSLProtocol /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetNumberEnabledCiphers(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ numCiphers: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetNumberSupportedCiphers(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ numCiphers: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetPeerDomainName(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerName: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ peerNameLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetPeerDomainNameLength(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerNameLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetPeerID(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerID: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ peerIDLen: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetProtocolVersion(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocol: kotlinx.cinterop.CValuesRef<platform.Security.SSLProtocolVar /* = kotlinx.cinterop.IntVarOf<platform.Security.SSLProtocol /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetProtocolVersionEnabled(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocol: platform.Security.SSLProtocol /* = kotlin.Int */, /*2*/ enable: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetProtocolVersionMax(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ maxVersion: kotlinx.cinterop.CValuesRef<platform.Security.SSLProtocolVar /* = kotlinx.cinterop.IntVarOf<platform.Security.SSLProtocol /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetProtocolVersionMin(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ minVersion: kotlinx.cinterop.CValuesRef<platform.Security.SSLProtocolVar /* = kotlinx.cinterop.IntVarOf<platform.Security.SSLProtocol /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetRsaBlinding(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ blinding: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetSessionOption(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ option: platform.Security.SSLSessionOption /* = kotlin.Int */, /*2*/ value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetSessionState(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ state: kotlinx.cinterop.CValuesRef<platform.Security.SSLSessionState.Var>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLGetSupportedCiphers(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ ciphers: kotlinx.cinterop.CValuesRef<platform.Security.SSLCipherSuiteVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SSLCipherSuite /* = kotlin.UInt */> */>?, /*2*/ numCiphers: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLHandshake(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLNewContext(/*0*/ isServer: kotlin.Boolean, /*1*/ contextPtr: kotlinx.cinterop.CValuesRef<platform.Security.SSLContextRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SSLContextRef /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLReHandshake(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLRead(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<*>?, /*2*/ dataLength: platform.posix.size_t /* = kotlin.ULong */, /*3*/ processed: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetALPNProtocols(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocols: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetAllowsAnyRoot(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ anyRoot: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetAllowsExpiredCerts(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ allowsExpired: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetAllowsExpiredRoots(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ allowsExpired: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetCertificate(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ certRefs: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetCertificateAuthorities(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ certificateOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ replaceExisting: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetClientSideAuthenticate(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ auth: platform.Security.SSLAuthenticate): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetConnection(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ connection: platform.Security.SSLConnectionRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetDatagramHelloCookie(/*0*/ dtlsContext: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ cookie: kotlinx.cinterop.CValuesRef<*>?, /*2*/ cookieLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetDiffieHellmanParams(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ dhParams: kotlinx.cinterop.CValuesRef<*>?, /*2*/ dhParamsLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetEnableCertVerify(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ enableVerify: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetEnabledCiphers(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ ciphers: kotlinx.cinterop.CValuesRef<platform.Security.SSLCipherSuiteVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SSLCipherSuite /* = kotlin.UInt */> */>?, /*2*/ numCiphers: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetEncryptionCertificate(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ certRefs: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetError(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ status: platform.darwin.OSStatus /* = kotlin.Int */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetIOFuncs(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ readFunc: platform.Security.SSLReadFunc? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SSLConnectionRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?) -> platform.darwin.OSStatus /* = kotlin.Int */>>? */, /*2*/ writeFunc: platform.Security.SSLWriteFunc? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SSLConnectionRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?) -> platform.darwin.OSStatus /* = kotlin.Int */>>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetMaxDatagramRecordSize(/*0*/ dtlsContext: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ maxSize: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetOCSPResponse(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ response: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetPeerDomainName(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerName: kotlin.String?, /*2*/ peerNameLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetPeerID(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ peerID: kotlinx.cinterop.CValuesRef<*>?, /*2*/ peerIDLen: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetProtocolVersion(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ version: platform.Security.SSLProtocol /* = kotlin.Int */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetProtocolVersionEnabled(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ protocol: platform.Security.SSLProtocol /* = kotlin.Int */, /*2*/ enable: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetProtocolVersionMax(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ maxVersion: platform.Security.SSLProtocol /* = kotlin.Int */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetProtocolVersionMin(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ minVersion: platform.Security.SSLProtocol /* = kotlin.Int */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetRsaBlinding(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ blinding: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetSessionConfig(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ config: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetSessionOption(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ option: platform.Security.SSLSessionOption /* = kotlin.Int */, /*2*/ value: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetSessionTicketsEnabled(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ enabled: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLSetTrustedRoots(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ trustedRoots: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ replaceExisting: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SSLWrite(/*0*/ context: platform.Security.SSLContextRef? /* = kotlinx.cinterop.CPointer<cnames.structs.SSLContext>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<*>?, /*2*/ dataLength: platform.posix.size_t /* = kotlin.ULong */, /*3*/ processed: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLCopyAuthorizations(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */): platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */ { TODO() }

fun SecACLCopyContents(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ applicationList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?, /*2*/ description: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?, /*3*/ promptSelector: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainPromptSelectorVar /* = kotlinx.cinterop.UShortVarOf<platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLCopySimpleContents(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ applicationList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?, /*2*/ description: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?, /*3*/ promptSelector: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR /* = platform.Security.cssm_acl_keychain_prompt_selector */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLCreateFromSimpleContents(/*0*/ access: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ applicationList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ description: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*3*/ promptSelector: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR /* = platform.Security.cssm_acl_keychain_prompt_selector */>?, /*4*/ newAcl: kotlinx.cinterop.CValuesRef<platform.Security.SecACLRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecACLRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLCreateWithSimpleContents(/*0*/ access: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ applicationList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ description: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*3*/ promptSelector: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */, /*4*/ newAcl: kotlinx.cinterop.CValuesRef<platform.Security.SecACLRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecACLRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLGetAuthorizations(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ tags: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_AUTHORIZATION_TAGVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */> */>?, /*2*/ tagCount: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecACLRemove(/*0*/ aclRef: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLSetAuthorizations(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ tags: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_AUTHORIZATION_TAGVar /* = kotlinx.cinterop.IntVarOf<platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */> */>?, /*2*/ tagCount: platform.Security.uint32 /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLSetContents(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ applicationList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ description: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*3*/ promptSelector: platform.Security.SecKeychainPromptSelector /* = kotlin.UShort */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLSetSimpleContents(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ applicationList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ description: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*3*/ promptSelector: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_KEYCHAIN_PROMPT_SELECTOR /* = platform.Security.cssm_acl_keychain_prompt_selector */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecACLUpdateAuthorizations(/*0*/ acl: platform.Security.SecACLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustRef>? */, /*1*/ authorizations: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessControlCreateWithFlags(/*0*/ allocator: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ protection: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ flags: platform.Security.SecAccessControlCreateFlags /* = kotlin.ULong */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecAccessControlRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessControlRef>? */ { TODO() }

fun SecAccessControlGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecAccessCopyACLList(/*0*/ accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ aclList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessCopyMatchingACLList(/*0*/ accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ authorizationTag: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */ { TODO() }

fun SecAccessCopyOwnerAndACL(/*0*/ accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ userId: kotlinx.cinterop.CValuesRef<platform.posix.uid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uid_t /* = kotlin.UInt */> */>?, /*2*/ groupId: kotlinx.cinterop.CValuesRef<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */>?, /*3*/ ownerType: kotlinx.cinterop.CValuesRef<platform.Security.SecAccessOwnerTypeVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecAccessOwnerType /* = kotlin.UInt */> */>?, /*4*/ aclList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessCopySelectedACLList(/*0*/ accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ action: platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */, /*2*/ aclList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessCreate(/*0*/ descriptor: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ trustedlist: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ accessRef: kotlinx.cinterop.CValuesRef<platform.Security.SecAccessRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessCreateFromOwnerAndACL(/*0*/ owner: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_OWNER_PROTOTYPE /* = platform.Security.cssm_acl_owner_prototype */>?, /*1*/ aclCount: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ acls: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_ENTRY_INFO /* = platform.Security.cssm_acl_entry_info */>?, /*3*/ accessRef: kotlinx.cinterop.CValuesRef<platform.Security.SecAccessRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessCreateWithOwnerAndACL(/*0*/ userId: platform.posix.uid_t /* = kotlin.UInt */, /*1*/ groupId: platform.posix.gid_t /* = kotlin.UInt */, /*2*/ ownerType: platform.Security.SecAccessOwnerType /* = kotlin.UInt */, /*3*/ acls: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*4*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */ { TODO() }

fun SecAccessGetOwnerAndACL(/*0*/ accessRef: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*1*/ owner: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_OWNER_PROTOTYPE_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_owner_prototype> */> */>?, /*2*/ aclCount: kotlinx.cinterop.CValuesRef<platform.Security.uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.Security.uint32 /* = kotlin.UInt */> */>?, /*3*/ acls: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ACL_ENTRY_INFO_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_ACL_ENTRY_INFO_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_acl_entry_info> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecAccessGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecCertificateAddToKeychain(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCopyCommonName(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ commonName: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCopyData(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyEmailAddresses(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ emailAddresses: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCopyKey(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecCertificateCopyLongDescription(/*0*/ alloc: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */ { TODO() }

fun SecCertificateCopyNormalizedIssuerContent(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyNormalizedIssuerSequence(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyNormalizedSubjectContent(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyNormalizedSubjectSequence(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyPreference(/*0*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ keyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*2*/ certificate: kotlinx.cinterop.CValuesRef<platform.Security.SecCertificateRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCertificateRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCopyPreferred(/*0*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ keyUsage: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */ { TODO() }

fun SecCertificateCopyPublicKey(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCopySerialNumber(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopySerialNumberData(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecCertificateCopyShortDescription(/*0*/ alloc: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */ { TODO() }

fun SecCertificateCopySubjectSummary(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */ { TODO() }

fun SecCertificateCopyValues(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ keys: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecCertificateCreateFromData(/*0*/ data: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*1*/ type: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */, /*2*/ encoding: platform.Security.CSSM_CERT_ENCODING /* = kotlin.UInt */, /*3*/ certificate: kotlinx.cinterop.CValuesRef<platform.Security.SecCertificateRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCertificateRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateCreateWithData(/*0*/ allocator: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ data: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */ { TODO() }

fun SecCertificateGetAlgorithmID(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ algid: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_X509_ALGORITHM_IDENTIFIER /* = platform.Security.cssm_x509_algorithm_identifier */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetCLHandle(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ clHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CL_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_CL_HANDLE /* = kotlin.Long */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetData(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ data: platform.Security.CSSM_DATA_PTR? /* = kotlinx.cinterop.CPointer<platform.Security.cssm_data>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetIssuer(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ issuer: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetSubject(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ subject: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_X509_NAME /* = platform.Security.cssm_x509_name */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetType(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ certificateType: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CERT_TYPEVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecCertificateSetPreference(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ keyUsage: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ date: platform.CoreFoundation.CFDateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDate>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCertificateSetPreferred(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ keyUsage: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCheckValidity(/*0*/ code: platform.Security.SecCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCheckValidityWithErrors(/*0*/ code: platform.Security.SecCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */, /*3*/ errors: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopyDesignatedRequirement(/*0*/ code: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: kotlinx.cinterop.CValuesRef<platform.Security.SecRequirementRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRequirementRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopyGuestWithAttributes(/*0*/ host: platform.Security.SecCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*2*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*3*/ guest: kotlinx.cinterop.CValuesRef<platform.Security.SecCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopyHost(/*0*/ guest: platform.Security.SecCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ host: kotlinx.cinterop.CValuesRef<platform.Security.SecCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopyPath(/*0*/ staticCode: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ path: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFURLRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFURLRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFURL> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopySelf(/*0*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*1*/ self: kotlinx.cinterop.CValuesRef<platform.Security.SecCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopySigningInformation(/*0*/ code: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ information: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDictionaryRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDictionaryRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeCopyStaticCode(/*0*/ code: platform.Security.SecCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ staticCode: kotlinx.cinterop.CValuesRef<platform.Security.SecStaticCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecStaticCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCodeGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecCodeMapMemory(/*0*/ code: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecCopyErrorMessageString(/*0*/ status: platform.darwin.OSStatus /* = kotlin.Int */, /*1*/ reserved: kotlinx.cinterop.CValuesRef<*>?): platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */ { TODO() }

fun SecDecodeTransformCreate(/*0*/ DecodeType: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecDecryptTransformCreate(/*0*/ keyRef: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecDigestTransformCreate(/*0*/ digestType: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ digestLength: platform.CoreFoundation.CFIndex /* = kotlin.Long */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecEncodeTransformCreate(/*0*/ encodeType: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecEncryptTransformCreate(/*0*/ keyRef: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecGroupTransformGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecHostCreateGuest(/*0*/ host: platform.Security.SecGuestRef /* = kotlin.UInt */, /*1*/ status: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ path: platform.CoreFoundation.CFURLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFURL>? */, /*3*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*4*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*5*/ newGuest: kotlinx.cinterop.CValuesRef<platform.Security.SecGuestRefVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecGuestRef /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecHostRemoveGuest(/*0*/ host: platform.Security.SecGuestRef /* = kotlin.UInt */, /*1*/ guest: platform.Security.SecGuestRef /* = kotlin.UInt */, /*2*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecHostSelectGuest(/*0*/ guestRef: platform.Security.SecGuestRef /* = kotlin.UInt */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecHostSelectedGuest(/*0*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*1*/ guestRef: kotlinx.cinterop.CValuesRef<platform.Security.SecGuestRefVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecGuestRef /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecHostSetGuestStatus(/*0*/ guestRef: platform.Security.SecGuestRef /* = kotlin.UInt */, /*1*/ status: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*3*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecHostSetHostingPort(/*0*/ hostingPort: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityCopyCertificate(/*0*/ identityRef: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */, /*1*/ certificateRef: kotlinx.cinterop.CValuesRef<platform.Security.SecCertificateRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecCertificateRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityCopyPreference(/*0*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ keyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */, /*2*/ validIssuers: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*3*/ identity: kotlinx.cinterop.CValuesRef<platform.Security.SecIdentityRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentityRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityCopyPreferred(/*0*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ keyUsage: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ validIssuers: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */ { TODO() }

fun SecIdentityCopyPrivateKey(/*0*/ identityRef: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */, /*1*/ privateKeyRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityCopySystemIdentity(/*0*/ domain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ idRef: kotlinx.cinterop.CValuesRef<platform.Security.SecIdentityRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentityRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef> */> */>?, /*2*/ actualDomain: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityCreateWithCertificate(/*0*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ certificateRef: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*2*/ identityRef: kotlinx.cinterop.CValuesRef<platform.Security.SecIdentityRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentityRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentityGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecIdentitySearchCopyNext(/*0*/ searchRef: platform.Security.SecIdentitySearchRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentitySearchRef>? */, /*1*/ identity: kotlinx.cinterop.CValuesRef<platform.Security.SecIdentityRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentityRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentitySearchCreate(/*0*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ keyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */, /*2*/ searchRef: kotlinx.cinterop.CValuesRef<platform.Security.SecIdentitySearchRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecIdentitySearchRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentitySearchRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentitySearchGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecIdentitySetPreference(/*0*/ identity: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */, /*1*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ keyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentitySetPreferred(/*0*/ identity: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */, /*1*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ keyUsage: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecIdentitySetSystemIdentity(/*0*/ domain: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ idRef: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemAdd(/*0*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFTypeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFTypeRef /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemCopyMatching(/*0*/ query: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFTypeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFTypeRef /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemDelete(/*0*/ query: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemExport(/*0*/ secItemOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ outputFormat: platform.Security.SecExternalFormat /* = kotlin.UInt */, /*2*/ flags: platform.Security.SecItemImportExportFlags /* = kotlin.UInt */, /*3*/ keyParams: kotlinx.cinterop.CValuesRef<platform.Security.SecItemImportExportKeyParameters>?, /*4*/ exportedData: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemImport(/*0*/ importedData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ fileNameOrExtension: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ inputFormat: kotlinx.cinterop.CValuesRef<platform.Security.SecExternalFormatVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecExternalFormat /* = kotlin.UInt */> */>?, /*3*/ itemType: kotlinx.cinterop.CValuesRef<platform.Security.SecExternalItemType.Var>?, /*4*/ flags: platform.Security.SecItemImportExportFlags /* = kotlin.UInt */, /*5*/ keyParams: kotlinx.cinterop.CValuesRef<platform.Security.SecItemImportExportKeyParameters>?, /*6*/ importKeychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*7*/ outItems: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecItemUpdate(/*0*/ query: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ attributesToUpdate: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyCopyAttributes(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecKeyCopyExternalRepresentation(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeyCopyKeyExchangeResult(/*0*/ privateKey: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ publicKey: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*3*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*4*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeyCopyPublicKey(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyCreateDecryptedData(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ ciphertext: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeyCreateEncryptedData(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ plaintext: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeyCreateFromData(/*0*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ keyData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyCreatePair(/*0*/ keychainRef: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ algorithm: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ keySizeInBits: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ contextHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*4*/ publicKeyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */, /*5*/ publicKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ privateKeyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */, /*7*/ privateKeyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*8*/ initialAccess: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*9*/ publicKey: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?, /*10*/ privateKey: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyCreateRandomKey(/*0*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyCreateSignature(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ dataToSign: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeyCreateWithData(/*0*/ keyData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyDeriveFromPassword(/*0*/ password: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyGenerate(/*0*/ keychainRef: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ algorithm: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */, /*2*/ keySizeInBits: platform.Security.uint32 /* = kotlin.UInt */, /*3*/ contextHandle: platform.Security.CSSM_CC_HANDLE /* = kotlin.ULong */, /*4*/ keyUsage: platform.Security.CSSM_KEYUSE /* = kotlin.UInt */, /*5*/ keyAttr: platform.Security.uint32 /* = kotlin.UInt */, /*6*/ initialAccess: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*7*/ keyRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyGeneratePair(/*0*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ publicKey: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?, /*2*/ privateKey: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyGeneratePairAsync(/*0*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ deliveryQueue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */, /*2*/ result: platform.Security.SecKeyGeneratePairBlock? /* = ((platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */) -> kotlin.Unit)? */) { TODO() }

fun SecKeyGenerateSymmetric(/*0*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyGetBlockSize(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun SecKeyGetCSPHandle(/*0*/ keyRef: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ cspHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CSP_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyGetCSSMKey(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ cssmKey: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_KEY /* = platform.Security.cssm_key */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyGetCredentials(/*0*/ keyRef: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ operation: platform.Security.CSSM_ACL_AUTHORIZATION_TAG /* = kotlin.Int */, /*2*/ credentialType: platform.Security.SecCredentialType /* = kotlin.UInt */, /*3*/ outCredentials: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_ACCESS_CREDENTIALS /* = platform.Security.cssm_access_credentials */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeyGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecKeyIsAlgorithmSupported(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ operation: platform.Security.SecKeyOperationType /* = kotlin.Long */, /*2*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): kotlin.Boolean { TODO() }

fun SecKeyUnwrapSymmetric(/*0*/ keyToUnwrap: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?, /*1*/ unwrappingKey: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*2*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecKeyVerifySignature(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ algorithm: platform.Security.SecKeyAlgorithm? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ signedData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*3*/ signature: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*4*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): kotlin.Boolean { TODO() }

fun SecKeyWrapSymmetric(/*0*/ keyToWrap: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ wrappingKey: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*2*/ parameters: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecKeychainAddCallback(/*0*/ callbackFunction: platform.Security.SecKeychainCallback? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SecKeychainEvent /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.SecKeychainCallbackInfo>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.darwin.OSStatus /* = kotlin.Int */>>? */, /*1*/ eventMask: platform.Security.SecKeychainEventMask /* = kotlin.UInt */, /*2*/ userContext: kotlinx.cinterop.CValuesRef<*>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainAddGenericPassword(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ serviceNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ serviceName: kotlin.String?, /*3*/ accountNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*4*/ accountName: kotlin.String?, /*5*/ passwordLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*6*/ passwordData: kotlinx.cinterop.CValuesRef<*>?, /*7*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainAddInternetPassword(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ serverNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ serverName: kotlin.String?, /*3*/ securityDomainLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*4*/ securityDomain: kotlin.String?, /*5*/ accountNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*6*/ accountName: kotlin.String?, /*7*/ pathLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*8*/ path: kotlin.String?, /*9*/ port: platform.darwin.UInt16 /* = kotlin.UShort */, /*10*/ protocol: platform.Security.SecProtocolType /* = kotlin.UInt */, /*11*/ authenticationType: platform.Security.SecAuthenticationType /* = kotlin.UInt */, /*12*/ passwordLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*13*/ passwordData: kotlinx.cinterop.CValuesRef<*>?, /*14*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainAttributeInfoForItemID(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ itemID: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ info: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.SecKeychainAttributeInfo> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.SecKeychainAttributeInfo>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopyAccess(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ access: kotlinx.cinterop.CValuesRef<platform.Security.SecAccessRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopyDefault(/*0*/ keychain: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopyDomainDefault(/*0*/ domain: platform.Security.SecPreferencesDomain, /*1*/ keychain: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopyDomainSearchList(/*0*/ domain: platform.Security.SecPreferencesDomain, /*1*/ searchList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopySearchList(/*0*/ searchList: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCopySettings(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ outSettings: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainSettings>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainCreate(/*0*/ pathName: kotlin.String?, /*1*/ passwordLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ password: kotlinx.cinterop.CValuesRef<*>?, /*3*/ promptUser: kotlin.Boolean, /*4*/ initialAccess: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*5*/ keychain: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainDelete(/*0*/ keychainOrArray: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainFindGenericPassword(/*0*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ serviceNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ serviceName: kotlin.String?, /*3*/ accountNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*4*/ accountName: kotlin.String?, /*5*/ passwordLength: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?, /*6*/ passwordData: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*7*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainFindInternetPassword(/*0*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ serverNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ serverName: kotlin.String?, /*3*/ securityDomainLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*4*/ securityDomain: kotlin.String?, /*5*/ accountNameLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*6*/ accountName: kotlin.String?, /*7*/ pathLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*8*/ path: kotlin.String?, /*9*/ port: platform.darwin.UInt16 /* = kotlin.UShort */, /*10*/ protocol: platform.Security.SecProtocolType /* = kotlin.UInt */, /*11*/ authenticationType: platform.Security.SecAuthenticationType /* = kotlin.UInt */, /*12*/ passwordLength: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?, /*13*/ passwordData: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*14*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainFreeAttributeInfo(/*0*/ info: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeInfo>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetCSPHandle(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ cspHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_CSP_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_CSP_HANDLE /* = kotlin.Long */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetDLDBHandle(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ dldbHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetPath(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ ioPathLength: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?, /*2*/ pathName: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetPreferenceDomain(/*0*/ domain: kotlinx.cinterop.CValuesRef<platform.Security.SecPreferencesDomain.Var>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetStatus(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ keychainStatus: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainStatusVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecKeychainStatus /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecKeychainGetUserInteractionAllowed(/*0*/ state: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainGetVersion(/*0*/ returnVers: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCopyAccess(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ access: kotlinx.cinterop.CValuesRef<platform.Security.SecAccessRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecAccessRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCopyAttributesAndData(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ info: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeInfo>?, /*2*/ itemClass: kotlinx.cinterop.CValuesRef<platform.Security.SecItemClassVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecItemClass /* = kotlin.UInt */> */>?, /*3*/ attrList: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.SecKeychainAttributeList> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.SecKeychainAttributeList>> */>?, /*4*/ length: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?, /*5*/ outData: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCopyContent(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ itemClass: kotlinx.cinterop.CValuesRef<platform.Security.SecItemClassVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecItemClass /* = kotlin.UInt */> */>?, /*2*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*3*/ length: kotlinx.cinterop.CValuesRef<platform.darwin.UInt32Var /* = kotlinx.cinterop.UIntVarOf<platform.darwin.UInt32 /* = kotlin.UInt */> */>?, /*4*/ outData: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCopyFromPersistentReference(/*0*/ persistentItemRef: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCopyKeychain(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ keychainRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCreateCopy(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ destKeychainRef: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*2*/ initialAccess: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*3*/ itemCopy: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCreateFromContent(/*0*/ itemClass: platform.Security.SecItemClass /* = kotlin.UInt */, /*1*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*2*/ length: platform.darwin.UInt32 /* = kotlin.UInt */, /*3*/ data: kotlinx.cinterop.CValuesRef<*>?, /*4*/ keychainRef: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*5*/ initialAccess: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */, /*6*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemCreatePersistentReference(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ persistentItemRef: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemDelete(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemExport(/*0*/ keychainItemOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ outputFormat: platform.Security.SecExternalFormat /* = kotlin.UInt */, /*2*/ flags: platform.Security.SecItemImportExportFlags /* = kotlin.UInt */, /*3*/ keyParams: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyImportExportParameters>?, /*4*/ exportedData: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemFreeAttributesAndData(/*0*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*1*/ data: kotlinx.cinterop.CValuesRef<*>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemFreeContent(/*0*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*1*/ data: kotlinx.cinterop.CValuesRef<*>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemGetDLDBHandle(/*0*/ keyItemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ dldbHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DL_DB_HANDLE /* = platform.Security.cssm_dl_db_handle */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecKeychainItemGetUniqueRecordID(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ uniqueRecordID: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_DB_UNIQUE_RECORD /* = platform.Security.cssm_db_unique_record */>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemImport(/*0*/ importedData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ fileNameOrExtension: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ inputFormat: kotlinx.cinterop.CValuesRef<platform.Security.SecExternalFormatVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecExternalFormat /* = kotlin.UInt */> */>?, /*3*/ itemType: kotlinx.cinterop.CValuesRef<platform.Security.SecExternalItemType.Var>?, /*4*/ flags: platform.Security.SecItemImportExportFlags /* = kotlin.UInt */, /*5*/ keyParams: kotlinx.cinterop.CValuesRef<platform.Security.SecKeyImportExportParameters>?, /*6*/ importKeychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*7*/ outItems: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemModifyAttributesAndData(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*2*/ length: platform.darwin.UInt32 /* = kotlin.UInt */, /*3*/ data: kotlinx.cinterop.CValuesRef<*>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemModifyContent(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*2*/ length: platform.darwin.UInt32 /* = kotlin.UInt */, /*3*/ data: kotlinx.cinterop.CValuesRef<*>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainItemSetAccess(/*0*/ itemRef: platform.Security.SecKeychainItemRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef>? */, /*1*/ access: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainLock(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainLockAll(): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainOpen(/*0*/ pathName: kotlin.String?, /*1*/ keychain: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainRemoveCallback(/*0*/ callbackFunction: platform.Security.SecKeychainCallback? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.Security.SecKeychainEvent /* = kotlin.UInt */, kotlinx.cinterop.CPointer<platform.Security.SecKeychainCallbackInfo>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.darwin.OSStatus /* = kotlin.Int */>>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSearchCopyNext(/*0*/ searchRef: platform.Security.SecKeychainSearchRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainSearchRef>? */, /*1*/ itemRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainItemRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainItemRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainItemRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSearchCreateFromAttributes(/*0*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ itemClass: platform.Security.SecItemClass /* = kotlin.UInt */, /*2*/ attrList: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainAttributeList>?, /*3*/ searchRef: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainSearchRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecKeychainSearchRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainSearchRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSearchGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecKeychainSetAccess(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ access: platform.Security.SecAccessRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecAccessRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetDefault(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetDomainDefault(/*0*/ domain: platform.Security.SecPreferencesDomain, /*1*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetDomainSearchList(/*0*/ domain: platform.Security.SecPreferencesDomain, /*1*/ searchList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetPreferenceDomain(/*0*/ domain: platform.Security.SecPreferencesDomain): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetSearchList(/*0*/ searchList: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetSettings(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ newSettings: kotlinx.cinterop.CValuesRef<platform.Security.SecKeychainSettings>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainSetUserInteractionAllowed(/*0*/ state: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecKeychainUnlock(/*0*/ keychain: platform.Security.SecKeychainRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeychainRef>? */, /*1*/ passwordLength: platform.darwin.UInt32 /* = kotlin.UInt */, /*2*/ password: kotlinx.cinterop.CValuesRef<*>?, /*3*/ usePassword: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPKCS12Import(/*0*/ pkcs12_data: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ options: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*2*/ items: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicyCopyProperties(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecPolicyCreateBasicX509(): platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */ { TODO() }

fun SecPolicyCreateRevocation(/*0*/ revocationFlags: platform.CoreFoundation.CFOptionFlags /* = kotlin.ULong */): platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */ { TODO() }

fun SecPolicyCreateSSL(/*0*/ server: kotlin.Boolean, /*1*/ hostname: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */ { TODO() }

fun SecPolicyCreateWithOID(/*0*/ policyOID: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */ { TODO() }

fun SecPolicyCreateWithProperties(/*0*/ policyIdentifier: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ properties: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */): platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */ { TODO() }

fun SecPolicyGetOID(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */, /*1*/ oid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicyGetTPHandle(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */, /*1*/ tpHandle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicyGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecPolicyGetValue(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */, /*1*/ value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicySearchCopyNext(/*0*/ searchRef: platform.Security.SecPolicySearchRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaquePolicySearchRef>? */, /*1*/ policyRef: kotlinx.cinterop.CValuesRef<platform.Security.SecPolicyRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPolicyRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicySearchCreate(/*0*/ certType: platform.Security.CSSM_CERT_TYPE /* = kotlin.UInt */, /*1*/ policyOID: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*2*/ value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?, /*3*/ searchRef: kotlinx.cinterop.CValuesRef<platform.Security.SecPolicySearchRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecPolicySearchRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaquePolicySearchRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicySearchGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecPolicySetProperties(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */, /*1*/ properties: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecPolicySetValue(/*0*/ policyRef: platform.Security.SecPolicyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecPolicyRef>? */, /*1*/ value: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_DATA /* = platform.Security.cssm_data */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRandomCopyBytes(/*0*/ rnd: platform.Security.SecRandomRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRandom>? */, /*1*/ count: platform.posix.size_t /* = kotlin.ULong */, /*2*/ bytes: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun SecRequirementCopyData(/*0*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ data: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRequirementCopyString(/*0*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ text: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFStringRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFStringRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRequirementCreateWithData(/*0*/ data: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: kotlinx.cinterop.CValuesRef<platform.Security.SecRequirementRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRequirementRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRequirementCreateWithString(/*0*/ text: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: kotlinx.cinterop.CValuesRef<platform.Security.SecRequirementRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRequirementRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRequirementCreateWithStringAndErrors(/*0*/ text: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ errors: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?, /*3*/ requirement: kotlinx.cinterop.CValuesRef<platform.Security.SecRequirementRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecRequirementRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecRequirementGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecSignTransformCreate(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecStaticCodeCheckValidity(/*0*/ staticCode: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecStaticCodeCheckValidityWithErrors(/*0*/ staticCode: platform.Security.SecStaticCodeRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ requirement: platform.Security.SecRequirementRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecRequirement>? */, /*3*/ errors: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecStaticCodeCreateWithPath(/*0*/ path: platform.CoreFoundation.CFURLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFURL>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ staticCode: kotlinx.cinterop.CValuesRef<platform.Security.SecStaticCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecStaticCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecStaticCodeCreateWithPathAndAttributes(/*0*/ path: platform.CoreFoundation.CFURLRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFURL>? */, /*1*/ flags: platform.Security.SecCSFlags /* = kotlin.UInt */, /*2*/ attributes: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*3*/ staticCode: kotlinx.cinterop.CValuesRef<platform.Security.SecStaticCodeRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecStaticCodeRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecCode> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecStaticCodeGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecTaskCopySigningIdentifier(/*0*/ task: platform.Security.SecTaskRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */ { TODO() }

fun SecTaskCopyValueForEntitlement(/*0*/ task: platform.Security.SecTaskRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>? */, /*1*/ entitlement: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTaskCopyValuesForEntitlements(/*0*/ task: platform.Security.SecTaskRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>? */, /*1*/ entitlements: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecTaskCreateFromSelf(/*0*/ allocator: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */): platform.Security.SecTaskRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>? */ { TODO() }

fun SecTaskCreateWithAuditToken(/*0*/ allocator: platform.CoreFoundation.CFAllocatorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFAllocator>? */, /*1*/ token: kotlinx.cinterop.CValue<platform.darwin.audit_token_t>): platform.Security.SecTaskRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTask>? */ { TODO() }

fun SecTaskGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecTranformCustomGetAttribute(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ attribute: platform.Security.SecTransformStringOrAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ type: platform.Security.SecTransformMetaAttributeType): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformConnectTransforms(/*0*/ sourceTransformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ sourceAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ destinationTransformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ destinationAttributeName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*4*/ group: platform.Security.SecGroupTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*5*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecGroupTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCopyExternalRepresentation(/*0*/ transformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecTransformCreate(/*0*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCreateFromExternalRepresentation(/*0*/ dictionary: platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCreateGroupTransform(): platform.Security.SecGroupTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCreateReadTransformWithReadStream(/*0*/ inputStream: platform.CoreFoundation.CFReadStreamRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFReadStream>? */): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCustomGetAttribute(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ attribute: platform.Security.SecTransformStringOrAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ type: platform.Security.SecTransformMetaAttributeType): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformCustomSetAttribute(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ attribute: platform.Security.SecTransformStringOrAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ type: platform.Security.SecTransformMetaAttributeType, /*3*/ value: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformExecute(/*0*/ transformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ errorRef: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformExecuteAsync(/*0*/ transformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ deliveryQueue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */, /*2*/ deliveryBlock: platform.Security.SecMessageBlock? /* = ((platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */, kotlin.Boolean) -> kotlin.Unit)? */) { TODO() }

fun SecTransformFindByName(/*0*/ transform: platform.Security.SecGroupTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ name: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformGetAttribute(/*0*/ transformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ key: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecTransformNoData(): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformPushbackAttribute(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ attribute: platform.Security.SecTransformStringOrAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ value: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SecTransformRegister(/*0*/ uniqueName: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*1*/ createTransformFunction: platform.Security.SecTransformCreateFP? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */) -> platform.Security.SecTransformInstanceBlock? /* = (() -> platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */)? */>>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): kotlin.Boolean { TODO() }

fun SecTransformSetAttribute(/*0*/ transformRef: platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ key: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ value: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): kotlin.Boolean { TODO() }

fun SecTransformSetAttributeAction(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ action: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ attribute: platform.Security.SecTransformStringOrAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ newAction: platform.Security.SecTransformAttributeActionBlock? /* = ((platform.Security.SecTransformAttributeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */)? */): platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */ { TODO() }

fun SecTransformSetDataAction(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ action: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ newAction: platform.Security.SecTransformDataBlock? /* = ((platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */)? */): platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */ { TODO() }

fun SecTransformSetTransformAction(/*0*/ ref: platform.Security.SecTransformImplementationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTransformImplementation>? */, /*1*/ action: platform.CoreFoundation.CFStringRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFString>? */, /*2*/ newAction: platform.Security.SecTransformActionBlock? /* = (() -> platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */)? */): platform.CoreFoundation.CFErrorRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError>? */ { TODO() }

fun SecTrustCopyAnchorCertificates(/*0*/ anchors: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustCopyCustomAnchorCertificates(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ anchors: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustCopyExceptions(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */ { TODO() }

fun SecTrustCopyPolicies(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ policies: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustCopyProperties(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */ { TODO() }

fun SecTrustCopyPublicKey(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */ { TODO() }

fun SecTrustCopyResult(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.CoreFoundation.CFDictionaryRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDictionary>? */ { TODO() }

fun SecTrustCreateWithCertificates(/*0*/ certificates: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*1*/ policies: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ trust: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustRef /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustEvaluate(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustResultTypeVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustResultType /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustEvaluateAsync(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ queue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */, /*2*/ result: platform.Security.SecTrustCallback? /* = ((platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, platform.Security.SecTrustResultType /* = kotlin.UInt */) -> kotlin.Unit)? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustEvaluateWithError(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): kotlin.Boolean { TODO() }

fun SecTrustGetCertificateAtIndex(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ ix: platform.CoreFoundation.CFIndex /* = kotlin.Long */): platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */ { TODO() }

fun SecTrustGetCertificateCount(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.CoreFoundation.CFIndex /* = kotlin.Long */ { TODO() }

fun SecTrustGetCssmResult(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTRVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.CSSM_TP_VERIFY_CONTEXT_RESULT_PTR /* = kotlinx.cinterop.CPointer<platform.Security.cssm_tp_verify_context_result> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetCssmResultCode(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ resultCode: kotlinx.cinterop.CValuesRef<platform.darwin.OSStatusVar /* = kotlinx.cinterop.IntVarOf<platform.darwin.OSStatus /* = kotlin.Int */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetNetworkFetchAllowed(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ allowFetch: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.BooleanVar /* = kotlinx.cinterop.BooleanVarOf<kotlin.Boolean> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetResult(/*0*/ trustRef: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustResultTypeVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustResultType /* = kotlin.UInt */> */>?, /*2*/ certChain: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?, /*3*/ statusChain: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.Security.CSSM_TP_APPLE_EVIDENCE_INFO> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.Security.CSSM_TP_APPLE_EVIDENCE_INFO>> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetTPHandle(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ handle: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_TP_HANDLEVar /* = kotlinx.cinterop.LongVarOf<platform.Security.CSSM_TP_HANDLE /* = kotlin.Long */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetTrustResult(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ result: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustResultTypeVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecTrustResultType /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecTrustGetVerifyTime(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.CoreFoundation.CFAbsoluteTime /* = kotlin.Double */ { TODO() }

fun SecTrustSetAnchorCertificates(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ anchorCertificates: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetAnchorCertificatesOnly(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ anchorCertificatesOnly: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetExceptions(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ exceptions: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): kotlin.Boolean { TODO() }

fun SecTrustSetKeychains(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ keychainOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetNetworkFetchAllowed(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ allowFetch: kotlin.Boolean): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetOCSPResponse(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ responseData: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetOptions(/*0*/ trustRef: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ options: platform.Security.SecTrustOptionFlags /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetParameters(/*0*/ trustRef: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ action: platform.Security.CSSM_TP_ACTION /* = kotlin.UInt */, /*2*/ actionData: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetPolicies(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ policies: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSetVerifyDate(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */, /*1*/ verifyDate: platform.CoreFoundation.CFDateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDate>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsCopyCertificates(/*0*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*1*/ certArray: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsCopyModificationDate(/*0*/ certRef: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*2*/ modificationDate: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDateRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDateRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFDate> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsCopyTrustSettings(/*0*/ certRef: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*2*/ trustSettings: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFArrayRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFArrayRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsCreateExternalRepresentation(/*0*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*1*/ trustSettings: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsImportExternalRepresentation(/*0*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*1*/ trustSettings: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsRemoveTrustSettings(/*0*/ certRef: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustSettingsSetTrustSettings(/*0*/ certRef: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */, /*1*/ domain: platform.Security.SecTrustSettingsDomain /* = kotlin.UInt */, /*2*/ trustSettingsDictOrArray: platform.CoreFoundation.CFTypeRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustedApplicationCopyData(/*0*/ appRef: platform.Security.SecTrustedApplicationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustedApplicationRef>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFDataRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFDataRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustedApplicationCreateFromPath(/*0*/ path: kotlin.String?, /*1*/ app: kotlinx.cinterop.CValuesRef<platform.Security.SecTrustedApplicationRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.Security.SecTrustedApplicationRef /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustedApplicationRef> */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecTrustedApplicationGetTypeID(): platform.CoreFoundation.CFTypeID /* = kotlin.ULong */ { TODO() }

fun SecTrustedApplicationSetData(/*0*/ appRef: platform.Security.SecTrustedApplicationRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecTrustedApplicationRef>? */, /*1*/ data: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SecVerifyTransformCreate(/*0*/ key: platform.Security.SecKeyRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecKeyRef>? */, /*1*/ signature: platform.CoreFoundation.CFDataRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFData>? */, /*2*/ error: kotlinx.cinterop.CValuesRef<platform.CoreFoundation.CFErrorRefVar /* = kotlinx.cinterop.CPointerVarOf<platform.CoreFoundation.CFErrorRef /* = kotlinx.cinterop.CPointer<cnames.structs.__CFError> */> */>?): platform.Security.SecTransformRef? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun SessionCreate(/*0*/ flags: platform.Security.SessionCreationFlags /* = kotlin.UInt */, /*1*/ attributes: platform.Security.SessionAttributeBits /* = kotlin.UInt */): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun SessionGetInfo(/*0*/ session: platform.Security.SecuritySessionId /* = kotlin.UInt */, /*1*/ sessionId: kotlinx.cinterop.CValuesRef<platform.Security.SecuritySessionIdVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SecuritySessionId /* = kotlin.UInt */> */>?, /*2*/ attributes: kotlinx.cinterop.CValuesRef<platform.Security.SessionAttributeBitsVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.SessionAttributeBits /* = kotlin.UInt */> */>?): platform.darwin.OSStatus /* = kotlin.Int */ { TODO() }

fun cssmAlgToOid(/*0*/ algId: platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */): kotlinx.cinterop.CPointer<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>? { TODO() }

fun cssmOidToAlg(/*0*/ oid: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_OID /* = platform.Security.cssm_data */>?, /*1*/ alg: kotlinx.cinterop.CValuesRef<platform.Security.CSSM_ALGORITHMSVar /* = kotlinx.cinterop.UIntVarOf<platform.Security.CSSM_ALGORITHMS /* = kotlin.UInt */> */>?): kotlin.Boolean { TODO() }

fun cssmPerror(/*0*/ how: kotlin.String?, /*1*/ error: platform.Security.CSSM_RETURN /* = kotlin.Int */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge0")private external fun kniBridge0(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1")private external fun kniBridge1(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge10")private external fun kniBridge10(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge100")private external fun kniBridge100(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1000")private external fun kniBridge1000(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1001")private external fun kniBridge1001(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1002")private external fun kniBridge1002(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1003")private external fun kniBridge1003(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1004")private external fun kniBridge1004(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1005")private external fun kniBridge1005(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1006")private external fun kniBridge1006(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1007")private external fun kniBridge1007(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1008")private external fun kniBridge1008(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1009")private external fun kniBridge1009(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge101")private external fun kniBridge101(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1010")private external fun kniBridge1010(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1011")private external fun kniBridge1011(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1012")private external fun kniBridge1012(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1013")private external fun kniBridge1013(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1014")private external fun kniBridge1014(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1015")private external fun kniBridge1015(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1016")private external fun kniBridge1016(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1017")private external fun kniBridge1017(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1018")private external fun kniBridge1018(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1019")private external fun kniBridge1019(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge102")private external fun kniBridge102(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1020")private external fun kniBridge1020(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1021")private external fun kniBridge1021(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1022")private external fun kniBridge1022(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1023")private external fun kniBridge1023(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1024")private external fun kniBridge1024(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1025")private external fun kniBridge1025(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1026")private external fun kniBridge1026(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1027")private external fun kniBridge1027(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1028")private external fun kniBridge1028(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1029")private external fun kniBridge1029(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge103")private external fun kniBridge103(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1030")private external fun kniBridge1030(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1031")private external fun kniBridge1031(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1032")private external fun kniBridge1032(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1033")private external fun kniBridge1033(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1034")private external fun kniBridge1034(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1035")private external fun kniBridge1035(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1036")private external fun kniBridge1036(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1037")private external fun kniBridge1037(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1038")private external fun kniBridge1038(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1039")private external fun kniBridge1039(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge104")private external fun kniBridge104(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1040")private external fun kniBridge1040(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1041")private external fun kniBridge1041(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1042")private external fun kniBridge1042(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1043")private external fun kniBridge1043(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1044")private external fun kniBridge1044(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1045")private external fun kniBridge1045(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1046")private external fun kniBridge1046(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1047")private external fun kniBridge1047(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1048")private external fun kniBridge1048(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1049")private external fun kniBridge1049(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge105")private external fun kniBridge105(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1050")private external fun kniBridge1050(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1051")private external fun kniBridge1051(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1052")private external fun kniBridge1052(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1053")private external fun kniBridge1053(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1054")private external fun kniBridge1054(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1055")private external fun kniBridge1055(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1056")private external fun kniBridge1056(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1057")private external fun kniBridge1057(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1058")private external fun kniBridge1058(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1059")private external fun kniBridge1059(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge106")private external fun kniBridge106(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1060")private external fun kniBridge1060(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1061")private external fun kniBridge1061(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1062")private external fun kniBridge1062(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1063")private external fun kniBridge1063(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1064")private external fun kniBridge1064(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1065")private external fun kniBridge1065(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1066")private external fun kniBridge1066(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1067")private external fun kniBridge1067(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1068")private external fun kniBridge1068(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1069")private external fun kniBridge1069(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge107")private external fun kniBridge107(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1070")private external fun kniBridge1070(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1071")private external fun kniBridge1071(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1072")private external fun kniBridge1072(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1073")private external fun kniBridge1073(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1074")private external fun kniBridge1074(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1075")private external fun kniBridge1075(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1076")private external fun kniBridge1076(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1077")private external fun kniBridge1077(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1078")private external fun kniBridge1078(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1079")private external fun kniBridge1079(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge108")private external fun kniBridge108(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1080")private external fun kniBridge1080(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1081")private external fun kniBridge1081(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1082")private external fun kniBridge1082(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1083")private external fun kniBridge1083(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1084")private external fun kniBridge1084(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1085")private external fun kniBridge1085(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1086")private external fun kniBridge1086(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1087")private external fun kniBridge1087(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1088")private external fun kniBridge1088(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1089")private external fun kniBridge1089(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge109")private external fun kniBridge109(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1090")private external fun kniBridge1090(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1091")private external fun kniBridge1091(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1092")private external fun kniBridge1092(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1093")private external fun kniBridge1093(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1094")private external fun kniBridge1094(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1095")private external fun kniBridge1095(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1096")private external fun kniBridge1096(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1097")private external fun kniBridge1097(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1098")private external fun kniBridge1098(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1099")private external fun kniBridge1099(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge11")private external fun kniBridge11(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge110")private external fun kniBridge110(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1100")private external fun kniBridge1100(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1101")private external fun kniBridge1101(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1102")private external fun kniBridge1102(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1103")private external fun kniBridge1103(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1104")private external fun kniBridge1104(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1105")private external fun kniBridge1105(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1106")private external fun kniBridge1106(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1107")private external fun kniBridge1107(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1108")private external fun kniBridge1108(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1109")private external fun kniBridge1109(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge111")private external fun kniBridge111(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1110")private external fun kniBridge1110(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1111")private external fun kniBridge1111(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1112")private external fun kniBridge1112(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1113")private external fun kniBridge1113(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1114")private external fun kniBridge1114(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1115")private external fun kniBridge1115(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1116")private external fun kniBridge1116(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1117")private external fun kniBridge1117(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1118")private external fun kniBridge1118(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1119")private external fun kniBridge1119(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge112")private external fun kniBridge112(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1120")private external fun kniBridge1120(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1121")private external fun kniBridge1121(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1122")private external fun kniBridge1122(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1123")private external fun kniBridge1123(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1124")private external fun kniBridge1124(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1125")private external fun kniBridge1125(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1126")private external fun kniBridge1126(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1127")private external fun kniBridge1127(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1128")private external fun kniBridge1128(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1129")private external fun kniBridge1129(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge113")private external fun kniBridge113(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1130")private external fun kniBridge1130(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1131")private external fun kniBridge1131(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1132")private external fun kniBridge1132(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1133")private external fun kniBridge1133(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1134")private external fun kniBridge1134(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1135")private external fun kniBridge1135(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1136")private external fun kniBridge1136(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1137")private external fun kniBridge1137(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1138")private external fun kniBridge1138(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1139")private external fun kniBridge1139(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge114")private external fun kniBridge114(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1140")private external fun kniBridge1140(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1141")private external fun kniBridge1141(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1142")private external fun kniBridge1142(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1143")private external fun kniBridge1143(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1144")private external fun kniBridge1144(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1145")private external fun kniBridge1145(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1146")private external fun kniBridge1146(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1147")private external fun kniBridge1147(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1148")private external fun kniBridge1148(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1149")private external fun kniBridge1149(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge115")private external fun kniBridge115(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1150")private external fun kniBridge1150(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1151")private external fun kniBridge1151(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1152")private external fun kniBridge1152(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1153")private external fun kniBridge1153(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1154")private external fun kniBridge1154(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1155")private external fun kniBridge1155(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1156")private external fun kniBridge1156(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1157")private external fun kniBridge1157(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1158")private external fun kniBridge1158(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1159")private external fun kniBridge1159(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge116")private external fun kniBridge116(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1160")private external fun kniBridge1160(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1161")private external fun kniBridge1161(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1162")private external fun kniBridge1162(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1163")private external fun kniBridge1163(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1164")private external fun kniBridge1164(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1165")private external fun kniBridge1165(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1166")private external fun kniBridge1166(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1167")private external fun kniBridge1167(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1168")private external fun kniBridge1168(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1169")private external fun kniBridge1169(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge117")private external fun kniBridge117(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1170")private external fun kniBridge1170(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1171")private external fun kniBridge1171(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1172")private external fun kniBridge1172(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1173")private external fun kniBridge1173(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1174")private external fun kniBridge1174(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1175")private external fun kniBridge1175(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1176")private external fun kniBridge1176(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1177")private external fun kniBridge1177(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1178")private external fun kniBridge1178(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1179")private external fun kniBridge1179(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge118")private external fun kniBridge118(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1180")private external fun kniBridge1180(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1181")private external fun kniBridge1181(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1182")private external fun kniBridge1182(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1183")private external fun kniBridge1183(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1184")private external fun kniBridge1184(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1185")private external fun kniBridge1185(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1186")private external fun kniBridge1186(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1187")private external fun kniBridge1187(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1188")private external fun kniBridge1188(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1189")private external fun kniBridge1189(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge119")private external fun kniBridge119(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1190")private external fun kniBridge1190(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1191")private external fun kniBridge1191(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1192")private external fun kniBridge1192(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1193")private external fun kniBridge1193(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1194")private external fun kniBridge1194(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1195")private external fun kniBridge1195(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1196")private external fun kniBridge1196(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1197")private external fun kniBridge1197(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1198")private external fun kniBridge1198(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1199")private external fun kniBridge1199(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge12")private external fun kniBridge12(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge120")private external fun kniBridge120(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1200")private external fun kniBridge1200(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1201")private external fun kniBridge1201(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1202")private external fun kniBridge1202(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1203")private external fun kniBridge1203(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1204")private external fun kniBridge1204(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1205")private external fun kniBridge1205(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1206")private external fun kniBridge1206(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1207")private external fun kniBridge1207(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1208")private external fun kniBridge1208(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1209")private external fun kniBridge1209(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge121")private external fun kniBridge121(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1210")private external fun kniBridge1210(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1211")private external fun kniBridge1211(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1212")private external fun kniBridge1212(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1213")private external fun kniBridge1213(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1214")private external fun kniBridge1214(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1215")private external fun kniBridge1215(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1216")private external fun kniBridge1216(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1217")private external fun kniBridge1217(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1218")private external fun kniBridge1218(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1219")private external fun kniBridge1219(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge122")private external fun kniBridge122(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1220")private external fun kniBridge1220(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1221")private external fun kniBridge1221(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1222")private external fun kniBridge1222(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1223")private external fun kniBridge1223(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1224")private external fun kniBridge1224(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1225")private external fun kniBridge1225(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1226")private external fun kniBridge1226(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1227")private external fun kniBridge1227(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1228")private external fun kniBridge1228(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1229")private external fun kniBridge1229(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge123")private external fun kniBridge123(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.UInt, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.UShort, /*10*/ p10: kotlin.UInt, /*11*/ p11: kotlin.UInt, /*12*/ p12: kotlin.UInt, /*13*/ p13: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*14*/ p14: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1230")private external fun kniBridge1230(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1231")private external fun kniBridge1231(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1232")private external fun kniBridge1232(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1233")private external fun kniBridge1233(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1234")private external fun kniBridge1234(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1235")private external fun kniBridge1235(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1236")private external fun kniBridge1236(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1237")private external fun kniBridge1237(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1238")private external fun kniBridge1238(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1239")private external fun kniBridge1239(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge124")private external fun kniBridge124(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.UInt, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.UShort, /*10*/ p10: kotlin.UInt, /*11*/ p11: kotlin.UInt, /*12*/ p12: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*13*/ p13: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*14*/ p14: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1240")private external fun kniBridge1240(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1241")private external fun kniBridge1241(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1242")private external fun kniBridge1242(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1243")private external fun kniBridge1243(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1244")private external fun kniBridge1244(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1245")private external fun kniBridge1245(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1246")private external fun kniBridge1246(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1247")private external fun kniBridge1247(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1248")private external fun kniBridge1248(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1249")private external fun kniBridge1249(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge125")private external fun kniBridge125(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1250")private external fun kniBridge1250(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1251")private external fun kniBridge1251(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1252")private external fun kniBridge1252(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1253")private external fun kniBridge1253(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1254")private external fun kniBridge1254(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1255")private external fun kniBridge1255(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1256")private external fun kniBridge1256(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1257")private external fun kniBridge1257(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1258")private external fun kniBridge1258(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1259")private external fun kniBridge1259(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge126")private external fun kniBridge126(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1260")private external fun kniBridge1260(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1261")private external fun kniBridge1261(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1262")private external fun kniBridge1262(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1263")private external fun kniBridge1263(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1264")private external fun kniBridge1264(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1265")private external fun kniBridge1265(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1266")private external fun kniBridge1266(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1267")private external fun kniBridge1267(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1268")private external fun kniBridge1268(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1269")private external fun kniBridge1269(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge127")private external fun kniBridge127(/*0*/ p0: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1270")private external fun kniBridge1270(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1271")private external fun kniBridge1271(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1272")private external fun kniBridge1272(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1273")private external fun kniBridge1273(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1274")private external fun kniBridge1274(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1275")private external fun kniBridge1275(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1276")private external fun kniBridge1276(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1277")private external fun kniBridge1277(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1278")private external fun kniBridge1278(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1279")private external fun kniBridge1279(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge128")private external fun kniBridge128(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1280")private external fun kniBridge1280(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1281")private external fun kniBridge1281(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1282")private external fun kniBridge1282(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1283")private external fun kniBridge1283(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1284")private external fun kniBridge1284(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1285")private external fun kniBridge1285(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1286")private external fun kniBridge1286(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1287")private external fun kniBridge1287(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1288")private external fun kniBridge1288(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1289")private external fun kniBridge1289(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge129")private external fun kniBridge129(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1290")private external fun kniBridge1290(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1291")private external fun kniBridge1291(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1292")private external fun kniBridge1292(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1293")private external fun kniBridge1293(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1294")private external fun kniBridge1294(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1295")private external fun kniBridge1295(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1296")private external fun kniBridge1296(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1297")private external fun kniBridge1297(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1298")private external fun kniBridge1298(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1299")private external fun kniBridge1299(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge13")private external fun kniBridge13(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge130")private external fun kniBridge130(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1300")private external fun kniBridge1300(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1301")private external fun kniBridge1301(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1302")private external fun kniBridge1302(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1303")private external fun kniBridge1303(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1304")private external fun kniBridge1304(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1305")private external fun kniBridge1305(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1306")private external fun kniBridge1306(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1307")private external fun kniBridge1307(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1308")private external fun kniBridge1308(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1309")private external fun kniBridge1309(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge131")private external fun kniBridge131(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1310")private external fun kniBridge1310(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1311")private external fun kniBridge1311(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1312")private external fun kniBridge1312(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1313")private external fun kniBridge1313(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1314")private external fun kniBridge1314(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1315")private external fun kniBridge1315(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1316")private external fun kniBridge1316(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1317")private external fun kniBridge1317(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1318")private external fun kniBridge1318(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1319")private external fun kniBridge1319(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge132")private external fun kniBridge132(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1320")private external fun kniBridge1320(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1321")private external fun kniBridge1321(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1322")private external fun kniBridge1322(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1323")private external fun kniBridge1323(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1324")private external fun kniBridge1324(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1325")private external fun kniBridge1325(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1326")private external fun kniBridge1326(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1327")private external fun kniBridge1327(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1328")private external fun kniBridge1328(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1329")private external fun kniBridge1329(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge133")private external fun kniBridge133(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1330")private external fun kniBridge1330(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1331")private external fun kniBridge1331(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1332")private external fun kniBridge1332(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1333")private external fun kniBridge1333(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1334")private external fun kniBridge1334(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1335")private external fun kniBridge1335(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1336")private external fun kniBridge1336(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1337")private external fun kniBridge1337(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1338")private external fun kniBridge1338(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1339")private external fun kniBridge1339(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge134")private external fun kniBridge134(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1340")private external fun kniBridge1340(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1341")private external fun kniBridge1341(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1342")private external fun kniBridge1342(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1343")private external fun kniBridge1343(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1344")private external fun kniBridge1344(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1345")private external fun kniBridge1345(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1346")private external fun kniBridge1346(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1347")private external fun kniBridge1347(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1348")private external fun kniBridge1348(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1349")private external fun kniBridge1349(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge135")private external fun kniBridge135(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1350")private external fun kniBridge1350(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1351")private external fun kniBridge1351(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1352")private external fun kniBridge1352(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1353")private external fun kniBridge1353(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1354")private external fun kniBridge1354(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1355")private external fun kniBridge1355(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1356")private external fun kniBridge1356(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1357")private external fun kniBridge1357(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1358")private external fun kniBridge1358(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1359")private external fun kniBridge1359(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge136")private external fun kniBridge136(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1360")private external fun kniBridge1360(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1361")private external fun kniBridge1361(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1362")private external fun kniBridge1362(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1363")private external fun kniBridge1363(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1364")private external fun kniBridge1364(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1365")private external fun kniBridge1365(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1366")private external fun kniBridge1366(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1367")private external fun kniBridge1367(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1368")private external fun kniBridge1368(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1369")private external fun kniBridge1369(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge137")private external fun kniBridge137(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1370")private external fun kniBridge1370(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1371")private external fun kniBridge1371(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1372")private external fun kniBridge1372(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1373")private external fun kniBridge1373(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1374")private external fun kniBridge1374(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1375")private external fun kniBridge1375(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1376")private external fun kniBridge1376(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1377")private external fun kniBridge1377(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1378")private external fun kniBridge1378(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1379")private external fun kniBridge1379(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge138")private external fun kniBridge138(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1380")private external fun kniBridge1380(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1381")private external fun kniBridge1381(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1382")private external fun kniBridge1382(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1383")private external fun kniBridge1383(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1384")private external fun kniBridge1384(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1385")private external fun kniBridge1385(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1386")private external fun kniBridge1386(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1387")private external fun kniBridge1387(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1388")private external fun kniBridge1388(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1389")private external fun kniBridge1389(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge139")private external fun kniBridge139(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1390")private external fun kniBridge1390(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1391")private external fun kniBridge1391(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1392")private external fun kniBridge1392(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1393")private external fun kniBridge1393(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1394")private external fun kniBridge1394(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1395")private external fun kniBridge1395(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1396")private external fun kniBridge1396(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1397")private external fun kniBridge1397(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1398")private external fun kniBridge1398(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1399")private external fun kniBridge1399(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge14")private external fun kniBridge14(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge140")private external fun kniBridge140(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1400")private external fun kniBridge1400(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1401")private external fun kniBridge1401(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1402")private external fun kniBridge1402(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1403")private external fun kniBridge1403(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1404")private external fun kniBridge1404(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1405")private external fun kniBridge1405(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1406")private external fun kniBridge1406(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1407")private external fun kniBridge1407(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1408")private external fun kniBridge1408(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1409")private external fun kniBridge1409(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge141")private external fun kniBridge141(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1410")private external fun kniBridge1410(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1411")private external fun kniBridge1411(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1412")private external fun kniBridge1412(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1413")private external fun kniBridge1413(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1414")private external fun kniBridge1414(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1415")private external fun kniBridge1415(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1416")private external fun kniBridge1416(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1417")private external fun kniBridge1417(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1418")private external fun kniBridge1418(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1419")private external fun kniBridge1419(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge142")private external fun kniBridge142(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1420")private external fun kniBridge1420(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1421")private external fun kniBridge1421(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1422")private external fun kniBridge1422(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1423")private external fun kniBridge1423(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1424")private external fun kniBridge1424(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1425")private external fun kniBridge1425(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1426")private external fun kniBridge1426(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1427")private external fun kniBridge1427(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1428")private external fun kniBridge1428(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1429")private external fun kniBridge1429(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge143")private external fun kniBridge143(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1430")private external fun kniBridge1430(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1431")private external fun kniBridge1431(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1432")private external fun kniBridge1432(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1433")private external fun kniBridge1433(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1434")private external fun kniBridge1434(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1435")private external fun kniBridge1435(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1436")private external fun kniBridge1436(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1437")private external fun kniBridge1437(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1438")private external fun kniBridge1438(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1439")private external fun kniBridge1439(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge144")private external fun kniBridge144(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1440")private external fun kniBridge1440(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1441")private external fun kniBridge1441(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1442")private external fun kniBridge1442(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1443")private external fun kniBridge1443(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1444")private external fun kniBridge1444(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1445")private external fun kniBridge1445(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1446")private external fun kniBridge1446(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1447")private external fun kniBridge1447(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1448")private external fun kniBridge1448(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1449")private external fun kniBridge1449(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge145")private external fun kniBridge145(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1450")private external fun kniBridge1450(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1451")private external fun kniBridge1451(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1452")private external fun kniBridge1452(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1453")private external fun kniBridge1453(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1454")private external fun kniBridge1454(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1455")private external fun kniBridge1455(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1456")private external fun kniBridge1456(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1457")private external fun kniBridge1457(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1458")private external fun kniBridge1458(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1459")private external fun kniBridge1459(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge146")private external fun kniBridge146(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1460")private external fun kniBridge1460(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1461")private external fun kniBridge1461(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1462")private external fun kniBridge1462(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1463")private external fun kniBridge1463(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1464")private external fun kniBridge1464(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1465")private external fun kniBridge1465(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1466")private external fun kniBridge1466(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1467")private external fun kniBridge1467(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1468")private external fun kniBridge1468(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1469")private external fun kniBridge1469(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge147")private external fun kniBridge147(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1470")private external fun kniBridge1470(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1471")private external fun kniBridge1471(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1472")private external fun kniBridge1472(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1473")private external fun kniBridge1473(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1474")private external fun kniBridge1474(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1475")private external fun kniBridge1475(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1476")private external fun kniBridge1476(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1477")private external fun kniBridge1477(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1478")private external fun kniBridge1478(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1479")private external fun kniBridge1479(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge148")private external fun kniBridge148(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1480")private external fun kniBridge1480(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1481")private external fun kniBridge1481(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1482")private external fun kniBridge1482(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1483")private external fun kniBridge1483(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1484")private external fun kniBridge1484(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1485")private external fun kniBridge1485(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1486")private external fun kniBridge1486(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1487")private external fun kniBridge1487(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1488")private external fun kniBridge1488(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1489")private external fun kniBridge1489(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge149")private external fun kniBridge149(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1490")private external fun kniBridge1490(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1491")private external fun kniBridge1491(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1492")private external fun kniBridge1492(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1493")private external fun kniBridge1493(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1494")private external fun kniBridge1494(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1495")private external fun kniBridge1495(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1496")private external fun kniBridge1496(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1497")private external fun kniBridge1497(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1498")private external fun kniBridge1498(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1499")private external fun kniBridge1499(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge15")private external fun kniBridge15(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge150")private external fun kniBridge150(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1500")private external fun kniBridge1500(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1501")private external fun kniBridge1501(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1502")private external fun kniBridge1502(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1503")private external fun kniBridge1503(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1504")private external fun kniBridge1504(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1505")private external fun kniBridge1505(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1506")private external fun kniBridge1506(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1507")private external fun kniBridge1507(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1508")private external fun kniBridge1508(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1509")private external fun kniBridge1509(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge151")private fun kniBridge151(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1510")private external fun kniBridge1510(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1511")private external fun kniBridge1511(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1512")private external fun kniBridge1512(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1513")private external fun kniBridge1513(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1514")private external fun kniBridge1514(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1515")private external fun kniBridge1515(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1516")private external fun kniBridge1516(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1517")private external fun kniBridge1517(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1518")private external fun kniBridge1518(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1519")private external fun kniBridge1519(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge152")private external fun kniBridge152(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1520")private external fun kniBridge1520(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1521")private external fun kniBridge1521(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1522")private external fun kniBridge1522(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1523")private external fun kniBridge1523(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1524")private external fun kniBridge1524(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1525")private external fun kniBridge1525(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1526")private external fun kniBridge1526(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1527")private external fun kniBridge1527(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1528")private external fun kniBridge1528(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1529")private external fun kniBridge1529(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge153")private external fun kniBridge153(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1530")private external fun kniBridge1530(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1531")private external fun kniBridge1531(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1532")private external fun kniBridge1532(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1533")private external fun kniBridge1533(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1534")private external fun kniBridge1534(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1535")private external fun kniBridge1535(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1536")private external fun kniBridge1536(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1537")private external fun kniBridge1537(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1538")private external fun kniBridge1538(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1539")private external fun kniBridge1539(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge154")private external fun kniBridge154(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1540")private external fun kniBridge1540(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1541")private external fun kniBridge1541(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1542")private external fun kniBridge1542(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1543")private external fun kniBridge1543(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1544")private external fun kniBridge1544(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1545")private external fun kniBridge1545(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1546")private external fun kniBridge1546(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1547")private external fun kniBridge1547(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1548")private external fun kniBridge1548(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1549")private external fun kniBridge1549(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge155")private external fun kniBridge155(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1550")private external fun kniBridge1550(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1551")private external fun kniBridge1551(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1552")private external fun kniBridge1552(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1553")private external fun kniBridge1553(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1554")private external fun kniBridge1554(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1555")private external fun kniBridge1555(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1556")private external fun kniBridge1556(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1557")private external fun kniBridge1557(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1558")private external fun kniBridge1558(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1559")private external fun kniBridge1559(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge156")private external fun kniBridge156(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1560")private external fun kniBridge1560(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1561")private external fun kniBridge1561(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1562")private external fun kniBridge1562(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1563")private external fun kniBridge1563(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1564")private external fun kniBridge1564(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1565")private external fun kniBridge1565(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1566")private external fun kniBridge1566(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1567")private external fun kniBridge1567(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1568")private external fun kniBridge1568(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1569")private external fun kniBridge1569(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge157")private external fun kniBridge157(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1570")private external fun kniBridge1570(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1571")private external fun kniBridge1571(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1572")private external fun kniBridge1572(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1573")private external fun kniBridge1573(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1574")private external fun kniBridge1574(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1575")private external fun kniBridge1575(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1576")private external fun kniBridge1576(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1577")private external fun kniBridge1577(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1578")private external fun kniBridge1578(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1579")private external fun kniBridge1579(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge158")private external fun kniBridge158(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1580")private external fun kniBridge1580(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1581")private external fun kniBridge1581(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1582")private external fun kniBridge1582(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1583")private external fun kniBridge1583(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1584")private external fun kniBridge1584(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1585")private external fun kniBridge1585(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1586")private external fun kniBridge1586(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1587")private external fun kniBridge1587(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1588")private external fun kniBridge1588(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1589")private external fun kniBridge1589(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge159")private external fun kniBridge159(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1590")private external fun kniBridge1590(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1591")private external fun kniBridge1591(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1592")private external fun kniBridge1592(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1593")private external fun kniBridge1593(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1594")private external fun kniBridge1594(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1595")private external fun kniBridge1595(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1596")private external fun kniBridge1596(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1597")private external fun kniBridge1597(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1598")private external fun kniBridge1598(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1599")private external fun kniBridge1599(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge16")private external fun kniBridge16(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge160")private external fun kniBridge160(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1600")private external fun kniBridge1600(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1601")private external fun kniBridge1601(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1602")private external fun kniBridge1602(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1603")private external fun kniBridge1603(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1604")private external fun kniBridge1604(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1605")private external fun kniBridge1605(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1606")private external fun kniBridge1606(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1607")private external fun kniBridge1607(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1608")private external fun kniBridge1608(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1609")private external fun kniBridge1609(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge161")private external fun kniBridge161(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1610")private external fun kniBridge1610(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1611")private external fun kniBridge1611(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1612")private external fun kniBridge1612(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1613")private external fun kniBridge1613(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1614")private external fun kniBridge1614(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1615")private external fun kniBridge1615(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1616")private external fun kniBridge1616(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1617")private external fun kniBridge1617(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1618")private external fun kniBridge1618(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1619")private external fun kniBridge1619(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge162")private external fun kniBridge162(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1620")private external fun kniBridge1620(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1621")private external fun kniBridge1621(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1622")private external fun kniBridge1622(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1623")private external fun kniBridge1623(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1624")private external fun kniBridge1624(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1625")private external fun kniBridge1625(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1626")private external fun kniBridge1626(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1627")private external fun kniBridge1627(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1628")private external fun kniBridge1628(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1629")private external fun kniBridge1629(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge163")private external fun kniBridge163(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1630")private external fun kniBridge1630(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1631")private external fun kniBridge1631(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1632")private external fun kniBridge1632(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1633")private external fun kniBridge1633(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1634")private external fun kniBridge1634(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1635")private external fun kniBridge1635(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1636")private external fun kniBridge1636(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1637")private external fun kniBridge1637(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1638")private external fun kniBridge1638(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1639")private external fun kniBridge1639(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge164")private external fun kniBridge164(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1640")private external fun kniBridge1640(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1641")private external fun kniBridge1641(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1642")private external fun kniBridge1642(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1643")private external fun kniBridge1643(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1644")private external fun kniBridge1644(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1645")private external fun kniBridge1645(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1646")private external fun kniBridge1646(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1647")private external fun kniBridge1647(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1648")private external fun kniBridge1648(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1649")private external fun kniBridge1649(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge165")private external fun kniBridge165(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1650")private external fun kniBridge1650(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1651")private external fun kniBridge1651(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1652")private external fun kniBridge1652(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1653")private external fun kniBridge1653(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1654")private external fun kniBridge1654(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1655")private external fun kniBridge1655(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1656")private external fun kniBridge1656(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1657")private external fun kniBridge1657(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1658")private external fun kniBridge1658(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1659")private external fun kniBridge1659(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge166")private external fun kniBridge166(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1664")private external fun kniBridge1664(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1669")private external fun kniBridge1669(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge167")private external fun kniBridge167(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1670")private external fun kniBridge1670(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1671")private external fun kniBridge1671(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1672")private external fun kniBridge1672(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1673")private external fun kniBridge1673(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1674")private external fun kniBridge1674(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1675")private external fun kniBridge1675(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1676")private external fun kniBridge1676(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1677")private external fun kniBridge1677(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1678")private external fun kniBridge1678(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1679")private external fun kniBridge1679(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge168")private external fun kniBridge168(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1680")private external fun kniBridge1680(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1681")private external fun kniBridge1681(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1682")private external fun kniBridge1682(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1683")private external fun kniBridge1683(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1684")private external fun kniBridge1684(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1685")private external fun kniBridge1685(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1686")private external fun kniBridge1686(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1687")private external fun kniBridge1687(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1688")private external fun kniBridge1688(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1689")private external fun kniBridge1689(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge169")private external fun kniBridge169(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1690")private external fun kniBridge1690(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1691")private external fun kniBridge1691(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1692")private external fun kniBridge1692(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1693")private external fun kniBridge1693(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1694")private external fun kniBridge1694(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1695")private external fun kniBridge1695(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1696")private external fun kniBridge1696(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1697")private external fun kniBridge1697(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1698")private external fun kniBridge1698(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1699")private external fun kniBridge1699(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge17")private external fun kniBridge17(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge170")private external fun kniBridge170(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1700")private external fun kniBridge1700(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1701")private external fun kniBridge1701(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1702")private external fun kniBridge1702(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1703")private external fun kniBridge1703(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1704")private external fun kniBridge1704(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1705")private external fun kniBridge1705(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1706")private external fun kniBridge1706(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1707")private external fun kniBridge1707(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1708")private external fun kniBridge1708(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1709")private external fun kniBridge1709(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge171")private external fun kniBridge171(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1710")private external fun kniBridge1710(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1711")private external fun kniBridge1711(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1712")private external fun kniBridge1712(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1713")private external fun kniBridge1713(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1714")private external fun kniBridge1714(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1715")private external fun kniBridge1715(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1716")private external fun kniBridge1716(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1717")private external fun kniBridge1717(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1718")private external fun kniBridge1718(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1719")private external fun kniBridge1719(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge172")private external fun kniBridge172(/*0*/ p0: kotlin.Byte, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1720")private external fun kniBridge1720(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1721")private external fun kniBridge1721(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1722")private external fun kniBridge1722(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1723")private external fun kniBridge1723(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1724")private external fun kniBridge1724(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1725")private external fun kniBridge1725(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1726")private external fun kniBridge1726(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1727")private external fun kniBridge1727(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1728")private external fun kniBridge1728(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1729")private external fun kniBridge1729(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge173")private external fun kniBridge173(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1730")private external fun kniBridge1730(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1731")private external fun kniBridge1731(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1732")private external fun kniBridge1732(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1733")private external fun kniBridge1733(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1734")private external fun kniBridge1734(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1735")private external fun kniBridge1735(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1736")private external fun kniBridge1736(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1737")private external fun kniBridge1737(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1738")private external fun kniBridge1738(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1739")private external fun kniBridge1739(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge174")private external fun kniBridge174(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1740")private external fun kniBridge1740(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1741")private external fun kniBridge1741(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge1742")private external fun kniBridge1742(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge175")private external fun kniBridge175(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge176")private external fun kniBridge176(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge177")private external fun kniBridge177(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge178")private external fun kniBridge178(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge179")private external fun kniBridge179(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge18")private external fun kniBridge18(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge180")private external fun kniBridge180(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge181")private external fun kniBridge181(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge182")private external fun kniBridge182(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge183")private external fun kniBridge183(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge184")private external fun kniBridge184(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge185")private external fun kniBridge185(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge186")private external fun kniBridge186(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge187")private external fun kniBridge187(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge188")private external fun kniBridge188(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge189")private external fun kniBridge189(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge19")private external fun kniBridge19(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge190")private external fun kniBridge190(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge191")private external fun kniBridge191(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge192")private external fun kniBridge192(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge193")private external fun kniBridge193(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge194")private external fun kniBridge194(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge195")private external fun kniBridge195(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge196")private external fun kniBridge196(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge197")private external fun kniBridge197(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge198")private external fun kniBridge198(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge199")private external fun kniBridge199(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge2")private external fun kniBridge2(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge20")private external fun kniBridge20(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge200")private external fun kniBridge200(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge201")private external fun kniBridge201(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge202")private external fun kniBridge202(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge203")private external fun kniBridge203(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge204")private external fun kniBridge204(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge205")private external fun kniBridge205(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge206")private external fun kniBridge206(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge207")private external fun kniBridge207(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge208")private external fun kniBridge208(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge209")private external fun kniBridge209(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge21")private external fun kniBridge21(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge210")private external fun kniBridge210(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge211")private external fun kniBridge211(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge212")private external fun kniBridge212(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge213")private external fun kniBridge213(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge214")private external fun kniBridge214(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge215")private external fun kniBridge215(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge216")private external fun kniBridge216(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge217")private external fun kniBridge217(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge218")private external fun kniBridge218(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge219")private external fun kniBridge219(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge22")private external fun kniBridge22(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge220")private external fun kniBridge220(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge221")private external fun kniBridge221(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge222")private external fun kniBridge222(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge223")private external fun kniBridge223(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge224")private external fun kniBridge224(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge225")private external fun kniBridge225(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge226")private external fun kniBridge226(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge227")private external fun kniBridge227(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge228")private external fun kniBridge228(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge229")private external fun kniBridge229(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge23")private external fun kniBridge23(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge230")private external fun kniBridge230(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge231")private external fun kniBridge231(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge232")private external fun kniBridge232(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge233")private external fun kniBridge233(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge234")private external fun kniBridge234(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge235")private external fun kniBridge235(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge236")private external fun kniBridge236(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge237")private external fun kniBridge237(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge238")private external fun kniBridge238(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge239")private external fun kniBridge239(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge24")private external fun kniBridge24(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge240")private external fun kniBridge240(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge241")private external fun kniBridge241(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge242")private external fun kniBridge242(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge243")private external fun kniBridge243(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge244")private external fun kniBridge244(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge245")private external fun kniBridge245(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge246")private external fun kniBridge246(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge247")private external fun kniBridge247(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge248")private external fun kniBridge248(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge249")private external fun kniBridge249(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge25")private external fun kniBridge25(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge250")private external fun kniBridge250(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge251")private external fun kniBridge251(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge252")private external fun kniBridge252(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge253")private external fun kniBridge253(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_Security_kniBridge254")private external fun kniBridge254(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge255")private external fun kniBridge255(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge256")private fun kniBridge256(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge257")private external fun kniBridge257(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge258")private fun kniBridge258(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge259")private external fun kniBridge259(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge26")private external fun kniBridge26(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge260")private fun kniBridge260(/*0*/ p0: kotlin.UShort, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge261")private external fun kniBridge261(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge262")private fun kniBridge262(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge263")private external fun kniBridge263(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge264")private external fun kniBridge264(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge265")private external fun kniBridge265(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge266")private external fun kniBridge266(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge267")private external fun kniBridge267(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge268")private external fun kniBridge268(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge269")private external fun kniBridge269(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge27")private external fun kniBridge27(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge270")private external fun kniBridge270(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge271")private external fun kniBridge271(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge272")private external fun kniBridge272(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge273")private external fun kniBridge273(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge274")private external fun kniBridge274(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge275")private external fun kniBridge275(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge276")private external fun kniBridge276(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge277")private external fun kniBridge277(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge278")private external fun kniBridge278(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge279")private external fun kniBridge279(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge28")private external fun kniBridge28(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge280")private external fun kniBridge280(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge281")private external fun kniBridge281(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge282")private external fun kniBridge282(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge283")private external fun kniBridge283(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge284")private external fun kniBridge284(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge285")private fun kniBridge285(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge286")private external fun kniBridge286(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge287")private external fun kniBridge287(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge288")private fun kniBridge288(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge289")private external fun kniBridge289(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge29")private external fun kniBridge29(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge290")private external fun kniBridge290(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge291")private fun kniBridge291(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge292")private external fun kniBridge292(/*0*/ p0: kotlin.Byte, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge293")private external fun kniBridge293(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge294")private external fun kniBridge294(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge295")private external fun kniBridge295(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge296")private external fun kniBridge296(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge297")private fun kniBridge297(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge298")private external fun kniBridge298(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge299")private external fun kniBridge299(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge3")private external fun kniBridge3(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge30")private external fun kniBridge30(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge300")private external fun kniBridge300(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge301")private external fun kniBridge301(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge302")private external fun kniBridge302(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge303")private external fun kniBridge303(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge304")private external fun kniBridge304(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge305")private external fun kniBridge305(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge306")private external fun kniBridge306(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge307")private external fun kniBridge307(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge308")private external fun kniBridge308(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge309")private external fun kniBridge309(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge31")private external fun kniBridge31(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge310")private external fun kniBridge310(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge311")private external fun kniBridge311(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge312")private external fun kniBridge312(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlin.UInt, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge313")private external fun kniBridge313(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge314")private external fun kniBridge314(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge315")private external fun kniBridge315(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge316")private external fun kniBridge316(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge317")private external fun kniBridge317(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge318")private external fun kniBridge318(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge319")private external fun kniBridge319(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge32")private external fun kniBridge32(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge320")private external fun kniBridge320(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge321")private external fun kniBridge321(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge322")private external fun kniBridge322(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge323")private external fun kniBridge323(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge324")private external fun kniBridge324(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge325")private external fun kniBridge325(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge326")private external fun kniBridge326(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge327")private external fun kniBridge327(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge328")private external fun kniBridge328(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge329")private external fun kniBridge329(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge33")private external fun kniBridge33(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge330")private external fun kniBridge330(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge331")private external fun kniBridge331(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge332")private external fun kniBridge332(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge333")private external fun kniBridge333(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge334")private external fun kniBridge334(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge335")private external fun kniBridge335(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge336")private external fun kniBridge336(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge337")private external fun kniBridge337(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge338")private external fun kniBridge338(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge339")private external fun kniBridge339(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge34")private external fun kniBridge34(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge340")private external fun kniBridge340(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge341")private external fun kniBridge341(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge342")private external fun kniBridge342(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge343")private external fun kniBridge343(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge344")private external fun kniBridge344(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge345")private external fun kniBridge345(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge346")private external fun kniBridge346(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge347")private external fun kniBridge347(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge348")private external fun kniBridge348(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge349")private external fun kniBridge349(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge35")private external fun kniBridge35(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge350")private external fun kniBridge350(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge351")private external fun kniBridge351(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge352")private external fun kniBridge352(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge353")private external fun kniBridge353(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge354")private external fun kniBridge354(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge355")private external fun kniBridge355(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge356")private external fun kniBridge356(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge357")private external fun kniBridge357(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge358")private external fun kniBridge358(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge359")private external fun kniBridge359(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge36")private external fun kniBridge36(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge360")private external fun kniBridge360(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge361")private external fun kniBridge361(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge362")private external fun kniBridge362(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge363")private external fun kniBridge363(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge364")private external fun kniBridge364(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge365")private external fun kniBridge365(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge366")private external fun kniBridge366(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge367")private external fun kniBridge367(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge368")private external fun kniBridge368(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge369")private external fun kniBridge369(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge37")private external fun kniBridge37(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge370")private external fun kniBridge370(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge371")private external fun kniBridge371(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge372")private external fun kniBridge372(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge373")private external fun kniBridge373(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge374")private external fun kniBridge374(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge375")private external fun kniBridge375(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge376")private external fun kniBridge376(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge377")private external fun kniBridge377(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge378")private external fun kniBridge378(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge379")private external fun kniBridge379(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge38")private external fun kniBridge38(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge380")private external fun kniBridge380(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge381")private external fun kniBridge381(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge382")private external fun kniBridge382(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge383")private external fun kniBridge383(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge384")private external fun kniBridge384(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge385")private external fun kniBridge385(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge386")private external fun kniBridge386(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge387")private external fun kniBridge387(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge388")private external fun kniBridge388(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge389")private external fun kniBridge389(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge39")private external fun kniBridge39(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge390")private external fun kniBridge390(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge391")private external fun kniBridge391(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge392")private external fun kniBridge392(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge393")private external fun kniBridge393(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge394")private external fun kniBridge394(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge395")private external fun kniBridge395(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge396")private external fun kniBridge396(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge397")private external fun kniBridge397(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge398")private external fun kniBridge398(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge399")private external fun kniBridge399(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge4")private external fun kniBridge4(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge40")private external fun kniBridge40(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge400")private external fun kniBridge400(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge401")private external fun kniBridge401(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge402")private external fun kniBridge402(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge403")private external fun kniBridge403(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge404")private external fun kniBridge404(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.Long, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge405")private external fun kniBridge405(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge406")private external fun kniBridge406(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge407")private external fun kniBridge407(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge408")private external fun kniBridge408(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge409")private external fun kniBridge409(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge41")private external fun kniBridge41(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge410")private external fun kniBridge410(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge411")private external fun kniBridge411(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge412")private external fun kniBridge412(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge413")private external fun kniBridge413(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge414")private external fun kniBridge414(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlin.UInt, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge415")private external fun kniBridge415(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge416")private external fun kniBridge416(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge417")private external fun kniBridge417(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge418")private external fun kniBridge418(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge419")private external fun kniBridge419(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge42")private external fun kniBridge42(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge420")private external fun kniBridge420(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge421")private external fun kniBridge421(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge422")private external fun kniBridge422(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge423")private external fun kniBridge423(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge424")private external fun kniBridge424(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge425")private external fun kniBridge425(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge426")private external fun kniBridge426(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge427")private external fun kniBridge427(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge428")private external fun kniBridge428(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge429")private external fun kniBridge429(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge43")private external fun kniBridge43(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge430")private external fun kniBridge430(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge431")private external fun kniBridge431(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge432")private external fun kniBridge432(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge433")private external fun kniBridge433(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge434")private external fun kniBridge434(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge435")private external fun kniBridge435(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge436")private external fun kniBridge436(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge437")private external fun kniBridge437(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge438")private external fun kniBridge438(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge439")private external fun kniBridge439(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge44")private external fun kniBridge44(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge440")private external fun kniBridge440(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge441")private external fun kniBridge441(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge442")private external fun kniBridge442(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge443")private external fun kniBridge443(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge444")private external fun kniBridge444(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge445")private external fun kniBridge445(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge446")private external fun kniBridge446(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge447")private external fun kniBridge447(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge448")private external fun kniBridge448(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge449")private external fun kniBridge449(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge45")private external fun kniBridge45(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge450")private external fun kniBridge450(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge451")private external fun kniBridge451(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge452")private external fun kniBridge452(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge453")private external fun kniBridge453(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge454")private external fun kniBridge454(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge455")private external fun kniBridge455(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge456")private external fun kniBridge456(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge457")private external fun kniBridge457(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge458")private external fun kniBridge458(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge459")private external fun kniBridge459(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge46")private external fun kniBridge46(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge460")private external fun kniBridge460(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge461")private external fun kniBridge461(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge462")private external fun kniBridge462(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge463")private external fun kniBridge463(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge464")private external fun kniBridge464(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge465")private external fun kniBridge465(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge466")private external fun kniBridge466(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge467")private external fun kniBridge467(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge468")private external fun kniBridge468(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge469")private external fun kniBridge469(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge47")private external fun kniBridge47(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge470")private external fun kniBridge470(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge471")private external fun kniBridge471(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge472")private external fun kniBridge472(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge473")private external fun kniBridge473(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge474")private external fun kniBridge474(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge475")private external fun kniBridge475(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge476")private external fun kniBridge476(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge477")private external fun kniBridge477(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge478")private external fun kniBridge478(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge479")private external fun kniBridge479(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge48")private external fun kniBridge48(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge480")private external fun kniBridge480(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge481")private external fun kniBridge481(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge482")private external fun kniBridge482(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge483")private external fun kniBridge483(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge484")private external fun kniBridge484(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge485")private external fun kniBridge485(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge486")private external fun kniBridge486(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge487")private external fun kniBridge487(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge488")private external fun kniBridge488(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge489")private external fun kniBridge489(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge49")private external fun kniBridge49(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge490")private external fun kniBridge490(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge491")private external fun kniBridge491(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge492")private external fun kniBridge492(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge493")private external fun kniBridge493(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UShort, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge494")private external fun kniBridge494(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge495")private external fun kniBridge495(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge496")private external fun kniBridge496(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge497")private external fun kniBridge497(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge498")private external fun kniBridge498(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge499")private external fun kniBridge499(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge5")private external fun kniBridge5(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge50")private external fun kniBridge50(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge500")private external fun kniBridge500(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge501")private external fun kniBridge501(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge502")private external fun kniBridge502(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge503")private external fun kniBridge503(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge504")private external fun kniBridge504(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge505")private external fun kniBridge505(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge506")private external fun kniBridge506(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge507")private external fun kniBridge507(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge508")private external fun kniBridge508(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge509")private external fun kniBridge509(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge51")private external fun kniBridge51(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge510")private external fun kniBridge510(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge511")private external fun kniBridge511(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge512")private external fun kniBridge512(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge513")private external fun kniBridge513(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge514")private external fun kniBridge514(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge515")private external fun kniBridge515(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge516")private external fun kniBridge516(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge517")private external fun kniBridge517(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge518")private external fun kniBridge518(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge519")private external fun kniBridge519(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge52")private external fun kniBridge52(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge520")private external fun kniBridge520(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge521")private external fun kniBridge521(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge522")private external fun kniBridge522(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge523")private external fun kniBridge523(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge524")private external fun kniBridge524(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge525")private external fun kniBridge525(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge526")private external fun kniBridge526(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge527")private external fun kniBridge527(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge528")private external fun kniBridge528(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge529")private external fun kniBridge529(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge53")private external fun kniBridge53(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge530")private external fun kniBridge530(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge531")private external fun kniBridge531(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge532")private external fun kniBridge532(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge533")private external fun kniBridge533(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge534")private external fun kniBridge534(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge535")private external fun kniBridge535(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge536")private external fun kniBridge536(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge537")private external fun kniBridge537(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge538")private external fun kniBridge538(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge539")private external fun kniBridge539(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge54")private external fun kniBridge54(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge540")private external fun kniBridge540(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge541")private external fun kniBridge541(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge542")private external fun kniBridge542(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge543")private external fun kniBridge543(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge544")private external fun kniBridge544(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge545")private external fun kniBridge545(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge546")private external fun kniBridge546(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge547")private external fun kniBridge547(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge548")private external fun kniBridge548(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge549")private external fun kniBridge549(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge55")private external fun kniBridge55(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge550")private external fun kniBridge550(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge551")private external fun kniBridge551(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge552")private external fun kniBridge552(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge553")private external fun kniBridge553(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge554")private external fun kniBridge554(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge555")private external fun kniBridge555(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge556")private external fun kniBridge556(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge557")private external fun kniBridge557(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge558")private external fun kniBridge558(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge559")private external fun kniBridge559(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge56")private external fun kniBridge56(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlin.UInt, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge560")private external fun kniBridge560(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge561")private external fun kniBridge561(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge562")private external fun kniBridge562(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge563")private external fun kniBridge563(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge564")private external fun kniBridge564(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge565")private external fun kniBridge565(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge566")private external fun kniBridge566(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge567")private external fun kniBridge567(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge568")private external fun kniBridge568(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge569")private external fun kniBridge569(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge57")private external fun kniBridge57(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge570")private external fun kniBridge570(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge571")private external fun kniBridge571(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge572")private external fun kniBridge572(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge573")private external fun kniBridge573(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge574")private external fun kniBridge574(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge575")private external fun kniBridge575(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge576")private external fun kniBridge576(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge577")private external fun kniBridge577(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge578")private external fun kniBridge578(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge579")private external fun kniBridge579(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge58")private external fun kniBridge58(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge580")private external fun kniBridge580(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge581")private external fun kniBridge581(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge582")private external fun kniBridge582(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge583")private external fun kniBridge583(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge584")private external fun kniBridge584(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge585")private external fun kniBridge585(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge586")private external fun kniBridge586(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge587")private external fun kniBridge587(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge588")private external fun kniBridge588(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge589")private external fun kniBridge589(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge59")private external fun kniBridge59(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge590")private external fun kniBridge590(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge591")private external fun kniBridge591(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge592")private external fun kniBridge592(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge593")private external fun kniBridge593(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge594")private external fun kniBridge594(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge595")private external fun kniBridge595(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge596")private external fun kniBridge596(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge597")private external fun kniBridge597(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge598")private external fun kniBridge598(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge599")private external fun kniBridge599(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge6")private external fun kniBridge6(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge60")private external fun kniBridge60(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge600")private external fun kniBridge600(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge601")private external fun kniBridge601(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge602")private external fun kniBridge602(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge603")private external fun kniBridge603(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge604")private external fun kniBridge604(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge605")private external fun kniBridge605(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge606")private external fun kniBridge606(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge607")private external fun kniBridge607(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge608")private external fun kniBridge608(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge609")private external fun kniBridge609(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge61")private external fun kniBridge61(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge610")private external fun kniBridge610(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge611")private external fun kniBridge611(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge612")private external fun kniBridge612(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge613")private external fun kniBridge613(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge614")private external fun kniBridge614(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge615")private external fun kniBridge615(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.ULong, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge616")private external fun kniBridge616(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.ULong, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge617")private external fun kniBridge617(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge618")private external fun kniBridge618(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge619")private external fun kniBridge619(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge62")private external fun kniBridge62(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge620")private external fun kniBridge620(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge621")private external fun kniBridge621(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge622")private external fun kniBridge622(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge623")private external fun kniBridge623(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge624")private external fun kniBridge624(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge625")private external fun kniBridge625(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge626")private external fun kniBridge626(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge627")private external fun kniBridge627(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge628")private external fun kniBridge628(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge629")private external fun kniBridge629(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge63")private external fun kniBridge63(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge630")private fun kniBridge630(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Byte, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge631")private external fun kniBridge631(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge632")private fun kniBridge632(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */ { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge633")private external fun kniBridge633(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge634")private fun kniBridge634(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */ { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge635")private external fun kniBridge635(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge636")private fun kniBridge636(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */ { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge637")private external fun kniBridge637(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge638")private external fun kniBridge638(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge639")private external fun kniBridge639(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.internal.ExportForCppRuntime(name = "platform_Security_kniBridge64")private fun kniBridge64(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) { TODO() }

@kotlin.native.SymbolName(name = "platform_Security_kniBridge640")private external fun kniBridge640(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge641")private external fun kniBridge641(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge642")private external fun kniBridge642(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge643")private external fun kniBridge643(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge644")private external fun kniBridge644(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge645")private external fun kniBridge645(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge646")private external fun kniBridge646(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge647")private external fun kniBridge647(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge648")private external fun kniBridge648(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge649")private external fun kniBridge649(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge65")private external fun kniBridge65(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge650")private external fun kniBridge650(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge651")private external fun kniBridge651(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge652")private external fun kniBridge652(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge653")private external fun kniBridge653(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge654")private external fun kniBridge654(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge655")private external fun kniBridge655(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge656")private external fun kniBridge656(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge657")private external fun kniBridge657(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge658")private external fun kniBridge658(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge659")private external fun kniBridge659(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge66")private external fun kniBridge66(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge660")private external fun kniBridge660(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge661")private external fun kniBridge661(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge662")private external fun kniBridge662(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge663")private external fun kniBridge663(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge664")private external fun kniBridge664(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge665")private external fun kniBridge665(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge666")private external fun kniBridge666(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge667")private external fun kniBridge667(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge668")private external fun kniBridge668(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge669")private external fun kniBridge669(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge67")private external fun kniBridge67(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge670")private external fun kniBridge670(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge671")private external fun kniBridge671(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge672")private external fun kniBridge672(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge673")private external fun kniBridge673(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge674")private external fun kniBridge674(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge675")private external fun kniBridge675(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge676")private external fun kniBridge676(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge677")private external fun kniBridge677(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge678")private external fun kniBridge678(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge679")private external fun kniBridge679(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge68")private external fun kniBridge68(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge680")private external fun kniBridge680(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge681")private external fun kniBridge681(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge682")private external fun kniBridge682(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge683")private external fun kniBridge683(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge684")private external fun kniBridge684(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge685")private external fun kniBridge685(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge686")private external fun kniBridge686(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge687")private external fun kniBridge687(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge688")private external fun kniBridge688(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge689")private external fun kniBridge689(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge69")private external fun kniBridge69(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge690")private external fun kniBridge690(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge691")private external fun kniBridge691(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge692")private external fun kniBridge692(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge693")private external fun kniBridge693(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge694")private external fun kniBridge694(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge695")private external fun kniBridge695(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge696")private external fun kniBridge696(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge697")private external fun kniBridge697(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge698")private external fun kniBridge698(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge699")private external fun kniBridge699(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge7")private external fun kniBridge7(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge70")private external fun kniBridge70(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge700")private external fun kniBridge700(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge701")private external fun kniBridge701(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge702")private external fun kniBridge702(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge703")private external fun kniBridge703(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge704")private external fun kniBridge704(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge705")private external fun kniBridge705(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge706")private external fun kniBridge706(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge707")private external fun kniBridge707(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge708")private external fun kniBridge708(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge709")private external fun kniBridge709(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge71")private external fun kniBridge71(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge710")private external fun kniBridge710(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge711")private external fun kniBridge711(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge712")private external fun kniBridge712(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge713")private external fun kniBridge713(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge714")private external fun kniBridge714(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge715")private external fun kniBridge715(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge716")private external fun kniBridge716(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge717")private external fun kniBridge717(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge718")private external fun kniBridge718(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge719")private external fun kniBridge719(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge72")private external fun kniBridge72(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge720")private external fun kniBridge720(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge721")private external fun kniBridge721(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge722")private external fun kniBridge722(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge723")private external fun kniBridge723(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge724")private external fun kniBridge724(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge725")private external fun kniBridge725(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge726")private external fun kniBridge726(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge727")private external fun kniBridge727(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge728")private external fun kniBridge728(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge729")private external fun kniBridge729(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge73")private external fun kniBridge73(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge730")private external fun kniBridge730(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge731")private external fun kniBridge731(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge732")private external fun kniBridge732(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge733")private external fun kniBridge733(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge734")private external fun kniBridge734(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge735")private external fun kniBridge735(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge736")private external fun kniBridge736(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge737")private external fun kniBridge737(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge738")private external fun kniBridge738(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge739")private external fun kniBridge739(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge74")private external fun kniBridge74(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge740")private external fun kniBridge740(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge741")private external fun kniBridge741(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge742")private external fun kniBridge742(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge743")private external fun kniBridge743(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge744")private external fun kniBridge744(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge745")private external fun kniBridge745(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge746")private external fun kniBridge746(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge747")private external fun kniBridge747(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge748")private external fun kniBridge748(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge749")private external fun kniBridge749(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge75")private external fun kniBridge75(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge750")private external fun kniBridge750(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge751")private external fun kniBridge751(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge752")private external fun kniBridge752(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge753")private external fun kniBridge753(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge754")private external fun kniBridge754(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge755")private external fun kniBridge755(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge756")private external fun kniBridge756(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge757")private external fun kniBridge757(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge758")private external fun kniBridge758(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge759")private external fun kniBridge759(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge76")private external fun kniBridge76(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge760")private external fun kniBridge760(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge761")private external fun kniBridge761(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge762")private external fun kniBridge762(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge763")private external fun kniBridge763(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge764")private external fun kniBridge764(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge765")private external fun kniBridge765(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge766")private external fun kniBridge766(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge767")private external fun kniBridge767(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge768")private external fun kniBridge768(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge769")private external fun kniBridge769(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge77")private external fun kniBridge77(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge770")private external fun kniBridge770(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge771")private external fun kniBridge771(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge772")private external fun kniBridge772(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge773")private external fun kniBridge773(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge774")private external fun kniBridge774(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge775")private external fun kniBridge775(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge776")private external fun kniBridge776(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge777")private external fun kniBridge777(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge778")private external fun kniBridge778(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge779")private external fun kniBridge779(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge78")private external fun kniBridge78(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge780")private external fun kniBridge780(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge781")private external fun kniBridge781(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge782")private external fun kniBridge782(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge783")private external fun kniBridge783(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge784")private external fun kniBridge784(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge785")private external fun kniBridge785(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge786")private external fun kniBridge786(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge787")private external fun kniBridge787(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge788")private external fun kniBridge788(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge789")private external fun kniBridge789(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge79")private external fun kniBridge79(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge790")private external fun kniBridge790(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge791")private external fun kniBridge791(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge792")private external fun kniBridge792(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge793")private external fun kniBridge793(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge794")private external fun kniBridge794(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge795")private external fun kniBridge795(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge796")private external fun kniBridge796(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge797")private external fun kniBridge797(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge798")private external fun kniBridge798(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge799")private external fun kniBridge799(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge8")private external fun kniBridge8(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge80")private external fun kniBridge80(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge800")private external fun kniBridge800(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge801")private external fun kniBridge801(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge802")private external fun kniBridge802(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge803")private external fun kniBridge803(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge804")private external fun kniBridge804(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge805")private external fun kniBridge805(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge806")private external fun kniBridge806(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge807")private external fun kniBridge807(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge808")private external fun kniBridge808(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge809")private external fun kniBridge809(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge81")private external fun kniBridge81(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge810")private external fun kniBridge810(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge811")private external fun kniBridge811(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge812")private external fun kniBridge812(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge813")private external fun kniBridge813(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge814")private external fun kniBridge814(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge815")private external fun kniBridge815(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge816")private external fun kniBridge816(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge817")private external fun kniBridge817(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge818")private external fun kniBridge818(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge819")private external fun kniBridge819(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge82")private external fun kniBridge82(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge820")private external fun kniBridge820(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge821")private external fun kniBridge821(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge822")private external fun kniBridge822(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge823")private external fun kniBridge823(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge824")private external fun kniBridge824(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge825")private external fun kniBridge825(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge826")private external fun kniBridge826(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge827")private external fun kniBridge827(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge828")private external fun kniBridge828(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge829")private external fun kniBridge829(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge83")private external fun kniBridge83(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge830")private external fun kniBridge830(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge831")private external fun kniBridge831(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge832")private external fun kniBridge832(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge833")private external fun kniBridge833(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge834")private external fun kniBridge834(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge835")private external fun kniBridge835(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge836")private external fun kniBridge836(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge837")private external fun kniBridge837(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge838")private external fun kniBridge838(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge839")private external fun kniBridge839(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge84")private external fun kniBridge84(/*0*/ p0: kotlin.Byte, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge840")private external fun kniBridge840(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge841")private external fun kniBridge841(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge842")private external fun kniBridge842(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge843")private external fun kniBridge843(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge844")private external fun kniBridge844(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge845")private external fun kniBridge845(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge846")private external fun kniBridge846(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge847")private external fun kniBridge847(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge848")private external fun kniBridge848(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge849")private external fun kniBridge849(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge85")private external fun kniBridge85(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge850")private external fun kniBridge850(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge851")private external fun kniBridge851(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge852")private external fun kniBridge852(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge853")private external fun kniBridge853(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge854")private external fun kniBridge854(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge855")private external fun kniBridge855(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge856")private external fun kniBridge856(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge857")private external fun kniBridge857(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge858")private external fun kniBridge858(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge859")private external fun kniBridge859(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge86")private external fun kniBridge86(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge860")private external fun kniBridge860(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge861")private external fun kniBridge861(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge862")private external fun kniBridge862(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge863")private external fun kniBridge863(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge864")private external fun kniBridge864(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge865")private external fun kniBridge865(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge866")private external fun kniBridge866(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge867")private external fun kniBridge867(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge868")private external fun kniBridge868(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge869")private external fun kniBridge869(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge87")private external fun kniBridge87(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge870")private external fun kniBridge870(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge871")private external fun kniBridge871(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge872")private external fun kniBridge872(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge873")private external fun kniBridge873(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge874")private external fun kniBridge874(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge875")private external fun kniBridge875(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge876")private external fun kniBridge876(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge877")private external fun kniBridge877(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge878")private external fun kniBridge878(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge879")private external fun kniBridge879(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge88")private external fun kniBridge88(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge880")private external fun kniBridge880(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge881")private external fun kniBridge881(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge882")private external fun kniBridge882(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge883")private external fun kniBridge883(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge884")private external fun kniBridge884(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge885")private external fun kniBridge885(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge886")private external fun kniBridge886(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge887")private external fun kniBridge887(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge888")private external fun kniBridge888(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge889")private external fun kniBridge889(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge89")private external fun kniBridge89(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge890")private external fun kniBridge890(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge891")private external fun kniBridge891(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge892")private external fun kniBridge892(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge893")private external fun kniBridge893(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge894")private external fun kniBridge894(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge895")private external fun kniBridge895(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge896")private external fun kniBridge896(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge897")private external fun kniBridge897(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge898")private external fun kniBridge898(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge899")private external fun kniBridge899(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge9")private external fun kniBridge9(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge90")private external fun kniBridge90(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge900")private external fun kniBridge900(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge901")private external fun kniBridge901(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge902")private external fun kniBridge902(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge903")private external fun kniBridge903(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge904")private external fun kniBridge904(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge905")private external fun kniBridge905(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge906")private external fun kniBridge906(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge907")private external fun kniBridge907(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge908")private external fun kniBridge908(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge909")private external fun kniBridge909(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge91")private external fun kniBridge91(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge910")private external fun kniBridge910(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge911")private external fun kniBridge911(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge912")private external fun kniBridge912(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge913")private external fun kniBridge913(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge914")private external fun kniBridge914(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge915")private external fun kniBridge915(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge916")private external fun kniBridge916(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge917")private external fun kniBridge917(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge918")private external fun kniBridge918(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge919")private external fun kniBridge919(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge92")private external fun kniBridge92(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge920")private external fun kniBridge920(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge921")private external fun kniBridge921(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge922")private external fun kniBridge922(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge923")private external fun kniBridge923(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge924")private external fun kniBridge924(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge925")private external fun kniBridge925(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge926")private external fun kniBridge926(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge927")private external fun kniBridge927(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge928")private external fun kniBridge928(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge929")private external fun kniBridge929(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge93")private external fun kniBridge93(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge930")private external fun kniBridge930(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge931")private external fun kniBridge931(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge932")private external fun kniBridge932(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge933")private external fun kniBridge933(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge934")private external fun kniBridge934(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge935")private external fun kniBridge935(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge936")private external fun kniBridge936(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge937")private external fun kniBridge937(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge938")private external fun kniBridge938(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge939")private external fun kniBridge939(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge94")private external fun kniBridge94(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_Security_kniBridge940")private external fun kniBridge940(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge941")private external fun kniBridge941(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge942")private external fun kniBridge942(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge943")private external fun kniBridge943(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge944")private external fun kniBridge944(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge945")private external fun kniBridge945(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge946")private external fun kniBridge946(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge947")private external fun kniBridge947(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge948")private external fun kniBridge948(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge949")private external fun kniBridge949(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge95")private external fun kniBridge95(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_Security_kniBridge950")private external fun kniBridge950(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge951")private external fun kniBridge951(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge952")private external fun kniBridge952(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge953")private external fun kniBridge953(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge954")private external fun kniBridge954(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge955")private external fun kniBridge955(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge956")private external fun kniBridge956(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge957")private external fun kniBridge957(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge958")private external fun kniBridge958(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge959")private external fun kniBridge959(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge96")private external fun kniBridge96(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge960")private external fun kniBridge960(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge961")private external fun kniBridge961(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge962")private external fun kniBridge962(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge963")private external fun kniBridge963(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge964")private external fun kniBridge964(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge965")private external fun kniBridge965(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge966")private external fun kniBridge966(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge967")private external fun kniBridge967(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge968")private external fun kniBridge968(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge969")private external fun kniBridge969(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge97")private external fun kniBridge97(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge970")private external fun kniBridge970(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge971")private external fun kniBridge971(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge972")private external fun kniBridge972(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge973")private external fun kniBridge973(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge974")private external fun kniBridge974(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge975")private external fun kniBridge975(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge976")private external fun kniBridge976(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge977")private external fun kniBridge977(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge978")private external fun kniBridge978(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge979")private external fun kniBridge979(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge98")private external fun kniBridge98(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge980")private external fun kniBridge980(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge981")private external fun kniBridge981(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge982")private external fun kniBridge982(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge984")private external fun kniBridge984(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge985")private external fun kniBridge985(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge986")private external fun kniBridge986(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge987")private external fun kniBridge987(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge988")private external fun kniBridge988(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge989")private external fun kniBridge989(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge99")private external fun kniBridge99(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_Security_kniBridge990")private external fun kniBridge990(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge991")private external fun kniBridge991(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge992")private external fun kniBridge992(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge993")private external fun kniBridge993(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge994")private external fun kniBridge994(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge995")private external fun kniBridge995(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge996")private external fun kniBridge996(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_Security_kniBridge997")private external fun kniBridge997(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge998")private external fun kniBridge998(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_Security_kniBridge999")private external fun kniBridge999(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

fun sec_certificate_copy_ref(/*0*/ certificate: platform.Security.sec_certificate_t? /* = platform.darwin.NSObject? */): platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */ { TODO() }

fun sec_certificate_create(/*0*/ certificate: platform.Security.SecCertificateRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecCertificateRef>? */): platform.Security.sec_certificate_t? /* = platform.darwin.NSObject? */ { TODO() }

fun sec_identity_copy_certificates_ref(/*0*/ identity: platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */): platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */ { TODO() }

fun sec_identity_copy_ref(/*0*/ identity: platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */): platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */ { TODO() }

fun sec_identity_create(/*0*/ identity: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */): platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */ { TODO() }

fun sec_identity_create_with_certificates(/*0*/ identity: platform.Security.SecIdentityRef? /* = kotlinx.cinterop.CPointer<cnames.structs.OpaqueSecIdentityRef>? */, /*1*/ certificates: platform.CoreFoundation.CFArrayRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__CFArray>? */): platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */ { TODO() }

fun sec_protocol_metadata_access_supported_signature_algorithms(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ handler: (platform.posix.uint16_t /* = kotlin.UShort */) -> kotlin.Unit): kotlin.Boolean { TODO() }

fun sec_protocol_metadata_create_secret(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ label_len: platform.posix.size_t /* = kotlin.ULong */, /*2*/ label: kotlin.String?, /*3*/ exporter_length: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */ { TODO() }

fun sec_protocol_metadata_create_secret_with_context(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, /*1*/ label_len: platform.posix.size_t /* = kotlin.ULong */, /*2*/ label: kotlin.String?, /*3*/ context_len: platform.posix.size_t /* = kotlin.ULong */, /*4*/ context: kotlinx.cinterop.CValuesRef<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */>?, /*5*/ exporter_length: platform.posix.size_t /* = kotlin.ULong */): platform.darwin.dispatch_data_t? /* = platform.darwin.NSObject? */ { TODO() }

fun sec_protocol_metadata_get_negotiated_ciphersuite(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): platform.Security.SSLCipherSuite /* = kotlin.UInt */ { TODO() }

fun sec_protocol_metadata_get_negotiated_protocol(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun sec_protocol_metadata_get_negotiated_protocol_version(/*0*/ metadata: platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */): platform.Security.SSLProtocol /* = kotlin.Int */ { TODO() }

fun sec_protocol_options_add_tls_ciphersuite(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ ciphersuite: platform.Security.SSLCipherSuite /* = kotlin.UInt */) { TODO() }

fun sec_protocol_options_set_challenge_block(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ challenge_block: platform.Security.sec_protocol_challenge_t? /* = ((platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, platform.Security.sec_protocol_challenge_complete_t? /* = ((platform.Security.sec_identity_t? /* = platform.darwin.NSObject? */) -> kotlin.Unit)? */) -> kotlin.Unit)? */, /*2*/ challenge_queue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */) { TODO() }

fun sec_protocol_options_set_key_update_block(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ key_update_block: platform.Security.sec_protocol_key_update_t? /* = ((platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, platform.Security.sec_protocol_key_update_complete_t? /* = (() -> kotlin.Unit)? */) -> kotlin.Unit)? */, /*2*/ key_update_queue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */) { TODO() }

fun sec_protocol_options_set_tls_max_version(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ version: platform.Security.SSLProtocol /* = kotlin.Int */) { TODO() }

fun sec_protocol_options_set_tls_min_version(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ version: platform.Security.SSLProtocol /* = kotlin.Int */) { TODO() }

fun sec_protocol_options_set_verify_block(/*0*/ options: platform.Security.sec_protocol_options_t? /* = platform.darwin.NSObject? */, /*1*/ verify_block: platform.Security.sec_protocol_verify_t? /* = ((platform.Security.sec_protocol_metadata_t? /* = platform.darwin.NSObject? */, platform.Security.sec_trust_t? /* = platform.darwin.NSObject? */, platform.Security.sec_protocol_verify_complete_t? /* = ((kotlin.Boolean) -> kotlin.Unit)? */) -> kotlin.Unit)? */, /*2*/ verify_block_queue: platform.darwin.dispatch_queue_t? /* = platform.darwin.NSObject? */) { TODO() }

fun sec_trust_copy_ref(/*0*/ trust: platform.Security.sec_trust_t? /* = platform.darwin.NSObject? */): platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */ { TODO() }

fun sec_trust_create(/*0*/ trust: platform.Security.SecTrustRef? /* = kotlinx.cinterop.CPointer<cnames.structs.__SecTrust>? */): platform.Security.sec_trust_t? /* = platform.darwin.NSObject? */ { TODO() }


