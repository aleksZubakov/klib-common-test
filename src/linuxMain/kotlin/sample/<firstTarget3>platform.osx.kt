@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION", "UNUSED_PARAMETER", "REDUNDANT_NULLABLE")

package platform.osx

import kotlinx.cinterop.* 

final class BTHeaderRec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var attributes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var btreeType: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var clumpSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var firstLeafNode: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var freeNodes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var keyCompareType: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var lastLeafNode: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var leafRecords: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var maxKeyLength: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var nodeSize: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var reserved1: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val reserved3: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var rootNode: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var totalNodes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var treeDepth: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class BTNodeDescriptor public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bLink: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var fLink: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var height: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var kind: platform.posix.int8_t /* = kotlin.Byte */
        get() = TODO()
        set(value: platform.posix.int8_t /* = kotlin.Byte */) = TODO()

    final var numRecords: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class BTreeKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var length16: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var length8: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final val rawData: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class FndrDirInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var frFlags: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final val frLocation: platform.osx.anonymousStruct13
        get() = TODO()

    final val frRect: platform.osx.anonymousStruct12
        get() = TODO()

    final var opaque: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class FndrExtendedDirInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var date_added: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var document_id: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var extended_flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var reserved3: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var write_gen_counter: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class FndrExtendedFileInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var date_added: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var document_id: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var extended_flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var reserved2: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var write_gen_counter: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class FndrFileInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fdCreator: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var fdFlags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val fdLocation: platform.osx.anonymousStruct11
        get() = TODO()

    final var fdType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var opaque: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class FndrOpaqueInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val opaque: kotlinx.cinterop.CArrayPointer<platform.posix.int8_tVar /* = kotlinx.cinterop.ByteVarOf<platform.posix.int8_t /* = kotlin.Byte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<platform.posix.int8_t /* = kotlin.Byte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSCatalogFile public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var backupDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var clumpSize: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var createDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val dataExtents: platform.osx.HFSExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSExtentDescriptor> */
        get() = TODO()

    final var dataLogicalSize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var dataPhysicalSize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var dataStartBlock: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var fileID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var fileType: platform.posix.int8_t /* = kotlin.Byte */
        get() = TODO()
        set(value: platform.posix.int8_t /* = kotlin.Byte */) = TODO()

    final val finderInfo: platform.osx.FndrOpaqueInfo
        get() = TODO()

    final var flags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var modifyDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var reserved: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val rsrcExtents: platform.osx.HFSExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSExtentDescriptor> */
        get() = TODO()

    final var rsrcLogicalSize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var rsrcPhysicalSize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var rsrcStartBlock: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val userInfo: platform.osx.FndrFileInfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSCatalogFolder public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var backupDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var createDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val finderInfo: platform.osx.FndrOpaqueInfo
        get() = TODO()

    final var flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var folderID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var modifyDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final val reserved: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val userInfo: platform.osx.FndrDirInfo
        get() = TODO()

    final var valence: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSCatalogKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var keyLength: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final val nodeName: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var parentID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var reserved: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSCatalogThread public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nodeName: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var parentID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final val reserved: kotlinx.cinterop.CArrayPointer<platform.posix.int32_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.int32_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.int32_t /* = kotlin.Int */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSExtentDescriptor public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var blockCount: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var startBlock: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSExtentKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fileID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var forkType: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var keyLength: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var startBlock: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSMasterDirectoryBlock public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var drAlBlSt: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drAlBlkSiz: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drAllocPtr: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drAtrb: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drCTClpSiz: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val drCTExtRec: platform.osx.HFSExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSExtentDescriptor> */
        get() = TODO()

    final var drCTFlSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drClpSiz: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drCrDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drDirCnt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val drEmbedExtent: platform.osx.HFSExtentDescriptor
        get() = TODO()

    final var drEmbedSigWord: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drFilCnt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val drFndrInfo: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var drFreeBks: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drLsMod: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drNmAlBlks: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drNmFls: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drNmRtDirs: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drNxtCNID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drSigWord: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drVBMSt: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val drVN: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var drVSeqNum: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var drVolBkUp: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drWrCnt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var drXTClpSiz: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val drXTExtRec: platform.osx.HFSExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSExtentDescriptor> */
        get() = TODO()

    final var drXTFlSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrData public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val attrData: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var attrSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val reserved: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrExtents public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val extents: platform.osx.HFSPlusExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSPlusExtentDescriptor> */
        get() = TODO()

    final var recordType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var reserved: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrForkData public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var recordType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var reserved: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val theFork: platform.osx.HFSPlusForkData
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrInlineData public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var logicalSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var reserved: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val userData: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val attrName: kotlinx.cinterop.CArrayPointer<platform.posix.u_int16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */>> */
        get() = TODO()

    final var attrNameLen: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var fileID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var keyLength: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var pad: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var startBlock: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusAttrRecord public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val attrData: platform.osx.HFSPlusAttrData
        get() = TODO()

    final val forkData: platform.osx.HFSPlusAttrForkData
        get() = TODO()

    final val inlineData: platform.osx.HFSPlusAttrInlineData
        get() = TODO()

    final val overflowExtents: platform.osx.HFSPlusAttrExtents
        get() = TODO()

    final var recordType: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusBSDInfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var adminFlags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var fileMode: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var groupID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ownerFlags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ownerID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val special: platform.osx.anonymousStruct14
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusCatalogFile public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var attributeModDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var backupDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val bsdInfo: platform.osx.HFSPlusBSDInfo
        get() = TODO()

    final var contentModDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var createDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val dataFork: platform.osx.HFSPlusForkData
        get() = TODO()

    final var fileID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val finderInfo: platform.osx.FndrOpaqueInfo
        get() = TODO()

    final var flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var reserved1: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var reserved2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val resourceFork: platform.osx.HFSPlusForkData
        get() = TODO()

    final var textEncoding: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val userInfo: platform.osx.FndrFileInfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusCatalogFolder public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var accessDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var attributeModDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var backupDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val bsdInfo: platform.osx.HFSPlusBSDInfo
        get() = TODO()

    final var contentModDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var createDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val finderInfo: platform.osx.FndrOpaqueInfo
        get() = TODO()

    final var flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var folderCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var folderID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var textEncoding: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val userInfo: platform.osx.FndrDirInfo
        get() = TODO()

    final var valence: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusCatalogKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var keyLength: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val nodeName: platform.osx.HFSUniStr255
        get() = TODO()

    final var parentID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusCatalogThread public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nodeName: platform.osx.HFSUniStr255
        get() = TODO()

    final var parentID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var recordType: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var reserved: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusExtentDescriptor public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var blockCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var startBlock: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusExtentKey public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fileID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var forkType: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var keyLength: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var pad: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var startBlock: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusForkData public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var clumpSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val extents: platform.osx.HFSPlusExtentRecord /* = kotlinx.cinterop.CPointer<platform.osx.HFSPlusExtentDescriptor> */
        get() = TODO()

    final var logicalSize: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var totalBlocks: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSPlusVolumeHeader public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val allocationFile: platform.osx.HFSPlusForkData
        get() = TODO()

    final var attributes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val attributesFile: platform.osx.HFSPlusForkData
        get() = TODO()

    final var backupDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var blockSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val catalogFile: platform.osx.HFSPlusForkData
        get() = TODO()

    final var checkedDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var createDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var dataClumpSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var encodingsBitmap: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final val extentsFile: platform.osx.HFSPlusForkData
        get() = TODO()

    final var fileCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val finderInfo: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var folderCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var freeBlocks: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var journalInfoBlock: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var lastMountedVersion: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var modifyDate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nextAllocation: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nextCatalogID: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rsrcClumpSize: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var signature: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val startupFile: platform.osx.HFSPlusForkData
        get() = TODO()

    final var totalBlocks: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var version: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var writeCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HFSUniStr255 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var length: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val unicode: kotlinx.cinterop.CArrayPointer<platform.posix.u_int16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class HistEvent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var num: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var str: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class JournalInfoBlock public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val device_signature: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val ext_jnl_uuid: platform.darwin.uuid_string_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val machine_serial_num: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var offset: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final val reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var size: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class LDIFFP public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fp: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?) = TODO()

    final var prev: kotlinx.cinterop.CPointer<platform.osx.LDIFFP>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.LDIFFP>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class MEVENT public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bstate: platform.osx.mmask_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.mmask_t /* = kotlin.ULong */) = TODO()

    final var id: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var x: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var y: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var z: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class XML_Content_Quant private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    XML_CQUANT_NONE(TODO()),

    XML_CQUANT_OPT(TODO()),

    XML_CQUANT_REP(TODO()),

    XML_CQUANT_PLUS(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.XML_Content_Quant { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.XML_Content_Quant
            get() = TODO()
            set(value: platform.osx.XML_Content_Quant) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class XML_Encoding public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var convert: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) -> kotlin.Int>>?) = TODO()

    final var data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val map: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var release: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class XML_Error private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    XML_ERROR_NONE(TODO()),

    XML_ERROR_NO_MEMORY(TODO()),

    XML_ERROR_SYNTAX(TODO()),

    XML_ERROR_NO_ELEMENTS(TODO()),

    XML_ERROR_INVALID_TOKEN(TODO()),

    XML_ERROR_UNCLOSED_TOKEN(TODO()),

    XML_ERROR_PARTIAL_CHAR(TODO()),

    XML_ERROR_TAG_MISMATCH(TODO()),

    XML_ERROR_DUPLICATE_ATTRIBUTE(TODO()),

    XML_ERROR_JUNK_AFTER_DOC_ELEMENT(TODO()),

    XML_ERROR_PARAM_ENTITY_REF(TODO()),

    XML_ERROR_UNDEFINED_ENTITY(TODO()),

    XML_ERROR_RECURSIVE_ENTITY_REF(TODO()),

    XML_ERROR_ASYNC_ENTITY(TODO()),

    XML_ERROR_BAD_CHAR_REF(TODO()),

    XML_ERROR_BINARY_ENTITY_REF(TODO()),

    XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF(TODO()),

    XML_ERROR_MISPLACED_XML_PI(TODO()),

    XML_ERROR_UNKNOWN_ENCODING(TODO()),

    XML_ERROR_INCORRECT_ENCODING(TODO()),

    XML_ERROR_UNCLOSED_CDATA_SECTION(TODO()),

    XML_ERROR_EXTERNAL_ENTITY_HANDLING(TODO()),

    XML_ERROR_NOT_STANDALONE(TODO()),

    XML_ERROR_UNEXPECTED_STATE(TODO()),

    XML_ERROR_ENTITY_DECLARED_IN_PE(TODO()),

    XML_ERROR_FEATURE_REQUIRES_XML_DTD(TODO()),

    XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING(TODO()),

    XML_ERROR_UNBOUND_PREFIX(TODO()),

    XML_ERROR_UNDECLARING_PREFIX(TODO()),

    XML_ERROR_INCOMPLETE_PE(TODO()),

    XML_ERROR_XML_DECL(TODO()),

    XML_ERROR_TEXT_DECL(TODO()),

    XML_ERROR_PUBLICID(TODO()),

    XML_ERROR_SUSPENDED(TODO()),

    XML_ERROR_NOT_SUSPENDED(TODO()),

    XML_ERROR_ABORTED(TODO()),

    XML_ERROR_FINISHED(TODO()),

    XML_ERROR_SUSPEND_PE(TODO()),

    XML_ERROR_RESERVED_PREFIX_XML(TODO()),

    XML_ERROR_RESERVED_PREFIX_XMLNS(TODO()),

    XML_ERROR_RESERVED_NAMESPACE_URI(TODO()),

    XML_ERROR_INVALID_ARGUMENT(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.XML_Error { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.XML_Error
            get() = TODO()
            set(value: platform.osx.XML_Error) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class XML_Expat_Version public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var major: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var micro: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var minor: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class XML_Feature public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var feature: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.XML_FeatureEnum /* = kotlin.UInt */) = TODO()

    final var name: kotlinx.cinterop.CPointer<platform.osx.XML_LCharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_LChar /* = kotlin.Byte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.XML_LCharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_LChar /* = kotlin.Byte */> */>?) = TODO()

    final var value: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class XML_Memory_Handling_Suite public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var free_fcn: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    final var malloc_fcn: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?) = TODO()

    final var realloc_fcn: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.size_t /* = kotlin.ULong */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class XML_ParamEntityParsing private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    XML_PARAM_ENTITY_PARSING_NEVER(TODO()),

    XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE(TODO()),

    XML_PARAM_ENTITY_PARSING_ALWAYS(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.XML_ParamEntityParsing { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.XML_ParamEntityParsing
            get() = TODO()
            set(value: platform.osx.XML_ParamEntityParsing) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final enum class XML_Parsing private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    XML_INITIALIZED(TODO()),

    XML_PARSING(TODO()),

    XML_FINISHED(TODO()),

    XML_SUSPENDED(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.XML_Parsing { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.XML_Parsing
            get() = TODO()
            set(value: platform.osx.XML_Parsing) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class XML_ParsingStatus public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var finalBuffer: platform.osx.XML_Bool /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.XML_Bool /* = kotlin.UByte */) = TODO()

    final var parsing: platform.osx.XML_Parsing
        get() = TODO()
        set(value: platform.osx.XML_Parsing) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class XML_cp public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var children: kotlinx.cinterop.CPointer<platform.osx.XML_Content /* = platform.osx.XML_cp */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.XML_Content /* = platform.osx.XML_cp */>?) = TODO()

    final var name: kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) = TODO()

    final var numchildren: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var quant: platform.osx.XML_Content_Quant
        get() = TODO()
        set(value: platform.osx.XML_Content_Quant) = TODO()

    final var type: platform.osx.XML_Content_Type /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.XML_Content_Type /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _PAGE public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pmax: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var pmin: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var smax: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var smin: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class __GElf_Sym public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var st_arch_subinfo: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var st_info: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    final var st_name: platform.osx.__GElf_Sxword /* = kotlin.Long */
        get() = TODO()
        set(value: platform.osx.__GElf_Sxword /* = kotlin.Long */) = TODO()

    final var st_other: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    final var st_shndx: platform.osx.__GElf_Half /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.osx.__GElf_Half /* = kotlin.UShort */) = TODO()

    final var st_size: platform.osx.__GElf_Xword /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Xword /* = kotlin.ULong */) = TODO()

    final var st_value: platform.osx.__GElf_Addr /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Addr /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_address public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var addrtype: platform.osx.krb5_addrtype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_addrtype /* = kotlin.Int */) = TODO()

    final var contents: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_ap_rep public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val enc_part: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_ap_rep_enc_part public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ctime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var cusec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var seq_number: platform.osx.krb5_ui_4 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_ui_4 /* = kotlin.UInt */) = TODO()

    final var subkey: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_ap_req public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ap_options: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final val authenticator: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var ticket: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_authdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ad_type: platform.osx.krb5_authdatatype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_authdatatype /* = kotlin.Int */) = TODO()

    final var contents: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_authenticator public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var authorization_data: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?) = TODO()

    final var checksum: kotlinx.cinterop.CPointer<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?) = TODO()

    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var ctime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var cusec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var seq_number: platform.osx.krb5_ui_4 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_ui_4 /* = kotlin.UInt */) = TODO()

    final var subkey: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_checksum public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var checksum_type: platform.osx.krb5_cksumtype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_cksumtype /* = kotlin.Int */) = TODO()

    final var contents: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_cred public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val enc_part: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var enc_part2: kotlinx.cinterop.CPointer<platform.osx.krb5_cred_enc_part /* = platform.osx._krb5_cred_enc_part */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_cred_enc_part /* = platform.osx._krb5_cred_enc_part */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var tickets: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_cred_enc_part public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var nonce: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var r_address: kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>?) = TODO()

    final var s_address: kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>?) = TODO()

    final var ticket_info: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_cred_info /* = platform.osx._krb5_cred_info */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_cred_info /* = platform.osx._krb5_cred_info */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_cred_info /* = platform.osx._krb5_cred_info */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_cred_info /* = platform.osx._krb5_cred_info */>> */>?) = TODO()

    final var timestamp: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var usec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_cred_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var caddrs: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var session: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    final val times: platform.osx.krb5_ticket_times /* = platform.osx._krb5_ticket_times */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_creds public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var addresses: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final var authdata: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?) = TODO()

    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var is_skey: platform.osx.krb5_boolean /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_boolean /* = kotlin.UInt */) = TODO()

    final val keyblock: platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */
        get() = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final val second_ticket: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final val ticket: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var ticket_flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final val times: platform.osx.krb5_ticket_times /* = platform.osx._krb5_ticket_times */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_enc_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ciphertext: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var enctype: platform.osx.krb5_enctype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_enctype /* = kotlin.Int */) = TODO()

    final var kvno: platform.osx.krb5_kvno /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_kvno /* = kotlin.UInt */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_enc_kdc_rep_part public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var caddrs: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final var flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var key_exp: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var last_req: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_last_req_entry /* = platform.osx._krb5_last_req_entry */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_last_req_entry /* = platform.osx._krb5_last_req_entry */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_last_req_entry /* = platform.osx._krb5_last_req_entry */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_last_req_entry /* = platform.osx._krb5_last_req_entry */>> */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var msg_type: platform.osx.krb5_msgtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_msgtype /* = kotlin.UInt */) = TODO()

    final var nonce: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var session: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    final val times: platform.osx.krb5_ticket_times /* = platform.osx._krb5_ticket_times */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_enc_tkt_part public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var authorization_data: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?) = TODO()

    final var caddrs: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var session: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    final val times: platform.osx.krb5_ticket_times /* = platform.osx._krb5_ticket_times */
        get() = TODO()

    final val transited: platform.osx.krb5_transited /* = platform.osx._krb5_transited */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_encrypt_block public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var crypto_entry: platform.osx.krb5_enctype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_enctype /* = kotlin.Int */) = TODO()

    final var key: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_error public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var ctime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var cusec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final val e_data: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var error: platform.osx.krb5_ui_4 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_ui_4 /* = kotlin.UInt */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var stime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var susec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final val text: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_get_init_creds_opt public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var address_list: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final var etype_list: kotlinx.cinterop.CPointer<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?) = TODO()

    final var etype_list_length: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var forwardable: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var preauth_list: kotlinx.cinterop.CPointer<platform.osx.krb5_preauthtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_preauthtype /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_preauthtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_preauthtype /* = kotlin.Int */> */>?) = TODO()

    final var preauth_list_length: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var proxiable: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var renew_life: platform.osx.krb5_deltat /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_deltat /* = kotlin.Int */) = TODO()

    final var salt: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) = TODO()

    final var tkt_life: platform.osx.krb5_deltat /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_deltat /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_gic_opt_pa_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var attr: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_kdc_rep public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final val enc_part: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var enc_part2: kotlinx.cinterop.CPointer<platform.osx.krb5_enc_kdc_rep_part /* = platform.osx._krb5_enc_kdc_rep_part */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_enc_kdc_rep_part /* = platform.osx._krb5_enc_kdc_rep_part */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var msg_type: platform.osx.krb5_msgtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_msgtype /* = kotlin.UInt */) = TODO()

    final var padata: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */>> */>?) = TODO()

    final var ticket: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_kdc_req public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var addresses: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) = TODO()

    final val authorization_data: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var from: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var kdc_options: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var ktype: kotlinx.cinterop.CPointer<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var msg_type: platform.osx.krb5_msgtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_msgtype /* = kotlin.UInt */) = TODO()

    final var nktypes: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var nonce: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var padata: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_pa_data /* = platform.osx._krb5_pa_data */>> */>?) = TODO()

    final var rtime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var second_ticket: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?) = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var till: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var unenc_authdata: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_keyblock public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var contents: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var enctype: platform.osx.krb5_enctype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_enctype /* = kotlin.Int */) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_last_req_entry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var lr_type: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var value: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_octet_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_pa_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var contents: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_octetVar /* = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet /* = kotlin.UByte */> */>?) = TODO()

    final var length: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var pa_type: platform.osx.krb5_preauthtype /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_preauthtype /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_prompt public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var hidden: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var prompt: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var reply: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_pwd_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var element: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.passwd_phrase_element /* = platform.osx._passwd_phrase_element */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.passwd_phrase_element /* = platform.osx._passwd_phrase_element */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.passwd_phrase_element /* = platform.osx._passwd_phrase_element */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.passwd_phrase_element /* = platform.osx._passwd_phrase_element */>> */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var sequence_count: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_response public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var expected_nonce: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var message_type: platform.osx.krb5_octet /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.krb5_octet /* = kotlin.UByte */) = TODO()

    final var request_time: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final val response: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_ticket public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val enc_part: platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */
        get() = TODO()

    final var enc_part2: kotlinx.cinterop.CPointer<platform.osx.krb5_enc_tkt_part /* = platform.osx._krb5_enc_tkt_part */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_enc_tkt_part /* = platform.osx._krb5_enc_tkt_part */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_ticket_times public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var authtime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var endtime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var renew_till: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var starttime: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_tkt_authent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ap_options: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    final var authenticator: kotlinx.cinterop.CPointer<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>?) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var ticket: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_transited public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final val tr_contents: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var tr_type: platform.osx.krb5_octet /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.krb5_octet /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _krb5_verify_init_creds_opt public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ap_req_nofail: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var flags: platform.osx.krb5_flags /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_flags /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _node public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var key: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var next: kotlinx.cinterop.CPointer<platform.osx._node>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx._node>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class _passwd_phrase_element public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var passwd: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) = TODO()

    final var phrase: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class alias public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var from: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var source: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var to: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class aliasent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var alias_local: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var alias_members: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var alias_members_len: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var alias_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct1 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tqe_next: kotlinx.cinterop.CPointer<platform.osx.ucred>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.ucred>?) = TODO()

    final var tqe_prev: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.ucred> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.ucred>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.ucred> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.ucred>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct10 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var line: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var link: kotlinx.cinterop.CPointer<platform.osx.entry>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.entry>?) = TODO()

    final var name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct11 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var h: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var v: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct12 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bottom: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var left: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var right: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var top: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct13 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var h: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var v: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct14 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var iNodeNum: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var linkCount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rawDevice: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ina_46: platform.osx.in4in6_addr
        get() = TODO()

    final val ina_6: platform.posix.in6_addr
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ina_46: platform.osx.in4in6_addr
        get() = TODO()

    final val ina_6: platform.posix.in6_addr
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct4 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var in4_tos: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct5 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var in6_cksum: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var in6_hlim: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var in6_hops: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var in6_ifindex: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct6 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ua_dummy: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val ua_sun: platform.osx.sockaddr_un
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct7 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ua_dummy: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val ua_sun: platform.osx.sockaddr_un
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct8 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pri_in: platform.osx.in_sockinfo
        get() = TODO()

    final val pri_kern_ctl: platform.osx.kern_ctl_info
        get() = TODO()

    final val pri_kern_event: platform.osx.kern_event_info
        get() = TODO()

    final val pri_ndrv: platform.osx.ndrv_info
        get() = TODO()

    final val pri_tcp: platform.osx.tcp_sockinfo
        get() = TODO()

    final val pri_un: platform.osx.un_sockinfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class anonymousStruct9 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ran_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var ran_strx: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class appletalk_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val appletalkinfo: platform.osx.appletalk_info
        get() = TODO()

    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class appletalk_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val atalk_stat: platform.osx.vinfo_stat
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class attribute_set public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var commonattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var dirattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var fileattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var forkattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var volattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class attrlist public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bitmapcount: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var commonattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var dirattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var fileattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var forkattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    final var reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var volattr: platform.osx.attrgroup_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.attrgroup_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class attrreference public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var attr_dataoffset: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var attr_length: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class berval public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bv_len: platform.osx.ber_len_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.ber_len_t /* = kotlin.ULong */) = TODO()

    final var bv_val: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class bootparamsent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bp_bootparams: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var bp_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class bpf_aux_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var vlan_tag: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var vlan_tag_present: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class bpf_insn public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var code: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var jf: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var jt: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var k: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class bpf_program public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bf_insns: kotlinx.cinterop.CPointer<platform.osx.bpf_insn>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.bpf_insn>?) = TODO()

    final var bf_len: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class codesigning_exit_reason_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ceri_codesig_modtime_nsecs: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ceri_codesig_modtime_secs: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ceri_file_offset: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ceri_filename: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ceri_object_codesigned: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_codesig_nx: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_codesig_tainted: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_codesig_validated: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_dirty: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_modtime_nsecs: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ceri_page_modtime_secs: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ceri_page_shadow_depth: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ceri_page_slid: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_page_wpmapped: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ceri_path_truncated: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final val ceri_pathname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ceri_virt_addr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class crashinfo_proc_uniqidentifierinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var p_puniqueid: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var p_reserve2: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var p_reserve3: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var p_reserve4: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var p_uniqueid: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val p_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class ctl_event_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ctl_id: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ctl_unit: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class ctl_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ctl_id: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val ctl_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class diskextent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var blockcount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var startblock: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class disktab public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var d_badsectforw: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var d_ncylinders: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_nsectors: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_ntracks: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val d_partitions: kotlinx.cinterop.CArrayPointer<platform.osx.partition> /* = kotlinx.cinterop.CPointer<platform.osx.partition> */
        get() = TODO()

    final var d_rpm: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_secsize: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_sectoffset: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var d_type: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_actdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofa_arg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofa_difo: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofa_kind: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofa_ntuple: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofa_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofa_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_difohdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dofd_links: kotlinx.cinterop.CArrayPointer<platform.osx.dof_secidx_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.dof_secidx_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.osx.dof_secidx_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val dofd_rtype: platform.osx.dtrace_diftype_t /* = platform.osx.dtrace_diftype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_ecbdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofe_actions: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofe_pad: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofe_pred: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofe_probes: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofe_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofh_filesz: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofh_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofh_hdrsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val dofh_ident: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var dofh_loadsz: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofh_pad: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofh_secnum: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofh_secoff: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofh_secsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_helper public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofhp_addr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofhp_dof: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val dofhp_mod: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_ioctl_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofiod_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val dofiod_helpers: kotlinx.cinterop.CArrayPointer<platform.osx.dof_helper_t /* = platform.osx.dof_helper */> /* = kotlinx.cinterop.CPointer<platform.osx.dof_helper_t /* = platform.osx.dof_helper */> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_optdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofo_option: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofo_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofo_value: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_probe public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofpr_addr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofpr_argidx: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofpr_enoffidx: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofpr_func: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofpr_name: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofpr_nargc: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dofpr_nargv: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofpr_nenoffs: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dofpr_noffs: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dofpr_offidx: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofpr_pad1: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dofpr_pad2: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofpr_xargc: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dofpr_xargv: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_probedesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofp_func: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofp_id: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofp_mod: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofp_name: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofp_provider: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofp_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_provider public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofpv_argsattr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofpv_funcattr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofpv_modattr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofpv_name: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofpv_nameattr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofpv_prargs: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofpv_prenoffs: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofpv_probes: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofpv_proffs: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofpv_provattr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofpv_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_relodesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofr_data: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofr_name: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofr_offset: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofr_type: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_relohdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofr_relsec: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofr_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofr_tgtsec: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_sec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofs_align: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofs_entsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofs_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofs_offset: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofs_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dofs_type: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_xlator public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofxl_argc: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofxl_argv: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final var dofxl_attr: platform.osx.dof_attr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_attr_t /* = kotlin.UInt */) = TODO()

    final var dofxl_members: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofxl_strtab: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofxl_type: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_xlmember public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofxm_difo: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    final var dofxm_name: platform.osx.dof_stridx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_stridx_t /* = kotlin.UInt */) = TODO()

    final val dofxm_type: platform.osx.dtrace_diftype_t /* = platform.osx.dtrace_diftype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dof_xlref public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dofxr_argn: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofxr_member: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dofxr_xlator: platform.osx.dof_secidx_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dof_secidx_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_actdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtad_arg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtad_difo: kotlinx.cinterop.CPointer<platform.osx.dtrace_difo_t /* = platform.osx.dtrace_difo */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_difo_t /* = platform.osx.dtrace_difo */>?) = TODO()

    final var dtad_kind: platform.osx.dtrace_actkind_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.osx.dtrace_actkind_t /* = kotlin.UShort */) = TODO()

    final var dtad_next: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc>?) = TODO()

    final var dtad_ntuple: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtad_refcnt: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtad_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_aggdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtada_data: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var dtada_delta: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var dtada_desc: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdesc_t /* = platform.osx.dtrace_aggdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdesc_t /* = platform.osx.dtrace_aggdesc */>?) = TODO()

    final var dtada_edesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?) = TODO()

    final var dtada_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtada_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dtada_maxbin: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtada_minbin: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtada_normal: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtada_pdesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?) = TODO()

    final var dtada_percpu: kotlinx.cinterop.CPointer<platform.posix.caddr_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.caddr_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.caddr_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.caddr_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> */> */>?) = TODO()

    final var dtada_percpu_delta: kotlinx.cinterop.CPointer<platform.posix.caddr_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.caddr_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.caddr_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.caddr_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> */> */>?) = TODO()

    final var dtada_size: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var dtada_total: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_aggdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtagd_epid: platform.osx.dtrace_epid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_epid_t /* = kotlin.UInt */) = TODO()

    final var dtagd_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtagd_id: platform.osx.dtrace_aggid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_aggid_t /* = kotlin.UInt */) = TODO()

    final var dtagd_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtagd_nrecs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtagd_pad: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val dtagd_rec: kotlinx.cinterop.CArrayPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */> /* = kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */> */
        get() = TODO()

    final var dtagd_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtagd_varid: platform.osx.dtrace_aggvarid_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.osx.dtrace_aggvarid_t /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_argdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtargd_id: platform.osx.dtrace_id_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_id_t /* = kotlin.UInt */) = TODO()

    final var dtargd_mapping: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val dtargd_native: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var dtargd_ndx: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val dtargd_xlate: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_attribute public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtat_class: platform.osx.dtrace_class_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.dtrace_class_t /* = kotlin.UByte */) = TODO()

    final var dtat_data: platform.osx.dtrace_stability_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.dtrace_stability_t /* = kotlin.UByte */) = TODO()

    final var dtat_name: platform.osx.dtrace_stability_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.osx.dtrace_stability_t /* = kotlin.UByte */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_bufdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtbda_aggdata: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?) = TODO()

    final var dtbda_buffered: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtbda_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtbda_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dtbda_probe: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?) = TODO()

    final var dtbda_recdesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_bufdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtbd_cpu: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtbd_data: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtbd_drops: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtbd_errors: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtbd_oldest: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtbd_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtbd_timestamp: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_conf public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtc_ctfmodel: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtc_difintregs: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtc_diftupregs: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtc_difversion: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final val dtc_pad: kotlinx.cinterop.CArrayPointer<platform.osx.uint_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.uint_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.osx.uint_t /* = kotlin.UInt */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_difo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtdo_buf: kotlinx.cinterop.CPointer<platform.osx.dif_instr_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.dif_instr_t /* = kotlin.UInt */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dif_instr_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.dif_instr_t /* = kotlin.UInt */> */>?) = TODO()

    final var dtdo_destructive: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_intlen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_inttab: kotlinx.cinterop.CPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */>?) = TODO()

    final var dtdo_krelen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_kreltab: kotlinx.cinterop.CPointer<platform.osx.dof_relodesc_t /* = platform.osx.dof_relodesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dof_relodesc_t /* = platform.osx.dof_relodesc */>?) = TODO()

    final var dtdo_len: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_refcnt: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final val dtdo_rtype: platform.osx.dtrace_diftype_t /* = platform.osx.dtrace_diftype */
        get() = TODO()

    final var dtdo_strlen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_strtab: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtdo_urelen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_ureltab: kotlinx.cinterop.CPointer<platform.osx.dof_relodesc_t /* = platform.osx.dof_relodesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dof_relodesc_t /* = platform.osx.dof_relodesc */>?) = TODO()

    final var dtdo_varlen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_vartab: kotlinx.cinterop.CPointer<platform.osx.dtrace_difv_t /* = platform.osx.dtrace_difv */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_difv_t /* = platform.osx.dtrace_difv */>?) = TODO()

    final var dtdo_xlmlen: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtdo_xlmtab: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<cnames.structs.dt_node> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<cnames.structs.dt_node>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<cnames.structs.dt_node> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<cnames.structs.dt_node>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_diftype public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtdt_ckind: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dtdt_flags: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dtdt_kind: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dtdt_pad: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dtdt_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_difv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtdv_flags: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtdv_id: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtdv_kind: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var dtdv_name: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtdv_scope: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final val dtdv_type: platform.osx.dtrace_diftype_t /* = platform.osx.dtrace_diftype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_dropdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtdda_cpu: platform.osx.processorid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.processorid_t /* = kotlin.Int */) = TODO()

    final var dtdda_drops: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtdda_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dtdda_kind: platform.osx.dtrace_dropkind_t
        get() = TODO()
        set(value: platform.osx.dtrace_dropkind_t) = TODO()

    final var dtdda_msg: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtdda_total: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class dtrace_dropkind_t private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    DTRACEDROP_PRINCIPAL(TODO()),

    DTRACEDROP_AGGREGATION(TODO()),

    DTRACEDROP_DYNAMIC(TODO()),

    DTRACEDROP_DYNRINSE(TODO()),

    DTRACEDROP_DYNDIRTY(TODO()),

    DTRACEDROP_SPEC(TODO()),

    DTRACEDROP_SPECBUSY(TODO()),

    DTRACEDROP_SPECUNAVAIL(TODO()),

    DTRACEDROP_STKSTROVERFLOW(TODO()),

    DTRACEDROP_DBLERROR(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.dtrace_dropkind_t { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.dtrace_dropkind_t
            get() = TODO()
            set(value: platform.osx.dtrace_dropkind_t) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class dtrace_ecbdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dted_action: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?) = TODO()

    final val dted_pred: platform.osx.dtrace_preddesc_t /* = platform.osx.dtrace_preddesc */
        get() = TODO()

    final val dted_probe: platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */
        get() = TODO()

    final var dted_probegen: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dted_refcnt: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dted_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_eprobedesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtepd_epid: platform.osx.dtrace_epid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_epid_t /* = kotlin.UInt */) = TODO()

    final var dtepd_nrecs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtepd_probeid: platform.osx.dtrace_id_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_id_t /* = kotlin.UInt */) = TODO()

    final val dtepd_rec: kotlinx.cinterop.CArrayPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */> /* = kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */> */
        get() = TODO()

    final var dtepd_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtepd_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_errdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dteda_action: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dteda_addr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dteda_cpu: platform.osx.processorid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.processorid_t /* = kotlin.Int */) = TODO()

    final var dteda_edesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?) = TODO()

    final var dteda_fault: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dteda_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dteda_msg: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dteda_offset: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dteda_pdesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final enum class dtrace_flowkind_t private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    DTRACEFLOW_ENTRY(TODO()),

    DTRACEFLOW_RETURN(TODO()),

    DTRACEFLOW_NONE(TODO());

    open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    companion object Companion {
        final fun byValue(/*0*/ value: kotlin.UInt): platform.osx.dtrace_flowkind_t { TODO() }
    }

    final class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        final var value: platform.osx.dtrace_flowkind_t
            get() = TODO()
            set(value: platform.osx.dtrace_flowkind_t) = TODO()

        companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final class dtrace_fmtdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtfd_format: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtfd_length: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtfd_string: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_module_symbols public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtmodsyms_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val dtmodsyms_symbols: kotlinx.cinterop.CArrayPointer<platform.osx.dtrace_symbol_t /* = platform.osx.dtrace_symbol */> /* = kotlinx.cinterop.CPointer<platform.osx.dtrace_symbol_t /* = platform.osx.dtrace_symbol */> */
        get() = TODO()

    final val dtmodsyms_uuid: platform.osx.UUID /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_module_uuids_list public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtmul_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val dtmul_uuid: platform.osx.UUID /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_objinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dto_bss_size: platform.osx.__GElf_Xword /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Xword /* = kotlin.ULong */) = TODO()

    final var dto_bss_va: platform.osx.__GElf_Addr /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Addr /* = kotlin.ULong */) = TODO()

    final var dto_data_size: platform.osx.__GElf_Xword /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Xword /* = kotlin.ULong */) = TODO()

    final var dto_data_va: platform.osx.__GElf_Addr /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Addr /* = kotlin.ULong */) = TODO()

    final var dto_file: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dto_flags: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dto_id: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dto_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dto_text_size: platform.osx.__GElf_Xword /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Xword /* = kotlin.ULong */) = TODO()

    final var dto_text_va: platform.osx.__GElf_Addr /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.__GElf_Addr /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_pattr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dtpa_args: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final val dtpa_func: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final val dtpa_mod: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final val dtpa_name: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final val dtpa_provider: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_ppriv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtpp_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtpp_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var dtpp_zoneid: platform.osx.zoneid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.zoneid_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_preddesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtpdd_difo: kotlinx.cinterop.CPointer<platform.osx.dtrace_difo_t /* = platform.osx.dtrace_difo */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_difo_t /* = platform.osx.dtrace_difo */>?) = TODO()

    final var dtpdd_predicate: kotlinx.cinterop.CPointer<cnames.structs.dtrace_predicate>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.dtrace_predicate>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_probedata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtpda_cpu: platform.osx.processorid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.processorid_t /* = kotlin.Int */) = TODO()

    final var dtpda_data: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var dtpda_edesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_eprobedesc_t /* = platform.osx.dtrace_eprobedesc */>?) = TODO()

    final var dtpda_flow: platform.osx.dtrace_flowkind_t
        get() = TODO()
        set(value: platform.osx.dtrace_flowkind_t) = TODO()

    final var dtpda_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dtpda_indent: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtpda_pdesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?) = TODO()

    final var dtpda_prefix: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_probedesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dtpd_func: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var dtpd_id: platform.osx.dtrace_id_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_id_t /* = kotlin.UInt */) = TODO()

    final val dtpd_mod: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val dtpd_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val dtpd_provider: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_probeinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dtp_arga: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final var dtp_argc: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var dtp_argv: kotlinx.cinterop.CPointer<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?) = TODO()

    final val dtp_attr: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_procdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val p_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var p_name_length: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var p_pid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_proginfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dpi_aggregates: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final val dpi_descattr: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final var dpi_matches: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dpi_recgens: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dpi_speculations: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final val dpi_stmtattr: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_providerdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dtvd_attr: platform.osx.dtrace_pattr_t /* = platform.osx.dtrace_pattr */
        get() = TODO()

    final val dtvd_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val dtvd_priv: platform.osx.dtrace_ppriv_t /* = platform.osx.dtrace_ppriv */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_recdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtrd_action: platform.osx.dtrace_actkind_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.osx.dtrace_actkind_t /* = kotlin.UShort */) = TODO()

    final var dtrd_alignment: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtrd_arg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtrd_format: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var dtrd_offset: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtrd_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtrd_uarg: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_rechdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtrh_epid: platform.osx.dtrace_epid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.dtrace_epid_t /* = kotlin.UInt */) = TODO()

    final var dtrh_timestamp_hi: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var dtrh_timestamp_lo: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_repldesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val dtrpd_create: platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */
        get() = TODO()

    final val dtrpd_match: platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_setoptdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtsda_handle: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) = TODO()

    final var dtsda_newval: platform.osx.dtrace_optval_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.osx.dtrace_optval_t /* = kotlin.Long */) = TODO()

    final var dtsda_oldval: platform.osx.dtrace_optval_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.osx.dtrace_optval_t /* = kotlin.Long */) = TODO()

    final var dtsda_option: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtsda_probe: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_status public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtst_dblerrors: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_dyndrops: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_dyndrops_dirty: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_dyndrops_rinsing: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_errors: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_exiting: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    final var dtst_filled: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_killed: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    final val dtst_pad: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var dtst_specdrops: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_specdrops_busy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_specdrops_unavail: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var dtst_stkstroverflows: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_stmtdesc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtsd_action: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?) = TODO()

    final var dtsd_action_last: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>?) = TODO()

    final var dtsd_aggdata: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var dtsd_callback: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var dtsd_data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val dtsd_descattr: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final var dtsd_ecbdesc: kotlinx.cinterop.CPointer<platform.osx.dtrace_ecbdesc_t /* = platform.osx.dtrace_ecbdesc */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.dtrace_ecbdesc_t /* = platform.osx.dtrace_ecbdesc */>?) = TODO()

    final var dtsd_fmtdata: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val dtsd_stmtattr: platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */
        get() = TODO()

    final var dtsd_strdata: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_symbol public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtsym_addr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val dtsym_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var dtsym_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_syminfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dts_id: platform.osx.ulong_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.osx.ulong_t /* = kotlin.ULong */) = TODO()

    final var dts_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dts_object: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_typeinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtt_ctfp: kotlinx.cinterop.CPointer<platform.osx.ctf_file_t /* = cnames.structs.ctf_file */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.ctf_file_t /* = cnames.structs.ctf_file */>?) = TODO()

    final var dtt_flags: platform.osx.uint_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.uint_t /* = kotlin.UInt */) = TODO()

    final var dtt_object: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dtt_type: platform.osx.ctf_id_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.osx.ctf_id_t /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dtrace_vector public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dtv_ioctl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) = TODO()

    final var dtv_lookup_by_addr: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.__GElf_Addr /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.osx.__GElf_Sym>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_syminfo_t /* = platform.osx.dtrace_syminfo */>?) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.__GElf_Addr /* = kotlin.ULong */, kotlinx.cinterop.CPointer<platform.osx.__GElf_Sym>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_syminfo_t /* = platform.osx.dtrace_syminfo */>?) -> kotlin.Int>>?) = TODO()

    final var dtv_status: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.processorid_t /* = kotlin.Int */) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.processorid_t /* = kotlin.Int */) -> kotlin.Int>>?) = TODO()

    final var dtv_sysconf: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int) -> kotlin.Long>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int) -> kotlin.Long>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dyld_uuid_info_32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var imageLoadAddress: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val imageUUID: platform.posix.uuid_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dyld_uuid_info_64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var imageLoadAddress: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val imageUUID: platform.posix.uuid_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class dyld_uuid_info_64_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var imageLoadAddress: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var imageSlidBaseAddress: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val imageUUID: platform.posix.uuid_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class entry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var cend: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val crosslinks: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<platform.osx.entry> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.entry>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.entry>>> */
        get() = TODO()

    final var cstart: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var last: kotlinx.cinterop.CPointer<platform.osx.entry>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.entry>?) = TODO()

    final var ncrosslinks: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var next: kotlinx.cinterop.CPointer<platform.osx.entry>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.entry>?) = TODO()

    final var nuses: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var startline: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val tterm: platform.osx.TERMTYPE /* = platform.osx.termtype */
        get() = TODO()

    final val uses: kotlinx.cinterop.CArrayPointer<platform.osx.anonymousStruct10> /* = kotlinx.cinterop.CPointer<platform.osx.anonymousStruct10> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class error_table public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var base: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var count: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var messages: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class exit_reason_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ers_code: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ers_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ers_namespace: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class fhandle public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val fh_data: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    final var fh_len: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class fieldnode public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var arg: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var back: platform.osx.chtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.chtype /* = kotlin.UInt */) = TODO()

    final var buf: kotlinx.cinterop.CPointer<platform.osx.FIELD_CELLVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.FIELD_CELL /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.FIELD_CELLVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.FIELD_CELL /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) = TODO()

    final var cols: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var dcols: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var drows: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var fcol: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var fore: platform.osx.chtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.chtype /* = kotlin.UInt */) = TODO()

    final var form: kotlinx.cinterop.CPointer<platform.osx.formnode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.formnode>?) = TODO()

    final var frow: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var index: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var just: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var link: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?) = TODO()

    final var maxgrow: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var nbuf: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var nrow: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var opts: platform.osx.Field_Options /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.Field_Options /* = kotlin.Int */) = TODO()

    final var pad: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var page: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var rows: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var snext: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?) = TODO()

    final var sprev: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.fieldnode>?) = TODO()

    final var status: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var type: kotlinx.cinterop.CPointer<platform.osx.typenode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.typenode>?) = TODO()

    final var usrptr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class formnode public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var begincol: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var cols: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var curcol: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var curpage: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var current: kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?) = TODO()

    final var currow: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var field: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.FIELD /* = platform.osx.fieldnode */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.FIELD /* = platform.osx.fieldnode */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>> */>?) = TODO()

    final var fieldinit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?) = TODO()

    final var fieldterm: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?) = TODO()

    final var forminit: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?) = TODO()

    final var formterm: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.formnode>?) -> kotlin.Unit>>?) = TODO()

    final var maxfield: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var maxpage: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var opts: platform.osx.Form_Options /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.Form_Options /* = kotlin.Int */) = TODO()

    final var page: kotlinx.cinterop.CPointer<platform.osx._PAGE>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx._PAGE>?) = TODO()

    final var rows: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var status: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var sub: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

    final var toprow: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var usrptr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var w: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

    final var win: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class fssearchblock public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var maxmatches: platform.posix.u_long /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_long /* = kotlin.ULong */) = TODO()

    final var returnattrs: kotlinx.cinterop.CPointer<platform.osx.attrlist>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.attrlist>?) = TODO()

    final var returnbuffer: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var returnbuffersize: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final val searchattrs: platform.osx.attrlist
        get() = TODO()

    final var searchparams1: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var searchparams2: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var sizeofsearchparams1: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var sizeofsearchparams2: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final val timelimit: platform.posix.timeval
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class gss_OID_desc_struct public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var elements: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var length: platform.osx.OM_uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.OM_uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class gss_OID_set_desc_struct public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var count: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var elements: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
        get() = TODO()
        set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class gss_buffer_desc_struct public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var length: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class gss_channel_bindings_struct public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val acceptor_address: platform.osx.gss_buffer_desc /* = platform.osx.gss_buffer_desc_struct */
        get() = TODO()

    final var acceptor_addrtype: platform.osx.OM_uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.OM_uint32 /* = kotlin.UInt */) = TODO()

    final val application_data: platform.osx.gss_buffer_desc /* = platform.osx.gss_buffer_desc_struct */
        get() = TODO()

    final val initiator_address: platform.osx.gss_buffer_desc /* = platform.osx.gss_buffer_desc_struct */
        get() = TODO()

    final var initiator_addrtype: platform.osx.OM_uint32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.OM_uint32 /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class hash_table public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var buckets: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.hash_node /* = platform.osx._node */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.hash_node /* = platform.osx._node */>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.hash_node /* = platform.osx._node */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.hash_node /* = platform.osx._node */>> */>?) = TODO()

    final var size: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class hfs_mount_args public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var fspec: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var hfs_encoding: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var hfs_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var hfs_mask: platform.posix.mode_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.mode_t /* = kotlin.UShort */) = TODO()

    final val hfs_timezone: platform.posix.timezone
        get() = TODO()

    final var hfs_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var journal_disable: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var journal_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var journal_tbuffer_size: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class histeventW public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var num: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var str: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class in4in6_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val i46a_addr4: platform.posix.in_addr
        get() = TODO()

    final val i46a_pad32: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class in_sockinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val insi_faddr: platform.osx.anonymousStruct2
        get() = TODO()

    final var insi_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var insi_flow: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var insi_fport: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var insi_gencnt: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var insi_ip_ttl: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final val insi_laddr: platform.osx.anonymousStruct3
        get() = TODO()

    final var insi_lport: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val insi_v4: platform.osx.anonymousStruct4
        get() = TODO()

    final val insi_v6: platform.osx.anonymousStruct5
        get() = TODO()

    final var insi_vflag: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var rfu_1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class instrs_cycles_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ics_cycles: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ics_instructions: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class io_stats_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ss_data_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_data_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_disk_reads_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_disk_reads_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_disk_writes_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_disk_writes_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ss_io_priority_count: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final val ss_io_priority_size: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var ss_metadata_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_metadata_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_non_paging_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_non_paging_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_paging_count: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ss_paging_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class jetsam_coalition_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var jcs_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var jcs_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var jcs_leader_task_uniqueid: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var jcs_thread_group: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kcdata_item public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kcdata_iter public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var end: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var item: platform.osx.kcdata_item_t? /* = kotlinx.cinterop.CPointer<platform.osx.kcdata_item>? */
        get() = TODO()
        set(value: platform.osx.kcdata_item_t? /* = kotlinx.cinterop.CPointer<platform.osx.kcdata_item>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kcdata_subtype_descriptor public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var kcs_elem_offset: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var kcs_elem_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kcs_elem_type: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kcs_flags: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final val kcs_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kcdata_type_definition public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kern_ctl_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var kcsi_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kcsi_id: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val kcsi_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var kcsi_recvbufsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kcsi_reg_unit: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kcsi_sendbufsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kcsi_unit: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kern_event_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var kesi_class_filter: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kesi_subclass_filter: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var kesi_vendor_code_filter: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kevent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: platform.posix.intptr_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.intptr_t /* = kotlin.Long */) = TODO()

    final var fflags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var filter: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var flags: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var ident: platform.posix.uintptr_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uintptr_t /* = kotlin.ULong */) = TODO()

    final var udata: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kevent64_s public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final val ext: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var fflags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var filter: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var flags: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var ident: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var udata: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class klist public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var slh_first: kotlinx.cinterop.CPointer<cnames.structs.knote>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.knote>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kqueue_dyninfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val _kqdi_reserved0: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final val _kqdi_reserved1: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var kqdi_async_qos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kqdi_cpupercent: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kqdi_events_qos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final val kqdi_info: platform.osx.kqueue_info
        get() = TODO()

    final var kqdi_owner: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var kqdi_pol: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kqdi_pri: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kqdi_request_state: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var kqdi_servicer: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var kqdi_sync_waiter_qos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var kqdi_sync_waiters: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kqueue_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val kqueueinfo: platform.osx.kqueue_info
        get() = TODO()

    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class kqueue_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val kq_stat: platform.osx.vinfo_stat
        get() = TODO()

    final var kq_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var rfu_1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class krb5_keytab_entry_st public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val key: platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */
        get() = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final var principal: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */
        get() = TODO()
        set(value: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) = TODO()

    final var timestamp: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var vno: platform.osx.krb5_kvno /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_kvno /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class krb5_principal_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) = TODO()

    final var length: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    final var magic: platform.osx.krb5_magic /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_magic /* = kotlin.Int */) = TODO()

    final val realm: platform.osx.krb5_data /* = platform.osx._krb5_data */
        get() = TODO()

    final var type: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class krb5_replay_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var seq: platform.osx.krb5_ui_4 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.krb5_ui_4 /* = kotlin.UInt */) = TODO()

    final var timestamp: platform.osx.krb5_timestamp /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_timestamp /* = kotlin.Int */) = TODO()

    final var usec: platform.osx.krb5_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.krb5_int32 /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class lber_memory_fns public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var bmf_calloc: kotlinx.cinterop.CPointer<platform.osx.BER_MEMCALLOC_FN /* = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t /* = kotlin.ULong */, platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.BER_MEMCALLOC_FN /* = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t /* = kotlin.ULong */, platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?) = TODO()

    final var bmf_free: kotlinx.cinterop.CPointer<platform.osx.BER_MEMFREE_FN /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.BER_MEMFREE_FN /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit> */>?) = TODO()

    final var bmf_malloc: kotlinx.cinterop.CPointer<platform.osx.BER_MEMALLOC_FN /* = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.BER_MEMALLOC_FN /* = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?) = TODO()

    final var bmf_realloc: kotlinx.cinterop.CPointer<platform.osx.BER_MEMREALLOC_FN /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.BER_MEMREALLOC_FN /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class lineinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var buffer: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var cursor: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var lastchar: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class lineinfow public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var buffer: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?) = TODO()

    final var cursor: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?) = TODO()

    final var lastchar: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class mem_and_io_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var active_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var busy_buffer_count: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var compressions: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var compressor_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var decompressions: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var filebacked_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var free_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var inactive_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pages_reclaimed: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pages_wanted: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pages_wanted_reclaimed_valid: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var purgeable_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var snapshot_magic: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var speculative_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var throttled_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var wired_pages: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class name_table_entry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nte_index: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var nte_link: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var nte_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var nte_type: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class ndrv_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ndrvsi_if_family: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val ndrvsi_if_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ndrvsi_if_unit: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class netfs_status public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ns_mountopts: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ns_status: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ns_threadcount: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val ns_threadids: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var ns_waittime: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class nlist public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var n_desc: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var n_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var n_other: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    final var n_type: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    final var n_value: kotlin.ULong
        get() = TODO()
        set(value: kotlin.ULong) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class panel public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var above: kotlinx.cinterop.CPointer<platform.osx.panel>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.panel>?) = TODO()

    final var below: kotlinx.cinterop.CPointer<platform.osx.panel>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.panel>?) = TODO()

    final var user: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var win: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class partition public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var p_bsize: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var p_fsize: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var p_size: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var addr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    final var broadaddr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    final var dstaddr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    final var netmask: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    final var next: kotlinx.cinterop.CPointer<platform.osx.pcap_addr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.pcap_addr>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_etherent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val addr: kotlinx.cinterop.CArrayPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>> */
        get() = TODO()

    final val name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_file_header public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var linktype: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final var magic: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final var sigfigs: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final var snaplen: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final var thiszone: platform.osx.bpf_int32 /* = kotlin.Int */
        get() = TODO()
        set(value: platform.osx.bpf_int32 /* = kotlin.Int */) = TODO()

    final var version_major: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var version_minor: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_if public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var addresses: kotlinx.cinterop.CPointer<platform.osx.pcap_addr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.pcap_addr>?) = TODO()

    final var description: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var flags: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final var name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var next: kotlinx.cinterop.CPointer<platform.osx.pcap_if>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.pcap_if>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_pkthdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var caplen: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final val comment: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var len: platform.osx.bpf_u_int32 /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.bpf_u_int32 /* = kotlin.UInt */) = TODO()

    final val ts: platform.posix.timeval
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pcap_stat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ps_drop: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var ps_ifdrop: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var ps_recv: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pipe_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val pipeinfo: platform.osx.pipe_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pipe_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pipe_handle: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pipe_peerhandle: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val pipe_stat: platform.osx.vinfo_stat
        get() = TODO()

    final var pipe_status: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var rfu_1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class posix_cred public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var cr_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var cr_gmuid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final val cr_groups: kotlinx.cinterop.CArrayPointer<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var cr_ngroups: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var cr_rgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var cr_ruid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var cr_svgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var cr_svuid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var cr_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class prdb_ent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pe_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var pe_nprops: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var pe_prop: kotlinx.cinterop.CPointer<platform.osx.prdb_property>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.prdb_property>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class prdb_property public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pp_key: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pp_value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_bsdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var e_tdev: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var e_tpgid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val pbi_comm: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var pbi_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final val pbi_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var pbi_nfiles: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_nice: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pbi_pgid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_pid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_pjobc: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_ppid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_rgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pbi_ruid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var pbi_start_tvsec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pbi_start_tvusec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pbi_status: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbi_svgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pbi_svuid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var pbi_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var pbi_xstatus: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var rfu_1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_bsdshortinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pbsi_comm: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var pbsi_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pbsi_pgid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_pid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_ppid: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_rfu: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_rgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pbsi_ruid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var pbsi_status: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pbsi_svgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pbsi_svuid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var pbsi_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_exitreasonbasicinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var beri_code: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var beri_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var beri_namespace: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var beri_reason_buf_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_exitreasoninfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var eri_code: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var eri_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var eri_kcd_buf: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var eri_namespace: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var eri_reason_buf_size: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var proc_fd: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var proc_fdtype: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_fileinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fi_guardflags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var fi_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var fi_openflags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var fi_status: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var fi_type: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_fileportinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var proc_fdtype: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var proc_fileport: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_regioninfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pri_address: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pri_behavior: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_depth: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_inheritance: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_max_protection: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_obj_id: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_offset: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pri_pages_dirtied: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_pages_resident: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_pages_shared_now_private: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_pages_swapped_out: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_private_pages_resident: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_protection: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_ref_count: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_shadow_depth: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_share_mode: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_shared_pages_resident: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pri_user_tag: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pri_user_wired_count: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_regionwithpathinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val prp_prinfo: platform.osx.proc_regioninfo
        get() = TODO()

    final val prp_vip: platform.osx.vnode_info_path
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_taskallinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pbsd: platform.osx.proc_bsdinfo
        get() = TODO()

    final val ptinfo: platform.osx.proc_taskinfo
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_taskinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pti_cow_faults: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_csw: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_faults: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_messages_received: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_messages_sent: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_numrunning: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_pageins: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_policy: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_priority: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pti_syscalls_mach: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_syscalls_unix: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_threadnum: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pti_threads_system: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pti_threads_user: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pti_total_system: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pti_total_user: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pti_virtual_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_threadinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pth_cpu_usage: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_curpri: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_flags: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_maxpriority: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final val pth_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var pth_policy: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_priority: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_run_state: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_sleep_time: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var pth_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var pth_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_threadwithpathinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pt: platform.osx.proc_threadinfo
        get() = TODO()

    final val pvip: platform.osx.vnode_info_path
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_vnodepathinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pvi_cdir: platform.osx.vnode_info_path
        get() = TODO()

    final val pvi_rdir: platform.osx.vnode_info_path
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class proc_workqueueinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pwq_blockedthreads: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pwq_nthreads: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pwq_runthreads: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var pwq_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class psem_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val pseminfo: platform.osx.psem_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class psem_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val psem_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val psem_stat: platform.osx.vinfo_stat
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pshm_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val pshminfo: platform.osx.pshm_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class pshm_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pshm_mappaddr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val pshm_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val pshm_stat: platform.osx.vinfo_stat
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class qelem public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var q_back: kotlinx.cinterop.CPointer<platform.osx.qelem>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.qelem>?) = TODO()

    final var q_data: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var q_forw: kotlinx.cinterop.CPointer<platform.osx.qelem>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.qelem>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class ranlib public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ran_off: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final val ran_un: platform.osx.anonymousStruct9
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class searchstate public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ss_fsstate: kotlinx.cinterop.CArrayPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>> */
        get() = TODO()

    final var ss_union_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ss_union_layer: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class sockaddr_ctl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sc_family: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var sc_id: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var sc_len: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final val sc_reserved: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var sc_unit: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ss_sysaddr: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class sockaddr_un public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sun_family: platform.posix.sa_family_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.sa_family_t /* = kotlin.UByte */) = TODO()

    final var sun_len: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    final val sun_path: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class sockbuf_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sbi_cc: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sbi_flags: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var sbi_hiwat: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sbi_lowat: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sbi_mbcnt: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sbi_mbmax: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sbi_timeo: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class sockbuf_io public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sbi_close: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?) -> kotlin.Int>>?) = TODO()

    final var sbi_ctrl: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) = TODO()

    final var sbi_read: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */) -> platform.osx.ber_slen_t /* = kotlin.Long */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */) -> platform.osx.ber_slen_t /* = kotlin.Long */>>?) = TODO()

    final var sbi_remove: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?) -> kotlin.Int>>?) = TODO()

    final var sbi_setup: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) = TODO()

    final var sbi_write: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */) -> platform.osx.ber_slen_t /* = kotlin.Long */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO_Desc /* = platform.osx.sockbuf_io_desc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.osx.ber_len_t /* = kotlin.ULong */) -> platform.osx.ber_slen_t /* = kotlin.Long */>>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class sockbuf_io_desc public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sbiod_io: kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO /* = platform.osx.sockbuf_io */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.Sockbuf_IO /* = platform.osx.sockbuf_io */>?) = TODO()

    final var sbiod_level: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var sbiod_next: kotlinx.cinterop.CPointer<platform.osx.sockbuf_io_desc>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.sockbuf_io_desc>?) = TODO()

    final var sbiod_pvt: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var sbiod_sb: kotlinx.cinterop.CPointer<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class socket_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val psi: platform.osx.socket_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class socket_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var rfu_1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var soi_error: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var soi_family: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var soi_incqlen: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_kind: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var soi_linger: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_oobmark: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var soi_options: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_pcb: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val soi_proto: platform.osx.anonymousStruct8
        get() = TODO()

    final var soi_protocol: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var soi_qlen: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_qlimit: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final val soi_rcv: platform.osx.sockbuf_info
        get() = TODO()

    final val soi_snd: platform.osx.sockbuf_info
        get() = TODO()

    final var soi_so: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val soi_stat: platform.osx.vinfo_stat
        get() = TODO()

    final var soi_state: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_timeo: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var soi_type: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stack_snapshot_frame32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var lr: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sp: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stack_snapshot_frame64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var lr: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var sp: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stack_snapshot_stacktop public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sp: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val stack_contents: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stackshot_cpu_times public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var system_usec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var user_usec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stackshot_cpu_times_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var runnable_usec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var system_usec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var user_usec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stackshot_duration public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var stackshot_duration: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var stackshot_duration_outer: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stackshot_fault_stats public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sfs_pages_faulted_in: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var sfs_stopped_faulting: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var sfs_system_max_fault_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var sfs_time_spent_faulting: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class stackshot_thread_waitinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var context: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var owner: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var wait_type: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var waiter: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class statfs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var f_bavail: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bfree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_blocks: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var f_ffree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_files: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val f_fsid: platform.darwin.fsid_t /* = platform.darwin.fsid */
        get() = TODO()

    final var f_fssubtype: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val f_fstypename: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_iosize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final val f_mntfromname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val f_mntonname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_owner: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final val f_reserved: kotlinx.cinterop.CArrayPointer<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var f_type: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class statfs64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var f_bavail: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bfree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_blocks: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var f_ffree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_files: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val f_fsid: platform.darwin.fsid_t /* = platform.darwin.fsid */
        get() = TODO()

    final var f_fssubtype: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val f_fstypename: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_iosize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final val f_mntfromname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val f_mntonname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_owner: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final val f_reserved: kotlinx.cinterop.CArrayPointer<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var f_type: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class task_delta_snapshot_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tds_cow_faults: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_did_throttle: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_faults: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_latency_qos: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_max_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_pageins: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_suspend_count: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_system_time_in_terminated_threads: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_task_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_unique_pid: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_user_time_in_terminated_threads: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_was_throttled: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class task_snapshot_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ts_cow_faults: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_did_throttle: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_faults: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_latency_qos: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_max_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ts_p_comm: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ts_p_start_sec: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_pageins: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_pid: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var ts_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_suspend_count: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ts_system_time_in_terminated_threads: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_task_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_unique_pid: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_user_time_in_terminated_threads: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ts_was_throttled: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class tcp_sockinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var rfu_1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tcpsi_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val tcpsi_ini: platform.osx.in_sockinfo
        get() = TODO()

    final var tcpsi_mss: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var tcpsi_state: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val tcpsi_timer: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var tcpsi_tp: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class term public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Filedes: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final val Nttyb: platform.posix.termios
        get() = TODO()

    final val Ottyb: platform.posix.termios
        get() = TODO()

    final var _baudrate: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var _termname: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final val type: platform.osx.TERMTYPE /* = platform.osx.termtype */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class termtype public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var Booleans: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var Numbers: kotlinx.cinterop.CPointer<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?) = TODO()

    final var Strings: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var ext_Booleans: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var ext_Names: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var ext_Numbers: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var ext_Strings: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var ext_str_table: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var num_Booleans: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var num_Numbers: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var num_Strings: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var str_table: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var term_names: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_delta_snapshot_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tds_base_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var tds_eqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_io_tier: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_last_made_runnable_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_rqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_rqos_override: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_sched_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_sched_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var tds_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_thread_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_voucher_identifier: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_delta_snapshot_v3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tds_base_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var tds_effective_policy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_eqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_io_tier: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_last_made_runnable_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_requested_policy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_rqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_rqos_override: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var tds_sched_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_sched_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var tds_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var tds_thread_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tds_voucher_identifier: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_group_snapshot public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tgs_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val tgs_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_group_snapshot_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tgs_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var tgs_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val tgs_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_snapshot_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ths_base_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_continuation: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_dqserialnum: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_eqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_io_tier: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_last_made_runnable_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_last_run_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_rqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_rqos_override: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_sched_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sched_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sys_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_thread_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_total_syscalls: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_voucher_identifier: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_wait_event: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_snapshot_v3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ths_base_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_continuation: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_dqserialnum: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_eqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_io_tier: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_last_made_runnable_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_last_run_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_rqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_rqos_override: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_sched_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sched_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sys_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_thread_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_thread_t: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_total_syscalls: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_voucher_identifier: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_wait_event: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class thread_snapshot_v4 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ths_base_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_continuation: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_dqserialnum: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_effective_policy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_eqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_io_tier: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_last_made_runnable_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_last_run_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_requested_policy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_rqos: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_rqos_override: platform.posix.uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.uint8_t /* = kotlin.UByte */) = TODO()

    final var ths_sched_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sched_priority: platform.posix.int16_t /* = kotlin.Short */
        get() = TODO()
        set(value: platform.posix.int16_t /* = kotlin.Short */) = TODO()

    final var ths_ss_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_state: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var ths_sys_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_thread_id: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_thread_t: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_total_syscalls: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_voucher_identifier: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ths_wait_event: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class timespec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tv_nsec: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var tv_sec: platform.posix.__darwin_time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__darwin_time_t /* = kotlin.Long */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class tinfo_fkeys public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var code: platform.osx.chtype /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.osx.chtype /* = kotlin.UInt */) = TODO()

    final var offset: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class token public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tk_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var tk_valnumber: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var tk_valstring: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class typenode public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ccheck: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?) = TODO()

    final var copyarg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?) = TODO()

    final var fcheck: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?) = TODO()

    final var freearg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    final var left: kotlinx.cinterop.CPointer<platform.osx.typenode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.typenode>?) = TODO()

    final var makearg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?) = TODO()

    final var next: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?) = TODO()

    final var prev: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?) = TODO()

    final var ref: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var right: kotlinx.cinterop.CPointer<platform.osx.typenode>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.osx.typenode>?) = TODO()

    final var status: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class tzhead public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val tzh_charcnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_leapcnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_magic: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_timecnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_ttisgmtcnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_ttisstdcnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_typecnt: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val tzh_version: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class ucred public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val cr_audit: platform.darwin.au_session
        get() = TODO()

    final var cr_label: kotlinx.cinterop.CPointer<cnames.structs.label>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.label>?) = TODO()

    final val cr_link: platform.osx.anonymousStruct1
        get() = TODO()

    final val cr_posix: platform.osx.posix_cred
        get() = TODO()

    final var cr_ref: platform.posix.u_long /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_long /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class un_sockinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val unsi_addr: platform.osx.anonymousStruct6
        get() = TODO()

    final val unsi_caddr: platform.osx.anonymousStruct7
        get() = TODO()

    final var unsi_conn_pcb: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var unsi_conn_so: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class user32_dyld_uuid_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var imageLoadAddress: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val imageUUID: platform.posix.uuid_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class user64_dyld_uuid_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var imageLoadAddress: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val imageUUID: platform.posix.uuid_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vfs_server public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var vs_minutes: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final val vs_server_name: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vfsconf public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var vfc_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val vfc_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var vfc_refcount: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var vfc_reserved1: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vfc_reserved2: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vfc_reserved3: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vfc_typenum: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vfsidctl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val vc_fsid: platform.darwin.fsid_t /* = platform.darwin.fsid */
        get() = TODO()

    final var vc_len: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var vc_ptr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val vc_spare: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var vc_vers: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vfsquery public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var vq_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val vq_spare: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vfsstatfs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var f_bavail: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bfree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_blocks: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_bsize: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var f_bused: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_ffree: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_files: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var f_flags: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val f_fsid: platform.darwin.fsid_t /* = platform.darwin.fsid */
        get() = TODO()

    final var f_fssubtype: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final val f_fstypename: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_iosize: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final val f_mntfromname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val f_mntonname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var f_owner: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final val f_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vinfo_stat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var vst_atime: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_atimensec: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_birthtime: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_birthtimensec: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_blksize: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var vst_blocks: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_ctime: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_ctimensec: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_dev: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vst_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vst_gen: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vst_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var vst_ino: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var vst_mode: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final var vst_mtime: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_mtimensec: platform.posix.int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.int64_t /* = kotlin.Long */) = TODO()

    final var vst_nlink: platform.posix.uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.uint16_t /* = kotlin.UShort */) = TODO()

    final val vst_qspare: kotlinx.cinterop.CArrayPointer<platform.posix.int64_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.int64_t /* = kotlin.Long */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.LongVarOf<platform.posix.int64_t /* = kotlin.Long */>> */
        get() = TODO()

    final var vst_rdev: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var vst_size: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var vst_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vnode_fdinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val pvi: platform.osx.vnode_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vnode_fdinfowithpath public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val pfi: platform.osx.proc_fileinfo
        get() = TODO()

    final val pvip: platform.osx.vnode_info_path
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vnode_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val vi_fsid: platform.darwin.fsid_t /* = platform.darwin.fsid */
        get() = TODO()

    final var vi_pad: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val vi_stat: platform.osx.vinfo_stat
        get() = TODO()

    final var vi_type: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vnode_info_path public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val vip_path: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val vip_vi: platform.osx.vnode_info
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vol_attributes_attr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nativeattr: platform.osx.attribute_set_t /* = platform.osx.attribute_set */
        get() = TODO()

    final val validattr: platform.osx.attribute_set_t /* = platform.osx.attribute_set */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class vol_capabilities_attr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val capabilities: platform.osx.vol_capabilities_set_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val valid: platform.osx.vol_capabilities_set_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final class xucred public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val cr_groups: kotlinx.cinterop.CArrayPointer<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var cr_ngroups: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var cr_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var cr_version: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

typealias BERDecodeCallback = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.BerElement>?, kotlinx.cinterop.COpaquePointer?, kotlin.Int) -> kotlin.Int>>

typealias BERDecodeCallbackVar = kotlinx.cinterop.CPointerVarOf<platform.osx.BERDecodeCallback>

typealias BEREncodeCallback = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.BerElement>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>>

typealias BEREncodeCallbackVar = kotlinx.cinterop.CPointerVarOf<platform.osx.BEREncodeCallback>

typealias BER_ERRNO_FN = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar>?>>

typealias BER_ERRNO_FNVar = kotlinx.cinterop.CPointerVarOf<platform.osx.BER_ERRNO_FN>

typealias BER_LOG_PRINT_FN = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?) -> kotlin.Unit>>

typealias BER_LOG_PRINT_FNVar = kotlinx.cinterop.CPointerVarOf<platform.osx.BER_LOG_PRINT_FN>

typealias BER_MEMALLOC_FN = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>

typealias BER_MEMCALLOC_FN = kotlinx.cinterop.CFunction<(platform.osx.ber_len_t, platform.osx.ber_len_t, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>

typealias BER_MEMFREE_FN = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>

typealias BER_MEMREALLOC_FN = kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, platform.osx.ber_len_t, kotlinx.cinterop.COpaquePointer?) -> kotlinx.cinterop.COpaquePointer?>

typealias BTreeKeyLimits = kotlin.UInt

typealias BTreeKeyLimitsVar = kotlinx.cinterop.UIntVarOf<platform.osx.BTreeKeyLimits>

typealias BerElement = cnames.structs.berelement

typealias BerMemoryFunctions = platform.osx.lber_memory_fns

typealias BerValue = platform.osx.berval

typealias BerVarray = kotlinx.cinterop.CPointer<platform.osx.BerValue>

typealias BerVarrayVar = kotlinx.cinterop.CPointerVarOf<platform.osx.BerVarray>

typealias ConstHFSUniStr255Param = kotlinx.cinterop.CPointer<platform.osx.HFSUniStr255>

typealias ConstHFSUniStr255ParamVar = kotlinx.cinterop.CPointerVarOf<platform.osx.ConstHFSUniStr255Param>

typealias DBDIRS = kotlin.UInt

typealias DBDIRSVar = kotlinx.cinterop.UIntVarOf<platform.osx.DBDIRS>

typealias ENTRY = platform.osx.entry

typealias EditLine = cnames.structs.editline

typealias FIELD = platform.osx.fieldnode

typealias FIELDTYPE = platform.osx.typenode

typealias FIELD_CELL = kotlinx.cinterop.COpaquePointer

typealias FIELD_CELLVar = kotlinx.cinterop.CPointerVarOf<platform.osx.FIELD_CELL>

typealias FORM = platform.osx.formnode

typealias Field_Options = kotlin.Int

typealias Field_OptionsVar = kotlinx.cinterop.IntVarOf<platform.osx.Field_Options>

typealias Form_Hook = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM>?) -> kotlin.Unit>>

typealias Form_HookVar = kotlinx.cinterop.CPointerVarOf<platform.osx.Form_Hook>

typealias Form_Options = kotlin.Int

typealias Form_OptionsVar = kotlinx.cinterop.IntVarOf<platform.osx.Form_Options>

typealias HFSExtentRecord = kotlinx.cinterop.CArrayPointer<platform.osx.HFSExtentDescriptor>

typealias HFSExtentRecordVar = kotlinx.cinterop.CPointerVarOf<platform.osx.HFSExtentRecord>

typealias HFSPlusExtentRecord = kotlinx.cinterop.CArrayPointer<platform.osx.HFSPlusExtentDescriptor>

typealias HFSPlusExtentRecordVar = kotlinx.cinterop.CPointerVarOf<platform.osx.HFSPlusExtentRecord>

typealias HistEventW = platform.osx.histeventW

typealias History = cnames.structs.history

typealias HistoryW = cnames.structs.historyW

typealias KCDATA_SUBTYPE_TYPES = kotlin.UInt

typealias KCDATA_SUBTYPE_TYPESVar = kotlinx.cinterop.UIntVarOf<platform.osx.KCDATA_SUBTYPE_TYPES>

typealias LineInfo = platform.osx.lineinfo

typealias LineInfoW = platform.osx.lineinfow

typealias NCURSES_BOOL = kotlin.UByte

typealias NCURSES_BOOLVar = kotlinx.cinterop.UByteVarOf<platform.osx.NCURSES_BOOL>

typealias NCURSES_SCREEN_CB = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.SCREEN>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>>

typealias NCURSES_SCREEN_CBVar = kotlinx.cinterop.CPointerVarOf<platform.osx.NCURSES_SCREEN_CB>

typealias NCURSES_WINDOW_CB = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.WINDOW>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>>

typealias NCURSES_WINDOW_CBVar = kotlinx.cinterop.CPointerVarOf<platform.osx.NCURSES_WINDOW_CB>

typealias NSSearchPathDirectory = kotlin.UInt

typealias NSSearchPathDirectoryVar = kotlinx.cinterop.UIntVarOf<platform.osx.NSSearchPathDirectory>

typealias NSSearchPathDomainMask = kotlin.UInt

typealias NSSearchPathDomainMaskVar = kotlinx.cinterop.UIntVarOf<platform.osx.NSSearchPathDomainMask>

typealias NSSearchPathEnumerationState = kotlin.UInt

typealias NSSearchPathEnumerationStateVar = kotlinx.cinterop.UIntVarOf<platform.osx.NSSearchPathEnumerationState>

typealias OM_uint32 = platform.osx.gss_uint32

typealias OM_uint32Var = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32>

typealias PANEL = platform.osx.panel

typealias SCREEN = cnames.structs.screen

typealias Sockbuf = cnames.structs.sockbuf

typealias Sockbuf_IO = platform.osx.sockbuf_io

typealias Sockbuf_IO_Desc = platform.osx.sockbuf_io_desc

typealias TERMINAL = platform.osx.term

typealias TERMTYPE = platform.osx.termtype

typealias Tokenizer = cnames.structs.tokenizer

typealias TokenizerW = cnames.structs.tokenizerW

typealias UUID = kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar>

typealias UUIDVar = kotlinx.cinterop.CPointerVarOf<platform.osx.UUID>

typealias WINDOW = cnames.structs._win_st

typealias XML_AttlistDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_AttlistDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_AttlistDeclHandler>

typealias XML_Bool = kotlin.UByte

typealias XML_BoolVar = kotlinx.cinterop.UByteVarOf<platform.osx.XML_Bool>

typealias XML_Char = kotlin.Byte

typealias XML_CharVar = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char>

typealias XML_CharacterDataHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_CharacterDataHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_CharacterDataHandler>

typealias XML_CommentHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_CommentHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_CommentHandler>

typealias XML_Content = platform.osx.XML_cp

typealias XML_Content_Type = kotlin.UInt

typealias XML_Content_TypeVar = kotlinx.cinterop.UIntVarOf<platform.osx.XML_Content_Type>

typealias XML_DefaultHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_DefaultHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_DefaultHandler>

typealias XML_ElementDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_Content>?) -> kotlin.Unit>>

typealias XML_ElementDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_ElementDeclHandler>

typealias XML_EndCdataSectionHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>>

typealias XML_EndCdataSectionHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_EndCdataSectionHandler>

typealias XML_EndDoctypeDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>>

typealias XML_EndDoctypeDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_EndDoctypeDeclHandler>

typealias XML_EndElementHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_EndElementHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_EndElementHandler>

typealias XML_EndNamespaceDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_EndNamespaceDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_EndNamespaceDeclHandler>

typealias XML_EntityDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_EntityDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_EntityDeclHandler>

typealias XML_ExternalEntityRefHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.XML_Parser?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Int>>

typealias XML_ExternalEntityRefHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_ExternalEntityRefHandler>

typealias XML_FeatureEnum = kotlin.UInt

typealias XML_FeatureEnumVar = kotlinx.cinterop.UIntVarOf<platform.osx.XML_FeatureEnum>

typealias XML_Index = kotlin.Long

typealias XML_IndexVar = kotlinx.cinterop.LongVarOf<platform.osx.XML_Index>

typealias XML_LChar = kotlin.Byte

typealias XML_LCharVar = kotlinx.cinterop.ByteVarOf<platform.osx.XML_LChar>

typealias XML_NotStandaloneHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>>

typealias XML_NotStandaloneHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_NotStandaloneHandler>

typealias XML_NotationDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_NotationDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_NotationDeclHandler>

typealias XML_Parser = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>

typealias XML_ParserVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_Parser>

typealias XML_ProcessingInstructionHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_ProcessingInstructionHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_ProcessingInstructionHandler>

typealias XML_Size = kotlin.ULong

typealias XML_SizeVar = kotlinx.cinterop.ULongVarOf<platform.osx.XML_Size>

typealias XML_SkippedEntityHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_SkippedEntityHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_SkippedEntityHandler>

typealias XML_StartCdataSectionHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>>

typealias XML_StartCdataSectionHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_StartCdataSectionHandler>

typealias XML_StartDoctypeDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_StartDoctypeDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_StartDoctypeDeclHandler>

typealias XML_StartElementHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.XML_CharVar>>?) -> kotlin.Unit>>

typealias XML_StartElementHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_StartElementHandler>

typealias XML_StartNamespaceDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_StartNamespaceDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_StartNamespaceDeclHandler>

typealias XML_Status = kotlin.UInt

typealias XML_StatusVar = kotlinx.cinterop.UIntVarOf<platform.osx.XML_Status>

typealias XML_UnknownEncodingHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_Encoding>?) -> kotlin.Int>>

typealias XML_UnknownEncodingHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_UnknownEncodingHandler>

typealias XML_UnparsedEntityDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?) -> kotlin.Unit>>

typealias XML_UnparsedEntityDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_UnparsedEntityDeclHandler>

typealias XML_XmlDeclHandler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar>?, kotlin.Int) -> kotlin.Unit>>

typealias XML_XmlDeclHandlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.XML_XmlDeclHandler>

typealias __GElf_Addr = kotlin.ULong

typealias __GElf_AddrVar = kotlinx.cinterop.ULongVarOf<platform.osx.__GElf_Addr>

typealias __GElf_Half = kotlin.UShort

typealias __GElf_HalfVar = kotlinx.cinterop.UShortVarOf<platform.osx.__GElf_Half>

typealias __GElf_Sxword = kotlin.Long

typealias __GElf_SxwordVar = kotlinx.cinterop.LongVarOf<platform.osx.__GElf_Sxword>

typealias __GElf_Word = kotlin.UInt

typealias __GElf_WordVar = kotlinx.cinterop.UIntVarOf<platform.osx.__GElf_Word>

typealias __GElf_Xword = kotlin.ULong

typealias __GElf_XwordVar = kotlinx.cinterop.ULongVarOf<platform.osx.__GElf_Xword>

typealias __va_list = platform.posix.va_list

typealias __va_listVar = kotlinx.cinterop.CPointerVarOf<platform.osx.__va_list>

typealias _dtrace_boolean = kotlin.UInt

typealias _dtrace_booleanVar = kotlinx.cinterop.UIntVarOf<platform.osx._dtrace_boolean>

typealias aid_t = platform.posix.uint64_t

typealias aid_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.aid_t>

typealias atm_action_t = platform.posix.uint32_t

typealias atm_action_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.atm_action_t>

typealias atm_aid_t = platform.posix.uint64_t

typealias atm_aid_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.atm_aid_t>

typealias atm_guard_t = platform.posix.uint64_t

typealias atm_guard_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.atm_guard_t>

typealias atm_mailbox_offset_t = platform.posix.uint64_t

typealias atm_mailbox_offset_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.atm_mailbox_offset_t>

typealias atm_memory_descriptor_array_t = kotlinx.cinterop.CPointer<platform.osx.atm_memory_descriptor_tVar>

typealias atm_memory_descriptor_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.atm_memory_descriptor_array_t>

typealias atm_memory_descriptor_t = platform.darwin.mach_port_t

typealias atm_memory_descriptor_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.atm_memory_descriptor_t>

typealias atm_memory_size_array_t = kotlinx.cinterop.CPointer<platform.posix.uint64_tVar>

typealias atm_memory_size_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.atm_memory_size_array_t>

typealias atm_subaid32_t = platform.posix.uint32_t

typealias atm_subaid32_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.atm_subaid32_t>

typealias attr_t = platform.osx.chtype

typealias attr_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.attr_t>

typealias attrgroup_t = platform.posix.u_int32_t

typealias attrgroup_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.attrgroup_t>

typealias attribute_set_t = platform.osx.attribute_set

typealias attrreference_t = platform.osx.attrreference

typealias ber_int_t = kotlin.Int

typealias ber_int_tVar = kotlinx.cinterop.IntVarOf<platform.osx.ber_int_t>

typealias ber_len_t = kotlin.ULong

typealias ber_len_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t>

typealias ber_sint_t = kotlin.Int

typealias ber_sint_tVar = kotlinx.cinterop.IntVarOf<platform.osx.ber_sint_t>

typealias ber_slen_t = kotlin.Long

typealias ber_slen_tVar = kotlinx.cinterop.LongVarOf<platform.osx.ber_slen_t>

typealias ber_socket_t = kotlin.Int

typealias ber_socket_tVar = kotlinx.cinterop.IntVarOf<platform.osx.ber_socket_t>

typealias ber_tag_t = kotlin.ULong

typealias ber_tag_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.ber_tag_t>

typealias ber_uint_t = kotlin.UInt

typealias ber_uint_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.ber_uint_t>

typealias bool_array_t = kotlinx.cinterop.CPointer<platform.posix.boolean_tVar>

typealias bool_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.bool_array_t>

typealias bootstrap_property_array_t = kotlinx.cinterop.CPointer<platform.osx.bootstrap_property_tVar>

typealias bootstrap_property_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.bootstrap_property_array_t>

typealias bootstrap_property_t = kotlin.UInt

typealias bootstrap_property_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.bootstrap_property_t>

typealias bootstrap_status_array_t = kotlinx.cinterop.CPointer<platform.osx.bootstrap_status_tVar>

typealias bootstrap_status_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.bootstrap_status_array_t>

typealias bootstrap_status_t = kotlin.Int

typealias bootstrap_status_tVar = kotlinx.cinterop.IntVarOf<platform.osx.bootstrap_status_t>

typealias bpf_int32 = kotlin.Int

typealias bpf_int32Var = kotlinx.cinterop.IntVarOf<platform.osx.bpf_int32>

typealias bpf_u_int32 = platform.posix.u_int

typealias bpf_u_int32Var = kotlinx.cinterop.UIntVarOf<platform.osx.bpf_u_int32>

typealias chtype = kotlin.UInt

typealias chtypeVar = kotlinx.cinterop.UIntVarOf<platform.osx.chtype>

typealias cmd_t = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar>

typealias cmd_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.cmd_t>

typealias coalition_flags = kotlin.UInt

typealias coalition_flagsVar = kotlinx.cinterop.UIntVarOf<platform.osx.coalition_flags>

typealias com_err_handler_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, platform.osx.errcode_t, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, platform.posix.va_list?) -> kotlin.Unit>>

typealias com_err_handler_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.com_err_handler_t>

typealias const_profile_filespec_list_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias const_profile_filespec_list_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.const_profile_filespec_list_t>

typealias const_profile_filespec_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias const_profile_filespec_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.const_profile_filespec_t>

typealias ctf_file_t = cnames.structs.ctf_file

typealias ctf_id_t = kotlin.Long

typealias ctf_id_tVar = kotlinx.cinterop.LongVarOf<platform.osx.ctf_id_t>

typealias dif_instr_t = platform.posix.uint32_t

typealias dif_instr_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dif_instr_t>

typealias dof_actdesc_t = platform.osx.dof_actdesc

typealias dof_attr_t = platform.posix.uint32_t

typealias dof_attr_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dof_attr_t>

typealias dof_difohdr_t = platform.osx.dof_difohdr

typealias dof_ecbdesc_t = platform.osx.dof_ecbdesc

typealias dof_hdr_t = platform.osx.dof_hdr

typealias dof_helper_t = platform.osx.dof_helper

typealias dof_ioctl_data_t = platform.osx.dof_ioctl_data

typealias dof_optdesc_t = platform.osx.dof_optdesc

typealias dof_probe_t = platform.osx.dof_probe

typealias dof_probedesc_t = platform.osx.dof_probedesc

typealias dof_provider_t = platform.osx.dof_provider

typealias dof_relodesc_t = platform.osx.dof_relodesc

typealias dof_relohdr_t = platform.osx.dof_relohdr

typealias dof_sec_t = platform.osx.dof_sec

typealias dof_secidx_t = platform.posix.uint32_t

typealias dof_secidx_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dof_secidx_t>

typealias dof_stridx_t = platform.posix.uint32_t

typealias dof_stridx_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dof_stridx_t>

typealias dof_xlator_t = platform.osx.dof_xlator

typealias dof_xlmember_t = platform.osx.dof_xlmember

typealias dof_xlref_t = platform.osx.dof_xlref

typealias dtrace_actdesc_t = platform.osx.dtrace_actdesc

typealias dtrace_actkind_t = platform.posix.uint16_t

typealias dtrace_actkind_tVar = kotlinx.cinterop.UShortVarOf<platform.osx.dtrace_actkind_t>

typealias dtrace_aggdata_t = platform.osx.dtrace_aggdata

typealias dtrace_aggdesc_t = platform.osx.dtrace_aggdesc

typealias dtrace_aggid_t = platform.posix.uint32_t

typealias dtrace_aggid_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dtrace_aggid_t>

typealias dtrace_aggregate_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_aggregate_walk_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_aggregate_walk_joined_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.dtrace_aggdata_t>>?, kotlin.Int, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_aggvarid_t = platform.posix.int64_t

typealias dtrace_aggvarid_tVar = kotlinx.cinterop.LongVarOf<platform.osx.dtrace_aggvarid_t>

typealias dtrace_argdesc_t = platform.osx.dtrace_argdesc

typealias dtrace_attribute_t = platform.osx.dtrace_attribute

typealias dtrace_bufdata_t = platform.osx.dtrace_bufdata

typealias dtrace_bufdesc_t = platform.osx.dtrace_bufdesc

typealias dtrace_cacheid_t = platform.posix.uint32_t

typealias dtrace_cacheid_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dtrace_cacheid_t>

typealias dtrace_class_t = platform.posix.uint8_t

typealias dtrace_class_tVar = kotlinx.cinterop.UByteVarOf<platform.osx.dtrace_class_t>

typealias dtrace_conf_t = platform.osx.dtrace_conf

typealias dtrace_consume_probe_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_consume_rec_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_difo_t = platform.osx.dtrace_difo

typealias dtrace_diftype_t = platform.osx.dtrace_diftype

typealias dtrace_difv_t = platform.osx.dtrace_difv

typealias dtrace_dropdata_t = platform.osx.dtrace_dropdata

typealias dtrace_ecbdesc_t = platform.osx.dtrace_ecbdesc

typealias dtrace_epid_t = platform.posix.uint32_t

typealias dtrace_epid_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dtrace_epid_t>

typealias dtrace_eprobedesc_t = platform.osx.dtrace_eprobedesc

typealias dtrace_errdata_t = platform.osx.dtrace_errdata

typealias dtrace_fmtdesc_t = platform.osx.dtrace_fmtdesc

typealias dtrace_handle_buffered_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_bufdata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_handle_drop_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_dropdata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_handle_err_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_errdata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_handle_proc_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<cnames.structs.ps_prochandle>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Unit>

typealias dtrace_handle_setopt_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_setoptdata_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_hdl_t = cnames.structs.dtrace_hdl

typealias dtrace_id_t = platform.posix.uint32_t

typealias dtrace_id_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.dtrace_id_t>

typealias dtrace_module_symbols_t = platform.osx.dtrace_module_symbols

typealias dtrace_module_uuids_list_t = platform.osx.dtrace_module_uuids_list

typealias dtrace_obj_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_objinfo_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_objinfo_t = platform.osx.dtrace_objinfo

typealias dtrace_optval_t = platform.posix.int64_t

typealias dtrace_optval_tVar = kotlinx.cinterop.LongVarOf<platform.osx.dtrace_optval_t>

typealias dtrace_pattr_t = platform.osx.dtrace_pattr

typealias dtrace_ppriv_t = platform.osx.dtrace_ppriv

typealias dtrace_preddesc_t = platform.osx.dtrace_preddesc

typealias dtrace_probe_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_probedata_t = platform.osx.dtrace_probedata

typealias dtrace_probedesc_t = platform.osx.dtrace_probedesc

typealias dtrace_probeinfo_t = platform.osx.dtrace_probeinfo

typealias dtrace_probespec = kotlin.Int

typealias dtrace_probespecVar = kotlinx.cinterop.IntVarOf<platform.osx.dtrace_probespec>

typealias dtrace_probespec_t = platform.osx.dtrace_probespec

typealias dtrace_probespec_tVar = kotlinx.cinterop.IntVarOf<platform.osx.dtrace_probespec_t>

typealias dtrace_procdesc_t = platform.osx.dtrace_procdesc

typealias dtrace_prog_t = cnames.structs.dtrace_prog

typealias dtrace_proginfo_t = platform.osx.dtrace_proginfo

typealias dtrace_providerdesc_t = platform.osx.dtrace_providerdesc

typealias dtrace_recdesc_t = platform.osx.dtrace_recdesc

typealias dtrace_rechdr_t = platform.osx.dtrace_rechdr

typealias dtrace_repldesc_t = platform.osx.dtrace_repldesc

typealias dtrace_setoptdata_t = platform.osx.dtrace_setoptdata

typealias dtrace_stability_t = platform.posix.uint8_t

typealias dtrace_stability_tVar = kotlinx.cinterop.UByteVarOf<platform.osx.dtrace_stability_t>

typealias dtrace_status_t = platform.osx.dtrace_status

typealias dtrace_stmt_f = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_prog_t>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_stmtdesc_t>?, kotlinx.cinterop.COpaquePointer?) -> kotlin.Int>

typealias dtrace_stmtdesc_t = platform.osx.dtrace_stmtdesc

typealias dtrace_symbol_t = platform.osx.dtrace_symbol

typealias dtrace_syminfo_t = platform.osx.dtrace_syminfo

typealias dtrace_typeinfo_t = platform.osx.dtrace_typeinfo

typealias dtrace_vector_t = platform.osx.dtrace_vector

typealias dtrace_workstatus_t = kotlin.Int

typealias dtrace_workstatus_tVar = kotlinx.cinterop.IntVarOf<platform.osx.dtrace_workstatus_t>

typealias errcode_t = kotlin.Long

typealias errcode_tVar = kotlinx.cinterop.LongVarOf<platform.osx.errcode_t>

typealias extentrecord = kotlinx.cinterop.CArrayPointer<platform.osx.diskextent>

typealias extentrecordVar = kotlinx.cinterop.CPointerVarOf<platform.osx.extentrecord>

typealias fhandle_t = platform.osx.fhandle

typealias fsfile_type_t = platform.posix.u_int32_t

typealias fsfile_type_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.fsfile_type_t>

typealias fsobj_tag_t = platform.posix.u_int32_t

typealias fsobj_tag_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.fsobj_tag_t>

typealias fsobj_type_t = platform.posix.u_int32_t

typealias fsobj_type_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.fsobj_type_t>

typealias fsvolid_t = platform.posix.u_int32_t

typealias fsvolid_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.fsvolid_t>

typealias gss_OID = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>

typealias gss_OIDVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID>

typealias gss_OID_desc = platform.osx.gss_OID_desc_struct

typealias gss_OID_set = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct>

typealias gss_OID_setVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set>

typealias gss_OID_set_desc = platform.osx.gss_OID_set_desc_struct

typealias gss_buffer_desc = platform.osx.gss_buffer_desc_struct

typealias gss_buffer_t = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>

typealias gss_buffer_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_buffer_t>

typealias gss_channel_bindings_t = kotlinx.cinterop.CPointer<platform.osx.gss_channel_bindings_struct>

typealias gss_channel_bindings_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_channel_bindings_t>

typealias gss_cred_id_t = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>

typealias gss_cred_id_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_cred_id_t>

typealias gss_cred_usage_t = kotlin.Int

typealias gss_cred_usage_tVar = kotlinx.cinterop.IntVarOf<platform.osx.gss_cred_usage_t>

typealias gss_ctx_id_t = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>

typealias gss_ctx_id_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t>

typealias gss_int32 = platform.posix.int32_t

typealias gss_int32Var = kotlinx.cinterop.IntVarOf<platform.osx.gss_int32>

typealias gss_name_t = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>

typealias gss_name_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t>

typealias gss_qop_t = platform.osx.OM_uint32

typealias gss_qop_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.gss_qop_t>

typealias gss_uint32 = platform.posix.uint32_t

typealias gss_uint32Var = kotlinx.cinterop.UIntVarOf<platform.osx.gss_uint32>

typealias hash_node = platform.osx._node

typealias hrtime_t = platform.posix.int64_t

typealias hrtime_tVar = kotlinx.cinterop.LongVarOf<platform.osx.hrtime_t>

typealias kauth_cred_t = kotlinx.cinterop.CPointer<platform.osx.ucred>

typealias kauth_cred_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.kauth_cred_t>

typealias kcdata_item_t = kotlinx.cinterop.CPointer<platform.osx.kcdata_item>

typealias kcdata_item_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.kcdata_item_t>

typealias kcdata_iter_t = platform.osx.kcdata_iter

typealias kcdata_subtype_descriptor_t = kotlinx.cinterop.CPointer<platform.osx.kcdata_subtype_descriptor>

typealias kcdata_subtype_descriptor_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.kcdata_subtype_descriptor_t>

typealias kctype_subtype_t = platform.osx.KCDATA_SUBTYPE_TYPES

typealias kctype_subtype_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.kctype_subtype_t>

typealias krb5_address = platform.osx._krb5_address

typealias krb5_addrtype = platform.osx.krb5_int32

typealias krb5_addrtypeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_addrtype>

typealias krb5_ap_rep = platform.osx._krb5_ap_rep

typealias krb5_ap_rep_enc_part = platform.osx._krb5_ap_rep_enc_part

typealias krb5_ap_req = platform.osx._krb5_ap_req

typealias krb5_auth_context = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>

typealias krb5_auth_contextVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context>

typealias krb5_authdata = platform.osx._krb5_authdata

typealias krb5_authdatatype = platform.osx.krb5_int32

typealias krb5_authdatatypeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_authdatatype>

typealias krb5_authenticator = platform.osx._krb5_authenticator

typealias krb5_boolean = kotlin.UInt

typealias krb5_booleanVar = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_boolean>

typealias krb5_cc_cursor = platform.osx.krb5_pointer

typealias krb5_cc_cursorVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cc_cursor>

typealias krb5_cc_ops = cnames.structs._krb5_cc_ops

typealias krb5_ccache = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>

typealias krb5_ccacheVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache>

typealias krb5_cccol_cursor = kotlinx.cinterop.CPointer<cnames.structs._krb5_cccol_cursor>

typealias krb5_cccol_cursorVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cccol_cursor>

typealias krb5_checksum = platform.osx._krb5_checksum

typealias krb5_cksumtype = platform.osx.krb5_int32

typealias krb5_cksumtypeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_cksumtype>

typealias krb5_const_pointer = kotlinx.cinterop.COpaquePointer

typealias krb5_const_pointerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_const_pointer>

typealias krb5_const_principal = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>

typealias krb5_const_principalVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_const_principal>

typealias krb5_context = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>

typealias krb5_contextVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_context>

typealias krb5_cred = platform.osx._krb5_cred

typealias krb5_cred_enc_part = platform.osx._krb5_cred_enc_part

typealias krb5_cred_info = platform.osx._krb5_cred_info

typealias krb5_creds = platform.osx._krb5_creds

typealias krb5_data = platform.osx._krb5_data

typealias krb5_deltat = platform.osx.krb5_int32

typealias krb5_deltatVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_deltat>

typealias krb5_enc_data = platform.osx._krb5_enc_data

typealias krb5_enc_kdc_rep_part = platform.osx._krb5_enc_kdc_rep_part

typealias krb5_enc_tkt_part = platform.osx._krb5_enc_tkt_part

typealias krb5_encrypt_block = platform.osx._krb5_encrypt_block

typealias krb5_enctype = platform.osx.krb5_int32

typealias krb5_enctypeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype>

typealias krb5_error = platform.osx._krb5_error

typealias krb5_error_code = platform.osx.krb5_int32

typealias krb5_error_codeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_error_code>

typealias krb5_flags = platform.osx.krb5_int32

typealias krb5_flagsVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_flags>

typealias krb5_get_init_creds_opt = platform.osx._krb5_get_init_creds_opt

typealias krb5_gic_opt_pa_data = platform.osx._krb5_gic_opt_pa_data

typealias krb5_gic_process_last_req = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_last_req_entry>>?, kotlinx.cinterop.COpaquePointer?) -> platform.osx.krb5_error_code>>

typealias krb5_gic_process_last_reqVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_gic_process_last_req>

typealias krb5_int16 = kotlin.Short

typealias krb5_int16Var = kotlinx.cinterop.ShortVarOf<platform.osx.krb5_int16>

typealias krb5_int32 = kotlin.Int

typealias krb5_int32Var = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32>

typealias krb5_kdc_rep = platform.osx._krb5_kdc_rep

typealias krb5_kdc_req = platform.osx._krb5_kdc_req

typealias krb5_keyblock = platform.osx._krb5_keyblock

typealias krb5_keytab = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>

typealias krb5_keytabVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_keytab>

typealias krb5_keytab_entry = platform.osx.krb5_keytab_entry_st

typealias krb5_keyusage = platform.osx.krb5_int32

typealias krb5_keyusageVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_keyusage>

typealias krb5_kt_cursor = platform.osx.krb5_pointer

typealias krb5_kt_cursorVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_kt_cursor>

typealias krb5_kvno = kotlin.UInt

typealias krb5_kvnoVar = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_kvno>

typealias krb5_last_req_entry = platform.osx._krb5_last_req_entry

typealias krb5_magic = platform.osx.krb5_error_code

typealias krb5_magicVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_magic>

typealias krb5_mk_req_checksum_func = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context?, platform.osx.krb5_auth_context?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data>>?) -> platform.osx.krb5_error_code>>

typealias krb5_mk_req_checksum_funcVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_mk_req_checksum_func>

typealias krb5_msgtype = kotlin.UInt

typealias krb5_msgtypeVar = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_msgtype>

typealias krb5_octet = kotlin.UByte

typealias krb5_octetVar = kotlinx.cinterop.UByteVarOf<platform.osx.krb5_octet>

typealias krb5_octet_data = platform.osx._krb5_octet_data

typealias krb5_pa_data = platform.osx._krb5_pa_data

typealias krb5_pointer = kotlinx.cinterop.COpaquePointer

typealias krb5_pointerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_pointer>

typealias krb5_preauthtype = platform.osx.krb5_int32

typealias krb5_preauthtypeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_preauthtype>

typealias krb5_principal = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>

typealias krb5_principalVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal>

typealias krb5_prompt = platform.osx._krb5_prompt

typealias krb5_prompt_type = platform.osx.krb5_int32

typealias krb5_prompt_typeVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_prompt_type>

typealias krb5_prompter_fct = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context?, kotlinx.cinterop.COpaquePointer?, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>?, kotlin.Int, kotlinx.cinterop.CArrayPointer<platform.osx.krb5_prompt>?) -> platform.osx.krb5_error_code>>

typealias krb5_prompter_fctVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_prompter_fct>

typealias krb5_pwd_data = platform.osx._krb5_pwd_data

typealias krb5_rcache = kotlinx.cinterop.CPointer<cnames.structs.krb5_rc_st>

typealias krb5_rcacheVar = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_rcache>

typealias krb5_response = platform.osx._krb5_response

typealias krb5_ticket = platform.osx._krb5_ticket

typealias krb5_ticket_times = platform.osx._krb5_ticket_times

typealias krb5_timestamp = platform.osx.krb5_int32

typealias krb5_timestampVar = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp>

typealias krb5_tkt_authent = platform.osx._krb5_tkt_authent

typealias krb5_transited = platform.osx._krb5_transited

typealias krb5_ui_2 = kotlin.UShort

typealias krb5_ui_2Var = kotlinx.cinterop.UShortVarOf<platform.osx.krb5_ui_2>

typealias krb5_ui_4 = kotlin.UInt

typealias krb5_ui_4Var = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_ui_4>

typealias krb5_verify_init_creds_opt = platform.osx._krb5_verify_init_creds_opt

typealias longlong_t = platform.posix.int64_t

typealias longlong_tVar = kotlinx.cinterop.LongVarOf<platform.osx.longlong_t>

typealias mach_atm_subaid_t = platform.posix.uint64_t

typealias mach_atm_subaid_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.mach_atm_subaid_t>

typealias mailbox_offset_t = platform.posix.uint64_t

typealias mailbox_offset_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.mailbox_offset_t>

typealias mmask_t = kotlin.ULong

typealias mmask_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.mmask_t>

typealias mount_t = kotlinx.cinterop.CPointer<cnames.structs.mount>

typealias mount_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.mount_t>

typealias name_array_t = platform.osx.name_t

typealias name_array_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.name_array_t>

typealias name_t = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar>

typealias name_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.name_t>

typealias off64_t = platform.posix.int64_t

typealias off64_tVar = kotlinx.cinterop.LongVarOf<platform.osx.off64_t>

typealias passwd_phrase_element = platform.osx._passwd_phrase_element

typealias pcap_addr_t = platform.osx.pcap_addr

typealias pcap_direction_t = kotlin.UInt

typealias pcap_direction_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.pcap_direction_t>

typealias pcap_dumper_t = cnames.structs.pcap_dumper

typealias pcap_handler = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.u_charVar>?, kotlinx.cinterop.CPointer<platform.osx.pcap_pkthdr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar>?) -> kotlin.Unit>>

typealias pcap_handlerVar = kotlinx.cinterop.CPointerVarOf<platform.osx.pcap_handler>

typealias pcap_if_t = platform.osx.pcap_if

typealias pcap_t = cnames.structs.pcap

typealias posix_cred_t = kotlinx.cinterop.CPointer<platform.osx.posix_cred>

typealias posix_cred_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.posix_cred_t>

typealias proc_info_udata_t = platform.posix.uint64_t

typealias proc_info_udata_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.proc_info_udata_t>

typealias processorid_t = kotlin.Int

typealias processorid_tVar = kotlinx.cinterop.IntVarOf<platform.osx.processorid_t>

typealias profile_filespec_list_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias profile_filespec_list_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.profile_filespec_list_t>

typealias profile_filespec_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias profile_filespec_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.profile_filespec_t>

typealias profile_t = kotlinx.cinterop.CPointer<cnames.structs._profile_t>

typealias profile_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.profile_t>

typealias subaid_t = platform.posix.uint64_t

typealias subaid_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.subaid_t>

typealias task_crashinfo_item_t = kotlinx.cinterop.CPointer<platform.osx.kcdata_item>

typealias task_crashinfo_item_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.task_crashinfo_item_t>

typealias task_snapshot_flags = kotlin.UInt

typealias task_snapshot_flagsVar = kotlinx.cinterop.UIntVarOf<platform.osx.task_snapshot_flags>

typealias text_encoding_t = platform.posix.u_int32_t

typealias text_encoding_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.text_encoding_t>

typealias thread_group_flags = kotlin.UInt

typealias thread_group_flagsVar = kotlinx.cinterop.UIntVarOf<platform.osx.thread_group_flags>

typealias thread_snapshot_flags = kotlin.UInt

typealias thread_snapshot_flagsVar = kotlinx.cinterop.UIntVarOf<platform.osx.thread_snapshot_flags>

typealias thread_waitinfo_t = platform.osx.stackshot_thread_waitinfo

typealias u_longlong_t = platform.posix.uint64_t

typealias u_longlong_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.u_longlong_t>

typealias uchar_t = platform.posix.uint8_t

typealias uchar_tVar = kotlinx.cinterop.UByteVarOf<platform.osx.uchar_t>

typealias uint_t = platform.posix.uint32_t

typealias uint_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.uint_t>

typealias ulong_t = kotlin.ULong

typealias ulong_tVar = kotlinx.cinterop.ULongVarOf<platform.osx.ulong_t>

typealias ushort_t = platform.posix.uint16_t

typealias ushort_tVar = kotlinx.cinterop.UShortVarOf<platform.osx.ushort_t>

typealias vnode_t = kotlinx.cinterop.CPointer<cnames.structs.vnode>

typealias vnode_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vnode_t>

typealias vol_attributes_attr_t = platform.osx.vol_attributes_attr

typealias vol_capabilities_attr_t = platform.osx.vol_capabilities_attr

typealias vol_capabilities_set_t = kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar>

typealias vol_capabilities_set_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vol_capabilities_set_t>

typealias vproc_err_t = kotlinx.cinterop.COpaquePointer

typealias vproc_err_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vproc_err_t>

typealias vproc_standby_t = kotlinx.cinterop.COpaquePointer

typealias vproc_standby_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vproc_standby_t>

typealias vproc_t = kotlinx.cinterop.CPointer<cnames.structs.vproc_s>

typealias vproc_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vproc_t>

typealias vproc_transaction_t = kotlinx.cinterop.COpaquePointer

typealias vproc_transaction_tVar = kotlinx.cinterop.CPointerVarOf<platform.osx.vproc_transaction_t>

typealias zoneid_t = platform.posix.uint32_t

typealias zoneid_tVar = kotlinx.cinterop.UIntVarOf<platform.osx.zoneid_t>

const val ABSENT_BOOLEAN: kotlin.Byte = 0

const val ABSENT_NUMERIC: kotlin.Int = 0

const val ADDRTYPE_ADDRPORT: kotlin.Int = 0

const val ADDRTYPE_CHAOS: kotlin.Int = 0

const val ADDRTYPE_DDP: kotlin.Int = 0

const val ADDRTYPE_INET: kotlin.Int = 0

const val ADDRTYPE_INET6: kotlin.Int = 0

const val ADDRTYPE_IPPORT: kotlin.Int = 0

const val ADDRTYPE_ISO: kotlin.Int = 0

const val ADDRTYPE_XNS: kotlin.Int = 0

const val AD_TYPE_EXTERNAL: kotlin.Int = 0

const val AD_TYPE_FIELD_TYPE_MASK: kotlin.Int = 0

const val AD_TYPE_INTERNAL_MASK: kotlin.Int = 0

const val AD_TYPE_REGISTERED: kotlin.Int = 0

const val AD_TYPE_RESERVED: kotlin.Int = 0

const val ALL_MOUSE_EVENTS: kotlin.Long = 0L

const val AP_OPTS_MUTUAL_REQUIRED: kotlin.Int = 0

const val AP_OPTS_RESERVED: kotlin.UInt = 0u

const val AP_OPTS_USE_SESSION_KEY: kotlin.Int = 0

const val AP_OPTS_USE_SUBKEY: kotlin.Int = 0

const val AP_OPTS_WIRE_MASK: kotlin.UInt = 0u

const val ASN1_BAD_FORMAT: kotlin.Long = 0L

const val ASN1_BAD_GMTIME: kotlin.Long = 0L

const val ASN1_BAD_ID: kotlin.Long = 0L

const val ASN1_BAD_LENGTH: kotlin.Long = 0L

const val ASN1_BAD_TIMEFORMAT: kotlin.Long = 0L

const val ASN1_MISMATCH_INDEF: kotlin.Long = 0L

const val ASN1_MISPLACED_FIELD: kotlin.Long = 0L

const val ASN1_MISSING_EOC: kotlin.Long = 0L

const val ASN1_MISSING_FIELD: kotlin.Long = 0L

const val ASN1_OVERFLOW: kotlin.Long = 0L

const val ASN1_OVERRUN: kotlin.Long = 0L

const val ASN1_PARSE_ERROR: kotlin.Long = 0L

const val ASN1_TYPE_MISMATCH: kotlin.Long = 0L

const val ATM_ACTION_COLLECT: kotlin.Int = 0

const val ATM_ACTION_DISCARD: kotlin.Int = 0

const val ATM_ACTION_GETSUBAID: kotlin.Int = 0

const val ATM_ACTION_LOGFAIL: kotlin.Int = 0

const val ATM_ACTION_REGISTER: kotlin.Int = 0

const val ATM_ACTION_UNREGISTER: kotlin.Int = 0

const val ATM_ENABLE_LEGACY_LOGGING: kotlin.Int = 0

const val ATM_FIND_MIN_SUB_AID: kotlin.Int = 0

const val ATM_SUBAID32_MAX: kotlin.UInt = 0u

const val ATM_TRACE_DISABLE: kotlin.Int = 0

const val ATM_TRACE_OFF: kotlin.Int = 0

const val ATTR_BIT_MAP_COUNT: kotlin.Int = 0

const val ATTR_BULK_REQUIRED: kotlin.UInt = 0u

const val ATTR_CMNEXT_LINKID: kotlin.Int = 0

const val ATTR_CMNEXT_PRIVATESIZE: kotlin.Int = 0

const val ATTR_CMNEXT_RELPATH: kotlin.Int = 0

const val ATTR_CMNEXT_SETMASK: kotlin.Int = 0

const val ATTR_CMNEXT_VALIDMASK: kotlin.Int = 0

const val ATTR_CMN_ACCESSMASK: kotlin.Int = 0

const val ATTR_CMN_ACCTIME: kotlin.Int = 0

const val ATTR_CMN_ADDEDTIME: kotlin.Int = 0

const val ATTR_CMN_BKUPTIME: kotlin.Int = 0

const val ATTR_CMN_CHGTIME: kotlin.Int = 0

const val ATTR_CMN_CRTIME: kotlin.Int = 0

const val ATTR_CMN_DATA_PROTECT_FLAGS: kotlin.Int = 0

const val ATTR_CMN_DEVID: kotlin.Int = 0

const val ATTR_CMN_DOCUMENT_ID: kotlin.Int = 0

const val ATTR_CMN_ERROR: kotlin.Int = 0

const val ATTR_CMN_EXTENDED_SECURITY: kotlin.Int = 0

const val ATTR_CMN_FILEID: kotlin.Int = 0

const val ATTR_CMN_FLAGS: kotlin.Int = 0

const val ATTR_CMN_FNDRINFO: kotlin.Int = 0

const val ATTR_CMN_FSID: kotlin.Int = 0

const val ATTR_CMN_FULLPATH: kotlin.Int = 0

const val ATTR_CMN_GEN_COUNT: kotlin.Int = 0

const val ATTR_CMN_GRPID: kotlin.Int = 0

const val ATTR_CMN_GRPUUID: kotlin.Int = 0

const val ATTR_CMN_MODTIME: kotlin.Int = 0

const val ATTR_CMN_NAME: kotlin.Int = 0

const val ATTR_CMN_NAMEDATTRCOUNT: kotlin.Int = 0

const val ATTR_CMN_NAMEDATTRLIST: kotlin.Int = 0

const val ATTR_CMN_OBJID: kotlin.Int = 0

const val ATTR_CMN_OBJPERMANENTID: kotlin.Int = 0

const val ATTR_CMN_OBJTAG: kotlin.Int = 0

const val ATTR_CMN_OBJTYPE: kotlin.Int = 0

const val ATTR_CMN_OWNERID: kotlin.Int = 0

const val ATTR_CMN_PARENTID: kotlin.Int = 0

const val ATTR_CMN_PAROBJID: kotlin.Int = 0

const val ATTR_CMN_RETURNED_ATTRS: kotlin.UInt = 0u

const val ATTR_CMN_SCRIPT: kotlin.Int = 0

const val ATTR_CMN_SETMASK: kotlin.Int = 0

const val ATTR_CMN_USERACCESS: kotlin.Int = 0

const val ATTR_CMN_UUID: kotlin.Int = 0

const val ATTR_CMN_VALIDMASK: kotlin.UInt = 0u

const val ATTR_CMN_VOLSETMASK: kotlin.Int = 0

const val ATTR_DIR_ALLOCSIZE: kotlin.Int = 0

const val ATTR_DIR_DATALENGTH: kotlin.Int = 0

const val ATTR_DIR_ENTRYCOUNT: kotlin.Int = 0

const val ATTR_DIR_IOBLOCKSIZE: kotlin.Int = 0

const val ATTR_DIR_LINKCOUNT: kotlin.Int = 0

const val ATTR_DIR_MOUNTSTATUS: kotlin.Int = 0

const val ATTR_DIR_SETMASK: kotlin.Int = 0

const val ATTR_DIR_VALIDMASK: kotlin.Int = 0

const val ATTR_FILE_ALLOCSIZE: kotlin.Int = 0

const val ATTR_FILE_CLUMPSIZE: kotlin.Int = 0

const val ATTR_FILE_DATAALLOCSIZE: kotlin.Int = 0

const val ATTR_FILE_DATAEXTENTS: kotlin.Int = 0

const val ATTR_FILE_DATALENGTH: kotlin.Int = 0

const val ATTR_FILE_DEVTYPE: kotlin.Int = 0

const val ATTR_FILE_FILETYPE: kotlin.Int = 0

const val ATTR_FILE_FORKCOUNT: kotlin.Int = 0

const val ATTR_FILE_FORKLIST: kotlin.Int = 0

const val ATTR_FILE_IOBLOCKSIZE: kotlin.Int = 0

const val ATTR_FILE_LINKCOUNT: kotlin.Int = 0

const val ATTR_FILE_RSRCALLOCSIZE: kotlin.Int = 0

const val ATTR_FILE_RSRCEXTENTS: kotlin.Int = 0

const val ATTR_FILE_RSRCLENGTH: kotlin.Int = 0

const val ATTR_FILE_SETMASK: kotlin.Int = 0

const val ATTR_FILE_TOTALSIZE: kotlin.Int = 0

const val ATTR_FILE_VALIDMASK: kotlin.Int = 0

const val ATTR_FORK_ALLOCSIZE: kotlin.Int = 0

const val ATTR_FORK_RESERVED: kotlin.UInt = 0u

const val ATTR_FORK_SETMASK: kotlin.Int = 0

const val ATTR_FORK_TOTALSIZE: kotlin.Int = 0

const val ATTR_FORK_VALIDMASK: kotlin.Int = 0

const val ATTR_MAX_BUFFER: kotlin.Int = 0

const val ATTR_VOL_ALLOCATIONCLUMP: kotlin.Int = 0

const val ATTR_VOL_ATTRIBUTES: kotlin.Int = 0

const val ATTR_VOL_CAPABILITIES: kotlin.Int = 0

const val ATTR_VOL_DIRCOUNT: kotlin.Int = 0

const val ATTR_VOL_ENCODINGSUSED: kotlin.Int = 0

const val ATTR_VOL_FILECOUNT: kotlin.Int = 0

const val ATTR_VOL_FSTYPE: kotlin.Int = 0

const val ATTR_VOL_INFO: kotlin.UInt = 0u

const val ATTR_VOL_IOBLOCKSIZE: kotlin.Int = 0

const val ATTR_VOL_MAXOBJCOUNT: kotlin.Int = 0

const val ATTR_VOL_MINALLOCATION: kotlin.Int = 0

const val ATTR_VOL_MOUNTEDDEVICE: kotlin.Int = 0

const val ATTR_VOL_MOUNTFLAGS: kotlin.Int = 0

const val ATTR_VOL_MOUNTPOINT: kotlin.Int = 0

const val ATTR_VOL_NAME: kotlin.Int = 0

const val ATTR_VOL_OBJCOUNT: kotlin.Int = 0

const val ATTR_VOL_QUOTA_SIZE: kotlin.Int = 0

const val ATTR_VOL_RESERVED_SIZE: kotlin.Int = 0

const val ATTR_VOL_SETMASK: kotlin.UInt = 0u

const val ATTR_VOL_SIGNATURE: kotlin.Int = 0

const val ATTR_VOL_SIZE: kotlin.Int = 0

const val ATTR_VOL_SPACEAVAIL: kotlin.Int = 0

const val ATTR_VOL_SPACEFREE: kotlin.Int = 0

const val ATTR_VOL_UUID: kotlin.Int = 0

const val ATTR_VOL_VALIDMASK: kotlin.UInt = 0u

const val A_ALTCHARSET: kotlin.UInt = 0u

const val A_ATTRIBUTES: kotlin.UInt = 0u

const val A_BLINK: kotlin.UInt = 0u

const val A_BOLD: kotlin.UInt = 0u

const val A_CHARTEXT: kotlin.UInt = 0u

const val A_COLOR: kotlin.UInt = 0u

const val A_DIM: kotlin.UInt = 0u

const val A_HORIZONTAL: kotlin.UInt = 0u

const val A_INVIS: kotlin.UInt = 0u

const val A_LEFT: kotlin.UInt = 0u

const val A_LOW: kotlin.UInt = 0u

const val A_NORMAL: kotlin.UInt = 0u

const val A_PROTECT: kotlin.UInt = 0u

const val A_REVERSE: kotlin.UInt = 0u

const val A_RIGHT: kotlin.UInt = 0u

const val A_STANDOUT: kotlin.UInt = 0u

const val A_TOP: kotlin.UInt = 0u

const val A_UNDERLINE: kotlin.UInt = 0u

const val A_VERTICAL: kotlin.UInt = 0u

var BC: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

const val BOOLCOUNT: kotlin.Int = 0

const val BOOLEAN: kotlin.Int = 0

const val BOOLWRITE: kotlin.Int = 0

const val BOOTSTRAP_BAD_COUNT: kotlin.Int = 0

const val BOOTSTRAP_MAX_CMD_LEN: kotlin.Int = 0

const val BOOTSTRAP_MAX_LOOKUP_COUNT: kotlin.Int = 0

const val BOOTSTRAP_MAX_NAME_LEN: kotlin.Int = 0

const val BOOTSTRAP_NAME_IN_USE: kotlin.Int = 0

const val BOOTSTRAP_NOT_PRIVILEGED: kotlin.Int = 0

const val BOOTSTRAP_NO_CHILDREN: kotlin.Int = 0

const val BOOTSTRAP_NO_MEMORY: kotlin.Int = 0

const val BOOTSTRAP_SERVICE_ACTIVE: kotlin.Int = 0

const val BOOTSTRAP_STATUS_ACTIVE: kotlin.Int = 0

const val BOOTSTRAP_STATUS_INACTIVE: kotlin.Int = 0

const val BOOTSTRAP_STATUS_ON_DEMAND: kotlin.Int = 0

const val BOOTSTRAP_SUCCESS: kotlin.Int = 0

const val BOOTSTRAP_UNKNOWN_SERVICE: kotlin.Int = 0

const val BPF_A: kotlin.Int = 0

const val BPF_ABS: kotlin.Int = 0

const val BPF_ADD: kotlin.Int = 0

const val BPF_ALIGNMENT: kotlin.ULong = 0u

const val BPF_ALU: kotlin.Int = 0

const val BPF_AND: kotlin.Int = 0

const val BPF_B: kotlin.Int = 0

const val BPF_DIV: kotlin.Int = 0

const val BPF_H: kotlin.Int = 0

const val BPF_IMM: kotlin.Int = 0

const val BPF_IND: kotlin.Int = 0

const val BPF_JA: kotlin.Int = 0

const val BPF_JEQ: kotlin.Int = 0

const val BPF_JGE: kotlin.Int = 0

const val BPF_JGT: kotlin.Int = 0

const val BPF_JMP: kotlin.Int = 0

const val BPF_JSET: kotlin.Int = 0

const val BPF_K: kotlin.Int = 0

const val BPF_LD: kotlin.Int = 0

const val BPF_LDX: kotlin.Int = 0

const val BPF_LEN: kotlin.Int = 0

const val BPF_LSH: kotlin.Int = 0

const val BPF_MEM: kotlin.Int = 0

const val BPF_MEMWORDS: kotlin.Int = 0

const val BPF_MISC: kotlin.Int = 0

const val BPF_MOD: kotlin.Int = 0

const val BPF_MSH: kotlin.Int = 0

const val BPF_MUL: kotlin.Int = 0

const val BPF_NEG: kotlin.Int = 0

const val BPF_OR: kotlin.Int = 0

const val BPF_RELEASE: kotlin.Int = 0

const val BPF_RET: kotlin.Int = 0

const val BPF_RSH: kotlin.Int = 0

const val BPF_ST: kotlin.Int = 0

const val BPF_STX: kotlin.Int = 0

const val BPF_SUB: kotlin.Int = 0

const val BPF_TAX: kotlin.Int = 0

const val BPF_TXA: kotlin.Int = 0

const val BPF_W: kotlin.Int = 0

const val BPF_X: kotlin.Int = 0

const val BPF_XOR: kotlin.Int = 0

const val BUTTON1_CLICKED: kotlin.Long = 0L

const val BUTTON1_DOUBLE_CLICKED: kotlin.Long = 0L

const val BUTTON1_PRESSED: kotlin.Long = 0L

const val BUTTON1_RELEASED: kotlin.Long = 0L

const val BUTTON1_RESERVED_EVENT: kotlin.Long = 0L

const val BUTTON1_TRIPLE_CLICKED: kotlin.Long = 0L

const val BUTTON2_CLICKED: kotlin.Long = 0L

const val BUTTON2_DOUBLE_CLICKED: kotlin.Long = 0L

const val BUTTON2_PRESSED: kotlin.Long = 0L

const val BUTTON2_RELEASED: kotlin.Long = 0L

const val BUTTON2_RESERVED_EVENT: kotlin.Long = 0L

const val BUTTON2_TRIPLE_CLICKED: kotlin.Long = 0L

const val BUTTON3_CLICKED: kotlin.Long = 0L

const val BUTTON3_DOUBLE_CLICKED: kotlin.Long = 0L

const val BUTTON3_PRESSED: kotlin.Long = 0L

const val BUTTON3_RELEASED: kotlin.Long = 0L

const val BUTTON3_RESERVED_EVENT: kotlin.Long = 0L

const val BUTTON3_TRIPLE_CLICKED: kotlin.Long = 0L

const val BUTTON4_CLICKED: kotlin.Long = 0L

const val BUTTON4_DOUBLE_CLICKED: kotlin.Long = 0L

const val BUTTON4_PRESSED: kotlin.Long = 0L

const val BUTTON4_RELEASED: kotlin.Long = 0L

const val BUTTON4_RESERVED_EVENT: kotlin.Long = 0L

const val BUTTON4_TRIPLE_CLICKED: kotlin.Long = 0L

const val BUTTON_ALT: kotlin.Long = 0L

const val BUTTON_CTRL: kotlin.Long = 0L

const val BUTTON_SHIFT: kotlin.Long = 0L

val B_FALSE: platform.osx._dtrace_boolean /* = kotlin.UInt */
    get() = TODO()

val B_TRUE: platform.osx._dtrace_boolean /* = kotlin.UInt */
    get() = TODO()

const val CANCEL: kotlin.Int = 0

const val CANCELLED_BOOLEAN: kotlin.Byte = 0

const val CANCELLED_NUMERIC: kotlin.Int = 0

const val CC_ARGHACK: kotlin.Int = 0

const val CC_CURSOR: kotlin.Int = 0

const val CC_EOF: kotlin.Int = 0

const val CC_ERROR: kotlin.Int = 0

const val CC_FATAL: kotlin.Int = 0

const val CC_NEWLINE: kotlin.Int = 0

const val CC_NORM: kotlin.Int = 0

const val CC_REDISPLAY: kotlin.Int = 0

const val CC_REFRESH: kotlin.Int = 0

const val CC_REFRESH_BEEP: kotlin.Int = 0

const val CKSUMTYPE_CRC32: kotlin.Int = 0

const val CKSUMTYPE_DESCBC: kotlin.Int = 0

const val CKSUMTYPE_HMAC_MD5_ARCFOUR: kotlin.Int = 0

const val CKSUMTYPE_HMAC_SHA1_96_AES128: kotlin.Int = 0

const val CKSUMTYPE_HMAC_SHA1_96_AES256: kotlin.Int = 0

const val CKSUMTYPE_HMAC_SHA1_DES3: kotlin.Int = 0

const val CKSUMTYPE_NIST_SHA: kotlin.Int = 0

const val CKSUMTYPE_RSA_MD4: kotlin.Int = 0

const val CKSUMTYPE_RSA_MD4_DES: kotlin.Int = 0

const val CKSUMTYPE_RSA_MD5: kotlin.Int = 0

const val CKSUMTYPE_RSA_MD5_DES: kotlin.Int = 0

var COLORS: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val COLOR_BLACK: kotlin.Int = 0

const val COLOR_BLUE: kotlin.Int = 0

const val COLOR_CYAN: kotlin.Int = 0

const val COLOR_GREEN: kotlin.Int = 0

const val COLOR_MAGENTA: kotlin.Int = 0

var COLOR_PAIRS: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val COLOR_RED: kotlin.Int = 0

const val COLOR_WHITE: kotlin.Int = 0

const val COLOR_YELLOW: kotlin.Int = 0

var COLS: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val CRF_MAC_ENFORCE: kotlin.Int = 0

const val CRF_NOMEMBERD: kotlin.Int = 0

const val CTF_MODEL_ILP32: kotlin.Int = 0

const val CTF_MODEL_LP64: kotlin.Int = 0

const val CTF_MODEL_NATIVE: kotlin.Int = 0

const val CTLIOCGCOUNT: kotlin.ULong = 0u

const val CTLIOCGINFO: kotlin.ULong = 0u

const val CURSES: kotlin.Int = 0

const val CURSES_H: kotlin.Int = 0

const val DAYSPERLYEAR: kotlin.Int = 0

const val DAYSPERNYEAR: kotlin.Int = 0

const val DAYSPERWEEK: kotlin.Int = 0

const val DIFV_F_MOD: kotlin.Int = 0

const val DIFV_F_REF: kotlin.Int = 0

const val DIFV_KIND_ARRAY: kotlin.Int = 0

const val DIFV_KIND_SCALAR: kotlin.Int = 0

const val DIFV_SCOPE_GLOBAL: kotlin.Int = 0

const val DIFV_SCOPE_LOCAL: kotlin.Int = 0

const val DIFV_SCOPE_THREAD: kotlin.Int = 0

const val DIF_DIR_NREGS: kotlin.Int = 0

const val DIF_DTR_NREGS: kotlin.Int = 0

const val DIF_INSTR_FLUSHTS: kotlin.Int = 0

const val DIF_INSTR_NOP: kotlin.Int = 0

const val DIF_INSTR_POPTS: kotlin.Int = 0

const val DIF_INTOFF_MAX: kotlin.Int = 0

const val DIF_OP_ADD: kotlin.Int = 0

const val DIF_OP_ALLOCS: kotlin.Int = 0

const val DIF_OP_AND: kotlin.Int = 0

const val DIF_OP_BA: kotlin.Int = 0

const val DIF_OP_BE: kotlin.Int = 0

const val DIF_OP_BG: kotlin.Int = 0

const val DIF_OP_BGE: kotlin.Int = 0

const val DIF_OP_BGEU: kotlin.Int = 0

const val DIF_OP_BGU: kotlin.Int = 0

const val DIF_OP_BL: kotlin.Int = 0

const val DIF_OP_BLE: kotlin.Int = 0

const val DIF_OP_BLEU: kotlin.Int = 0

const val DIF_OP_BLU: kotlin.Int = 0

const val DIF_OP_BNE: kotlin.Int = 0

const val DIF_OP_CALL: kotlin.Int = 0

const val DIF_OP_CMP: kotlin.Int = 0

const val DIF_OP_COPYS: kotlin.Int = 0

const val DIF_OP_FLUSHTS: kotlin.Int = 0

const val DIF_OP_LDGA: kotlin.Int = 0

const val DIF_OP_LDGAA: kotlin.Int = 0

const val DIF_OP_LDGS: kotlin.Int = 0

const val DIF_OP_LDLS: kotlin.Int = 0

const val DIF_OP_LDSB: kotlin.Int = 0

const val DIF_OP_LDSH: kotlin.Int = 0

const val DIF_OP_LDSW: kotlin.Int = 0

const val DIF_OP_LDTA: kotlin.Int = 0

const val DIF_OP_LDTAA: kotlin.Int = 0

const val DIF_OP_LDTS: kotlin.Int = 0

const val DIF_OP_LDUB: kotlin.Int = 0

const val DIF_OP_LDUH: kotlin.Int = 0

const val DIF_OP_LDUW: kotlin.Int = 0

const val DIF_OP_LDX: kotlin.Int = 0

const val DIF_OP_MOV: kotlin.Int = 0

const val DIF_OP_MUL: kotlin.Int = 0

const val DIF_OP_NOP: kotlin.Int = 0

const val DIF_OP_NOT: kotlin.Int = 0

const val DIF_OP_OR: kotlin.Int = 0

const val DIF_OP_POPTS: kotlin.Int = 0

const val DIF_OP_PUSHTR: kotlin.Int = 0

const val DIF_OP_PUSHTV: kotlin.Int = 0

const val DIF_OP_RET: kotlin.Int = 0

const val DIF_OP_RLDSB: kotlin.Int = 0

const val DIF_OP_RLDSH: kotlin.Int = 0

const val DIF_OP_RLDSW: kotlin.Int = 0

const val DIF_OP_RLDUB: kotlin.Int = 0

const val DIF_OP_RLDUH: kotlin.Int = 0

const val DIF_OP_RLDUW: kotlin.Int = 0

const val DIF_OP_RLDX: kotlin.Int = 0

const val DIF_OP_SCMP: kotlin.Int = 0

const val DIF_OP_SDIV: kotlin.Int = 0

const val DIF_OP_SETS: kotlin.Int = 0

const val DIF_OP_SETX: kotlin.Int = 0

const val DIF_OP_SLL: kotlin.Int = 0

const val DIF_OP_SRA: kotlin.Int = 0

const val DIF_OP_SREM: kotlin.Int = 0

const val DIF_OP_SRL: kotlin.Int = 0

const val DIF_OP_STB: kotlin.Int = 0

const val DIF_OP_STGAA: kotlin.Int = 0

const val DIF_OP_STGS: kotlin.Int = 0

const val DIF_OP_STH: kotlin.Int = 0

const val DIF_OP_STLS: kotlin.Int = 0

const val DIF_OP_STTAA: kotlin.Int = 0

const val DIF_OP_STTS: kotlin.Int = 0

const val DIF_OP_STW: kotlin.Int = 0

const val DIF_OP_STX: kotlin.Int = 0

const val DIF_OP_SUB: kotlin.Int = 0

const val DIF_OP_TST: kotlin.Int = 0

const val DIF_OP_UDIV: kotlin.Int = 0

const val DIF_OP_ULDSB: kotlin.Int = 0

const val DIF_OP_ULDSH: kotlin.Int = 0

const val DIF_OP_ULDSW: kotlin.Int = 0

const val DIF_OP_ULDUB: kotlin.Int = 0

const val DIF_OP_ULDUH: kotlin.Int = 0

const val DIF_OP_ULDUW: kotlin.Int = 0

const val DIF_OP_ULDX: kotlin.Int = 0

const val DIF_OP_UREM: kotlin.Int = 0

const val DIF_OP_XLARG: kotlin.Int = 0

const val DIF_OP_XLATE: kotlin.Int = 0

const val DIF_OP_XOR: kotlin.Int = 0

const val DIF_REGISTER_MAX: kotlin.Int = 0

const val DIF_REG_R0: kotlin.Int = 0

const val DIF_STROFF_MAX: kotlin.Int = 0

const val DIF_SUBROUTINE_MAX: kotlin.Int = 0

const val DIF_SUBR_ALLOCA: kotlin.Int = 0

const val DIF_SUBR_APPLE_MAX: kotlin.Int = 0

const val DIF_SUBR_APPLE_MIN: kotlin.Int = 0

const val DIF_SUBR_BASENAME: kotlin.Int = 0

const val DIF_SUBR_BCOPY: kotlin.Int = 0

const val DIF_SUBR_CLEANPATH: kotlin.Int = 0

const val DIF_SUBR_COPYIN: kotlin.Int = 0

const val DIF_SUBR_COPYINSTR: kotlin.Int = 0

const val DIF_SUBR_COPYINTO: kotlin.Int = 0

const val DIF_SUBR_COPYOUT: kotlin.Int = 0

const val DIF_SUBR_COPYOUTSTR: kotlin.Int = 0

const val DIF_SUBR_DDI_PATHNAME: kotlin.Int = 0

const val DIF_SUBR_DIRNAME: kotlin.Int = 0

const val DIF_SUBR_GETMAJOR: kotlin.Int = 0

const val DIF_SUBR_GETMINOR: kotlin.Int = 0

const val DIF_SUBR_HTONL: kotlin.Int = 0

const val DIF_SUBR_HTONLL: kotlin.Int = 0

const val DIF_SUBR_HTONS: kotlin.Int = 0

const val DIF_SUBR_INDEX: kotlin.Int = 0

const val DIF_SUBR_INET_NTOA: kotlin.Int = 0

const val DIF_SUBR_INET_NTOA6: kotlin.Int = 0

const val DIF_SUBR_INET_NTOP: kotlin.Int = 0

const val DIF_SUBR_KDEBUG_TRACE: kotlin.Int = 0

const val DIF_SUBR_KDEBUG_TRACE_STRING: kotlin.Int = 0

const val DIF_SUBR_LLTOSTR: kotlin.Int = 0

const val DIF_SUBR_MAX: kotlin.Int = 0

const val DIF_SUBR_MSGDSIZE: kotlin.Int = 0

const val DIF_SUBR_MSGSIZE: kotlin.Int = 0

const val DIF_SUBR_MUTEX_OWNED: kotlin.Int = 0

const val DIF_SUBR_MUTEX_OWNER: kotlin.Int = 0

const val DIF_SUBR_MUTEX_TYPE_ADAPTIVE: kotlin.Int = 0

const val DIF_SUBR_MUTEX_TYPE_SPIN: kotlin.Int = 0

const val DIF_SUBR_NTOHL: kotlin.Int = 0

const val DIF_SUBR_NTOHLL: kotlin.Int = 0

const val DIF_SUBR_NTOHS: kotlin.Int = 0

const val DIF_SUBR_PROGENYOF: kotlin.Int = 0

const val DIF_SUBR_RAND: kotlin.Int = 0

const val DIF_SUBR_RINDEX: kotlin.Int = 0

const val DIF_SUBR_RW_ISWRITER: kotlin.Int = 0

const val DIF_SUBR_RW_READ_HELD: kotlin.Int = 0

const val DIF_SUBR_RW_WRITE_HELD: kotlin.Int = 0

const val DIF_SUBR_SPECULATION: kotlin.Int = 0

const val DIF_SUBR_STRCHR: kotlin.Int = 0

const val DIF_SUBR_STRJOIN: kotlin.Int = 0

const val DIF_SUBR_STRLEN: kotlin.Int = 0

const val DIF_SUBR_STRRCHR: kotlin.Int = 0

const val DIF_SUBR_STRSTR: kotlin.Int = 0

const val DIF_SUBR_STRTOK: kotlin.Int = 0

const val DIF_SUBR_SUBSTR: kotlin.Int = 0

const val DIF_SUBR_TOLOWER: kotlin.Int = 0

const val DIF_SUBR_TOUPPER: kotlin.Int = 0

const val DIF_SUBR_VM_KERNEL_ADDRPERM: kotlin.Int = 0

const val DIF_TF_BYREF: kotlin.Int = 0

const val DIF_TF_BYUREF: kotlin.Int = 0

const val DIF_TYPE_CTF: kotlin.Int = 0

const val DIF_TYPE_STRING: kotlin.Int = 0

const val DIF_VARIABLE_MAX: kotlin.Int = 0

const val DIF_VAR_ARG0: kotlin.Int = 0

const val DIF_VAR_ARG1: kotlin.Int = 0

const val DIF_VAR_ARG2: kotlin.Int = 0

const val DIF_VAR_ARG3: kotlin.Int = 0

const val DIF_VAR_ARG4: kotlin.Int = 0

const val DIF_VAR_ARG5: kotlin.Int = 0

const val DIF_VAR_ARG6: kotlin.Int = 0

const val DIF_VAR_ARG7: kotlin.Int = 0

const val DIF_VAR_ARG8: kotlin.Int = 0

const val DIF_VAR_ARG9: kotlin.Int = 0

const val DIF_VAR_ARGS: kotlin.Int = 0

const val DIF_VAR_ARRAY_MAX: kotlin.Int = 0

const val DIF_VAR_ARRAY_MIN: kotlin.Int = 0

const val DIF_VAR_ARRAY_UBASE: kotlin.Int = 0

const val DIF_VAR_CALLER: kotlin.Int = 0

const val DIF_VAR_CPU: kotlin.Int = 0

const val DIF_VAR_CPUCYCLES: kotlin.Int = 0

const val DIF_VAR_CPUINSTRS: kotlin.Int = 0

const val DIF_VAR_CURTHREAD: kotlin.Int = 0

const val DIF_VAR_DISPATCHQADDR: kotlin.Int = 0

const val DIF_VAR_EPID: kotlin.Int = 0

const val DIF_VAR_ERRNO: kotlin.Int = 0

const val DIF_VAR_EXECNAME: kotlin.Int = 0

const val DIF_VAR_GID: kotlin.Int = 0

const val DIF_VAR_ID: kotlin.Int = 0

const val DIF_VAR_IPL: kotlin.Int = 0

const val DIF_VAR_MACHTIMESTAMP: kotlin.Int = 0

const val DIF_VAR_OTHER_MAX: kotlin.Int = 0

const val DIF_VAR_OTHER_MIN: kotlin.Int = 0

const val DIF_VAR_OTHER_UBASE: kotlin.Int = 0

const val DIF_VAR_PID: kotlin.Int = 0

const val DIF_VAR_PPID: kotlin.Int = 0

const val DIF_VAR_PROBEFUNC: kotlin.Int = 0

const val DIF_VAR_PROBEMOD: kotlin.Int = 0

const val DIF_VAR_PROBENAME: kotlin.Int = 0

const val DIF_VAR_PROBEPROV: kotlin.Int = 0

const val DIF_VAR_PTHREAD_SELF: kotlin.Int = 0

const val DIF_VAR_REGS: kotlin.Int = 0

const val DIF_VAR_STACKDEPTH: kotlin.Int = 0

const val DIF_VAR_TID: kotlin.Int = 0

const val DIF_VAR_TIMESTAMP: kotlin.Int = 0

const val DIF_VAR_UCALLER: kotlin.Int = 0

const val DIF_VAR_UID: kotlin.Int = 0

const val DIF_VAR_UREGS: kotlin.Int = 0

const val DIF_VAR_USTACKDEPTH: kotlin.Int = 0

const val DIF_VAR_VCYCLES: kotlin.Int = 0

const val DIF_VAR_VINSTRS: kotlin.Int = 0

const val DIF_VAR_VTIMESTAMP: kotlin.Int = 0

const val DIF_VAR_WALLTIMESTAMP: kotlin.Int = 0

const val DIF_VAR_ZONENAME: kotlin.Int = 0

const val DIF_VERSION: kotlin.Int = 0

const val DIF_VERSION_1: kotlin.Int = 0

const val DIF_VERSION_2: kotlin.Int = 0

const val DIR_MNTSTATUS_MNTPOINT: kotlin.Int = 0

const val DIR_MNTSTATUS_TRIGGER: kotlin.Int = 0

val DISKTAB: kotlin.String
    get() = TODO()

const val DLT_A429: kotlin.Int = 0

const val DLT_A653_ICM: kotlin.Int = 0

const val DLT_AIRONET_HEADER: kotlin.Int = 0

const val DLT_AOS: kotlin.Int = 0

const val DLT_APPLE_IP_OVER_IEEE1394: kotlin.Int = 0

const val DLT_ARCNET: kotlin.Int = 0

const val DLT_ARCNET_LINUX: kotlin.Int = 0

const val DLT_ATM_CLIP: kotlin.Int = 0

const val DLT_ATM_RFC1483: kotlin.Int = 0

const val DLT_AURORA: kotlin.Int = 0

const val DLT_AX25: kotlin.Int = 0

const val DLT_AX25_KISS: kotlin.Int = 0

const val DLT_BACNET_MS_TP: kotlin.Int = 0

const val DLT_BLUETOOTH_BREDR_BB: kotlin.Int = 0

const val DLT_BLUETOOTH_HCI_H4: kotlin.Int = 0

const val DLT_BLUETOOTH_HCI_H4_WITH_PHDR: kotlin.Int = 0

const val DLT_BLUETOOTH_LE_LL: kotlin.Int = 0

const val DLT_BLUETOOTH_LE_LL_WITH_PHDR: kotlin.Int = 0

const val DLT_BLUETOOTH_LINUX_MONITOR: kotlin.Int = 0

const val DLT_CAN20B: kotlin.Int = 0

const val DLT_CAN_SOCKETCAN: kotlin.Int = 0

const val DLT_CHAOS: kotlin.Int = 0

const val DLT_CHDLC: kotlin.Int = 0

const val DLT_CISCO_IOS: kotlin.Int = 0

const val DLT_CLASS_NETBSD_RAWAF: kotlin.Int = 0

const val DLT_C_HDLC: kotlin.Int = 0

const val DLT_C_HDLC_WITH_DIR: kotlin.Int = 0

const val DLT_DBUS: kotlin.Int = 0

const val DLT_DECT: kotlin.Int = 0

const val DLT_DOCSIS: kotlin.Int = 0

const val DLT_DVB_CI: kotlin.Int = 0

const val DLT_ECONET: kotlin.Int = 0

const val DLT_EN10MB: kotlin.Int = 0

const val DLT_EN3MB: kotlin.Int = 0

const val DLT_ENC: kotlin.Int = 0

const val DLT_EPON: kotlin.Int = 0

const val DLT_ERF: kotlin.Int = 0

const val DLT_ERF_ETH: kotlin.Int = 0

const val DLT_ERF_POS: kotlin.Int = 0

const val DLT_FC_2: kotlin.Int = 0

const val DLT_FC_2_WITH_FRAME_DELIMS: kotlin.Int = 0

const val DLT_FDDI: kotlin.Int = 0

const val DLT_FLEXRAY: kotlin.Int = 0

const val DLT_FRELAY: kotlin.Int = 0

const val DLT_FRELAY_WITH_DIR: kotlin.Int = 0

const val DLT_GCOM_SERIAL: kotlin.Int = 0

const val DLT_GCOM_T1E1: kotlin.Int = 0

const val DLT_GPF_F: kotlin.Int = 0

const val DLT_GPF_T: kotlin.Int = 0

const val DLT_GPRS_LLC: kotlin.Int = 0

const val DLT_GSMTAP_ABIS: kotlin.Int = 0

const val DLT_GSMTAP_UM: kotlin.Int = 0

const val DLT_HHDLC: kotlin.Int = 0

const val DLT_IBM_SN: kotlin.Int = 0

const val DLT_IBM_SP: kotlin.Int = 0

const val DLT_IEEE802: kotlin.Int = 0

const val DLT_IEEE802_11: kotlin.Int = 0

const val DLT_IEEE802_11_RADIO: kotlin.Int = 0

const val DLT_IEEE802_11_RADIO_AVS: kotlin.Int = 0

const val DLT_IEEE802_15_4: kotlin.Int = 0

const val DLT_IEEE802_15_4_LINUX: kotlin.Int = 0

const val DLT_IEEE802_15_4_NOFCS: kotlin.Int = 0

const val DLT_IEEE802_15_4_NONASK_PHY: kotlin.Int = 0

const val DLT_IEEE802_16_MAC_CPS: kotlin.Int = 0

const val DLT_IEEE802_16_MAC_CPS_RADIO: kotlin.Int = 0

const val DLT_INFINIBAND: kotlin.Int = 0

const val DLT_IPFILTER: kotlin.Int = 0

const val DLT_IPMB: kotlin.Int = 0

const val DLT_IPMB_LINUX: kotlin.Int = 0

const val DLT_IPMI_HPM_2: kotlin.Int = 0

const val DLT_IPNET: kotlin.Int = 0

const val DLT_IPOIB: kotlin.Int = 0

const val DLT_IPV4: kotlin.Int = 0

const val DLT_IPV6: kotlin.Int = 0

const val DLT_IP_OVER_FC: kotlin.Int = 0

const val DLT_ISO_14443: kotlin.Int = 0

const val DLT_JUNIPER_ATM1: kotlin.Int = 0

const val DLT_JUNIPER_ATM2: kotlin.Int = 0

const val DLT_JUNIPER_ATM_CEMIC: kotlin.Int = 0

const val DLT_JUNIPER_CHDLC: kotlin.Int = 0

const val DLT_JUNIPER_ES: kotlin.Int = 0

const val DLT_JUNIPER_ETHER: kotlin.Int = 0

const val DLT_JUNIPER_FIBRECHANNEL: kotlin.Int = 0

const val DLT_JUNIPER_FRELAY: kotlin.Int = 0

const val DLT_JUNIPER_GGSN: kotlin.Int = 0

const val DLT_JUNIPER_ISM: kotlin.Int = 0

const val DLT_JUNIPER_MFR: kotlin.Int = 0

const val DLT_JUNIPER_MLFR: kotlin.Int = 0

const val DLT_JUNIPER_MLPPP: kotlin.Int = 0

const val DLT_JUNIPER_MONITOR: kotlin.Int = 0

const val DLT_JUNIPER_PIC_PEER: kotlin.Int = 0

const val DLT_JUNIPER_PPP: kotlin.Int = 0

const val DLT_JUNIPER_PPPOE: kotlin.Int = 0

const val DLT_JUNIPER_PPPOE_ATM: kotlin.Int = 0

const val DLT_JUNIPER_SERVICES: kotlin.Int = 0

const val DLT_JUNIPER_SRX_E2E: kotlin.Int = 0

const val DLT_JUNIPER_ST: kotlin.Int = 0

const val DLT_JUNIPER_VP: kotlin.Int = 0

const val DLT_JUNIPER_VS: kotlin.Int = 0

const val DLT_LAPB_WITH_DIR: kotlin.Int = 0

const val DLT_LAPD: kotlin.Int = 0

const val DLT_LIN: kotlin.Int = 0

const val DLT_LINUX_EVDEV: kotlin.Int = 0

const val DLT_LINUX_IRDA: kotlin.Int = 0

const val DLT_LINUX_LAPD: kotlin.Int = 0

const val DLT_LINUX_PPP_WITHDIRECTION: kotlin.Int = 0

const val DLT_LINUX_SLL: kotlin.Int = 0

const val DLT_LOOP: kotlin.Int = 0

const val DLT_LTALK: kotlin.Int = 0

const val DLT_MATCHING_MAX: kotlin.Int = 0

const val DLT_MATCHING_MIN: kotlin.Int = 0

const val DLT_MFR: kotlin.Int = 0

const val DLT_MOST: kotlin.Int = 0

const val DLT_MPEG_2_TS: kotlin.Int = 0

const val DLT_MPLS: kotlin.Int = 0

const val DLT_MTP2: kotlin.Int = 0

const val DLT_MTP2_WITH_PHDR: kotlin.Int = 0

const val DLT_MTP3: kotlin.Int = 0

const val DLT_MUX27010: kotlin.Int = 0

const val DLT_NETANALYZER: kotlin.Int = 0

const val DLT_NETANALYZER_TRANSPARENT: kotlin.Int = 0

const val DLT_NETLINK: kotlin.Int = 0

const val DLT_NFC_LLCP: kotlin.Int = 0

const val DLT_NFLOG: kotlin.Int = 0

const val DLT_NG40: kotlin.Int = 0

const val DLT_NULL: kotlin.Int = 0

const val DLT_PCAPNG: kotlin.Int = 0

const val DLT_PCI_EXP: kotlin.Int = 0

const val DLT_PFLOG: kotlin.Int = 0

const val DLT_PFSYNC: kotlin.Int = 0

const val DLT_PKTAP: kotlin.Int = 0

const val DLT_PPI: kotlin.Int = 0

const val DLT_PPP: kotlin.Int = 0

const val DLT_PPP_BSDOS: kotlin.Int = 0

const val DLT_PPP_ETHER: kotlin.Int = 0

const val DLT_PPP_PPPD: kotlin.Int = 0

const val DLT_PPP_SERIAL: kotlin.Int = 0

const val DLT_PPP_WITH_DIR: kotlin.Int = 0

const val DLT_PPP_WITH_DIRECTION: kotlin.Int = 0

const val DLT_PRISM_HEADER: kotlin.Int = 0

const val DLT_PROFIBUS_DL: kotlin.Int = 0

const val DLT_PRONET: kotlin.Int = 0

const val DLT_RAIF1: kotlin.Int = 0

const val DLT_RAW: kotlin.Int = 0

const val DLT_RDS: kotlin.Int = 0

const val DLT_REDBACK_SMARTEDGE: kotlin.Int = 0

const val DLT_RIO: kotlin.Int = 0

const val DLT_RTAC_SERIAL: kotlin.Int = 0

const val DLT_SCCP: kotlin.Int = 0

const val DLT_SCTP: kotlin.Int = 0

const val DLT_SITA: kotlin.Int = 0

const val DLT_SLIP: kotlin.Int = 0

const val DLT_SLIP_BSDOS: kotlin.Int = 0

const val DLT_STANAG_5066_D_PDU: kotlin.Int = 0

const val DLT_SUNATM: kotlin.Int = 0

const val DLT_SYMANTEC_FIREWALL: kotlin.Int = 0

const val DLT_TZSP: kotlin.Int = 0

const val DLT_USB: kotlin.Int = 0

const val DLT_USBPCAP: kotlin.Int = 0

const val DLT_USB_DARWIN: kotlin.Int = 0

const val DLT_USB_FREEBSD: kotlin.Int = 0

const val DLT_USB_LINUX: kotlin.Int = 0

const val DLT_USB_LINUX_MMAPPED: kotlin.Int = 0

const val DLT_USER0: kotlin.Int = 0

const val DLT_USER1: kotlin.Int = 0

const val DLT_USER10: kotlin.Int = 0

const val DLT_USER11: kotlin.Int = 0

const val DLT_USER12: kotlin.Int = 0

const val DLT_USER13: kotlin.Int = 0

const val DLT_USER14: kotlin.Int = 0

const val DLT_USER15: kotlin.Int = 0

const val DLT_USER2: kotlin.Int = 0

const val DLT_USER3: kotlin.Int = 0

const val DLT_USER4: kotlin.Int = 0

const val DLT_USER5: kotlin.Int = 0

const val DLT_USER6: kotlin.Int = 0

const val DLT_USER7: kotlin.Int = 0

const val DLT_USER8: kotlin.Int = 0

const val DLT_USER9: kotlin.Int = 0

const val DLT_WATTSTOPPER_DLM: kotlin.Int = 0

const val DLT_WIHART: kotlin.Int = 0

const val DLT_WIRESHARK_UPPER_PDU: kotlin.Int = 0

const val DLT_X2E_SERIAL: kotlin.Int = 0

const val DLT_X2E_XORAYA: kotlin.Int = 0

const val DLT_ZWAVE_R1_R2: kotlin.Int = 0

const val DLT_ZWAVE_R3: kotlin.Int = 0

const val DOF_ENCODE_LSB: kotlin.Int = 0

const val DOF_ENCODE_MSB: kotlin.Int = 0

const val DOF_ENCODE_NATIVE: kotlin.Int = 0

const val DOF_ENCODE_NONE: kotlin.Int = 0

const val DOF_FL_VALID: kotlin.Int = 0

const val DOF_ID_DIFIREG: kotlin.Int = 0

const val DOF_ID_DIFTREG: kotlin.Int = 0

const val DOF_ID_DIFVERS: kotlin.Int = 0

const val DOF_ID_ENCODING: kotlin.Int = 0

const val DOF_ID_MAG0: kotlin.Int = 0

const val DOF_ID_MAG1: kotlin.Int = 0

const val DOF_ID_MAG2: kotlin.Int = 0

const val DOF_ID_MAG3: kotlin.Int = 0

const val DOF_ID_MODEL: kotlin.Int = 0

const val DOF_ID_PAD: kotlin.Int = 0

const val DOF_ID_SIZE: kotlin.Int = 0

const val DOF_ID_VERSION: kotlin.Int = 0

const val DOF_MAG_MAG0: kotlin.Int = 0

const val DOF_MAG_MAG1: kotlin.Int = 0

const val DOF_MAG_MAG2: kotlin.Int = 0

const val DOF_MAG_MAG3: kotlin.Int = 0

val DOF_MAG_STRING: kotlin.String
    get() = TODO()

const val DOF_MAG_STRLEN: kotlin.Int = 0

const val DOF_MODEL_ILP32: kotlin.Int = 0

const val DOF_MODEL_LP64: kotlin.Int = 0

const val DOF_MODEL_NATIVE: kotlin.Int = 0

const val DOF_MODEL_NONE: kotlin.Int = 0

const val DOF_RELO_NONE: kotlin.Int = 0

const val DOF_RELO_SETX: kotlin.Int = 0

const val DOF_SECF_LOAD: kotlin.Int = 0

const val DOF_SECIDX_NONE: kotlin.UInt = 0u

const val DOF_SECT_ACTDESC: kotlin.Int = 0

const val DOF_SECT_COMMENTS: kotlin.Int = 0

const val DOF_SECT_DIF: kotlin.Int = 0

const val DOF_SECT_DIFOHDR: kotlin.Int = 0

const val DOF_SECT_ECBDESC: kotlin.Int = 0

const val DOF_SECT_INTTAB: kotlin.Int = 0

const val DOF_SECT_KRELHDR: kotlin.Int = 0

const val DOF_SECT_NONE: kotlin.Int = 0

const val DOF_SECT_OPTDESC: kotlin.Int = 0

const val DOF_SECT_PRARGS: kotlin.Int = 0

const val DOF_SECT_PRENOFFS: kotlin.Int = 0

const val DOF_SECT_PREXPORT: kotlin.Int = 0

const val DOF_SECT_PROBEDESC: kotlin.Int = 0

const val DOF_SECT_PROBES: kotlin.Int = 0

const val DOF_SECT_PROFFS: kotlin.Int = 0

const val DOF_SECT_PROVIDER: kotlin.Int = 0

const val DOF_SECT_RELTAB: kotlin.Int = 0

const val DOF_SECT_SOURCE: kotlin.Int = 0

const val DOF_SECT_STRTAB: kotlin.Int = 0

const val DOF_SECT_TYPTAB: kotlin.Int = 0

const val DOF_SECT_URELHDR: kotlin.Int = 0

const val DOF_SECT_UTSNAME: kotlin.Int = 0

const val DOF_SECT_VARTAB: kotlin.Int = 0

const val DOF_SECT_XLEXPORT: kotlin.Int = 0

const val DOF_SECT_XLIMPORT: kotlin.Int = 0

const val DOF_SECT_XLMEMBERS: kotlin.Int = 0

const val DOF_SECT_XLTAB: kotlin.Int = 0

const val DOF_STRIDX_NONE: kotlin.UInt = 0u

const val DOF_VERSION: kotlin.Int = 0

const val DOF_VERSION_1: kotlin.Int = 0

const val DOF_VERSION_2: kotlin.Int = 0

const val DOF_VERSION_3: kotlin.Int = 0

const val DTRACEACT_AGGREGATION: kotlin.Int = 0

const val DTRACEACT_APPLEBINARY: kotlin.Int = 0

const val DTRACEACT_BREAKPOINT: kotlin.Int = 0

const val DTRACEACT_CHILL: kotlin.Int = 0

const val DTRACEACT_COMMIT: kotlin.Int = 0

const val DTRACEACT_DIFEXPR: kotlin.Int = 0

const val DTRACEACT_DISCARD: kotlin.Int = 0

const val DTRACEACT_EXIT: kotlin.Int = 0

const val DTRACEACT_FREOPEN: kotlin.Int = 0

const val DTRACEACT_JSTACK: kotlin.Int = 0

const val DTRACEACT_KERNEL: kotlin.Int = 0

const val DTRACEACT_KERNEL_DESTRUCTIVE: kotlin.Int = 0

const val DTRACEACT_LIBACT: kotlin.Int = 0

const val DTRACEACT_MOD: kotlin.Int = 0

const val DTRACEACT_NONE: kotlin.Int = 0

const val DTRACEACT_PANIC: kotlin.Int = 0

const val DTRACEACT_PIDRESUME: kotlin.Int = 0

const val DTRACEACT_PRINTA: kotlin.Int = 0

const val DTRACEACT_PRINTF: kotlin.Int = 0

const val DTRACEACT_PROC: kotlin.Int = 0

const val DTRACEACT_PROC_CONTROL: kotlin.Int = 0

const val DTRACEACT_PROC_DESTRUCTIVE: kotlin.Int = 0

const val DTRACEACT_RAISE: kotlin.Int = 0

const val DTRACEACT_SPECULATE: kotlin.Int = 0

const val DTRACEACT_SPECULATIVE: kotlin.Int = 0

const val DTRACEACT_STACK: kotlin.Int = 0

const val DTRACEACT_STOP: kotlin.Int = 0

const val DTRACEACT_SYM: kotlin.Int = 0

const val DTRACEACT_SYSTEM: kotlin.Int = 0

const val DTRACEACT_TRACEMEM: kotlin.Int = 0

const val DTRACEACT_TRACEMEM_DYNSIZE: kotlin.Int = 0

const val DTRACEACT_UADDR: kotlin.Int = 0

const val DTRACEACT_UMOD: kotlin.Int = 0

const val DTRACEACT_USTACK: kotlin.Int = 0

const val DTRACEACT_USYM: kotlin.Int = 0

const val DTRACEAGG_AVG: kotlin.Int = 0

const val DTRACEAGG_COUNT: kotlin.Int = 0

const val DTRACEAGG_LLQUANTIZE: kotlin.Int = 0

const val DTRACEAGG_LQUANTIZE: kotlin.Int = 0

const val DTRACEAGG_MAX: kotlin.Int = 0

const val DTRACEAGG_MIN: kotlin.Int = 0

const val DTRACEAGG_QUANTIZE: kotlin.Int = 0

const val DTRACEAGG_STDDEV: kotlin.Int = 0

const val DTRACEAGG_SUM: kotlin.Int = 0

const val DTRACEFLT_BADADDR: kotlin.Int = 0

const val DTRACEFLT_BADALIGN: kotlin.Int = 0

const val DTRACEFLT_BADSTACK: kotlin.Int = 0

const val DTRACEFLT_DIVZERO: kotlin.Int = 0

const val DTRACEFLT_ILLOP: kotlin.Int = 0

const val DTRACEFLT_KPRIV: kotlin.Int = 0

const val DTRACEFLT_LIBRARY: kotlin.Int = 0

const val DTRACEFLT_NOSCRATCH: kotlin.Int = 0

const val DTRACEFLT_TUPOFLOW: kotlin.Int = 0

const val DTRACEFLT_UNKNOWN: kotlin.Int = 0

const val DTRACEFLT_UPRIV: kotlin.Int = 0

const val DTRACEHIOC_ADDDOF: kotlin.ULong = 0u

const val DTRACEHIOC_REMOVE: kotlin.UInt = 0u

const val DTRACEIOC: kotlin.UInt = 0u

const val DTRACEIOC_AGGDESC: kotlin.UInt = 0u

const val DTRACEIOC_AGGSNAP: kotlin.UInt = 0u

const val DTRACEIOC_BUFSNAP: kotlin.UInt = 0u

const val DTRACEIOC_CONF: kotlin.UInt = 0u

const val DTRACEIOC_DOFGET: kotlin.UInt = 0u

const val DTRACEIOC_ENABLE: kotlin.UInt = 0u

const val DTRACEIOC_EPROBE: kotlin.UInt = 0u

const val DTRACEIOC_FORMAT: kotlin.UInt = 0u

const val DTRACEIOC_GO: kotlin.UInt = 0u

const val DTRACEIOC_MODUUIDSLIST: kotlin.UInt = 0u

const val DTRACEIOC_PROBEARG: kotlin.UInt = 0u

const val DTRACEIOC_PROBEMATCH: kotlin.UInt = 0u

const val DTRACEIOC_PROBES: kotlin.UInt = 0u

const val DTRACEIOC_PROCWAITFOR: kotlin.UInt = 0u

const val DTRACEIOC_PROVIDER: kotlin.UInt = 0u

const val DTRACEIOC_PROVMODSYMS: kotlin.UInt = 0u

const val DTRACEIOC_REPLICATE: kotlin.UInt = 0u

const val DTRACEIOC_SIGNAL: kotlin.UInt = 0u

const val DTRACEIOC_SLEEP: kotlin.UInt = 0u

const val DTRACEIOC_STATUS: kotlin.UInt = 0u

const val DTRACEIOC_STOP: kotlin.UInt = 0u

const val DTRACEMNRN_CLONE: kotlin.Int = 0

const val DTRACEMNRN_DTRACE: kotlin.Int = 0

const val DTRACEMNRN_HELPER: kotlin.Int = 0

val DTRACEMNR_DTRACE: kotlin.String
    get() = TODO()

val DTRACEMNR_HELPER: kotlin.String
    get() = TODO()

const val DTRACEOPT_AGGHIST: kotlin.Int = 0

const val DTRACEOPT_AGGPACK: kotlin.Int = 0

const val DTRACEOPT_AGGRATE: kotlin.Int = 0

const val DTRACEOPT_AGGSIZE: kotlin.Int = 0

const val DTRACEOPT_AGGSORTKEY: kotlin.Int = 0

const val DTRACEOPT_AGGSORTKEYPOS: kotlin.Int = 0

const val DTRACEOPT_AGGSORTPOS: kotlin.Int = 0

const val DTRACEOPT_AGGSORTREV: kotlin.Int = 0

const val DTRACEOPT_AGGZOOM: kotlin.Int = 0

const val DTRACEOPT_BUFLIMIT: kotlin.Int = 0

const val DTRACEOPT_BUFPOLICY: kotlin.Int = 0

const val DTRACEOPT_BUFPOLICY_FILL: kotlin.Int = 0

const val DTRACEOPT_BUFPOLICY_RING: kotlin.Int = 0

const val DTRACEOPT_BUFPOLICY_SWITCH: kotlin.Int = 0

const val DTRACEOPT_BUFRESIZE: kotlin.Int = 0

const val DTRACEOPT_BUFRESIZE_AUTO: kotlin.Int = 0

const val DTRACEOPT_BUFRESIZE_MANUAL: kotlin.Int = 0

const val DTRACEOPT_BUFSIZE: kotlin.Int = 0

const val DTRACEOPT_CLEANRATE: kotlin.Int = 0

const val DTRACEOPT_CPU: kotlin.Int = 0

const val DTRACEOPT_DESTRUCTIVE: kotlin.Int = 0

const val DTRACEOPT_DYNVARSIZE: kotlin.Int = 0

const val DTRACEOPT_FLOWINDENT: kotlin.Int = 0

const val DTRACEOPT_GRABANON: kotlin.Int = 0

const val DTRACEOPT_JSTACKFRAMES: kotlin.Int = 0

const val DTRACEOPT_JSTACKSTRSIZE: kotlin.Int = 0

const val DTRACEOPT_MAX: kotlin.Int = 0

const val DTRACEOPT_NSPEC: kotlin.Int = 0

const val DTRACEOPT_QUIET: kotlin.Int = 0

const val DTRACEOPT_RAWBYTES: kotlin.Int = 0

const val DTRACEOPT_SPECSIZE: kotlin.Int = 0

const val DTRACEOPT_STACKFRAMES: kotlin.Int = 0

const val DTRACEOPT_STACKINDENT: kotlin.Int = 0

const val DTRACEOPT_STACKSYMBOLS: kotlin.Int = 0

const val DTRACEOPT_STATUSRATE: kotlin.Int = 0

const val DTRACEOPT_STRSIZE: kotlin.Int = 0

const val DTRACEOPT_SWITCHRATE: kotlin.Int = 0

const val DTRACEOPT_TEMPORAL: kotlin.Int = 0

const val DTRACEOPT_UNSET: platform.osx.dtrace_optval_t /* = kotlin.Long */ = 0L

const val DTRACEOPT_USTACKFRAMES: kotlin.Int = 0

const val DTRACE_AGD_PRINTED: kotlin.Int = 0

const val DTRACE_AGGIDNONE: kotlin.Int = 0

const val DTRACE_AGGVARIDNONE: kotlin.Int = 0

const val DTRACE_AGGWALK_ABORT: kotlin.Int = 0

const val DTRACE_AGGWALK_CLEAR: kotlin.Int = 0

const val DTRACE_AGGWALK_DENORMALIZE: kotlin.Int = 0

const val DTRACE_AGGWALK_ERROR: kotlin.Int = 0

const val DTRACE_AGGWALK_NEXT: kotlin.Int = 0

const val DTRACE_AGGWALK_NORMALIZE: kotlin.Int = 0

const val DTRACE_AGGWALK_REMOVE: kotlin.Int = 0

val DTRACE_AGGZOOM_MAX: kotlin.Double
    get() = TODO()

const val DTRACE_ARGNONE: kotlin.Int = 0

const val DTRACE_ARGTYPELEN: kotlin.Int = 0

const val DTRACE_ATTR2STR_MAX: kotlin.Int = 0

const val DTRACE_A_ANONYMOUS: kotlin.Int = 0

const val DTRACE_A_HASNEGATIVES: kotlin.Int = 0

const val DTRACE_A_HASPOSITIVES: kotlin.Int = 0

const val DTRACE_A_KEEPDELTA: kotlin.Int = 0

const val DTRACE_A_MINMAXBIN: kotlin.Int = 0

const val DTRACE_A_PERCPU: kotlin.Int = 0

const val DTRACE_A_TOTAL: kotlin.Int = 0

const val DTRACE_BUFDATA_AGGFORMAT: kotlin.Int = 0

const val DTRACE_BUFDATA_AGGKEY: kotlin.Int = 0

const val DTRACE_BUFDATA_AGGLAST: kotlin.Int = 0

const val DTRACE_BUFDATA_AGGVAL: kotlin.Int = 0

const val DTRACE_CACHEIDNONE: kotlin.Int = 0

const val DTRACE_CLASS_COMMON: kotlin.Int = 0

const val DTRACE_CLASS_CPU: kotlin.Int = 0

const val DTRACE_CLASS_GROUP: kotlin.Int = 0

const val DTRACE_CLASS_ISA: kotlin.Int = 0

const val DTRACE_CLASS_MAX: kotlin.Int = 0

const val DTRACE_CLASS_PLATFORM: kotlin.Int = 0

const val DTRACE_CLASS_UNKNOWN: kotlin.Int = 0

const val DTRACE_CONSUME_ABORT: kotlin.Int = 0

const val DTRACE_CONSUME_ERROR: kotlin.Int = 0

const val DTRACE_CONSUME_NEXT: kotlin.Int = 0

const val DTRACE_CONSUME_THIS: kotlin.Int = 0

const val DTRACE_CPUALL: kotlin.Int = 0

const val DTRACE_C_ARGREF: kotlin.Int = 0

const val DTRACE_C_CPP: kotlin.Int = 0

const val DTRACE_C_CTL: kotlin.Int = 0

const val DTRACE_C_DEFARG: kotlin.Int = 0

const val DTRACE_C_DIFV: kotlin.Int = 0

const val DTRACE_C_EATTR: kotlin.Int = 0

const val DTRACE_C_EMPTY: kotlin.Int = 0

const val DTRACE_C_ETAGS: kotlin.Int = 0

const val DTRACE_C_KNODEF: kotlin.Int = 0

const val DTRACE_C_MASK: kotlin.Int = 0

const val DTRACE_C_NOLIBS: kotlin.Int = 0

const val DTRACE_C_PSPEC: kotlin.Int = 0

const val DTRACE_C_UNODEF: kotlin.Int = 0

const val DTRACE_C_ZDEFS: kotlin.Int = 0

const val DTRACE_DESC2STR_MAX: kotlin.Int = 0

const val DTRACE_D_MASK: kotlin.Int = 0

const val DTRACE_D_PROBES: kotlin.Int = 0

const val DTRACE_D_STRIP: kotlin.Int = 0

const val DTRACE_EPIDNONE: kotlin.Int = 0

const val DTRACE_FULLNAMELEN: kotlin.Int = 0

const val DTRACE_FUNCNAMELEN: kotlin.Int = 0

const val DTRACE_HANDLE_ABORT: kotlin.Int = 0

const val DTRACE_HANDLE_OK: kotlin.Int = 0

const val DTRACE_IDNONE: kotlin.Int = 0

const val DTRACE_INVOP_LEAVE: kotlin.Int = 0

const val DTRACE_INVOP_NOP: kotlin.Int = 0

const val DTRACE_INVOP_POPL_EBP: kotlin.Int = 0

const val DTRACE_INVOP_PUSHL_EBP: kotlin.Int = 0

const val DTRACE_INVOP_RET: kotlin.Int = 0

const val DTRACE_LLQUANTIZE_FACTORMASK: platform.posix.uint64_t /* = kotlin.ULong */ = 0u

const val DTRACE_LLQUANTIZE_FACTORSHIFT: kotlin.Int = 0

const val DTRACE_LLQUANTIZE_HIGHMASK: platform.posix.uint64_t /* = kotlin.ULong */ = 0u

const val DTRACE_LLQUANTIZE_HIGHSHIFT: kotlin.Int = 0

const val DTRACE_LLQUANTIZE_LOWMASK: platform.posix.uint64_t /* = kotlin.ULong */ = 0u

const val DTRACE_LLQUANTIZE_LOWSHIFT: kotlin.Int = 0

const val DTRACE_LLQUANTIZE_NSTEPMASK: kotlin.Int = 0

const val DTRACE_LLQUANTIZE_NSTEPSHIFT: kotlin.Int = 0

const val DTRACE_LQUANTIZE_BASEMASK: kotlin.UInt = 0u

const val DTRACE_LQUANTIZE_BASESHIFT: kotlin.Int = 0

const val DTRACE_LQUANTIZE_LEVELMASK: platform.posix.uint64_t /* = kotlin.ULong */ = 0u

const val DTRACE_LQUANTIZE_LEVELSHIFT: kotlin.Int = 0

const val DTRACE_LQUANTIZE_STEPMASK: platform.posix.uint64_t /* = kotlin.ULong */ = 0u

const val DTRACE_LQUANTIZE_STEPSHIFT: kotlin.Int = 0

const val DTRACE_METAPROVNONE: kotlin.Int = 0

const val DTRACE_MODNAMELEN: kotlin.Int = 0

const val DTRACE_NAMELEN: kotlin.Int = 0

const val DTRACE_OBJ_F_KERNEL: kotlin.Int = 0

const val DTRACE_OBJ_F_PRIMARY: kotlin.Int = 0

const val DTRACE_O_ILP32: kotlin.Int = 0

const val DTRACE_O_LP64: kotlin.Int = 0

const val DTRACE_O_MASK: kotlin.Int = 0

const val DTRACE_O_NODEV: kotlin.Int = 0

const val DTRACE_O_NOSYS: kotlin.Int = 0

const val DTRACE_PRIV_ALL: kotlin.Int = 0

const val DTRACE_PRIV_KERNEL: kotlin.Int = 0

const val DTRACE_PRIV_NONE: kotlin.Int = 0

const val DTRACE_PRIV_OWNER: kotlin.Int = 0

const val DTRACE_PRIV_PROC: kotlin.Int = 0

const val DTRACE_PRIV_USER: kotlin.Int = 0

const val DTRACE_PRIV_ZONEOWNER: kotlin.Int = 0

val DTRACE_PROBESPEC_FUNC: platform.osx.dtrace_probespec /* = kotlin.Int */
    get() = TODO()

val DTRACE_PROBESPEC_MOD: platform.osx.dtrace_probespec /* = kotlin.Int */
    get() = TODO()

val DTRACE_PROBESPEC_NAME: platform.osx.dtrace_probespec /* = kotlin.Int */
    get() = TODO()

val DTRACE_PROBESPEC_NONE: platform.osx.dtrace_probespec /* = kotlin.Int */
    get() = TODO()

val DTRACE_PROBESPEC_PROVIDER: platform.osx.dtrace_probespec /* = kotlin.Int */
    get() = TODO()

const val DTRACE_PROVNAMELEN: kotlin.Int = 0

const val DTRACE_PROVNONE: kotlin.Int = 0

const val DTRACE_QUANTIZE_NBUCKETS: kotlin.Int = 0

const val DTRACE_QUANTIZE_ZEROBUCKET: platform.posix.int64_t /* = kotlin.Long */ = 0L

const val DTRACE_STABILITY_EVOLVING: kotlin.Int = 0

const val DTRACE_STABILITY_EXTERNAL: kotlin.Int = 0

const val DTRACE_STABILITY_INTERNAL: kotlin.Int = 0

const val DTRACE_STABILITY_MAX: kotlin.Int = 0

const val DTRACE_STABILITY_OBSOLETE: kotlin.Int = 0

const val DTRACE_STABILITY_PRIVATE: kotlin.Int = 0

const val DTRACE_STABILITY_STABLE: kotlin.Int = 0

const val DTRACE_STABILITY_STANDARD: kotlin.Int = 0

const val DTRACE_STABILITY_UNSTABLE: kotlin.Int = 0

const val DTRACE_STATUS_EXITED: kotlin.Int = 0

const val DTRACE_STATUS_FILLED: kotlin.Int = 0

const val DTRACE_STATUS_NONE: kotlin.Int = 0

const val DTRACE_STATUS_OKAY: kotlin.Int = 0

const val DTRACE_STATUS_STOPPED: kotlin.Int = 0

const val DTRACE_VERSION: kotlin.Int = 0

const val DTRACE_WAKE_BUF_LIMIT: kotlin.Int = 0

const val DTRACE_WAKE_TIMEOUT: kotlin.Int = 0

val DTRACE_WORKSTATUS_DONE: platform.osx.dtrace_workstatus_t /* = kotlin.Int */
    get() = TODO()

val DTRACE_WORKSTATUS_ERROR: platform.osx.dtrace_workstatus_t /* = kotlin.Int */
    get() = TODO()

val DTRACE_WORKSTATUS_OKAY: platform.osx.dtrace_workstatus_t /* = kotlin.Int */
    get() = TODO()

const val DTT_FL_USER: kotlin.Int = 0

const val EL_ADDFN: kotlin.Int = 0

const val EL_BIND: kotlin.Int = 0

const val EL_CLIENTDATA: kotlin.Int = 0

const val EL_ECHOTC: kotlin.Int = 0

const val EL_EDITMODE: kotlin.Int = 0

const val EL_EDITOR: kotlin.Int = 0

const val EL_GETCFN: kotlin.Int = 0

const val EL_GETFP: kotlin.Int = 0

const val EL_GETTC: kotlin.Int = 0

const val EL_HIST: kotlin.Int = 0

const val EL_PREP_TERM: kotlin.Int = 0

const val EL_PROMPT: kotlin.Int = 0

const val EL_PROMPT_ESC: kotlin.Int = 0

const val EL_REFRESH: kotlin.Int = 0

const val EL_RESIZE: kotlin.Int = 0

const val EL_RPROMPT: kotlin.Int = 0

const val EL_RPROMPT_ESC: kotlin.Int = 0

const val EL_SETFP: kotlin.Int = 0

const val EL_SETTC: kotlin.Int = 0

const val EL_SETTY: kotlin.Int = 0

const val EL_SIGNAL: kotlin.Int = 0

const val EL_TELLTC: kotlin.Int = 0

const val EL_TERMINAL: kotlin.Int = 0

const val EL_UNBUFFERED: kotlin.Int = 0

const val ENCTYPE_AES128_CTS_HMAC_SHA1_96: kotlin.Int = 0

const val ENCTYPE_AES256_CTS_HMAC_SHA1_96: kotlin.Int = 0

const val ENCTYPE_ARCFOUR_HMAC: kotlin.Int = 0

const val ENCTYPE_ARCFOUR_HMAC_EXP: kotlin.Int = 0

const val ENCTYPE_DES3_CBC_ENV: kotlin.Int = 0

const val ENCTYPE_DES3_CBC_RAW: kotlin.Int = 0

const val ENCTYPE_DES3_CBC_SHA: kotlin.Int = 0

const val ENCTYPE_DES3_CBC_SHA1: kotlin.Int = 0

const val ENCTYPE_DES_CBC_CRC: kotlin.Int = 0

const val ENCTYPE_DES_CBC_MD4: kotlin.Int = 0

const val ENCTYPE_DES_CBC_MD5: kotlin.Int = 0

const val ENCTYPE_DES_CBC_RAW: kotlin.Int = 0

const val ENCTYPE_DES_HMAC_SHA1: kotlin.Int = 0

const val ENCTYPE_DSA_SHA1_CMS: kotlin.Int = 0

const val ENCTYPE_MD5_RSA_CMS: kotlin.Int = 0

const val ENCTYPE_NULL: kotlin.Int = 0

const val ENCTYPE_RC2_CBC_ENV: kotlin.Int = 0

const val ENCTYPE_RSA_ENV: kotlin.Int = 0

const val ENCTYPE_RSA_ES_OAEP_ENV: kotlin.Int = 0

const val ENCTYPE_SHA1_RSA_CMS: kotlin.Int = 0

const val ENCTYPE_UNKNOWN: kotlin.Int = 0

const val EPOCH_WDAY: kotlin.Int = 0

const val EPOCH_YEAR: kotlin.Int = 0

const val ERR: kotlin.Int = 0

const val ERROR_TABLE_BASE_asn1: kotlin.Long = 0L

const val ERROR_TABLE_BASE_k524: kotlin.Long = 0L

const val ERROR_TABLE_BASE_kdb5: kotlin.Long = 0L

const val ERROR_TABLE_BASE_krb5: kotlin.Long = 0L

const val ERROR_TABLE_BASE_kv5m: kotlin.Long = 0L

const val ERROR_TABLE_BASE_prof: kotlin.Long = 0L

var ESCDELAY: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val EVFILT_AIO: kotlin.Int = 0

const val EVFILT_EXCEPT: kotlin.Int = 0

const val EVFILT_FS: kotlin.Int = 0

const val EVFILT_MACHPORT: kotlin.Int = 0

const val EVFILT_PROC: kotlin.Int = 0

const val EVFILT_READ: kotlin.Int = 0

const val EVFILT_SIGNAL: kotlin.Int = 0

const val EVFILT_SYSCOUNT: kotlin.Int = 0

const val EVFILT_THREADMARKER: kotlin.Int = 0

const val EVFILT_TIMER: kotlin.Int = 0

const val EVFILT_USER: kotlin.Int = 0

const val EVFILT_VM: kotlin.Int = 0

const val EVFILT_VNODE: kotlin.Int = 0

const val EVFILT_WRITE: kotlin.Int = 0

const val EV_ADD: kotlin.Int = 0

const val EV_CLEAR: kotlin.Int = 0

const val EV_DELETE: kotlin.Int = 0

const val EV_DISABLE: kotlin.Int = 0

const val EV_DISPATCH: kotlin.Int = 0

const val EV_DISPATCH2: kotlin.Int = 0

const val EV_ENABLE: kotlin.Int = 0

const val EV_EOF: kotlin.Int = 0

const val EV_ERROR: kotlin.Int = 0

const val EV_FLAG0: kotlin.Int = 0

const val EV_FLAG1: kotlin.Int = 0

const val EV_ONESHOT: kotlin.Int = 0

const val EV_OOBAND: kotlin.Int = 0

const val EV_POLL: kotlin.Int = 0

const val EV_RECEIPT: kotlin.Int = 0

const val EV_SYSFLAGS: kotlin.Int = 0

const val EV_UDATA_SPECIFIC: kotlin.Int = 0

const val EV_VANISHED: kotlin.Int = 0

const val EXIT_REASON_CODESIGNING_INFO: kotlin.Int = 0

const val EXIT_REASON_CODESIG_PATH_MAX: kotlin.Int = 0

const val EXIT_REASON_DISPATCH_QUEUE_NO: kotlin.Int = 0

const val EXIT_REASON_PAYLOAD_MAX_LEN: kotlin.Int = 0

const val EXIT_REASON_SNAPSHOT: kotlin.Int = 0

const val EXIT_REASON_USER_DESC: kotlin.Int = 0

const val EXIT_REASON_USER_DESC_MAX_LEN: kotlin.Int = 0

const val EXIT_REASON_USER_PAYLOAD: kotlin.Int = 0

const val EXIT_REASON_WORKLOOP_ID: kotlin.Int = 0

val EXTJNL_CONTENT_TYPE_UUID: kotlin.String
    get() = TODO()

const val E_BAD_ARGUMENT: kotlin.Int = 0

const val E_BAD_STATE: kotlin.Int = 0

const val E_CONNECTED: kotlin.Int = 0

const val E_CURRENT: kotlin.Int = 0

const val E_INVALID_FIELD: kotlin.Int = 0

const val E_NOT_CONNECTED: kotlin.Int = 0

const val E_NOT_POSTED: kotlin.Int = 0

const val E_NOT_SELECTABLE: kotlin.Int = 0

const val E_NO_MATCH: kotlin.Int = 0

const val E_NO_ROOM: kotlin.Int = 0

const val E_OK: kotlin.Int = 0

const val E_POSTED: kotlin.Int = 0

const val E_REQUEST_DENIED: kotlin.Int = 0

const val E_SYSTEM_ERROR: kotlin.Int = 0

const val E_UNKNOWN_COMMAND: kotlin.Int = 0

const val Expat_External_INCLUDED: kotlin.Int = 0

const val Expat_INCLUDED: kotlin.Int = 0

const val FALSE: kotlin.Int = 0

val FIRST_LINK_XATTR_NAME: kotlin.String
    get() = TODO()

const val FIRST_LINK_XATTR_REC_SIZE: kotlin.ULong = 0u

const val FSOPT_ATTR_CMN_EXTENDED: kotlin.Int = 0

const val FSOPT_NOFOLLOW: kotlin.Int = 0

const val FSOPT_NOINMEMUPDATE: kotlin.Int = 0

const val FSOPT_PACK_INVAL_ATTRS: kotlin.Int = 0

const val FSOPT_REPORT_FULLSIZE: kotlin.Int = 0

const val FST_EOF: kotlin.Int = 0

const val GSS_C_ACCEPT: kotlin.Int = 0

const val GSS_C_AF_APPLETALK: kotlin.Int = 0

const val GSS_C_AF_BSC: kotlin.Int = 0

const val GSS_C_AF_CCITT: kotlin.Int = 0

const val GSS_C_AF_CHAOS: kotlin.Int = 0

const val GSS_C_AF_DATAKIT: kotlin.Int = 0

const val GSS_C_AF_DECnet: kotlin.Int = 0

const val GSS_C_AF_DLI: kotlin.Int = 0

const val GSS_C_AF_DSS: kotlin.Int = 0

const val GSS_C_AF_ECMA: kotlin.Int = 0

const val GSS_C_AF_HYLINK: kotlin.Int = 0

const val GSS_C_AF_IMPLINK: kotlin.Int = 0

const val GSS_C_AF_INET: kotlin.Int = 0

const val GSS_C_AF_LAT: kotlin.Int = 0

const val GSS_C_AF_LOCAL: kotlin.Int = 0

const val GSS_C_AF_NBS: kotlin.Int = 0

const val GSS_C_AF_NS: kotlin.Int = 0

const val GSS_C_AF_NULLADDR: kotlin.Int = 0

const val GSS_C_AF_OSI: kotlin.Int = 0

const val GSS_C_AF_PUP: kotlin.Int = 0

const val GSS_C_AF_SNA: kotlin.Int = 0

const val GSS_C_AF_UNSPEC: kotlin.Int = 0

const val GSS_C_AF_X25: kotlin.Int = 0

const val GSS_C_ANON_FLAG: kotlin.Int = 0

const val GSS_C_BOTH: kotlin.Int = 0

const val GSS_C_CALLING_ERROR_MASK: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_C_CALLING_ERROR_OFFSET: kotlin.Int = 0

const val GSS_C_CONF_FLAG: kotlin.Int = 0

const val GSS_C_CRED_NO_UI: kotlin.Int = 0

const val GSS_C_DELEG_FLAG: kotlin.Int = 0

const val GSS_C_DELEG_POLICY_FLAG: kotlin.Int = 0

const val GSS_C_GSS_CODE: kotlin.Int = 0

const val GSS_C_INDEFINITE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_C_INITIATE: kotlin.Int = 0

const val GSS_C_INTEG_FLAG: kotlin.Int = 0

const val GSS_C_MECH_CODE: kotlin.Int = 0

const val GSS_C_MUTUAL_FLAG: kotlin.Int = 0

const val GSS_C_NO_UI_FLAG: kotlin.UInt = 0u

var GSS_C_NT_ANONYMOUS: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_EXPORT_NAME: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_HOSTBASED_SERVICE: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_HOSTBASED_SERVICE_X: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_MACHINE_UID_NAME: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_STRING_UID_NAME: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

var GSS_C_NT_USER_NAME: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */
    get() = TODO()
    set(value: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */) = TODO()

const val GSS_C_OPTION_MASK: kotlin.Int = 0

const val GSS_C_PROT_READY_FLAG: kotlin.Int = 0

const val GSS_C_QOP_DEFAULT: kotlin.Int = 0

const val GSS_C_REPLAY_FLAG: kotlin.Int = 0

const val GSS_C_ROUTINE_ERROR_MASK: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_C_ROUTINE_ERROR_OFFSET: kotlin.Int = 0

const val GSS_C_SEQUENCE_FLAG: kotlin.Int = 0

const val GSS_C_SUPPLEMENTARY_MASK: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_C_SUPPLEMENTARY_OFFSET: kotlin.Int = 0

const val GSS_C_TRANS_FLAG: kotlin.Int = 0

const val GSS_S_BAD_BINDINGS: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_MECH: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_NAME: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_NAMETYPE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_QOP: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_SIG: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_BAD_STATUS: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_CALL_BAD_STRUCTURE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_CALL_INACCESSIBLE_READ: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_CALL_INACCESSIBLE_WRITE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_COMPLETE: kotlin.Int = 0

const val GSS_S_CONTEXT_EXPIRED: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_CONTINUE_NEEDED: kotlin.Int = 0

const val GSS_S_CREDENTIALS_EXPIRED: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_CRED_UNAVAIL: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_DEFECTIVE_CREDENTIAL: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_DEFECTIVE_TOKEN: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_DUPLICATE_ELEMENT: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_DUPLICATE_TOKEN: kotlin.Int = 0

const val GSS_S_FAILURE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_GAP_TOKEN: kotlin.Int = 0

const val GSS_S_NAME_NOT_MN: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_NO_CONTEXT: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_NO_CRED: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_OLD_TOKEN: kotlin.Int = 0

const val GSS_S_UNAUTHORIZED: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_UNAVAILABLE: platform.osx.OM_uint32 /* = kotlin.UInt */ = 0u

const val GSS_S_UNSEQ_TOKEN: kotlin.Int = 0

const val HASH_SZ: kotlin.Int = 0

const val HFSFSMNT_EXTENDED_ARGS: kotlin.Int = 0

const val HFSFSMNT_NOXONFILES: kotlin.Int = 0

const val HFSFSMNT_WRAPPER: kotlin.Int = 0

val HFSPLUSMETADATAFOLDER: kotlin.String
    get() = TODO()

val HFSPLUS_DIR_METADATA_FOLDER: kotlin.String
    get() = TODO()

val HFS_DELETE_PREFIX: kotlin.String
    get() = TODO()

val HFS_DIRINODE_PREFIX: kotlin.String
    get() = TODO()

const val HFS_DISABLE_JOURNALING: kotlin.Int = 0

const val HFS_ENABLE_JOURNALING: kotlin.Int = 0

const val HFS_ENABLE_RESIZE_DEBUG: kotlin.Int = 0

const val HFS_ENCODINGBIAS: kotlin.Int = 0

const val HFS_EXTEND_FS: kotlin.Int = 0

val HFS_INODE_PREFIX: kotlin.String
    get() = TODO()

const val HFS_REPLAY_JOURNAL: kotlin.Int = 0

val HFS_UUID_NAMESPACE_ID: kotlin.String
    get() = TODO()

const val HOURSPERDAY: kotlin.Int = 0

const val H_ADD: kotlin.Int = 0

const val H_APPEND: kotlin.Int = 0

const val H_CLEAR: kotlin.Int = 0

const val H_CURR: kotlin.Int = 0

const val H_DEL: kotlin.Int = 0

const val H_DELDATA: kotlin.Int = 0

const val H_END: kotlin.Int = 0

const val H_ENTER: kotlin.Int = 0

const val H_FIRST: kotlin.Int = 0

const val H_FUNC: kotlin.Int = 0

const val H_GETSIZE: kotlin.Int = 0

const val H_GETUNIQUE: kotlin.Int = 0

const val H_LAST: kotlin.Int = 0

const val H_LOAD: kotlin.Int = 0

const val H_NEXT: kotlin.Int = 0

const val H_NEXT_EVDATA: kotlin.Int = 0

const val H_NEXT_EVENT: kotlin.Int = 0

const val H_NEXT_STR: kotlin.Int = 0

const val H_PREV: kotlin.Int = 0

const val H_PREV_EVENT: kotlin.Int = 0

const val H_PREV_STR: kotlin.Int = 0

const val H_REPLACE: kotlin.Int = 0

const val H_SAVE: kotlin.Int = 0

const val H_SET: kotlin.Int = 0

const val H_SETSIZE: kotlin.Int = 0

const val H_SETUNIQUE: kotlin.Int = 0

const val INI_IPV4: kotlin.Int = 0

const val INI_IPV6: kotlin.Int = 0

const val JIB_RESERVED_SIZE: kotlin.ULong = 0u

const val JUSTIFY_CENTER: kotlin.Int = 0

const val JUSTIFY_LEFT: kotlin.Int = 0

const val JUSTIFY_RIGHT: kotlin.Int = 0

const val KCDATA_ALIGNMENT_SIZE: kotlin.Int = 0

const val KCDATA_BUFFER_BEGIN_CRASHINFO: kotlin.UInt = 0u

const val KCDATA_BUFFER_BEGIN_DELTA_STACKSHOT: kotlin.UInt = 0u

const val KCDATA_BUFFER_BEGIN_OS_REASON: kotlin.UInt = 0u

const val KCDATA_BUFFER_BEGIN_STACKSHOT: kotlin.UInt = 0u

const val KCDATA_BUFFER_BEGIN_XNUPOST_CONFIG: kotlin.UInt = 0u

const val KCDATA_DESC_MAXLEN: kotlin.Int = 0

const val KCDATA_FLAGS_STRUCT_HAS_PADDING: kotlin.Int = 0

const val KCDATA_FLAGS_STRUCT_PADDING_MASK: kotlin.Int = 0

const val KCDATA_ITEM_HEADER_SIZE: kotlin.ULong = 0u

const val KCDATA_TYPE_ARRAY: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD0: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD1: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD2: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD3: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD4: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD5: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD6: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD7: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD8: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PAD9: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADa: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADb: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADc: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADd: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADe: kotlin.UInt = 0u

const val KCDATA_TYPE_ARRAY_PADf: kotlin.UInt = 0u

const val KCDATA_TYPE_BINDATA_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_BUFFER_END: kotlin.UInt = 0u

const val KCDATA_TYPE_CONTAINER_BEGIN: kotlin.UInt = 0u

const val KCDATA_TYPE_CONTAINER_END: kotlin.UInt = 0u

const val KCDATA_TYPE_INT32_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_INT64_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_INVALID: kotlin.UInt = 0u

const val KCDATA_TYPE_LIBRARY_LOADINFO: kotlin.UInt = 0u

const val KCDATA_TYPE_LIBRARY_LOADINFO64: kotlin.UInt = 0u

const val KCDATA_TYPE_MACH_ABSOLUTE_TIME: kotlin.UInt = 0u

const val KCDATA_TYPE_NESTED_KCDATA: kotlin.UInt = 0u

const val KCDATA_TYPE_PID: kotlin.UInt = 0u

const val KCDATA_TYPE_PROCNAME: kotlin.UInt = 0u

const val KCDATA_TYPE_STRING_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_TIMEBASE: kotlin.UInt = 0u

const val KCDATA_TYPE_TIMEVAL: kotlin.UInt = 0u

const val KCDATA_TYPE_TYPEDEFINTION: kotlin.UInt = 0u

const val KCDATA_TYPE_UINT32_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_UINT64_DESC: kotlin.UInt = 0u

const val KCDATA_TYPE_USECS_SINCE_EPOCH: kotlin.UInt = 0u

const val KCS_SUBTYPE_FLAGS_ARRAY: kotlin.Int = 0

const val KCS_SUBTYPE_FLAGS_MERGE: kotlin.Int = 0

const val KCS_SUBTYPE_FLAGS_NONE: kotlin.Int = 0

const val KCS_SUBTYPE_FLAGS_STRUCT: kotlin.Int = 0

val KC_ST_CHAR: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_INT16: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_INT32: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_INT64: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_INT8: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_UINT16: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_UINT32: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_UINT64: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

val KC_ST_UINT8: platform.osx.KCDATA_SUBTYPE_TYPES /* = kotlin.UInt */
    get() = TODO()

const val KDC_OPT_ALLOW_POSTDATE: kotlin.Int = 0

const val KDC_OPT_CANONICALIZE: kotlin.Int = 0

const val KDC_OPT_DISABLE_TRANSITED_CHECK: kotlin.Int = 0

const val KDC_OPT_ENC_TKT_IN_SKEY: kotlin.Int = 0

const val KDC_OPT_FORWARDABLE: kotlin.Int = 0

const val KDC_OPT_FORWARDED: kotlin.Int = 0

const val KDC_OPT_POSTDATED: kotlin.Int = 0

const val KDC_OPT_PROXIABLE: kotlin.Int = 0

const val KDC_OPT_PROXY: kotlin.Int = 0

const val KDC_OPT_RENEW: kotlin.Int = 0

const val KDC_OPT_RENEWABLE: kotlin.Int = 0

const val KDC_OPT_RENEWABLE_OK: kotlin.Int = 0

const val KDC_OPT_REQUEST_ANONYMOUS: kotlin.Int = 0

const val KDC_OPT_VALIDATE: kotlin.Int = 0

const val KDC_TKT_COMMON_MASK: kotlin.Int = 0

const val KEVENT_FLAG_ERROR_EVENTS: kotlin.Int = 0

const val KEVENT_FLAG_IMMEDIATE: kotlin.Int = 0

const val KEVENT_FLAG_NONE: kotlin.Int = 0

const val KEV_CTL_DEREGISTERED: kotlin.Int = 0

const val KEV_CTL_REGISTERED: kotlin.Int = 0

const val KEV_CTL_SUBCLASS: kotlin.Int = 0

const val KEY_A1: kotlin.Int = 0

const val KEY_A3: kotlin.Int = 0

const val KEY_B2: kotlin.Int = 0

const val KEY_BACKSPACE: kotlin.Int = 0

const val KEY_BEG: kotlin.Int = 0

const val KEY_BREAK: kotlin.Int = 0

const val KEY_BTAB: kotlin.Int = 0

const val KEY_C1: kotlin.Int = 0

const val KEY_C3: kotlin.Int = 0

const val KEY_CANCEL: kotlin.Int = 0

const val KEY_CATAB: kotlin.Int = 0

const val KEY_CLEAR: kotlin.Int = 0

const val KEY_CLOSE: kotlin.Int = 0

const val KEY_CODE_YES: kotlin.Int = 0

const val KEY_COMMAND: kotlin.Int = 0

const val KEY_COPY: kotlin.Int = 0

const val KEY_CREATE: kotlin.Int = 0

const val KEY_CTAB: kotlin.Int = 0

const val KEY_DC: kotlin.Int = 0

const val KEY_DL: kotlin.Int = 0

const val KEY_DOWN: kotlin.Int = 0

const val KEY_EIC: kotlin.Int = 0

const val KEY_END: kotlin.Int = 0

const val KEY_ENTER: kotlin.Int = 0

const val KEY_EOL: kotlin.Int = 0

const val KEY_EOS: kotlin.Int = 0

const val KEY_EVENT: kotlin.Int = 0

const val KEY_EXIT: kotlin.Int = 0

const val KEY_F0: kotlin.Int = 0

const val KEY_FIND: kotlin.Int = 0

const val KEY_HELP: kotlin.Int = 0

const val KEY_HOME: kotlin.Int = 0

const val KEY_IC: kotlin.Int = 0

const val KEY_IL: kotlin.Int = 0

const val KEY_LEFT: kotlin.Int = 0

const val KEY_LL: kotlin.Int = 0

const val KEY_MARK: kotlin.Int = 0

const val KEY_MAX: kotlin.Int = 0

const val KEY_MESSAGE: kotlin.Int = 0

const val KEY_MIN: kotlin.Int = 0

const val KEY_MOUSE: kotlin.Int = 0

const val KEY_MOVE: kotlin.Int = 0

const val KEY_NEXT: kotlin.Int = 0

const val KEY_NPAGE: kotlin.Int = 0

const val KEY_OPEN: kotlin.Int = 0

const val KEY_OPTIONS: kotlin.Int = 0

const val KEY_PPAGE: kotlin.Int = 0

const val KEY_PREVIOUS: kotlin.Int = 0

const val KEY_PRINT: kotlin.Int = 0

const val KEY_REDO: kotlin.Int = 0

const val KEY_REFERENCE: kotlin.Int = 0

const val KEY_REFRESH: kotlin.Int = 0

const val KEY_REPLACE: kotlin.Int = 0

const val KEY_RESET: kotlin.Int = 0

const val KEY_RESIZE: kotlin.Int = 0

const val KEY_RESTART: kotlin.Int = 0

const val KEY_RESUME: kotlin.Int = 0

const val KEY_RIGHT: kotlin.Int = 0

const val KEY_SAVE: kotlin.Int = 0

const val KEY_SBEG: kotlin.Int = 0

const val KEY_SCANCEL: kotlin.Int = 0

const val KEY_SCOMMAND: kotlin.Int = 0

const val KEY_SCOPY: kotlin.Int = 0

const val KEY_SCREATE: kotlin.Int = 0

const val KEY_SDC: kotlin.Int = 0

const val KEY_SDL: kotlin.Int = 0

const val KEY_SELECT: kotlin.Int = 0

const val KEY_SEND: kotlin.Int = 0

const val KEY_SEOL: kotlin.Int = 0

const val KEY_SEXIT: kotlin.Int = 0

const val KEY_SF: kotlin.Int = 0

const val KEY_SFIND: kotlin.Int = 0

const val KEY_SHELP: kotlin.Int = 0

const val KEY_SHOME: kotlin.Int = 0

const val KEY_SIC: kotlin.Int = 0

const val KEY_SLEFT: kotlin.Int = 0

const val KEY_SMESSAGE: kotlin.Int = 0

const val KEY_SMOVE: kotlin.Int = 0

const val KEY_SNEXT: kotlin.Int = 0

const val KEY_SOPTIONS: kotlin.Int = 0

const val KEY_SPREVIOUS: kotlin.Int = 0

const val KEY_SPRINT: kotlin.Int = 0

const val KEY_SR: kotlin.Int = 0

const val KEY_SREDO: kotlin.Int = 0

const val KEY_SREPLACE: kotlin.Int = 0

const val KEY_SRESET: kotlin.Int = 0

const val KEY_SRIGHT: kotlin.Int = 0

const val KEY_SRSUME: kotlin.Int = 0

const val KEY_SSAVE: kotlin.Int = 0

const val KEY_SSUSPEND: kotlin.Int = 0

const val KEY_STAB: kotlin.Int = 0

const val KEY_SUNDO: kotlin.Int = 0

const val KEY_SUSPEND: kotlin.Int = 0

const val KEY_UNDO: kotlin.Int = 0

const val KEY_UP: kotlin.Int = 0

const val KRB524_BADADDR: kotlin.Long = 0L

const val KRB524_BADKEY: kotlin.Long = 0L

const val KRB524_BADPRINC: kotlin.Long = 0L

const val KRB524_BADREALM: kotlin.Long = 0L

const val KRB524_DECEMPTY: kotlin.Long = 0L

const val KRB524_ENCFULL: kotlin.Long = 0L

const val KRB524_KRB4_DISABLED: kotlin.Long = 0L

const val KRB524_NOTRESP: kotlin.Long = 0L

const val KRB524_V4ERR: kotlin.Long = 0L

const val KRB5DES_BAD_KEYPAR: kotlin.Long = 0L

const val KRB5DES_WEAK_KEY: kotlin.Long = 0L

const val KRB5KDC_ERR_BADOPTION: kotlin.Long = 0L

const val KRB5KDC_ERR_BAD_PVNO: kotlin.Long = 0L

const val KRB5KDC_ERR_CANNOT_POSTDATE: kotlin.Long = 0L

const val KRB5KDC_ERR_CANT_VERIFY_CERTIFICATE: kotlin.Long = 0L

const val KRB5KDC_ERR_CERTIFICATE_MISMATCH: kotlin.Long = 0L

const val KRB5KDC_ERR_CLIENT_NAME_MISMATCH: kotlin.Long = 0L

const val KRB5KDC_ERR_CLIENT_NOTYET: kotlin.Long = 0L

const val KRB5KDC_ERR_CLIENT_NOT_TRUSTED: kotlin.Long = 0L

const val KRB5KDC_ERR_CLIENT_REVOKED: kotlin.Long = 0L

const val KRB5KDC_ERR_C_OLD_MAST_KVNO: kotlin.Long = 0L

const val KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN: kotlin.Long = 0L

const val KRB5KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED: kotlin.Long = 0L

const val KRB5KDC_ERR_DIGEST_IN_CERT_NOT_ACCEPTED: kotlin.Long = 0L

const val KRB5KDC_ERR_DIGEST_IN_SIGNED_DATA_NOT_ACCEPTED: kotlin.Long = 0L

const val KRB5KDC_ERR_ETYPE_NOSUPP: kotlin.Long = 0L

const val KRB5KDC_ERR_INCONSISTENT_KEY_PURPOSE: kotlin.Long = 0L

const val KRB5KDC_ERR_INVALID_CERTIFICATE: kotlin.Long = 0L

const val KRB5KDC_ERR_INVALID_SIG: kotlin.Long = 0L

const val KRB5KDC_ERR_KDC_NAME_MISMATCH: kotlin.Long = 0L

const val KRB5KDC_ERR_KDC_NOT_TRUSTED: kotlin.Long = 0L

const val KRB5KDC_ERR_KEY_EXP: kotlin.Long = 0L

const val KRB5KDC_ERR_MUST_USE_USER2USER: kotlin.Long = 0L

const val KRB5KDC_ERR_NAME_EXP: kotlin.Long = 0L

const val KRB5KDC_ERR_NEVER_VALID: kotlin.Long = 0L

const val KRB5KDC_ERR_NONE: kotlin.Long = 0L

const val KRB5KDC_ERR_NULL_KEY: kotlin.Long = 0L

const val KRB5KDC_ERR_PADATA_TYPE_NOSUPP: kotlin.Long = 0L

const val KRB5KDC_ERR_PATH_NOT_ACCEPTED: kotlin.Long = 0L

const val KRB5KDC_ERR_PA_CHECKSUM_MUST_BE_INCLUDED: kotlin.Long = 0L

const val KRB5KDC_ERR_POLICY: kotlin.Long = 0L

const val KRB5KDC_ERR_PREAUTH_FAILED: kotlin.Long = 0L

const val KRB5KDC_ERR_PREAUTH_REQUIRED: kotlin.Long = 0L

const val KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE: kotlin.Long = 0L

const val KRB5KDC_ERR_PUBLIC_KEY_ENCRYPTION_NOT_SUPPORTED: kotlin.Long = 0L

const val KRB5KDC_ERR_REVOCATION_STATUS_UNAVAILABLE: kotlin.Long = 0L

const val KRB5KDC_ERR_REVOCATION_STATUS_UNKNOWN: kotlin.Long = 0L

const val KRB5KDC_ERR_REVOKED_CERTIFICATE: kotlin.Long = 0L

const val KRB5KDC_ERR_SERVER_NOMATCH: kotlin.Long = 0L

const val KRB5KDC_ERR_SERVICE_EXP: kotlin.Long = 0L

const val KRB5KDC_ERR_SERVICE_NOTYET: kotlin.Long = 0L

const val KRB5KDC_ERR_SERVICE_REVOKED: kotlin.Long = 0L

const val KRB5KDC_ERR_SUMTYPE_NOSUPP: kotlin.Long = 0L

const val KRB5KDC_ERR_SVC_UNAVAILABLE: kotlin.Long = 0L

const val KRB5KDC_ERR_S_OLD_MAST_KVNO: kotlin.Long = 0L

const val KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN: kotlin.Long = 0L

const val KRB5KDC_ERR_TGT_REVOKED: kotlin.Long = 0L

const val KRB5KDC_ERR_TRTYPE_NOSUPP: kotlin.Long = 0L

const val KRB5KDC_ERR_WRONG_REALM: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADADDR: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADDIRECTION: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADKEYVER: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADMATCH: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADORDER: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADSEQ: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BADVERSION: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_BAD_INTEGRITY: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_ILL_CR_TKT: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_INAPP_CKSUM: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_METHOD: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_MODIFIED: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_MSG_TYPE: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_MUT_FAIL: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_NOKEY: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_NOT_US: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_NO_TGT: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_REPEAT: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_SKEW: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_TKT_EXPIRED: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_TKT_INVALID: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_TKT_NYV: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_USER_TO_USER_REQUIRED: kotlin.Long = 0L

const val KRB5KRB_AP_ERR_V4_REPLY: kotlin.Long = 0L

const val KRB5KRB_AP_PATH_NOT_ACCEPTED: kotlin.Long = 0L

const val KRB5KRB_AP_WRONG_PRINC: kotlin.Long = 0L

const val KRB5KRB_ERR_FIELD_TOOLONG: kotlin.Long = 0L

const val KRB5KRB_ERR_GENERIC: kotlin.Long = 0L

const val KRB5KRB_ERR_RESPONSE_TOO_BIG: kotlin.Long = 0L

const val KRB5PLACEHOLD_100: kotlin.Long = 0L

const val KRB5PLACEHOLD_101: kotlin.Long = 0L

const val KRB5PLACEHOLD_102: kotlin.Long = 0L

const val KRB5PLACEHOLD_103: kotlin.Long = 0L

const val KRB5PLACEHOLD_104: kotlin.Long = 0L

const val KRB5PLACEHOLD_105: kotlin.Long = 0L

const val KRB5PLACEHOLD_106: kotlin.Long = 0L

const val KRB5PLACEHOLD_107: kotlin.Long = 0L

const val KRB5PLACEHOLD_108: kotlin.Long = 0L

const val KRB5PLACEHOLD_109: kotlin.Long = 0L

const val KRB5PLACEHOLD_110: kotlin.Long = 0L

const val KRB5PLACEHOLD_111: kotlin.Long = 0L

const val KRB5PLACEHOLD_112: kotlin.Long = 0L

const val KRB5PLACEHOLD_113: kotlin.Long = 0L

const val KRB5PLACEHOLD_114: kotlin.Long = 0L

const val KRB5PLACEHOLD_115: kotlin.Long = 0L

const val KRB5PLACEHOLD_116: kotlin.Long = 0L

const val KRB5PLACEHOLD_117: kotlin.Long = 0L

const val KRB5PLACEHOLD_118: kotlin.Long = 0L

const val KRB5PLACEHOLD_119: kotlin.Long = 0L

const val KRB5PLACEHOLD_120: kotlin.Long = 0L

const val KRB5PLACEHOLD_121: kotlin.Long = 0L

const val KRB5PLACEHOLD_122: kotlin.Long = 0L

const val KRB5PLACEHOLD_123: kotlin.Long = 0L

const val KRB5PLACEHOLD_124: kotlin.Long = 0L

const val KRB5PLACEHOLD_125: kotlin.Long = 0L

const val KRB5PLACEHOLD_126: kotlin.Long = 0L

const val KRB5PLACEHOLD_127: kotlin.Long = 0L

const val KRB5PLACEHOLD_30: kotlin.Long = 0L

const val KRB5PLACEHOLD_53: kotlin.Long = 0L

const val KRB5PLACEHOLD_54: kotlin.Long = 0L

const val KRB5PLACEHOLD_55: kotlin.Long = 0L

const val KRB5PLACEHOLD_56: kotlin.Long = 0L

const val KRB5PLACEHOLD_57: kotlin.Long = 0L

const val KRB5PLACEHOLD_58: kotlin.Long = 0L

const val KRB5PLACEHOLD_59: kotlin.Long = 0L

const val KRB5PLACEHOLD_82: kotlin.Long = 0L

const val KRB5PLACEHOLD_83: kotlin.Long = 0L

const val KRB5PLACEHOLD_84: kotlin.Long = 0L

const val KRB5PLACEHOLD_85: kotlin.Long = 0L

const val KRB5PLACEHOLD_86: kotlin.Long = 0L

const val KRB5PLACEHOLD_87: kotlin.Long = 0L

const val KRB5PLACEHOLD_88: kotlin.Long = 0L

const val KRB5PLACEHOLD_89: kotlin.Long = 0L

const val KRB5PLACEHOLD_90: kotlin.Long = 0L

const val KRB5PLACEHOLD_91: kotlin.Long = 0L

const val KRB5PLACEHOLD_92: kotlin.Long = 0L

const val KRB5PLACEHOLD_93: kotlin.Long = 0L

const val KRB5PLACEHOLD_94: kotlin.Long = 0L

const val KRB5PLACEHOLD_95: kotlin.Long = 0L

const val KRB5PLACEHOLD_96: kotlin.Long = 0L

const val KRB5PLACEHOLD_97: kotlin.Long = 0L

const val KRB5PLACEHOLD_98: kotlin.Long = 0L

const val KRB5PLACEHOLD_99: kotlin.Long = 0L

const val KRB5_ALTAUTH_ATT_CHALLENGE_RESPONSE: kotlin.Int = 0

const val KRB5_APPL_EXPIRED: kotlin.Long = 0L

const val KRB5_AP_REP: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_AP_REQ: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_AS_REP: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_AS_REQ: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_AUTHDATA_AND_OR: kotlin.Int = 0

const val KRB5_AUTHDATA_IF_RELEVANT: kotlin.Int = 0

const val KRB5_AUTHDATA_INITIAL_VERIFIED_CAS: kotlin.Int = 0

const val KRB5_AUTHDATA_KDC_ISSUED: kotlin.Int = 0

const val KRB5_AUTHDATA_MANDATORY_FOR_KDC: kotlin.Int = 0

const val KRB5_AUTHDATA_OSF_DCE: kotlin.Int = 0

const val KRB5_AUTHDATA_SESAME: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_DO_SEQUENCE: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_DO_TIME: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_GENERATE_LOCAL_ADDR: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_GENERATE_REMOTE_ADDR: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_PERMIT_ALL: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_RET_SEQUENCE: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_RET_TIME: kotlin.Int = 0

const val KRB5_AUTH_CONTEXT_USE_SUBKEY: kotlin.Int = 0

const val KRB5_BADMSGTYPE: kotlin.Long = 0L

const val KRB5_BAD_ENCTYPE: kotlin.Long = 0L

const val KRB5_BAD_KEYSIZE: kotlin.Long = 0L

const val KRB5_BAD_MSIZE: kotlin.Long = 0L

const val KRB5_CCACHE_BADVNO: kotlin.Long = 0L

const val KRB5_CC_BADNAME: kotlin.Long = 0L

const val KRB5_CC_END: kotlin.Long = 0L

const val KRB5_CC_FORMAT: kotlin.Long = 0L

const val KRB5_CC_IO: kotlin.Long = 0L

const val KRB5_CC_NOMEM: kotlin.Long = 0L

const val KRB5_CC_NOSUPP: kotlin.Long = 0L

const val KRB5_CC_NOTFOUND: kotlin.Long = 0L

const val KRB5_CC_NOT_KTYPE: kotlin.Long = 0L

const val KRB5_CC_READONLY: kotlin.Long = 0L

const val KRB5_CC_TYPE_EXISTS: kotlin.Long = 0L

const val KRB5_CC_UNKNOWN_TYPE: kotlin.Long = 0L

const val KRB5_CC_WRITE: kotlin.Long = 0L

const val KRB5_CHPW_FAIL: kotlin.Long = 0L

const val KRB5_CHPW_PWDNULL: kotlin.Long = 0L

const val KRB5_CONFIG_BADFORMAT: kotlin.Long = 0L

const val KRB5_CONFIG_CANTOPEN: kotlin.Long = 0L

const val KRB5_CONFIG_ETYPE_NOSUPP: kotlin.Long = 0L

const val KRB5_CONFIG_NODEFREALM: kotlin.Long = 0L

const val KRB5_CONFIG_NOTENUFSPACE: kotlin.Long = 0L

const val KRB5_CRED: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_CRYPTO_INTERNAL: kotlin.Long = 0L

const val KRB5_CYBERSAFE_SECUREID: kotlin.Int = 0

val KRB5_C_RANDSOURCE_EXTERNAL_PROTOCOL: kotlin.UInt
    get() = TODO()

val KRB5_C_RANDSOURCE_MAX: kotlin.UInt
    get() = TODO()

val KRB5_C_RANDSOURCE_OLDAPI: kotlin.UInt
    get() = TODO()

val KRB5_C_RANDSOURCE_OSRAND: kotlin.UInt
    get() = TODO()

val KRB5_C_RANDSOURCE_TIMING: kotlin.UInt
    get() = TODO()

val KRB5_C_RANDSOURCE_TRUSTEDPARTY: kotlin.UInt
    get() = TODO()

const val KRB5_DELTAT_BADFORMAT: kotlin.Long = 0L

const val KRB5_DEPRECATED: kotlin.Int = 0

const val KRB5_DOMAIN_X500_COMPRESS: kotlin.Int = 0

const val KRB5_EAI_FAIL: kotlin.Long = 0L

const val KRB5_EAI_NODATA: kotlin.Long = 0L

const val KRB5_EAI_NONAME: kotlin.Long = 0L

const val KRB5_EAI_SERVICE: kotlin.Long = 0L

const val KRB5_ERROR: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_ERR_BAD_HOSTNAME: kotlin.Long = 0L

const val KRB5_ERR_BAD_S2K_PARAMS: kotlin.Long = 0L

const val KRB5_ERR_HOST_REALM_UNKNOWN: kotlin.Long = 0L

const val KRB5_ERR_NO_SERVICE: kotlin.Long = 0L

const val KRB5_ERR_NUMERIC_REALM: kotlin.Long = 0L

const val KRB5_ERR_RCSID: kotlin.Long = 0L

const val KRB5_FCC_INTERNAL: kotlin.Long = 0L

const val KRB5_FCC_NOFILE: kotlin.Long = 0L

const val KRB5_FCC_PERM: kotlin.Long = 0L

const val KRB5_FWD_BAD_PRINCIPAL: kotlin.Long = 0L

const val KRB5_GC_CACHED: kotlin.Int = 0

const val KRB5_GC_USER_USER: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_ADDRESS_LIST: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_CANONICALIZE: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_CHG_PWD_PRMPT: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_ETYPE_LIST: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_FORWARDABLE: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_PREAUTH_LIST: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_PROXIABLE: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_RENEW_LIFE: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_SALT: kotlin.Int = 0

const val KRB5_GET_INIT_CREDS_OPT_TKT_LIFE: kotlin.Int = 0

const val KRB5_GET_IN_TKT_LOOP: kotlin.Long = 0L

const val KRB5_INT16_MAX: kotlin.Int = 0

const val KRB5_INT16_MIN: kotlin.Int = 0

const val KRB5_INT32_MAX: kotlin.Int = 0

const val KRB5_INT32_MIN: kotlin.Int = 0

const val KRB5_INVALID_FLAGS: kotlin.Long = 0L

const val KRB5_IN_TKT_REALM_MISMATCH: kotlin.Long = 0L

const val KRB5_KDB_ACCESS_ERROR: kotlin.Long = 0L

const val KRB5_KDB_BADLOCKMODE: kotlin.Long = 0L

const val KRB5_KDB_BADMASTERKEY: kotlin.Long = 0L

const val KRB5_KDB_BADSTORED_MKEY: kotlin.Long = 0L

const val KRB5_KDB_BAD_CREATEFLAGS: kotlin.Long = 0L

const val KRB5_KDB_BAD_ENCTYPE: kotlin.Long = 0L

const val KRB5_KDB_BAD_SALTTYPE: kotlin.Long = 0L

const val KRB5_KDB_BAD_VERSION: kotlin.Long = 0L

const val KRB5_KDB_CANTLOCK_DB: kotlin.Long = 0L

const val KRB5_KDB_CANTREAD_STORED: kotlin.Long = 0L

const val KRB5_KDB_CONSTRAINT_VIOLATION: kotlin.Long = 0L

const val KRB5_KDB_DBINITED: kotlin.Long = 0L

const val KRB5_KDB_DBNOTINITED: kotlin.Long = 0L

const val KRB5_KDB_DBTYPE_INIT: kotlin.Long = 0L

const val KRB5_KDB_DBTYPE_NOSUP: kotlin.Long = 0L

const val KRB5_KDB_DBTYPE_NOTFOUND: kotlin.Long = 0L

const val KRB5_KDB_DB_CHANGED: kotlin.Long = 0L

const val KRB5_KDB_DB_CORRUPT: kotlin.Long = 0L

const val KRB5_KDB_DB_INUSE: kotlin.Long = 0L

const val KRB5_KDB_ILLDIRECTION: kotlin.Long = 0L

const val KRB5_KDB_ILL_WILDCARD: kotlin.Long = 0L

const val KRB5_KDB_INTERNAL_ERROR: kotlin.Long = 0L

const val KRB5_KDB_INUSE: kotlin.Long = 0L

const val KRB5_KDB_INVALIDKEYSIZE: kotlin.Long = 0L

const val KRB5_KDB_NOENTRY: kotlin.Long = 0L

const val KRB5_KDB_NOMASTERKEY: kotlin.Long = 0L

const val KRB5_KDB_NOTLOCKED: kotlin.Long = 0L

const val KRB5_KDB_NO_MATCHING_KEY: kotlin.Long = 0L

const val KRB5_KDB_NO_PERMITTED_KEY: kotlin.Long = 0L

const val KRB5_KDB_RCSID: kotlin.Long = 0L

const val KRB5_KDB_RECURSIVELOCK: kotlin.Long = 0L

const val KRB5_KDB_SERVER_INTERNAL_ERR: kotlin.Long = 0L

const val KRB5_KDB_TRUNCATED_RECORD: kotlin.Long = 0L

const val KRB5_KDB_UK_RERROR: kotlin.Long = 0L

const val KRB5_KDB_UK_SERROR: kotlin.Long = 0L

const val KRB5_KDB_UNAUTH: kotlin.Long = 0L

const val KRB5_KDCREP_MODIFIED: kotlin.Long = 0L

const val KRB5_KDCREP_SKEW: kotlin.Long = 0L

const val KRB5_KDC_UNREACH: kotlin.Long = 0L

const val KRB5_KEYTAB_BADVNO: kotlin.Long = 0L

const val KRB5_KEYUSAGE_AD_ITE: kotlin.Int = 0

const val KRB5_KEYUSAGE_AD_KDCISSUED_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_AD_MTE: kotlin.Int = 0

const val KRB5_KEYUSAGE_APP_DATA_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_APP_DATA_ENCRYPT: kotlin.Int = 0

const val KRB5_KEYUSAGE_AP_REP_ENCPART: kotlin.Int = 0

const val KRB5_KEYUSAGE_AP_REQ_AUTH: kotlin.Int = 0

const val KRB5_KEYUSAGE_AP_REQ_AUTH_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_AS_REP_ENCPART: kotlin.Int = 0

const val KRB5_KEYUSAGE_AS_REQ_PA_ENC_TS: kotlin.Int = 0

const val KRB5_KEYUSAGE_GSS_TOK_MIC: kotlin.Int = 0

const val KRB5_KEYUSAGE_GSS_TOK_WRAP_INTEG: kotlin.Int = 0

const val KRB5_KEYUSAGE_GSS_TOK_WRAP_PRIV: kotlin.Int = 0

const val KRB5_KEYUSAGE_KDC_REP_TICKET: kotlin.Int = 0

const val KRB5_KEYUSAGE_KRB_CRED_ENCPART: kotlin.Int = 0

const val KRB5_KEYUSAGE_KRB_ERROR_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_KRB_PRIV_ENCPART: kotlin.Int = 0

const val KRB5_KEYUSAGE_KRB_SAFE_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_PA_REFERRAL: kotlin.Int = 0

const val KRB5_KEYUSAGE_PA_SAM_CHALLENGE_CKSUM: kotlin.Int = 0

const val KRB5_KEYUSAGE_PA_SAM_CHALLENGE_TRACKID: kotlin.Int = 0

const val KRB5_KEYUSAGE_PA_SAM_RESPONSE: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REP_ENCPART_SESSKEY: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REP_ENCPART_SUBKEY: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REQ_AD_SESSKEY: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REQ_AD_SUBKEY: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REQ_AUTH: kotlin.Int = 0

const val KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM: kotlin.Int = 0

const val KRB5_KPASSWD_ACCESSDENIED: kotlin.Int = 0

const val KRB5_KPASSWD_AUTHERROR: kotlin.Int = 0

const val KRB5_KPASSWD_BAD_VERSION: kotlin.Int = 0

const val KRB5_KPASSWD_HARDERROR: kotlin.Int = 0

const val KRB5_KPASSWD_INITIAL_FLAG_NEEDED: kotlin.Int = 0

const val KRB5_KPASSWD_MALFORMED: kotlin.Int = 0

const val KRB5_KPASSWD_SOFTERROR: kotlin.Int = 0

const val KRB5_KPASSWD_SUCCESS: kotlin.Int = 0

const val KRB5_KT_BADNAME: kotlin.Long = 0L

const val KRB5_KT_END: kotlin.Long = 0L

const val KRB5_KT_FORMAT: kotlin.Long = 0L

const val KRB5_KT_IOERR: kotlin.Long = 0L

const val KRB5_KT_KVNONOTFOUND: kotlin.Long = 0L

const val KRB5_KT_NAME_TOOLONG: kotlin.Long = 0L

const val KRB5_KT_NOTFOUND: kotlin.Long = 0L

const val KRB5_KT_NOWRITE: kotlin.Long = 0L

const val KRB5_KT_TYPE_EXISTS: kotlin.Long = 0L

const val KRB5_KT_UNKNOWN_TYPE: kotlin.Long = 0L

const val KRB5_LIBOS_BADLOCKFLAG: kotlin.Long = 0L

const val KRB5_LIBOS_BADPWDMATCH: kotlin.Long = 0L

const val KRB5_LIBOS_CANTREADPWD: kotlin.Long = 0L

const val KRB5_LIBOS_PWDINTR: kotlin.Long = 0L

const val KRB5_LIB_EXPIRED: kotlin.Long = 0L

const val KRB5_LNAME_BADFORMAT: kotlin.Long = 0L

const val KRB5_LNAME_CANTOPEN: kotlin.Long = 0L

const val KRB5_LNAME_NOTRANS: kotlin.Long = 0L

const val KRB5_LOG_CONV: kotlin.Long = 0L

const val KRB5_LOG_CORRUPT: kotlin.Long = 0L

const val KRB5_LOG_ERROR: kotlin.Long = 0L

const val KRB5_LOG_UNSTABLE: kotlin.Long = 0L

const val KRB5_LRQ_ALL_LAST_INITIAL: kotlin.Int = 0

const val KRB5_LRQ_ALL_LAST_RENEWAL: kotlin.Int = 0

const val KRB5_LRQ_ALL_LAST_REQ: kotlin.Int = 0

const val KRB5_LRQ_ALL_LAST_TGT: kotlin.Int = 0

const val KRB5_LRQ_ALL_LAST_TGT_ISSUED: kotlin.Int = 0

const val KRB5_LRQ_ALL_PW_EXPTIME: kotlin.Int = 0

const val KRB5_LRQ_NONE: kotlin.Int = 0

const val KRB5_LRQ_ONE_LAST_INITIAL: kotlin.Int = 0

const val KRB5_LRQ_ONE_LAST_RENEWAL: kotlin.Int = 0

const val KRB5_LRQ_ONE_LAST_REQ: kotlin.Int = 0

const val KRB5_LRQ_ONE_LAST_TGT: kotlin.Int = 0

const val KRB5_LRQ_ONE_LAST_TGT_ISSUED: kotlin.Int = 0

const val KRB5_LRQ_ONE_PW_EXPTIME: kotlin.Int = 0

const val KRB5_MUTUAL_FAILED: kotlin.Long = 0L

const val KRB5_NOCREDS_SUPPLIED: kotlin.Long = 0L

const val KRB5_NOPERM_ETYPE: kotlin.Long = 0L

const val KRB5_NO_2ND_TKT: kotlin.Long = 0L

const val KRB5_NO_LOCALNAME: kotlin.Long = 0L

const val KRB5_NO_TKT_IN_RLM: kotlin.Long = 0L

const val KRB5_NO_TKT_SUPPLIED: kotlin.Long = 0L

const val KRB5_NT_ENTERPRISE_PRINCIPAL: kotlin.Int = 0

const val KRB5_NT_ENT_PRINCIPAL_AND_ID: kotlin.Int = 0

const val KRB5_NT_MS_PRINCIPAL: kotlin.Int = 0

const val KRB5_NT_MS_PRINCIPAL_AND_ID: kotlin.Int = 0

const val KRB5_NT_PRINCIPAL: kotlin.Int = 0

const val KRB5_NT_SMTP_NAME: kotlin.Int = 0

const val KRB5_NT_SRV_HST: kotlin.Int = 0

const val KRB5_NT_SRV_INST: kotlin.Int = 0

const val KRB5_NT_SRV_XHST: kotlin.Int = 0

const val KRB5_NT_UID: kotlin.Int = 0

const val KRB5_NT_UNKNOWN: kotlin.Int = 0

const val KRB5_NT_X500_PRINCIPAL: kotlin.Int = 0

const val KRB5_OBSOLETE_FN: kotlin.Long = 0L

const val KRB5_PADATA_AFS3_SALT: kotlin.Int = 0

const val KRB5_PADATA_AP_REQ: kotlin.Int = 0

const val KRB5_PADATA_DASS: kotlin.Int = 0

const val KRB5_PADATA_ENC_SANDIA_SECURID: kotlin.Int = 0

const val KRB5_PADATA_ENC_TIMESTAMP: kotlin.Int = 0

const val KRB5_PADATA_ENC_UNIX_TIME: kotlin.Int = 0

const val KRB5_PADATA_ETYPE_INFO: kotlin.Int = 0

const val KRB5_PADATA_ETYPE_INFO2: kotlin.Int = 0

const val KRB5_PADATA_GET_FROM_TYPED_DATA: kotlin.Int = 0

const val KRB5_PADATA_NONE: kotlin.Int = 0

const val KRB5_PADATA_OSF_DCE: kotlin.Int = 0

const val KRB5_PADATA_PK_AS_09_BINDING: kotlin.Int = 0

const val KRB5_PADATA_PK_AS_REP: kotlin.Int = 0

const val KRB5_PADATA_PK_AS_REP_OLD: kotlin.Int = 0

const val KRB5_PADATA_PK_AS_REQ: kotlin.Int = 0

const val KRB5_PADATA_PK_AS_REQ_OLD: kotlin.Int = 0

const val KRB5_PADATA_PW_SALT: kotlin.Int = 0

const val KRB5_PADATA_REFERRAL: kotlin.Int = 0

const val KRB5_PADATA_SAM_CHALLENGE: kotlin.Int = 0

const val KRB5_PADATA_SAM_CHALLENGE_2: kotlin.Int = 0

const val KRB5_PADATA_SAM_REDIRECT: kotlin.Int = 0

const val KRB5_PADATA_SAM_RESPONSE: kotlin.Int = 0

const val KRB5_PADATA_SAM_RESPONSE_2: kotlin.Int = 0

const val KRB5_PADATA_SESAME: kotlin.Int = 0

const val KRB5_PADATA_TGS_REQ: kotlin.Int = 0

const val KRB5_PADATA_USE_SPECIFIED_KVNO: kotlin.Int = 0

const val KRB5_PARSE_ILLCHAR: kotlin.Long = 0L

const val KRB5_PARSE_MALFORMED: kotlin.Long = 0L

const val KRB5_PLUGIN_NO_HANDLE: kotlin.Long = 0L

const val KRB5_PLUGIN_OP_NOTSUPP: kotlin.Long = 0L

const val KRB5_PREAUTH_BAD_TYPE: kotlin.Long = 0L

const val KRB5_PREAUTH_FAILED: kotlin.Long = 0L

const val KRB5_PREAUTH_NO_KEY: kotlin.Long = 0L

const val KRB5_PRINCIPAL_PARSE_ENTERPRISE: kotlin.Int = 0

const val KRB5_PRINCIPAL_PARSE_NO_REALM: kotlin.Int = 0

const val KRB5_PRINCIPAL_PARSE_REQUIRE_REALM: kotlin.Int = 0

const val KRB5_PRINCIPAL_UNPARSE_DISPLAY: kotlin.Int = 0

const val KRB5_PRINCIPAL_UNPARSE_NO_REALM: kotlin.Int = 0

const val KRB5_PRINCIPAL_UNPARSE_SHORT: kotlin.Int = 0

const val KRB5_PRINC_NOMATCH: kotlin.Long = 0L

const val KRB5_PRIV: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_PROG_ATYPE_NOSUPP: kotlin.Long = 0L

const val KRB5_PROG_ETYPE_NOSUPP: kotlin.Long = 0L

const val KRB5_PROG_KEYTYPE_NOSUPP: kotlin.Long = 0L

const val KRB5_PROG_SUMTYPE_NOSUPP: kotlin.Long = 0L

const val KRB5_PROMPT_TYPE_NEW_PASSWORD: kotlin.Int = 0

const val KRB5_PROMPT_TYPE_NEW_PASSWORD_AGAIN: kotlin.Int = 0

const val KRB5_PROMPT_TYPE_PASSWORD: kotlin.Int = 0

const val KRB5_PROMPT_TYPE_PREAUTH: kotlin.Int = 0

const val KRB5_PVNO: kotlin.Int = 0

const val KRB5_RCACHE_BADVNO: kotlin.Long = 0L

const val KRB5_RC_IO: kotlin.Long = 0L

const val KRB5_RC_IO_EOF: kotlin.Long = 0L

const val KRB5_RC_IO_IO: kotlin.Long = 0L

const val KRB5_RC_IO_MALLOC: kotlin.Long = 0L

const val KRB5_RC_IO_PERM: kotlin.Long = 0L

const val KRB5_RC_IO_SPACE: kotlin.Long = 0L

const val KRB5_RC_IO_UNKNOWN: kotlin.Long = 0L

const val KRB5_RC_MALLOC: kotlin.Long = 0L

const val KRB5_RC_NOIO: kotlin.Long = 0L

const val KRB5_RC_PARSE: kotlin.Long = 0L

const val KRB5_RC_REPLAY: kotlin.Long = 0L

const val KRB5_RC_REQUIRED: kotlin.Long = 0L

const val KRB5_RC_TYPE_EXISTS: kotlin.Long = 0L

const val KRB5_RC_TYPE_NOTFOUND: kotlin.Long = 0L

const val KRB5_RC_UNKNOWN: kotlin.Long = 0L

const val KRB5_REALM_BRANCH_CHAR: kotlin.Int = 0

const val KRB5_REALM_CANT_RESOLVE: kotlin.Long = 0L

const val KRB5_REALM_UNKNOWN: kotlin.Long = 0L

const val KRB5_RECVAUTH_BADAUTHVERS: kotlin.Int = 0

const val KRB5_RECVAUTH_SKIP_VERSION: kotlin.Int = 0

val KRB5_REFERRAL_REALM: kotlin.String
    get() = TODO()

const val KRB5_SAFE: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_SAM_BAD_CHECKSUM: kotlin.Long = 0L

const val KRB5_SAM_INVALID_ETYPE: kotlin.Long = 0L

const val KRB5_SAM_MUST_PK_ENCRYPT_SAD: kotlin.Int = 0

const val KRB5_SAM_NO_CHECKSUM: kotlin.Long = 0L

const val KRB5_SAM_SEND_ENCRYPTED_SAD: kotlin.Int = 0

const val KRB5_SAM_UNSUPPORTED: kotlin.Long = 0L

const val KRB5_SAM_USE_SAD_AS_KEY: kotlin.UInt = 0u

const val KRB5_SENDAUTH_BADAPPLVERS: kotlin.Long = 0L

const val KRB5_SENDAUTH_BADAUTHVERS: kotlin.Long = 0L

const val KRB5_SENDAUTH_BADRESPONSE: kotlin.Long = 0L

const val KRB5_SENDAUTH_REJECTED: kotlin.Long = 0L

const val KRB5_SERVICE_UNKNOWN: kotlin.Long = 0L

const val KRB5_SNAME_UNSUPP_NAMETYPE: kotlin.Long = 0L

const val KRB5_TC_MATCH_2ND_TKT: kotlin.Int = 0

const val KRB5_TC_MATCH_AUTHDATA: kotlin.Int = 0

const val KRB5_TC_MATCH_FLAGS: kotlin.Int = 0

const val KRB5_TC_MATCH_FLAGS_EXACT: kotlin.Int = 0

const val KRB5_TC_MATCH_IS_SKEY: kotlin.Int = 0

const val KRB5_TC_MATCH_KTYPE: kotlin.Int = 0

const val KRB5_TC_MATCH_SRV_NAMEONLY: kotlin.Int = 0

const val KRB5_TC_MATCH_TIMES: kotlin.Int = 0

const val KRB5_TC_MATCH_TIMES_EXACT: kotlin.Int = 0

const val KRB5_TC_NOTICKET: kotlin.Int = 0

const val KRB5_TC_OPENCLOSE: kotlin.Int = 0

const val KRB5_TC_SUPPORTED_KTYPES: kotlin.Int = 0

val KRB5_TGS_NAME: kotlin.String
    get() = TODO()

const val KRB5_TGS_NAME_SIZE: kotlin.Int = 0

const val KRB5_TGS_REP: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_TGS_REQ: platform.osx.krb5_msgtype /* = kotlin.UInt */ = 0u

const val KRB5_TKT_NOT_FORWARDABLE: kotlin.Long = 0L

const val KRB5_TRANS_BADFORMAT: kotlin.Long = 0L

const val KRB5_TRANS_CANTOPEN: kotlin.Long = 0L

const val KRB5_VERIFY_INIT_CREDS_OPT_AP_REQ_NOFAIL: kotlin.Int = 0

const val KRB5_WRONG_ETYPE: kotlin.Long = 0L

const val KV5M_ADDRESS: kotlin.Long = 0L

const val KV5M_ALT_METHOD: kotlin.Long = 0L

const val KV5M_AP_REP: kotlin.Long = 0L

const val KV5M_AP_REP_ENC_PART: kotlin.Long = 0L

const val KV5M_AP_REQ: kotlin.Long = 0L

const val KV5M_AUTHDATA: kotlin.Long = 0L

const val KV5M_AUTHENTICATOR: kotlin.Long = 0L

const val KV5M_AUTH_CONTEXT: kotlin.Long = 0L

const val KV5M_CCACHE: kotlin.Long = 0L

const val KV5M_CHECKSUM: kotlin.Long = 0L

const val KV5M_CHECKSUM_ENTRY: kotlin.Long = 0L

const val KV5M_CONTEXT: kotlin.Long = 0L

const val KV5M_CRED: kotlin.Long = 0L

const val KV5M_CREDS: kotlin.Long = 0L

const val KV5M_CRED_ENC_PART: kotlin.Long = 0L

const val KV5M_CRED_INFO: kotlin.Long = 0L

const val KV5M_CRYPTOSYSTEM_ENTRY: kotlin.Long = 0L

const val KV5M_CS_TABLE_ENTRY: kotlin.Long = 0L

const val KV5M_DATA: kotlin.Long = 0L

const val KV5M_DB_CONTEXT: kotlin.Long = 0L

const val KV5M_ENCRYPT_BLOCK: kotlin.Long = 0L

const val KV5M_ENC_DATA: kotlin.Long = 0L

const val KV5M_ENC_KDC_REP_PART: kotlin.Long = 0L

const val KV5M_ENC_SAM_RESPONSE_ENC: kotlin.Long = 0L

const val KV5M_ENC_SAM_RESPONSE_ENC_2: kotlin.Long = 0L

const val KV5M_ENC_TKT_PART: kotlin.Long = 0L

const val KV5M_ERROR: kotlin.Long = 0L

const val KV5M_ETYPE_INFO_ENTRY: kotlin.Long = 0L

const val KV5M_GSS_OID: kotlin.Long = 0L

const val KV5M_GSS_QUEUE: kotlin.Long = 0L

const val KV5M_KDC_REP: kotlin.Long = 0L

const val KV5M_KDC_REQ: kotlin.Long = 0L

const val KV5M_KEYBLOCK: kotlin.Long = 0L

const val KV5M_KEYTAB: kotlin.Long = 0L

const val KV5M_KEYTAB_ENTRY: kotlin.Long = 0L

const val KV5M_LAST_REQ_ENTRY: kotlin.Long = 0L

const val KV5M_NONE: kotlin.Long = 0L

const val KV5M_OS_CONTEXT: kotlin.Long = 0L

const val KV5M_PASSWD_PHRASE_ELEMENT: kotlin.Long = 0L

const val KV5M_PA_DATA: kotlin.Long = 0L

const val KV5M_PREAUTH_OPS: kotlin.Long = 0L

const val KV5M_PREDICTED_SAM_RESPONSE: kotlin.Long = 0L

const val KV5M_PRINCIPAL: kotlin.Long = 0L

const val KV5M_PRIV: kotlin.Long = 0L

const val KV5M_PRIV_ENC_PART: kotlin.Long = 0L

const val KV5M_PWD_DATA: kotlin.Long = 0L

const val KV5M_RCACHE: kotlin.Long = 0L

const val KV5M_RESPONSE: kotlin.Long = 0L

const val KV5M_SAFE: kotlin.Long = 0L

const val KV5M_SAM_CHALLENGE: kotlin.Long = 0L

const val KV5M_SAM_CHALLENGE_2: kotlin.Long = 0L

const val KV5M_SAM_KEY: kotlin.Long = 0L

const val KV5M_SAM_RESPONSE: kotlin.Long = 0L

const val KV5M_SAM_RESPONSE_2: kotlin.Long = 0L

const val KV5M_TICKET: kotlin.Long = 0L

const val KV5M_TKT_AUTHENT: kotlin.Long = 0L

const val KV5M_TRANSITED: kotlin.Long = 0L

const val LBER_BIG_TAG_MASK: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_BITSTRING: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_BOOLEAN: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_BV_ALLOC: kotlin.Int = 0

const val LBER_BV_NOTERM: kotlin.Int = 0

const val LBER_BV_STRING: kotlin.Int = 0

const val LBER_CLASS_APPLICATION: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_CLASS_CONTEXT: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_CLASS_MASK: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_CLASS_PRIVATE: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_CLASS_UNIVERSAL: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_CONSTRUCTED: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_DEFAULT: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_ENCODING_MASK: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_ENUMERATED: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_ERROR: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_ERROR_MEMORY: kotlin.Int = 0

const val LBER_ERROR_NONE: kotlin.Int = 0

const val LBER_ERROR_PARAM: kotlin.Int = 0

const val LBER_FLUSH_FREE_ALWAYS: kotlin.Int = 0

const val LBER_FLUSH_FREE_NEVER: kotlin.Int = 0

const val LBER_FLUSH_FREE_ON_ERROR: kotlin.Int = 0

const val LBER_FLUSH_FREE_ON_SUCCESS: kotlin.Int = 0

const val LBER_INTEGER: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_MORE_TAG_MASK: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_NULL: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_OCTETSTRING: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_OPT_BER_BYTES_TO_WRITE: kotlin.Int = 0

const val LBER_OPT_BER_DEBUG: kotlin.Int = 0

const val LBER_OPT_BER_MEMCTX: kotlin.Int = 0

const val LBER_OPT_BER_OPTIONS: kotlin.Int = 0

const val LBER_OPT_BER_REMAINING_BYTES: kotlin.Int = 0

const val LBER_OPT_BER_TOTAL_BYTES: kotlin.Int = 0

const val LBER_OPT_BYTES_TO_WRITE: kotlin.Int = 0

const val LBER_OPT_DEBUG_LEVEL: kotlin.Int = 0

const val LBER_OPT_ERROR: kotlin.Int = 0

const val LBER_OPT_ERROR_FN: kotlin.Int = 0

const val LBER_OPT_LOG_PRINT_FILE: kotlin.Int = 0

const val LBER_OPT_LOG_PRINT_FN: kotlin.Int = 0

const val LBER_OPT_LOG_PROC: kotlin.Int = 0

const val LBER_OPT_MEMORY_FNS: kotlin.Int = 0

const val LBER_OPT_MEMORY_INUSE: kotlin.Int = 0

const val LBER_OPT_REMAINING_BYTES: kotlin.Int = 0

const val LBER_OPT_SOCKBUF_DEBUG: kotlin.Int = 0

const val LBER_OPT_SOCKBUF_DESC: kotlin.Int = 0

const val LBER_OPT_SOCKBUF_OPTIONS: kotlin.Int = 0

const val LBER_OPT_SUCCESS: kotlin.Int = 0

const val LBER_OPT_TOTAL_BYTES: kotlin.Int = 0

const val LBER_PRIMITIVE: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_SBIOD_LEVEL_APPLICATION: kotlin.Int = 0

const val LBER_SBIOD_LEVEL_PROVIDER: kotlin.Int = 0

const val LBER_SBIOD_LEVEL_TRANSPORT: kotlin.Int = 0

const val LBER_SB_OPT_DATA_READY: kotlin.Int = 0

const val LBER_SB_OPT_DRAIN: kotlin.Int = 0

const val LBER_SB_OPT_GET_FD: kotlin.Int = 0

const val LBER_SB_OPT_GET_MAX_INCOMING: kotlin.Int = 0

const val LBER_SB_OPT_GET_SSL: kotlin.Int = 0

const val LBER_SB_OPT_HAS_IO: kotlin.Int = 0

const val LBER_SB_OPT_NEEDS_READ: kotlin.Int = 0

const val LBER_SB_OPT_NEEDS_WRITE: kotlin.Int = 0

const val LBER_SB_OPT_OPT_MAX: kotlin.Int = 0

const val LBER_SB_OPT_SET_FD: kotlin.Int = 0

const val LBER_SB_OPT_SET_MAX_INCOMING: kotlin.Int = 0

const val LBER_SB_OPT_SET_NONBLOCK: kotlin.Int = 0

const val LBER_SB_OPT_SET_READAHEAD: kotlin.Int = 0

const val LBER_SB_OPT_UNGET_BUF: kotlin.Int = 0

const val LBER_SEQUENCE: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_SET: platform.osx.ber_tag_t /* = kotlin.ULong */ = 0u

const val LBER_USE_DER: kotlin.Int = 0

const val LDIF_LINE_WIDTH: kotlin.Int = 0

const val LDIF_LINE_WIDTH_MAX: platform.osx.ber_len_t /* = kotlin.ULong */ = 0u

const val LDIF_PUT_B64: kotlin.Int = 0

const val LDIF_PUT_BINARY: kotlin.Int = 0

const val LDIF_PUT_COMMENT: kotlin.Int = 0

const val LDIF_PUT_NOVALUE: kotlin.Int = 0

const val LDIF_PUT_SEP: kotlin.Int = 0

const val LDIF_PUT_TEXT: kotlin.Int = 0

const val LDIF_PUT_URL: kotlin.Int = 0

const val LDIF_PUT_VALUE: kotlin.Int = 0

const val LIBEDIT_MAJOR: kotlin.Int = 0

const val LIBEDIT_MINOR: kotlin.Int = 0

var LINES: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val LOCAL_PEERCRED: kotlin.Int = 0

const val LOCAL_PEEREPID: kotlin.Int = 0

const val LOCAL_PEEREUUID: kotlin.Int = 0

const val LOCAL_PEERPID: kotlin.Int = 0

const val LOCAL_PEERUUID: kotlin.Int = 0

const val LR_TYPE_INTERPRETATION_MASK: kotlin.Int = 0

const val LR_TYPE_THIS_SERVER_ONLY: kotlin.Int = 0

const val MACH_VOUCHER_ATTR_ATM_CREATE: platform.darwin.mach_voucher_attr_recipe_command_t /* = kotlin.UInt */ = 0u

const val MACH_VOUCHER_ATTR_ATM_NULL: platform.darwin.mach_voucher_attr_recipe_command_t /* = kotlin.UInt */ = 0u

const val MACH_VOUCHER_ATTR_ATM_REGISTER: platform.darwin.mach_voucher_attr_recipe_command_t /* = kotlin.UInt */ = 0u

const val MAGIC: kotlin.Int = 0

const val MAXTHREADNAMESIZE: kotlin.Int = 0

const val MAX_ALIAS: kotlin.Int = 0

const val MAX_COMMAND: kotlin.Int = 0

const val MAX_CROSSLINKS: kotlin.Int = 0

const val MAX_DEBUG_LEVEL: kotlin.Int = 0

const val MAX_ENTRY_SIZE: kotlin.Int = 0

const val MAX_FORM_COMMAND: kotlin.Int = 0

const val MAX_KCTL_NAME: kotlin.Int = 0

const val MAX_KEYTAB_NAME_LEN: kotlin.Int = 0

const val MAX_LINE: kotlin.Int = 0

const val MAX_NAME_SIZE: kotlin.Int = 0

const val MAX_TERMCAP_LENGTH: kotlin.Int = 0

const val MAX_TERMINFO_LENGTH: kotlin.Int = 0

const val MAX_USES: kotlin.Int = 0

const val MFSNAMELEN: kotlin.Int = 0

const val MFSTYPENAMELEN: kotlin.Int = 0

const val MICROSEC: kotlin.Int = 0

const val MILLISEC: kotlin.Int = 0

const val MINSPERHOUR: kotlin.Int = 0

const val MIN_FORM_COMMAND: kotlin.Int = 0

const val MNAMELEN: kotlin.Int = 0

const val MNT_ASYNC: kotlin.Int = 0

const val MNT_AUTOMOUNTED: kotlin.Int = 0

const val MNT_CMDFLAGS: kotlin.Int = 0

const val MNT_CPROTECT: kotlin.Int = 0

const val MNT_DEFWRITE: kotlin.Int = 0

const val MNT_DONTBROWSE: kotlin.Int = 0

const val MNT_DOVOLFS: kotlin.Int = 0

const val MNT_DWAIT: kotlin.Int = 0

const val MNT_EXPORTED: kotlin.Int = 0

const val MNT_FORCE: kotlin.Int = 0

const val MNT_IGNORE_OWNERSHIP: kotlin.Int = 0

const val MNT_JOURNALED: kotlin.Int = 0

const val MNT_LOCAL: kotlin.Int = 0

const val MNT_MULTILABEL: kotlin.Int = 0

const val MNT_NOATIME: kotlin.Int = 0

const val MNT_NOBLOCK: kotlin.Int = 0

const val MNT_NODEV: kotlin.Int = 0

const val MNT_NOEXEC: kotlin.Int = 0

const val MNT_NOSUID: kotlin.Int = 0

const val MNT_NOUSERXATTR: kotlin.Int = 0

const val MNT_NOWAIT: kotlin.Int = 0

const val MNT_QUARANTINE: kotlin.Int = 0

const val MNT_QUOTA: kotlin.Int = 0

const val MNT_RDONLY: kotlin.Int = 0

const val MNT_RELOAD: kotlin.Int = 0

const val MNT_ROOTFS: kotlin.Int = 0

const val MNT_SNAPSHOT: kotlin.Int = 0

const val MNT_SYNCHRONOUS: kotlin.Int = 0

const val MNT_UNION: kotlin.Int = 0

const val MNT_UNKNOWNPERMISSIONS: kotlin.Int = 0

const val MNT_UPDATE: kotlin.Int = 0

const val MNT_VISFLAGMASK: kotlin.Int = 0

const val MNT_WAIT: kotlin.Int = 0

const val MONSPERYEAR: kotlin.Int = 0

const val MSEC_DIRBIT: kotlin.Int = 0

const val MSEC_VAL_MASK: kotlin.Int = 0

const val NAMES: kotlin.Int = 0

const val NAMESIZE: kotlin.Int = 0

const val NANOSEC: kotlin.Int = 0

const val NCURSES_ATTR_SHIFT: kotlin.Int = 0

const val NCURSES_BUTTON_CLICKED: kotlin.Long = 0L

const val NCURSES_BUTTON_PRESSED: kotlin.Long = 0L

const val NCURSES_BUTTON_RELEASED: kotlin.Long = 0L

const val NCURSES_DLL_H_incl: kotlin.Int = 0

const val NCURSES_DOUBLE_CLICKED: kotlin.Long = 0L

const val NCURSES_ENABLE_STDBOOL_H: kotlin.Int = 0

const val NCURSES_ETI_H_incl: kotlin.Int = 0

const val NCURSES_EXT_FUNCS: kotlin.Int = 0

const val NCURSES_MOUSE_VERSION: kotlin.Int = 0

const val NCURSES_OPAQUE: kotlin.Int = 0

const val NCURSES_PANEL_H_incl: kotlin.Int = 0

const val NCURSES_RESERVED_EVENT: kotlin.Long = 0L

const val NCURSES_TERMCAP_H_incl: kotlin.Int = 0

const val NCURSES_TERM_ENTRY_H_incl: kotlin.Int = 0

const val NCURSES_TERM_H_incl: kotlin.Int = 0

const val NCURSES_TPARM_VARARGS: kotlin.Int = 0

const val NCURSES_TRIPLE_CLICKED: kotlin.Long = 0L

const val NCURSES_UNCTRL_H_incl: kotlin.Int = 0

val NCURSES_VERSION: kotlin.String
    get() = TODO()

const val NCURSES_VERSION_MAJOR: kotlin.Int = 0

const val NCURSES_VERSION_MINOR: kotlin.Int = 0

const val NCURSES_VERSION_PATCH: kotlin.Int = 0

const val NCURSES_XNAMES: kotlin.Int = 0

const val NFSV2_MAX_FH_SIZE: kotlin.Int = 0

const val NFSV3_MAX_FH_SIZE: kotlin.Int = 0

const val NFSV4_MAX_FH_SIZE: kotlin.Int = 0

const val NFS_MAX_FH_SIZE: kotlin.Int = 0

const val NOTE_ABSOLUTE: kotlin.Int = 0

const val NOTE_ATTRIB: kotlin.Int = 0

const val NOTE_BACKGROUND: kotlin.Int = 0

const val NOTE_CHILD: kotlin.Int = 0

const val NOTE_CRITICAL: kotlin.Int = 0

const val NOTE_DELETE: kotlin.Int = 0

const val NOTE_EXEC: kotlin.Int = 0

const val NOTE_EXIT: kotlin.UInt = 0u

const val NOTE_EXITSTATUS: kotlin.Int = 0

const val NOTE_EXIT_CSERROR: kotlin.Int = 0

const val NOTE_EXIT_DECRYPTFAIL: kotlin.Int = 0

const val NOTE_EXIT_DETAIL: kotlin.Int = 0

const val NOTE_EXIT_DETAIL_MASK: kotlin.Int = 0

const val NOTE_EXIT_MEMORY: kotlin.Int = 0

const val NOTE_EXIT_REPARENTED: kotlin.UInt = 0u

const val NOTE_EXTEND: kotlin.Int = 0

const val NOTE_FFAND: kotlin.Int = 0

const val NOTE_FFCOPY: kotlin.UInt = 0u

const val NOTE_FFCTRLMASK: kotlin.UInt = 0u

const val NOTE_FFLAGSMASK: kotlin.Int = 0

const val NOTE_FFNOP: kotlin.Int = 0

const val NOTE_FFOR: kotlin.UInt = 0u

const val NOTE_FORK: kotlin.Int = 0

const val NOTE_FUNLOCK: kotlin.Int = 0

const val NOTE_LEEWAY: kotlin.Int = 0

const val NOTE_LINK: kotlin.Int = 0

const val NOTE_LOWAT: kotlin.Int = 0

const val NOTE_MACHTIME: kotlin.Int = 0

const val NOTE_MACH_CONTINUOUS_TIME: kotlin.Int = 0

const val NOTE_NONE: kotlin.Int = 0

const val NOTE_NSECONDS: kotlin.Int = 0

const val NOTE_OOB: kotlin.Int = 0

const val NOTE_PCTRLMASK: kotlin.Int = 0

const val NOTE_PDATAMASK: kotlin.Int = 0

const val NOTE_REAP: kotlin.UInt = 0u

const val NOTE_RENAME: kotlin.Int = 0

const val NOTE_REVOKE: kotlin.Int = 0

const val NOTE_SECONDS: kotlin.Int = 0

const val NOTE_SIGNAL: kotlin.Int = 0

const val NOTE_TRACK: kotlin.Int = 0

const val NOTE_TRACKERR: kotlin.Int = 0

const val NOTE_TRIGGER: kotlin.Int = 0

const val NOTE_USECONDS: kotlin.Int = 0

const val NOTE_VM_ERROR: kotlin.Int = 0

const val NOTE_VM_PRESSURE: kotlin.UInt = 0u

const val NOTE_VM_PRESSURE_SUDDEN_TERMINATE: kotlin.Int = 0

const val NOTE_VM_PRESSURE_TERMINATE: kotlin.Int = 0

const val NOTE_WRITE: kotlin.Int = 0

const val NO_JUSTIFICATION: kotlin.Int = 0

const val NO_PUSHBACK: kotlin.Int = 0

val NSAdminApplicationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSAllApplicationsDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSAllDomainsMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */
    get() = TODO()

val NSAllLibrariesDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSApplicationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSApplicationSupportDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSAutosavedInformationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSCachesDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSCoreServiceDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDemoApplicationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDesktopDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDeveloperApplicationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDeveloperDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDocumentDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDocumentationDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSDownloadsDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSInputMethodsDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSLibraryDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSLocalDomainMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */
    get() = TODO()

val NSMoviesDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSMusicDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSNetworkDomainMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */
    get() = TODO()

val NSPicturesDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSPreferencePanesDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSPrinterDescriptionDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSSharedPublicDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSSystemDomainMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */
    get() = TODO()

val NSUserDirectory: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */
    get() = TODO()

val NSUserDomainMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */
    get() = TODO()

const val NUMBER: kotlin.Int = 0

const val NUMCOUNT: kotlin.Int = 0

const val NUMWRITE: kotlin.Int = 0

const val NUM_PARM: kotlin.Int = 0

const val N_ABS: kotlin.Int = 0

const val N_BCOMM: kotlin.Int = 0

const val N_BINCL: kotlin.Int = 0

const val N_BSLINE: kotlin.Int = 0

const val N_BSS: kotlin.Int = 0

const val N_COMM: kotlin.Int = 0

const val N_DATA: kotlin.Int = 0

const val N_DSLINE: kotlin.Int = 0

const val N_ECOML: kotlin.Int = 0

const val N_ECOMM: kotlin.Int = 0

const val N_EINCL: kotlin.Int = 0

const val N_ENTRY: kotlin.Int = 0

const val N_EXCL: kotlin.Int = 0

const val N_EXT: kotlin.Int = 0

const val N_FN: kotlin.Int = 0

const val N_FNAME: kotlin.Int = 0

val N_FORMAT: kotlin.String
    get() = TODO()

const val N_FUN: kotlin.Int = 0

const val N_GSYM: kotlin.Int = 0

const val N_LBRAC: kotlin.Int = 0

const val N_LCSYM: kotlin.Int = 0

const val N_LENG: kotlin.Int = 0

const val N_LSYM: kotlin.Int = 0

const val N_MAIN: kotlin.Int = 0

const val N_PC: kotlin.Int = 0

const val N_PSYM: kotlin.Int = 0

const val N_RBRAC: kotlin.Int = 0

const val N_RSYM: kotlin.Int = 0

const val N_SLINE: kotlin.Int = 0

const val N_SO: kotlin.Int = 0

const val N_SOL: kotlin.Int = 0

const val N_SSYM: kotlin.Int = 0

const val N_STAB: kotlin.Int = 0

const val N_STSYM: kotlin.Int = 0

const val N_TEXT: kotlin.Int = 0

const val N_TYPE: kotlin.Int = 0

const val N_UNDF: kotlin.Int = 0

const val OK: kotlin.Int = 0

const val OVERRIDE_UNKNOWN_PERMISSIONS: kotlin.Int = 0

const val O_ACTIVE: kotlin.UInt = 0u

const val O_AUTOSKIP: kotlin.UInt = 0u

const val O_BLANK: kotlin.UInt = 0u

const val O_BS_OVERLOAD: kotlin.UInt = 0u

const val O_EDIT: kotlin.UInt = 0u

const val O_NL_OVERLOAD: kotlin.UInt = 0u

const val O_NULLOK: kotlin.UInt = 0u

const val O_PASSOK: kotlin.UInt = 0u

const val O_PUBLIC: kotlin.UInt = 0u

const val O_STATIC: kotlin.UInt = 0u

const val O_VISIBLE: kotlin.UInt = 0u

const val O_WRAP: kotlin.UInt = 0u

var PC: kotlin.Byte
    get() = TODO()
    set(value: kotlin.Byte) = TODO()

val PCAP_D_IN: platform.osx.pcap_direction_t /* = kotlin.UInt */
    get() = TODO()

val PCAP_D_INOUT: platform.osx.pcap_direction_t /* = kotlin.UInt */
    get() = TODO()

val PCAP_D_OUT: platform.osx.pcap_direction_t /* = kotlin.UInt */
    get() = TODO()

const val PCAP_ERRBUF_SIZE: kotlin.Int = 0

const val PCAP_ERROR: kotlin.Int = 0

const val PCAP_ERROR_ACTIVATED: kotlin.Int = 0

const val PCAP_ERROR_BREAK: kotlin.Int = 0

const val PCAP_ERROR_CANTSET_TSTAMP_TYPE: kotlin.Int = 0

const val PCAP_ERROR_IFACE_NOT_UP: kotlin.Int = 0

const val PCAP_ERROR_NOT_ACTIVATED: kotlin.Int = 0

const val PCAP_ERROR_NOT_RFMON: kotlin.Int = 0

const val PCAP_ERROR_NO_SUCH_DEVICE: kotlin.Int = 0

const val PCAP_ERROR_PERM_DENIED: kotlin.Int = 0

const val PCAP_ERROR_PROMISC_PERM_DENIED: kotlin.Int = 0

const val PCAP_ERROR_RFMON_NOTSUP: kotlin.Int = 0

const val PCAP_ERROR_TSTAMP_PRECISION_NOTSUP: kotlin.Int = 0

val PCAP_ETHERS_FILE: kotlin.String
    get() = TODO()

const val PCAP_IF_LOOPBACK: kotlin.Int = 0

const val PCAP_IF_RUNNING: kotlin.Int = 0

const val PCAP_IF_UP: kotlin.Int = 0

const val PCAP_NETMASK_UNKNOWN: kotlin.UInt = 0u

const val PCAP_TSTAMP_ADAPTER: kotlin.Int = 0

const val PCAP_TSTAMP_ADAPTER_UNSYNCED: kotlin.Int = 0

const val PCAP_TSTAMP_HOST: kotlin.Int = 0

const val PCAP_TSTAMP_HOST_HIPREC: kotlin.Int = 0

const val PCAP_TSTAMP_HOST_LOWPREC: kotlin.Int = 0

const val PCAP_TSTAMP_PRECISION_MICRO: kotlin.Int = 0

const val PCAP_TSTAMP_PRECISION_NANO: kotlin.Int = 0

const val PCAP_VERSION_MAJOR: kotlin.Int = 0

const val PCAP_VERSION_MINOR: kotlin.Int = 0

const val PCAP_WARNING: kotlin.Int = 0

const val PCAP_WARNING_PROMISC_NOTSUP: kotlin.Int = 0

const val PCAP_WARNING_TSTAMP_TYPE_NOTSUP: kotlin.Int = 0

val PRIVATE_INFO: kotlin.String
    get() = TODO()

const val PROC_ALL_PIDS: kotlin.Int = 0

const val PROC_DIRTYCONTROL_CLEAR: kotlin.Int = 0

const val PROC_DIRTYCONTROL_GET: kotlin.Int = 0

const val PROC_DIRTYCONTROL_SET: kotlin.Int = 0

const val PROC_DIRTYCONTROL_TRACK: kotlin.Int = 0

const val PROC_DIRTY_ALLOWS_IDLE_EXIT: kotlin.Int = 0

const val PROC_DIRTY_ALLOW_IDLE_EXIT: kotlin.Int = 0

const val PROC_DIRTY_DEFER: kotlin.Int = 0

const val PROC_DIRTY_DEFER_ALWAYS: kotlin.Int = 0

const val PROC_DIRTY_IS_DIRTY: kotlin.Int = 0

const val PROC_DIRTY_LAUNCH_IN_PROGRESS: kotlin.Int = 0

const val PROC_DIRTY_LAUNCH_IS_IN_PROGRESS: kotlin.Int = 0

const val PROC_DIRTY_TRACK: kotlin.Int = 0

const val PROC_DIRTY_TRACKED: kotlin.Int = 0

const val PROC_FI_GUARD_CLOSE: kotlin.UInt = 0u

const val PROC_FI_GUARD_DUP: kotlin.UInt = 0u

const val PROC_FI_GUARD_FILEPORT: kotlin.UInt = 0u

const val PROC_FI_GUARD_SOCKET_IPC: kotlin.UInt = 0u

const val PROC_FLAG_CONTROLT: kotlin.Int = 0

const val PROC_FLAG_CTTY: kotlin.Int = 0

const val PROC_FLAG_EXEC: kotlin.Int = 0

const val PROC_FLAG_INEXIT: kotlin.Int = 0

const val PROC_FLAG_LP64: kotlin.Int = 0

const val PROC_FLAG_PA_SUSP: kotlin.Int = 0

const val PROC_FLAG_PA_THROTTLE: kotlin.Int = 0

const val PROC_FLAG_PC_KILL: kotlin.Int = 0

const val PROC_FLAG_PC_MASK: kotlin.Int = 0

const val PROC_FLAG_PC_SUSP: kotlin.Int = 0

const val PROC_FLAG_PC_THROTTLE: kotlin.Int = 0

const val PROC_FLAG_PPWAIT: kotlin.Int = 0

const val PROC_FLAG_PSUGID: kotlin.Int = 0

const val PROC_FLAG_SLEADER: kotlin.Int = 0

const val PROC_FLAG_SYSTEM: kotlin.Int = 0

const val PROC_FLAG_THCWD: kotlin.Int = 0

const val PROC_FLAG_TRACED: kotlin.Int = 0

const val PROC_FP_CLEXEC: kotlin.Int = 0

const val PROC_FP_CLFORK: kotlin.Int = 0

const val PROC_FP_GUARDED: kotlin.Int = 0

const val PROC_FP_SHARED: kotlin.Int = 0

const val PROC_KDBG_ONLY: kotlin.Int = 0

const val PROC_KQUEUE_32: kotlin.Int = 0

const val PROC_KQUEUE_64: kotlin.Int = 0

const val PROC_KQUEUE_QOS: kotlin.Int = 0

const val PROC_KQUEUE_SELECT: kotlin.Int = 0

const val PROC_KQUEUE_SLEEP: kotlin.Int = 0

const val PROC_LISTPIDSPATH_EXCLUDE_EVTONLY: kotlin.Int = 0

const val PROC_LISTPIDSPATH_PATH_IS_VOLUME: kotlin.Int = 0

const val PROC_PGRP_ONLY: kotlin.Int = 0

const val PROC_PIDFDATALKINFO: kotlin.Int = 0

const val PROC_PIDFDATALKINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDKQUEUEINFO: kotlin.Int = 0

const val PROC_PIDFDKQUEUEINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDPIPEINFO: kotlin.Int = 0

const val PROC_PIDFDPIPEINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDPSEMINFO: kotlin.Int = 0

const val PROC_PIDFDPSEMINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDPSHMINFO: kotlin.Int = 0

const val PROC_PIDFDPSHMINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDSOCKETINFO: kotlin.Int = 0

const val PROC_PIDFDSOCKETINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDVNODEINFO: kotlin.Int = 0

const val PROC_PIDFDVNODEINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFDVNODEPATHINFO: kotlin.Int = 0

const val PROC_PIDFDVNODEPATHINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFILEPORTPIPEINFO: kotlin.Int = 0

const val PROC_PIDFILEPORTPIPEINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFILEPORTPSHMINFO: kotlin.Int = 0

const val PROC_PIDFILEPORTPSHMINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFILEPORTSOCKETINFO: kotlin.Int = 0

const val PROC_PIDFILEPORTSOCKETINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDFILEPORTVNODEPATHINFO: kotlin.Int = 0

const val PROC_PIDFILEPORTVNODEPATHINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDLISTFDS: kotlin.Int = 0

const val PROC_PIDLISTFD_SIZE: kotlin.ULong = 0u

const val PROC_PIDLISTFILEPORTS: kotlin.Int = 0

const val PROC_PIDLISTFILEPORTS_SIZE: kotlin.ULong = 0u

const val PROC_PIDLISTTHREADS: kotlin.Int = 0

const val PROC_PIDLISTTHREADS_SIZE: kotlin.ULong = 0u

const val PROC_PIDPATHINFO: kotlin.Int = 0

const val PROC_PIDPATHINFO_MAXSIZE: kotlin.Int = 0

const val PROC_PIDPATHINFO_SIZE: kotlin.Int = 0

const val PROC_PIDREGIONINFO: kotlin.Int = 0

const val PROC_PIDREGIONINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDREGIONPATHINFO: kotlin.Int = 0

const val PROC_PIDREGIONPATHINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTASKALLINFO: kotlin.Int = 0

const val PROC_PIDTASKALLINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTASKINFO: kotlin.Int = 0

const val PROC_PIDTASKINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTBSDINFO: kotlin.Int = 0

const val PROC_PIDTBSDINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTHREADID64INFO: kotlin.Int = 0

const val PROC_PIDTHREADID64INFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTHREADINFO: kotlin.Int = 0

const val PROC_PIDTHREADINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDTHREADPATHINFO: kotlin.Int = 0

const val PROC_PIDTHREADPATHINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDT_SHORTBSDINFO: kotlin.Int = 0

const val PROC_PIDT_SHORTBSDINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDVNODEPATHINFO: kotlin.Int = 0

const val PROC_PIDVNODEPATHINFO_SIZE: kotlin.ULong = 0u

const val PROC_PIDWORKQUEUEINFO: kotlin.Int = 0

const val PROC_PIDWORKQUEUEINFO_SIZE: kotlin.ULong = 0u

const val PROC_PID_RUSAGE: kotlin.Int = 0

const val PROC_PID_RUSAGE_SIZE: kotlin.Int = 0

const val PROC_PPID_ONLY: kotlin.Int = 0

const val PROC_REGION_SHARED: kotlin.Int = 0

const val PROC_REGION_SUBMAP: kotlin.Int = 0

const val PROC_RUID_ONLY: kotlin.Int = 0

const val PROC_SELFSET_DELAYIDLESLEEP: kotlin.Int = 0

const val PROC_SELFSET_PCONTROL: kotlin.Int = 0

const val PROC_SELFSET_THREADNAME: kotlin.Int = 0

const val PROC_SELFSET_THREADNAME_SIZE: kotlin.Int = 0

const val PROC_SELFSET_VMRSRCOWNER: kotlin.Int = 0

const val PROC_SETPC_NONE: kotlin.Int = 0

const val PROC_SETPC_SUSPEND: kotlin.Int = 0

const val PROC_SETPC_TERMINATE: kotlin.Int = 0

const val PROC_SETPC_THROTTLEMEM: kotlin.Int = 0

const val PROC_TTY_ONLY: kotlin.Int = 0

const val PROC_UDATA_INFO_GET: kotlin.Int = 0

const val PROC_UDATA_INFO_SET: kotlin.Int = 0

const val PROC_UID_ONLY: kotlin.Int = 0

const val PROFILE_ITER_LIST_SECTION: kotlin.Int = 0

const val PROFILE_ITER_RELATIONS_ONLY: kotlin.Int = 0

const val PROFILE_ITER_SECTIONS_ONLY: kotlin.Int = 0

const val PROF_ADD_NOT_SECTION: kotlin.Long = 0L

const val PROF_BAD_BOOLEAN: kotlin.Long = 0L

const val PROF_BAD_GROUP_LVL: kotlin.Long = 0L

const val PROF_BAD_INTEGER: kotlin.Long = 0L

const val PROF_BAD_LINK_LIST: kotlin.Long = 0L

const val PROF_BAD_NAMESET: kotlin.Long = 0L

const val PROF_BAD_PARENT_PTR: kotlin.Long = 0L

const val PROF_EINVAL: kotlin.Long = 0L

const val PROF_END_OF_SECTIONS: kotlin.Long = 0L

const val PROF_EXISTS: kotlin.Long = 0L

const val PROF_EXTRA_CBRACE: kotlin.Long = 0L

const val PROF_FAIL_OPEN: kotlin.Long = 0L

const val PROF_INVALID_SECTION: kotlin.Long = 0L

const val PROF_MAGIC_FILE: kotlin.Long = 0L

const val PROF_MAGIC_FILE_DATA: kotlin.Long = 0L

const val PROF_MAGIC_ITERATOR: kotlin.Long = 0L

const val PROF_MAGIC_NODE: kotlin.Long = 0L

const val PROF_MAGIC_PROFILE: kotlin.Long = 0L

const val PROF_MAGIC_SECTION: kotlin.Long = 0L

const val PROF_MISSING_OBRACE: kotlin.Long = 0L

const val PROF_NO_PROFILE: kotlin.Long = 0L

const val PROF_NO_RELATION: kotlin.Long = 0L

const val PROF_NO_SECTION: kotlin.Long = 0L

const val PROF_READ_ONLY: kotlin.Long = 0L

const val PROF_RELATION_SYNTAX: kotlin.Long = 0L

const val PROF_SECTION_NOTOP: kotlin.Long = 0L

const val PROF_SECTION_SYNTAX: kotlin.Long = 0L

const val PROF_SECTION_WITH_VALUE: kotlin.Long = 0L

const val PROF_SET_SECTION_VALUE: kotlin.Long = 0L

const val PROF_TOPSECTION_ITER_NOSUPP: kotlin.Long = 0L

const val PROF_VERSION: kotlin.Long = 0L

const val PROTO_UNDEF: kotlin.Int = 0

const val PROX_FDTYPE_ATALK: kotlin.Int = 0

const val PROX_FDTYPE_FSEVENTS: kotlin.Int = 0

const val PROX_FDTYPE_KQUEUE: kotlin.Int = 0

const val PROX_FDTYPE_NETPOLICY: kotlin.Int = 0

const val PROX_FDTYPE_PIPE: kotlin.Int = 0

const val PROX_FDTYPE_PSEM: kotlin.Int = 0

const val PROX_FDTYPE_PSHM: kotlin.Int = 0

const val PROX_FDTYPE_SOCKET: kotlin.Int = 0

const val PROX_FDTYPE_VNODE: kotlin.Int = 0

val RANLIBMAG: kotlin.String
    get() = TODO()

const val RANLIBSKEW: kotlin.Int = 0

const val REPORT_MOUSE_POSITION: kotlin.Long = 0L

const val REQ_BEG_FIELD: kotlin.Int = 0

const val REQ_BEG_LINE: kotlin.Int = 0

const val REQ_CLR_EOF: kotlin.Int = 0

const val REQ_CLR_EOL: kotlin.Int = 0

const val REQ_CLR_FIELD: kotlin.Int = 0

const val REQ_DEL_CHAR: kotlin.Int = 0

const val REQ_DEL_LINE: kotlin.Int = 0

const val REQ_DEL_PREV: kotlin.Int = 0

const val REQ_DEL_WORD: kotlin.Int = 0

const val REQ_DOWN_CHAR: kotlin.Int = 0

const val REQ_DOWN_FIELD: kotlin.Int = 0

const val REQ_END_FIELD: kotlin.Int = 0

const val REQ_END_LINE: kotlin.Int = 0

const val REQ_FIRST_FIELD: kotlin.Int = 0

const val REQ_FIRST_PAGE: kotlin.Int = 0

const val REQ_INS_CHAR: kotlin.Int = 0

const val REQ_INS_LINE: kotlin.Int = 0

const val REQ_INS_MODE: kotlin.Int = 0

const val REQ_LAST_FIELD: kotlin.Int = 0

const val REQ_LAST_PAGE: kotlin.Int = 0

const val REQ_LEFT_CHAR: kotlin.Int = 0

const val REQ_LEFT_FIELD: kotlin.Int = 0

const val REQ_NEW_LINE: kotlin.Int = 0

const val REQ_NEXT_CHAR: kotlin.Int = 0

const val REQ_NEXT_CHOICE: kotlin.Int = 0

const val REQ_NEXT_FIELD: kotlin.Int = 0

const val REQ_NEXT_LINE: kotlin.Int = 0

const val REQ_NEXT_PAGE: kotlin.Int = 0

const val REQ_NEXT_WORD: kotlin.Int = 0

const val REQ_OVL_MODE: kotlin.Int = 0

const val REQ_PREV_CHAR: kotlin.Int = 0

const val REQ_PREV_CHOICE: kotlin.Int = 0

const val REQ_PREV_FIELD: kotlin.Int = 0

const val REQ_PREV_LINE: kotlin.Int = 0

const val REQ_PREV_PAGE: kotlin.Int = 0

const val REQ_PREV_WORD: kotlin.Int = 0

const val REQ_RIGHT_CHAR: kotlin.Int = 0

const val REQ_RIGHT_FIELD: kotlin.Int = 0

const val REQ_SCR_BCHAR: kotlin.Int = 0

const val REQ_SCR_BHPAGE: kotlin.Int = 0

const val REQ_SCR_BLINE: kotlin.Int = 0

const val REQ_SCR_BPAGE: kotlin.Int = 0

const val REQ_SCR_FCHAR: kotlin.Int = 0

const val REQ_SCR_FHPAGE: kotlin.Int = 0

const val REQ_SCR_FLINE: kotlin.Int = 0

const val REQ_SCR_FPAGE: kotlin.Int = 0

const val REQ_SCR_HBHALF: kotlin.Int = 0

const val REQ_SCR_HBLINE: kotlin.Int = 0

const val REQ_SCR_HFHALF: kotlin.Int = 0

const val REQ_SCR_HFLINE: kotlin.Int = 0

const val REQ_SFIRST_FIELD: kotlin.Int = 0

const val REQ_SLAST_FIELD: kotlin.Int = 0

const val REQ_SNEXT_FIELD: kotlin.Int = 0

const val REQ_SPREV_FIELD: kotlin.Int = 0

const val REQ_UP_CHAR: kotlin.Int = 0

const val REQ_UP_FIELD: kotlin.Int = 0

const val REQ_VALIDATION: kotlin.Int = 0

const val SALT_TYPE_AFS_LENGTH: kotlin.UInt = 0u

const val SALT_TYPE_NO_LENGTH: kotlin.UInt = 0u

const val SEARCHFS_MAX_SEARCHPARMS: kotlin.Int = 0

const val SEC: kotlin.Int = 0

const val SECSPERDAY: kotlin.Long = 0L

const val SECSPERHOUR: kotlin.Int = 0

const val SECSPERMIN: kotlin.Int = 0

const val SM_COW: kotlin.Int = 0

const val SM_EMPTY: kotlin.Int = 0

const val SM_LARGE_PAGE: kotlin.Int = 0

const val SM_PRIVATE: kotlin.Int = 0

const val SM_PRIVATE_ALIASED: kotlin.Int = 0

const val SM_SHARED: kotlin.Int = 0

const val SM_SHARED_ALIASED: kotlin.Int = 0

const val SM_TRUESHARED: kotlin.Int = 0

val SOCKINFO_GENERIC: kotlin.UInt
    get() = TODO()

val SOCKINFO_IN: kotlin.UInt
    get() = TODO()

val SOCKINFO_KERN_CTL: kotlin.UInt
    get() = TODO()

val SOCKINFO_KERN_EVENT: kotlin.UInt
    get() = TODO()

val SOCKINFO_NDRV: kotlin.UInt
    get() = TODO()

val SOCKINFO_TCP: kotlin.UInt
    get() = TODO()

val SOCKINFO_UN: kotlin.UInt
    get() = TODO()

const val SOI_S_ASYNC: kotlin.Int = 0

const val SOI_S_CANTRCVMORE: kotlin.Int = 0

const val SOI_S_CANTSENDMORE: kotlin.Int = 0

const val SOI_S_COMP: kotlin.Int = 0

const val SOI_S_DRAINING: kotlin.Int = 0

const val SOI_S_INCOMP: kotlin.Int = 0

const val SOI_S_ISCONNECTED: kotlin.Int = 0

const val SOI_S_ISCONNECTING: kotlin.Int = 0

const val SOI_S_ISDISCONNECTED: kotlin.Int = 0

const val SOI_S_ISDISCONNECTING: kotlin.Int = 0

const val SOI_S_NBIO: kotlin.Int = 0

const val SOI_S_NOFDREF: kotlin.Int = 0

const val SOI_S_PRIV: kotlin.Int = 0

const val SOI_S_RCVATMARK: kotlin.Int = 0

const val SOL_LOCAL: kotlin.Int = 0

const val SRCHFS_MATCHDIRS: kotlin.Int = 0

const val SRCHFS_MATCHFILES: kotlin.Int = 0

const val SRCHFS_MATCHPARTIALNAMES: kotlin.Int = 0

const val SRCHFS_NEGATEPARAMS: kotlin.UInt = 0u

const val SRCHFS_SKIPINAPPROPRIATE: kotlin.Int = 0

const val SRCHFS_SKIPINVISIBLE: kotlin.Int = 0

const val SRCHFS_SKIPLINKS: kotlin.Int = 0

const val SRCHFS_SKIPPACKAGES: kotlin.Int = 0

const val SRCHFS_START: kotlin.Int = 0

const val SRCHFS_VALIDOPTIONSMASK: kotlin.UInt = 0u

const val SS_TH_IDLE: kotlin.Int = 0

const val SS_TH_RUN: kotlin.Int = 0

const val SS_TH_SUSP: kotlin.Int = 0

const val SS_TH_TERMINATE: kotlin.Int = 0

const val SS_TH_TERMINATE2: kotlin.Int = 0

const val SS_TH_UNINT: kotlin.Int = 0

const val SS_TH_WAIT: kotlin.Int = 0

const val STACKSHOT_IO_NUM_PRIORITIES: kotlin.Int = 0

const val STACKSHOT_KCCONTAINER_TASK: kotlin.UInt = 0u

const val STACKSHOT_KCCONTAINER_THREAD: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_ASID: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_BOOTARGS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_CPU_TIMES: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_DELTA_SINCE_TIMESTAMP: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_DONATING_PIDS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_GLOBAL_MEM_STATS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_INSTRS_CYCLES: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_IOSTATS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_JETSAM_COALITION: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_JETSAM_COALITION_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_JETSAM_LEVEL: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERNELCACHE_LOADINFO: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERN_PAGE_SIZE: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERN_STACKFRAME: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERN_STACKFRAME64: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERN_STACKLR: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_KERN_STACKLR64: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_NONRUNNABLE_TASKS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_NONRUNNABLE_TIDS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_OSVERSION: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_PAGE_TABLES: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_SHAREDCACHE_LOADINFO: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_STACKSHOT_DURATION: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_STACKSHOT_FAULT_STATS: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_SYS_SHAREDCACHE_LAYOUT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_TASK_DELTA_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_TASK_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_DELTA_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_GROUP: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_GROUP_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_NAME: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_POLICY_VERSION: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_SNAPSHOT: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_THREAD_WAITINFO: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_USER_STACKFRAME: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_USER_STACKFRAME64: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_USER_STACKLR: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_USER_STACKLR64: kotlin.UInt = 0u

const val STACKSHOT_KCTYPE_USER_STACKTOP: kotlin.UInt = 0u

const val STACKSHOT_MAX_THREAD_NAME_SIZE: kotlin.Int = 0

const val STACKSHOT_WAITOWNER_INTRANSIT: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_KERNEL: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_MTXSPIN: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_PORT_LOCKED: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_PSET_LOCKED: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_SUSPENDED: kotlin.ULong = 0u

const val STACKSHOT_WAITOWNER_THREQUESTED: kotlin.ULong = 0u

const val STRCOUNT: kotlin.Int = 0

const val STRING: kotlin.Int = 0

const val STRWRITE: kotlin.Int = 0

const val SUB_AID_MAX: kotlin.ULong = 0u

val SYMDEF: kotlin.String
    get() = TODO()

val SYMDEF_SORTED: kotlin.String
    get() = TODO()

const val SYN_TERMCAP: kotlin.Int = 0

const val SYN_TERMINFO: kotlin.Int = 0

var TABSIZE: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

const val TASK_CRASHINFO_ARGSLEN: kotlin.Int = 0

const val TASK_CRASHINFO_BEGIN: kotlin.UInt = 0u

const val TASK_CRASHINFO_BSDINFOWITHUNIQID: kotlin.Int = 0

const val TASK_CRASHINFO_COALITION_ID: kotlin.Int = 0

const val TASK_CRASHINFO_CPUTYPE: kotlin.Int = 0

const val TASK_CRASHINFO_CRASHED_THREADID: kotlin.Int = 0

const val TASK_CRASHINFO_DIRTY_FLAGS: kotlin.Int = 0

const val TASK_CRASHINFO_END: kotlin.UInt = 0u

const val TASK_CRASHINFO_EXCEPTION_CODES: kotlin.Int = 0

const val TASK_CRASHINFO_EXTMODINFO: kotlin.Int = 0

const val TASK_CRASHINFO_GID: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_ALTERNATE_ACCOUNTING: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_ALTERNATE_ACCOUNTING_COMPRESSED: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_INTERNAL: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_INTERNAL_COMPRESSED: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_IOKIT_MAPPED: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_NETWORK_NONVOLATILE: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_NETWORK_NONVOLATILE_COMPRESSED: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_PAGE_TABLE: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_PHYS_FOOTPRINT: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_PHYS_FOOTPRINT_LIFETIME_MAX: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_PURGEABLE_NONVOLATILE: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_PURGEABLE_NONVOLATILE_COMPRESSED: kotlin.Int = 0

const val TASK_CRASHINFO_LEDGER_WIRED_MEM: kotlin.Int = 0

const val TASK_CRASHINFO_MEMORY_LIMIT: kotlin.Int = 0

const val TASK_CRASHINFO_PID: kotlin.Int = 0

const val TASK_CRASHINFO_PPID: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_ARGC: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_CSFLAGS: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_FLAGS: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_NAME: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_PATH: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_STARTTIME: kotlin.Int = 0

const val TASK_CRASHINFO_PROC_STATUS: kotlin.Int = 0

const val TASK_CRASHINFO_RESPONSIBLE_PID: kotlin.Int = 0

const val TASK_CRASHINFO_RUSAGE: kotlin.Int = 0

const val TASK_CRASHINFO_RUSAGE_INFO: kotlin.Int = 0

const val TASK_CRASHINFO_STRING_DESC: kotlin.UInt = 0u

const val TASK_CRASHINFO_TASKDYLD_INFO: kotlin.Int = 0

const val TASK_CRASHINFO_UDATA_PTRS: kotlin.Int = 0

const val TASK_CRASHINFO_UID: kotlin.Int = 0

const val TASK_CRASHINFO_UINT32_DESC: kotlin.UInt = 0u

const val TASK_CRASHINFO_UINT64_DESC: kotlin.UInt = 0u

const val TASK_CRASHINFO_USERSTACK: kotlin.Int = 0

const val TASK_CRASHINFO_UUID: kotlin.Int = 0

const val TASK_CRASHINFO_WORKQUEUEINFO: kotlin.Int = 0

val TERMINFO: kotlin.String
    get() = TODO()

const val TERMIOS: kotlin.Int = 0

const val TH_FLAGS_IDLE: kotlin.Int = 0

const val TH_FLAGS_SWAPPED: kotlin.Int = 0

const val TH_STATE_HALTED: kotlin.Int = 0

const val TH_STATE_RUNNING: kotlin.Int = 0

const val TH_STATE_STOPPED: kotlin.Int = 0

const val TH_STATE_UNINTERRUPTIBLE: kotlin.Int = 0

const val TH_STATE_WAITING: kotlin.Int = 0

const val TKT_FLG_ANONYMOUS: kotlin.Int = 0

const val TKT_FLG_FORWARDABLE: kotlin.Int = 0

const val TKT_FLG_FORWARDED: kotlin.Int = 0

const val TKT_FLG_HW_AUTH: kotlin.Int = 0

const val TKT_FLG_INITIAL: kotlin.Int = 0

const val TKT_FLG_INVALID: kotlin.Int = 0

const val TKT_FLG_MAY_POSTDATE: kotlin.Int = 0

const val TKT_FLG_OK_AS_DELEGATE: kotlin.Int = 0

const val TKT_FLG_POSTDATED: kotlin.Int = 0

const val TKT_FLG_PRE_AUTH: kotlin.Int = 0

const val TKT_FLG_PROXIABLE: kotlin.Int = 0

const val TKT_FLG_PROXY: kotlin.Int = 0

const val TKT_FLG_RENEWABLE: kotlin.Int = 0

const val TKT_FLG_TRANSIT_POLICY_CHECKED: kotlin.Int = 0

const val TM_APRIL: kotlin.Int = 0

const val TM_AUGUST: kotlin.Int = 0

const val TM_DECEMBER: kotlin.Int = 0

const val TM_FEBRUARY: kotlin.Int = 0

const val TM_FRIDAY: kotlin.Int = 0

const val TM_JANUARY: kotlin.Int = 0

const val TM_JULY: kotlin.Int = 0

const val TM_JUNE: kotlin.Int = 0

const val TM_MARCH: kotlin.Int = 0

const val TM_MAY: kotlin.Int = 0

const val TM_MONDAY: kotlin.Int = 0

const val TM_NOVEMBER: kotlin.Int = 0

const val TM_OCTOBER: kotlin.Int = 0

const val TM_SATURDAY: kotlin.Int = 0

const val TM_SEPTEMBER: kotlin.Int = 0

const val TM_SUNDAY: kotlin.Int = 0

const val TM_THURSDAY: kotlin.Int = 0

const val TM_TUESDAY: kotlin.Int = 0

const val TM_WEDNESDAY: kotlin.Int = 0

const val TM_YEAR_BASE: kotlin.Int = 0

const val TRACE_ATTRS: kotlin.Int = 0

const val TRACE_BITS: kotlin.Int = 0

const val TRACE_CALLS: kotlin.Int = 0

const val TRACE_CCALLS: kotlin.Int = 0

const val TRACE_CHARPUT: kotlin.Int = 0

const val TRACE_DATABASE: kotlin.Int = 0

const val TRACE_DISABLE: kotlin.Int = 0

const val TRACE_ICALLS: kotlin.Int = 0

const val TRACE_IEVENT: kotlin.Int = 0

const val TRACE_MAXIMUM: kotlin.Int = 0

const val TRACE_MOVE: kotlin.Int = 0

const val TRACE_ORDINARY: kotlin.Int = 0

const val TRACE_SHIFT: kotlin.Int = 0

const val TRACE_TIMES: kotlin.Int = 0

const val TRACE_TPUTS: kotlin.Int = 0

const val TRACE_UPDATE: kotlin.Int = 0

const val TRACE_VIRTPUT: kotlin.Int = 0

const val TRUE: kotlin.Int = 0

const val TSI_S_CLOSED: kotlin.Int = 0

const val TSI_S_CLOSING: kotlin.Int = 0

const val TSI_S_ESTABLISHED: kotlin.Int = 0

const val TSI_S_FIN_WAIT_1: kotlin.Int = 0

const val TSI_S_FIN_WAIT_2: kotlin.Int = 0

const val TSI_S_LAST_ACK: kotlin.Int = 0

const val TSI_S_LISTEN: kotlin.Int = 0

const val TSI_S_RESERVED: kotlin.Int = 0

const val TSI_S_SYN_RECEIVED: kotlin.Int = 0

const val TSI_S_SYN_SENT: kotlin.Int = 0

const val TSI_S_TIME_WAIT: kotlin.Int = 0

const val TSI_S__CLOSE_WAIT: kotlin.Int = 0

const val TSI_T_2MSL: kotlin.Int = 0

const val TSI_T_KEEP: kotlin.Int = 0

const val TSI_T_NTIMERS: kotlin.Int = 0

const val TSI_T_PERSIST: kotlin.Int = 0

const val TSI_T_REXMT: kotlin.Int = 0

var TYPE_ALNUM: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_ALPHA: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_ENUM: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_INTEGER: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_IPV4: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_NUMERIC: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

var TYPE_REGEXP: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?) = TODO()

val TZDEFAULT: kotlin.String
    get() = TODO()

val TZDEFRULES: kotlin.String
    get() = TODO()

val TZDIR: kotlin.String
    get() = TODO()

val TZ_MAGIC: kotlin.String
    get() = TODO()

const val TZ_MAX_CHARS: kotlin.Int = 0

const val TZ_MAX_LEAPS: kotlin.Int = 0

const val TZ_MAX_TIMES: kotlin.Int = 0

const val TZ_MAX_TYPES: kotlin.Int = 0

const val UNDEF: kotlin.Int = 0

const val UNKNOWNGID: platform.posix.gid_t /* = kotlin.UInt */ = 0u

const val UNKNOWNPERMISSIONS: kotlin.Int = 0

const val UNKNOWNUID: platform.posix.uid_t /* = kotlin.UInt */ = 0u

var UP: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

const val VALID_INT_BITS: kotlin.Int = 0

const val VALID_UINT_BITS: kotlin.UInt = 0u

const val VFS_CONF: kotlin.Int = 0

const val VFS_CTL_DISC: kotlin.Int = 0

const val VFS_CTL_NEWADDR: kotlin.Int = 0

const val VFS_CTL_NOLOCKS: kotlin.Int = 0

const val VFS_CTL_NSTATUS: kotlin.Int = 0

const val VFS_CTL_QUERY: kotlin.Int = 0

const val VFS_CTL_SADDR: kotlin.Int = 0

const val VFS_CTL_SERVERINFO: kotlin.Int = 0

const val VFS_CTL_STATFS: kotlin.Int = 0

const val VFS_CTL_TIMEO: kotlin.Int = 0

const val VFS_CTL_UMOUNT: kotlin.Int = 0

const val VFS_CTL_VERS1: kotlin.Int = 0

const val VFS_GENERIC: kotlin.Int = 0

const val VFS_MAXTYPENUM: kotlin.Int = 0

const val VFS_NUMMNTOPS: kotlin.Int = 0

const val VOL_CAPABILITIES_FORMAT: kotlin.Int = 0

const val VOL_CAPABILITIES_INTERFACES: kotlin.Int = 0

const val VOL_CAPABILITIES_RESERVED1: kotlin.Int = 0

const val VOL_CAPABILITIES_RESERVED2: kotlin.Int = 0

const val VOL_CAP_FMT_2TB_FILESIZE: kotlin.Int = 0

const val VOL_CAP_FMT_64BIT_OBJECT_IDS: kotlin.Int = 0

const val VOL_CAP_FMT_CASE_PRESERVING: kotlin.Int = 0

const val VOL_CAP_FMT_CASE_SENSITIVE: kotlin.Int = 0

const val VOL_CAP_FMT_DECMPFS_COMPRESSION: kotlin.Int = 0

const val VOL_CAP_FMT_DIR_HARDLINKS: kotlin.Int = 0

const val VOL_CAP_FMT_DOCUMENT_ID: kotlin.Int = 0

const val VOL_CAP_FMT_FAST_STATFS: kotlin.Int = 0

const val VOL_CAP_FMT_HARDLINKS: kotlin.Int = 0

const val VOL_CAP_FMT_HIDDEN_FILES: kotlin.Int = 0

const val VOL_CAP_FMT_JOURNAL: kotlin.Int = 0

const val VOL_CAP_FMT_JOURNAL_ACTIVE: kotlin.Int = 0

const val VOL_CAP_FMT_NO_IMMUTABLE_FILES: kotlin.Int = 0

const val VOL_CAP_FMT_NO_PERMISSIONS: kotlin.Int = 0

const val VOL_CAP_FMT_NO_ROOT_TIMES: kotlin.Int = 0

const val VOL_CAP_FMT_NO_VOLUME_SIZES: kotlin.Int = 0

const val VOL_CAP_FMT_OPENDENYMODES: kotlin.Int = 0

const val VOL_CAP_FMT_PATH_FROM_ID: kotlin.Int = 0

const val VOL_CAP_FMT_PERSISTENTOBJECTIDS: kotlin.Int = 0

const val VOL_CAP_FMT_SPARSE_FILES: kotlin.Int = 0

const val VOL_CAP_FMT_SYMBOLICLINKS: kotlin.Int = 0

const val VOL_CAP_FMT_WRITE_GENERATION_COUNT: kotlin.Int = 0

const val VOL_CAP_FMT_ZERO_RUNS: kotlin.Int = 0

const val VOL_CAP_INT_ADVLOCK: kotlin.Int = 0

const val VOL_CAP_INT_ALLOCATE: kotlin.Int = 0

const val VOL_CAP_INT_ATTRLIST: kotlin.Int = 0

const val VOL_CAP_INT_CLONE: kotlin.Int = 0

const val VOL_CAP_INT_COPYFILE: kotlin.Int = 0

const val VOL_CAP_INT_EXCHANGEDATA: kotlin.Int = 0

const val VOL_CAP_INT_EXTENDED_ATTR: kotlin.Int = 0

const val VOL_CAP_INT_EXTENDED_SECURITY: kotlin.Int = 0

const val VOL_CAP_INT_FLOCK: kotlin.Int = 0

const val VOL_CAP_INT_MANLOCK: kotlin.Int = 0

const val VOL_CAP_INT_NAMEDSTREAMS: kotlin.Int = 0

const val VOL_CAP_INT_NFSEXPORT: kotlin.Int = 0

const val VOL_CAP_INT_READDIRATTR: kotlin.Int = 0

const val VOL_CAP_INT_RENAME_EXCL: kotlin.Int = 0

const val VOL_CAP_INT_RENAME_SWAP: kotlin.Int = 0

const val VOL_CAP_INT_SEARCHFS: kotlin.Int = 0

const val VOL_CAP_INT_SNAPSHOT: kotlin.Int = 0

const val VOL_CAP_INT_USERACCESS: kotlin.Int = 0

const val VOL_CAP_INT_VOL_RENAME: kotlin.Int = 0

const val VQ_ASSIST: kotlin.Int = 0

const val VQ_DEAD: kotlin.Int = 0

const val VQ_DESIRED_DISK: kotlin.Int = 0

const val VQ_FLAG8000: kotlin.Int = 0

const val VQ_LOWDISK: kotlin.Int = 0

const val VQ_MOUNT: kotlin.Int = 0

const val VQ_NEARLOWDISK: kotlin.Int = 0

const val VQ_NEEDAUTH: kotlin.Int = 0

const val VQ_NOTRESP: kotlin.Int = 0

const val VQ_NOTRESPLOCK: kotlin.Int = 0

const val VQ_QUOTA: kotlin.Int = 0

const val VQ_SERVEREVENT: kotlin.Int = 0

const val VQ_SYNCEVENT: kotlin.Int = 0

const val VQ_UNMOUNT: kotlin.Int = 0

const val VQ_UPDATE: kotlin.Int = 0

const val VQ_VERYLOWDISK: kotlin.Int = 0

const val WA_ALTCHARSET: kotlin.UInt = 0u

const val WA_ATTRIBUTES: kotlin.UInt = 0u

const val WA_BLINK: kotlin.UInt = 0u

const val WA_BOLD: kotlin.UInt = 0u

const val WA_DIM: kotlin.UInt = 0u

const val WA_HORIZONTAL: kotlin.UInt = 0u

const val WA_INVIS: kotlin.UInt = 0u

const val WA_LEFT: kotlin.UInt = 0u

const val WA_LOW: kotlin.UInt = 0u

const val WA_NORMAL: kotlin.UInt = 0u

const val WA_PROTECT: kotlin.UInt = 0u

const val WA_REVERSE: kotlin.UInt = 0u

const val WA_RIGHT: kotlin.UInt = 0u

const val WA_STANDOUT: kotlin.UInt = 0u

const val WA_TOP: kotlin.UInt = 0u

const val WA_UNDERLINE: kotlin.UInt = 0u

const val WA_VERTICAL: kotlin.UInt = 0u

const val WQ_EXCEEDED_CONSTRAINED_THREAD_LIMIT: kotlin.Int = 0

const val WQ_EXCEEDED_TOTAL_THREAD_LIMIT: kotlin.Int = 0

const val WQ_FLAGS_AVAILABLE: kotlin.Int = 0

val XML_CTYPE_ANY: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

val XML_CTYPE_CHOICE: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

val XML_CTYPE_EMPTY: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

val XML_CTYPE_MIXED: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

val XML_CTYPE_NAME: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

val XML_CTYPE_SEQ: platform.osx.XML_Content_Type /* = kotlin.UInt */
    get() = TODO()

const val XML_FALSE: platform.osx.XML_Bool /* = kotlin.UByte */ = 0u

val XML_FEATURE_ATTR_INFO: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_CONTEXT_BYTES: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_DTD: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_END: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_LARGE_SIZE: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_MIN_SIZE: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_NS: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_SIZEOF_XML_CHAR: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_SIZEOF_XML_LCHAR: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_UNICODE: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

val XML_FEATURE_UNICODE_WCHAR_T: platform.osx.XML_FeatureEnum /* = kotlin.UInt */
    get() = TODO()

const val XML_MAJOR_VERSION: kotlin.Int = 0

const val XML_MICRO_VERSION: kotlin.Int = 0

const val XML_MINOR_VERSION: kotlin.Int = 0

const val XML_STATUS_ERROR: kotlin.Int = 0

const val XML_STATUS_OK: kotlin.Int = 0

const val XML_STATUS_SUSPENDED: kotlin.Int = 0

const val XML_TRUE: platform.osx.XML_Bool /* = kotlin.UByte */ = 0u

const val XNUPOST_KCTYPE_TESTCONFIG: kotlin.Int = 0

const val XUCRED_VERSION: kotlin.Int = 0

const val _ENDLINE: kotlin.Int = 0

const val _FULLWIN: kotlin.Int = 0

const val _HASMOVED: kotlin.Int = 0

const val _ISPAD: kotlin.Int = 0

const val _NEWINDEX: kotlin.Int = 0

const val _NOCHANGE: kotlin.Int = 0

val _PATH_LOCALE: kotlin.String
    get() = TODO()

const val _SCROLLWIN: kotlin.Int = 0

const val _SUBWIN: kotlin.Int = 0

const val _WRAPPED: kotlin.Int = 0

var _dtrace_disallow_dsym: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

val _dtrace_version: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
    get() = TODO()

var _nc_Default_Field: kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?) = TODO()

var _nc_Default_Form: kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) = TODO()

var _nc_check_termtype: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) -> kotlin.Unit>>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) -> kotlin.Unit>>?) = TODO()

var _nc_check_termtype2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, kotlin.Boolean) -> kotlin.Unit>>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, kotlin.Boolean) -> kotlin.Unit>>?) = TODO()

var _nc_comment_end: kotlin.Long
    get() = TODO()
    set(value: kotlin.Long) = TODO()

var _nc_comment_start: kotlin.Long
    get() = TODO()
    set(value: kotlin.Long) = TODO()

var _nc_curr_col: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

var _nc_curr_file_pos: kotlin.Long
    get() = TODO()
    set(value: kotlin.Long) = TODO()

var _nc_curr_line: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

val _nc_curr_token: platform.osx.token
    get() = TODO()

var _nc_disable_period: kotlin.Boolean
    get() = TODO()
    set(value: kotlin.Boolean) = TODO()

var _nc_head: kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>?) = TODO()

var _nc_nulls_sent: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

var _nc_start_line: kotlin.Long
    get() = TODO()
    set(value: kotlin.Long) = TODO()

var _nc_suppress_warnings: kotlin.Boolean
    get() = TODO()
    set(value: kotlin.Boolean) = TODO()

var _nc_syntax: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

var _nc_tail: kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>?) = TODO()

val _nc_tinfo_fkeys: kotlinx.cinterop.CArrayPointer<platform.osx.tinfo_fkeys> /* = kotlinx.cinterop.CPointer<platform.osx.tinfo_fkeys> */
    get() = TODO()

var _nc_tparm_err: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

var _nc_tracing: kotlin.UInt
    get() = TODO()
    set(value: kotlin.UInt) = TODO()

var _nc_user_definable: kotlin.Boolean
    get() = TODO()
    set(value: kotlin.Boolean) = TODO()

const val acs_chars_index: kotlin.Int = 0

val acs_map: kotlinx.cinterop.CArrayPointer<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */>> */
    get() = TODO()

const val asn1_err_base: kotlin.Long = 0L

var ber_pvt_opt_on: kotlin.Byte
    get() = TODO()
    set(value: kotlin.Byte) = TODO()

val boolcodes: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val boolfnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val boolnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

var bootstrap_port: platform.darwin.mach_port_t /* = kotlin.UInt */
    get() = TODO()
    set(value: platform.darwin.mach_port_t /* = kotlin.UInt */) = TODO()

var cur_term: kotlinx.cinterop.CPointer<platform.osx.TERMINAL /* = platform.osx.term */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.TERMINAL /* = platform.osx.term */>?) = TODO()

var curscr: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

val dbdLAST: platform.osx.DBDIRS /* = kotlin.UInt */
    get() = TODO()

val dbdTIC: platform.osx.DBDIRS /* = kotlin.UInt */
    get() = TODO()

val eNoteExitReparentedDeprecated: kotlin.UInt
    get() = TODO()

val eNoteReapDeprecated: kotlin.UInt
    get() = TODO()

const val k524_err_base: kotlin.Long = 0L

val kBTBadCloseMask: kotlin.UInt
    get() = TODO()

val kBTBigKeysMask: kotlin.UInt
    get() = TODO()

val kBTHeaderNode: kotlin.Int
    get() = TODO()

val kBTIndexNode: kotlin.Int
    get() = TODO()

val kBTLeafNode: kotlin.Int
    get() = TODO()

val kBTMapNode: kotlin.Int
    get() = TODO()

val kBTVariableIndexKeysMask: kotlin.UInt
    get() = TODO()

val kCoalitionPrivileged: platform.osx.coalition_flags /* = kotlin.UInt */
    get() = TODO()

val kCoalitionReaped: platform.osx.coalition_flags /* = kotlin.UInt */
    get() = TODO()

val kCoalitionTermRequested: platform.osx.coalition_flags /* = kotlin.UInt */
    get() = TODO()

val kCoalitionTerminated: platform.osx.coalition_flags /* = kotlin.UInt */
    get() = TODO()

val kFSCoreStorageEncryptNameKey: kotlin.String
    get() = TODO()

val kFSEncryptNameKey: kotlin.String
    get() = TODO()

val kFSFormatArgumentsKey: kotlin.String
    get() = TODO()

val kFSFormatContentMaskKey: kotlin.String
    get() = TODO()

val kFSFormatExecutableKey: kotlin.String
    get() = TODO()

val kFSFormatInteractiveKey: kotlin.String
    get() = TODO()

val kFSFormatMaximumSizeKey: kotlin.String
    get() = TODO()

val kFSFormatMinimumSizeKey: kotlin.String
    get() = TODO()

val kFSKMountVersion: kotlin.UInt
    get() = TODO()

val kFSMediaPropertiesKey: kotlin.String
    get() = TODO()

val kFSMediaTypesKey: kotlin.String
    get() = TODO()

val kFSMountArgumentsKey: kotlin.String
    get() = TODO()

val kFSMountExecutableKey: kotlin.String
    get() = TODO()

val kFSNameKey: kotlin.String
    get() = TODO()

val kFSPersonalitiesKey: kotlin.String
    get() = TODO()

val kFSProbeArgumentsKey: kotlin.String
    get() = TODO()

val kFSProbeExecutableKey: kotlin.String
    get() = TODO()

val kFSProbeOrderKey: kotlin.String
    get() = TODO()

val kFSRepairArgumentsKey: kotlin.String
    get() = TODO()

val kFSRepairExecutableKey: kotlin.String
    get() = TODO()

val kFSSubTypeKey: kotlin.String
    get() = TODO()

val kFSVerificationArgumentsKey: kotlin.String
    get() = TODO()

val kFSVerificationExecutableKey: kotlin.String
    get() = TODO()

val kFSXMLOutputArgumentKey: kotlin.String
    get() = TODO()

val kFrozen: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kGlobalForcedIdle: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kHFSAllocationFileID: kotlin.UInt
    get() = TODO()

val kHFSAttributeDataFileID: kotlin.UInt
    get() = TODO()

val kHFSAttributesFileID: kotlin.UInt
    get() = TODO()

val kHFSAutoCandidateBit: kotlin.UInt
    get() = TODO()

val kHFSAutoCandidateMask: kotlin.UInt
    get() = TODO()

val kHFSBadBlockFileID: kotlin.UInt
    get() = TODO()

val kHFSBinaryCompare: kotlin.UInt
    get() = TODO()

val kHFSBogusExtentFileID: kotlin.UInt
    get() = TODO()

val kHFSBootVolumeInconsistentBit: kotlin.UInt
    get() = TODO()

val kHFSBootVolumeInconsistentMask: kotlin.UInt
    get() = TODO()

val kHFSCaseFolding: kotlin.UInt
    get() = TODO()

val kHFSCatalogFileID: kotlin.UInt
    get() = TODO()

val kHFSCatalogKeyMaximumLength: kotlin.UInt
    get() = TODO()

val kHFSCatalogKeyMinimumLength: kotlin.UInt
    get() = TODO()

val kHFSCatalogNodeIDsReusedBit: kotlin.UInt
    get() = TODO()

val kHFSCatalogNodeIDsReusedMask: kotlin.UInt
    get() = TODO()

val kHFSContentProtectionBit: kotlin.UInt
    get() = TODO()

val kHFSContentProtectionMask: kotlin.UInt
    get() = TODO()

val kHFSDoNotFastDevPinBit: kotlin.UInt
    get() = TODO()

val kHFSDoNotFastDevPinMask: kotlin.UInt
    get() = TODO()

val kHFSExtentDensity: kotlin.UInt
    get() = TODO()

val kHFSExtentKeyMaximumLength: kotlin.UInt
    get() = TODO()

val kHFSExtentsFileID: kotlin.UInt
    get() = TODO()

val kHFSFastDevCandidateBit: kotlin.UInt
    get() = TODO()

val kHFSFastDevCandidateMask: kotlin.UInt
    get() = TODO()

val kHFSFastDevPinnedBit: kotlin.UInt
    get() = TODO()

val kHFSFastDevPinnedMask: kotlin.UInt
    get() = TODO()

val kHFSFileLockedBit: kotlin.UInt
    get() = TODO()

val kHFSFileLockedMask: kotlin.UInt
    get() = TODO()

val kHFSFileRecord: kotlin.UInt
    get() = TODO()

val kHFSFileThreadRecord: kotlin.UInt
    get() = TODO()

val kHFSFirstUserCatalogNodeID: kotlin.UInt
    get() = TODO()

val kHFSFolderRecord: kotlin.UInt
    get() = TODO()

val kHFSFolderThreadRecord: kotlin.UInt
    get() = TODO()

val kHFSHasAttributesBit: kotlin.UInt
    get() = TODO()

val kHFSHasAttributesMask: kotlin.UInt
    get() = TODO()

val kHFSHasChildLinkBit: kotlin.UInt
    get() = TODO()

val kHFSHasChildLinkMask: kotlin.UInt
    get() = TODO()

val kHFSHasDateAddedBit: kotlin.UInt
    get() = TODO()

val kHFSHasDateAddedMask: kotlin.UInt
    get() = TODO()

val kHFSHasFolderCountBit: kotlin.UInt
    get() = TODO()

val kHFSHasFolderCountMask: kotlin.UInt
    get() = TODO()

val kHFSHasLinkChainBit: kotlin.UInt
    get() = TODO()

val kHFSHasLinkChainMask: kotlin.UInt
    get() = TODO()

val kHFSHasSecurityBit: kotlin.UInt
    get() = TODO()

val kHFSHasSecurityMask: kotlin.UInt
    get() = TODO()

val kHFSJMountVersion: kotlin.UInt
    get() = TODO()

val kHFSMDBAttributesMask: kotlin.UInt
    get() = TODO()

val kHFSMaxAttrNameLen: kotlin.UInt
    get() = TODO()

val kHFSMaxFileNameChars: kotlin.UInt
    get() = TODO()

val kHFSMaxVolumeNameChars: kotlin.UInt
    get() = TODO()

val kHFSPlusAttrExtents: kotlin.UInt
    get() = TODO()

val kHFSPlusAttrForkData: kotlin.UInt
    get() = TODO()

val kHFSPlusAttrInlineData: kotlin.UInt
    get() = TODO()

const val kHFSPlusAttrKeyMaximumLength: kotlin.ULong = 0u

const val kHFSPlusAttrKeyMinimumLength: kotlin.ULong = 0u

val kHFSPlusAttrMinNodeSize: kotlin.UInt
    get() = TODO()

val kHFSPlusCatalogKeyMaximumLength: kotlin.UInt
    get() = TODO()

val kHFSPlusCatalogKeyMinimumLength: kotlin.UInt
    get() = TODO()

val kHFSPlusCatalogMinNodeSize: kotlin.UInt
    get() = TODO()

val kHFSPlusCreator: kotlin.UInt
    get() = TODO()

val kHFSPlusExtentDensity: kotlin.UInt
    get() = TODO()

val kHFSPlusExtentKeyMaximumLength: kotlin.UInt
    get() = TODO()

val kHFSPlusExtentMinNodeSize: kotlin.UInt
    get() = TODO()

val kHFSPlusFileRecord: kotlin.UInt
    get() = TODO()

val kHFSPlusFileThreadRecord: kotlin.UInt
    get() = TODO()

val kHFSPlusFolderRecord: kotlin.UInt
    get() = TODO()

val kHFSPlusFolderThreadRecord: kotlin.UInt
    get() = TODO()

val kHFSPlusMaxFileNameChars: kotlin.UInt
    get() = TODO()

val kHFSPlusMountVersion: kotlin.UInt
    get() = TODO()

val kHFSPlusSigWord: kotlin.UInt
    get() = TODO()

val kHFSPlusVersion: kotlin.UInt
    get() = TODO()

val kHFSRepairCatalogFileID: kotlin.UInt
    get() = TODO()

val kHFSRootFolderID: kotlin.UInt
    get() = TODO()

val kHFSRootParentID: kotlin.UInt
    get() = TODO()

val kHFSSigWord: kotlin.UInt
    get() = TODO()

val kHFSStartupFileID: kotlin.UInt
    get() = TODO()

val kHFSThreadExistsBit: kotlin.UInt
    get() = TODO()

val kHFSThreadExistsMask: kotlin.UInt
    get() = TODO()

val kHFSUnusedNodeFixBit: kotlin.UInt
    get() = TODO()

val kHFSUnusedNodeFixMask: kotlin.UInt
    get() = TODO()

val kHFSUnusedNodesFixDate: kotlin.UInt
    get() = TODO()

val kHFSVolumeHardwareLockBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeHardwareLockMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeInconsistentBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeInconsistentMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeJournaledBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeJournaledMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeNoCacheRequiredBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeNoCacheRequiredMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeSoftwareLockBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeSoftwareLockMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeSparedBlocksBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeSparedBlocksMask: kotlin.UInt
    get() = TODO()

val kHFSVolumeUnmountedBit: kotlin.UInt
    get() = TODO()

val kHFSVolumeUnmountedMask: kotlin.UInt
    get() = TODO()

val kHFSXSigWord: kotlin.UInt
    get() = TODO()

val kHFSXVersion: kotlin.UInt
    get() = TODO()

val kHardLinkFileType: kotlin.UInt
    get() = TODO()

val kHasDispatchSerial: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kJIJournalInFSMask: kotlin.UInt
    get() = TODO()

val kJIJournalNeedInitMask: kotlin.UInt
    get() = TODO()

val kJIJournalOnOtherDeviceMask: kotlin.UInt
    get() = TODO()

val kMaxKeyLength: platform.osx.BTreeKeyLimits /* = kotlin.UInt */
    get() = TODO()

val kPidSuspended: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kStacksPCOnly: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kSymLinkCreator: kotlin.UInt
    get() = TODO()

val kSymLinkFileType: kotlin.UInt
    get() = TODO()

val kTaskAllowIdleExit: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskDarwinBG: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskExtDarwinBG: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsBoosted: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsDirty: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsDirtyTracked: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsForeground: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsImpDonor: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsLiveImpDonor: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsSuppressed: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskIsTimerThrottled: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskRsrcFlagged: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskSharedRegionInfoUnavailable: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskTALEngaged: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskUUIDInfoFaultedIn: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskUUIDInfoMissing: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskUUIDInfoTriedFault: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskVisNonvisible: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskVisVisible: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskWqExceededConstrainedThreadLimit: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskWqExceededTotalThreadLimit: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTaskWqFlagsAvailable: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kTerminatedSnapshot: platform.osx.task_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadDarwinBG: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadFaultedBT: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadGroupEfficient: platform.osx.thread_group_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadGroupUIApp: platform.osx.thread_group_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadIOPassive: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadIdleWorker: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadMain: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadOnCore: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadSuspended: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadTriedFaultBT: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kThreadTruncatedBT: platform.osx.thread_snapshot_flags /* = kotlin.UInt */
    get() = TODO()

val kcdata_invalid_iter: platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */
    get() = TODO()

const val kdb5_err_base: kotlin.Long = 0L

const val krb5_err_base: kotlin.Long = 0L

const val kv5m_err_base: kotlin.Long = 0L

var newscr: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

val numcodes: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val numfnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val numnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

var ospeed: kotlin.Short
    get() = TODO()
    set(value: kotlin.Short) = TODO()

const val prof_err_base: kotlin.Long = 0L

var stdscr: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?) = TODO()

val strcodes: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val strfnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val strnames: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val ttytype: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
    get() = TODO()

fun COLOR_PAIR(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun NSGetNextSearchPathEnumeration(/*0*/ state: platform.osx.NSSearchPathEnumerationState /* = kotlin.UInt */, /*1*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.NSSearchPathEnumerationState /* = kotlin.UInt */ { TODO() }

fun NSStartSearchPathEnumeration(/*0*/ dir: platform.osx.NSSearchPathDirectory /* = kotlin.UInt */, /*1*/ domainMask: platform.osx.NSSearchPathDomainMask /* = kotlin.UInt */): platform.osx.NSSearchPathEnumerationState /* = kotlin.UInt */ { TODO() }

fun PAIR_NUMBER(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun XML_DefaultCurrent(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */) { TODO() }

fun XML_ErrorString(/*0*/ code: platform.osx.XML_Error): kotlinx.cinterop.CPointer<platform.osx.XML_LCharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_LChar /* = kotlin.Byte */> */>? { TODO() }

fun XML_ExpatVersion(): kotlinx.cinterop.CPointer<platform.osx.XML_LCharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_LChar /* = kotlin.Byte */> */>? { TODO() }

fun XML_ExpatVersionInfo(): kotlinx.cinterop.CValue<platform.osx.XML_Expat_Version> { TODO() }

fun XML_ExternalEntityParserCreate(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ context: kotlin.String?, /*2*/ encoding: kotlin.String?): platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */ { TODO() }

fun XML_FreeContentModel(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ model: kotlinx.cinterop.CValuesRef<platform.osx.XML_Content /* = platform.osx.XML_cp */>?) { TODO() }

fun XML_GetBase(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>? { TODO() }

fun XML_GetBuffer(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ len: kotlin.Int): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun XML_GetCurrentByteCount(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): kotlin.Int { TODO() }

fun XML_GetCurrentByteIndex(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): platform.osx.XML_Index /* = kotlin.Long */ { TODO() }

fun XML_GetCurrentColumnNumber(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): platform.osx.XML_Size /* = kotlin.ULong */ { TODO() }

fun XML_GetCurrentLineNumber(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): platform.osx.XML_Size /* = kotlin.ULong */ { TODO() }

fun XML_GetErrorCode(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): platform.osx.XML_Error { TODO() }

fun XML_GetFeatureList(): kotlinx.cinterop.CPointer<platform.osx.XML_Feature>? { TODO() }

fun XML_GetIdAttributeIndex(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): kotlin.Int { TODO() }

fun XML_GetInputContext(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ offset: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ size: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun XML_GetParsingStatus(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ status: kotlinx.cinterop.CValuesRef<platform.osx.XML_ParsingStatus>?) { TODO() }

fun XML_GetSpecifiedAttributeCount(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): kotlin.Int { TODO() }

fun XML_MemFree(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ ptr: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun XML_MemMalloc(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun XML_MemRealloc(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ ptr: kotlinx.cinterop.CValuesRef<*>?, /*2*/ size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun XML_Parse(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ s: kotlin.String?, /*2*/ len: kotlin.Int, /*3*/ isFinal: kotlin.Int): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_ParseBuffer(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ len: kotlin.Int, /*2*/ isFinal: kotlin.Int): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_ParserCreate(/*0*/ encoding: kotlin.String?): platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */ { TODO() }

fun XML_ParserCreateNS(/*0*/ encoding: kotlin.String?, /*1*/ namespaceSeparator: platform.osx.XML_Char /* = kotlin.Byte */): platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */ { TODO() }

fun XML_ParserCreate_MM(/*0*/ encoding: kotlin.String?, /*1*/ memsuite: kotlinx.cinterop.CValuesRef<platform.osx.XML_Memory_Handling_Suite>?, /*2*/ namespaceSeparator: kotlin.String?): platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */ { TODO() }

fun XML_ParserFree(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */) { TODO() }

fun XML_ParserReset(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ encoding: kotlin.String?): platform.osx.XML_Bool /* = kotlin.UByte */ { TODO() }

fun XML_ResumeParser(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_SetAttlistDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ attdecl: platform.osx.XML_AttlistDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetBase(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ base: kotlin.String?): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_SetCdataSectionHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartCdataSectionHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */, /*2*/ end: platform.osx.XML_EndCdataSectionHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetCharacterDataHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_CharacterDataHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetCommentHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_CommentHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetDefaultHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_DefaultHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetDefaultHandlerExpand(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_DefaultHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetDoctypeDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartDoctypeDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */, /*2*/ end: platform.osx.XML_EndDoctypeDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetElementDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ eldecl: platform.osx.XML_ElementDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_Content /* = platform.osx.XML_cp */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetElementHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartElementHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.XML_CharVar> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */>>> */>?) -> kotlin.Unit>>? */, /*2*/ end: platform.osx.XML_EndElementHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetEncoding(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ encoding: kotlin.String?): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_SetEndCdataSectionHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ end: platform.osx.XML_EndCdataSectionHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetEndDoctypeDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ end: platform.osx.XML_EndDoctypeDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetEndElementHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_EndElementHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetEndNamespaceDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ end: platform.osx.XML_EndNamespaceDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetEntityDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_EntityDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetExternalEntityRefHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_ExternalEntityRefHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Int>>? */) { TODO() }

fun XML_SetExternalEntityRefHandlerArg(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ arg: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun XML_SetHashSalt(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ hash_salt: kotlin.ULong): kotlin.Int { TODO() }

fun XML_SetNamespaceDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartNamespaceDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */, /*2*/ end: platform.osx.XML_EndNamespaceDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetNotStandaloneHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_NotStandaloneHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>? */) { TODO() }

fun XML_SetNotationDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_NotationDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetParamEntityParsing(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ parsing: platform.osx.XML_ParamEntityParsing): kotlin.Int { TODO() }

fun XML_SetProcessingInstructionHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_ProcessingInstructionHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetReturnNSTriplet(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ do_nst: kotlin.Int) { TODO() }

fun XML_SetSkippedEntityHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_SkippedEntityHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetStartCdataSectionHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartCdataSectionHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetStartDoctypeDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartDoctypeDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetStartElementHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_StartElementHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.XML_CharVar> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */>>> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetStartNamespaceDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ start: platform.osx.XML_StartNamespaceDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetUnknownEncodingHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_UnknownEncodingHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_Encoding>?) -> kotlin.Int>>? */, /*2*/ encodingHandlerData: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun XML_SetUnparsedEntityDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ handler: platform.osx.XML_UnparsedEntityDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?) -> kotlin.Unit>>? */) { TODO() }

fun XML_SetUserData(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ userData: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun XML_SetXmlDeclHandler(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ xmldecl: platform.osx.XML_XmlDeclHandler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlinx.cinterop.CPointer<platform.osx.XML_CharVar /* = kotlinx.cinterop.ByteVarOf<platform.osx.XML_Char /* = kotlin.Byte */> */>?, kotlin.Int) -> kotlin.Unit>>? */) { TODO() }

fun XML_StopParser(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ resumable: platform.osx.XML_Bool /* = kotlin.UByte */): platform.osx.XML_Status /* = kotlin.UInt */ { TODO() }

fun XML_UseForeignDTD(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */, /*1*/ useDTD: platform.osx.XML_Bool /* = kotlin.UByte */): platform.osx.XML_Error { TODO() }

fun XML_UseParserAsHandlerArg(/*0*/ parser: platform.osx.XML_Parser? /* = kotlinx.cinterop.CPointer<cnames.structs.XML_ParserStruct>? */) { TODO() }

fun _NSGetArgc(): kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>? { TODO() }

fun _NSGetArgv(): kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>? { TODO() }

fun _NSGetEnviron(): kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>? { TODO() }

fun _NSGetMachExecuteHeader(): kotlinx.cinterop.CPointer<platform.darwin.mach_header_64>? { TODO() }

fun _NSGetProgname(): kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>? { TODO() }

fun _el_fn_complete(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int): kotlin.UByte { TODO() }

fun _el_fn_sh_complete(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int): kotlin.UByte { TODO() }

fun _int_to_time(/*0*/ tint: kotlin.Int): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun _long_to_time(/*0*/ tlong: kotlin.Long): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun _nc_align_termtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _nc_basename(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_capcmp(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun _nc_captoinfo(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_copy_entry(/*0*/ oldp: kotlinx.cinterop.CValuesRef<platform.osx.ENTRY /* = platform.osx.entry */>?): kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>? { TODO() }

fun _nc_copy_termtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _nc_entry_match(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Boolean { TODO() }

fun _nc_err_abort(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

fun _nc_fallback(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.TERMTYPE /* = platform.osx.termtype */>? { TODO() }

fun _nc_find_entry(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?): kotlinx.cinterop.CPointer<platform.osx.name_table_entry>? { TODO() }

fun _nc_find_type_entry(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.name_table_entry>?): kotlinx.cinterop.CPointer<platform.osx.name_table_entry>? { TODO() }

fun _nc_first_db(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.DBDIRSVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.DBDIRS /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) { TODO() }

fun _nc_first_name(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_free_entries(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.ENTRY /* = platform.osx.entry */>?) { TODO() }

fun _nc_free_termtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _nc_get_alias_table(/*0*/ arg0: kotlin.Boolean): kotlinx.cinterop.CPointer<platform.osx.alias>? { TODO() }

fun _nc_get_hash_table(/*0*/ arg0: kotlin.Boolean): kotlinx.cinterop.CPointer<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>? { TODO() }

fun _nc_get_source(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_get_table(/*0*/ arg0: kotlin.Boolean): kotlinx.cinterop.CPointer<platform.osx.name_table_entry>? { TODO() }

fun _nc_get_token(/*0*/ arg0: kotlin.Boolean): kotlin.Int { TODO() }

fun _nc_get_tty_mode(/*0*/ buf: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): kotlin.Int { TODO() }

fun _nc_get_type(/*0*/ name: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun _nc_home_terminfo(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_infotocap(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_init_acs() { TODO() }

fun _nc_init_entry(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _nc_is_abs_path(/*0*/ arg0: kotlin.String?): kotlin.Boolean { TODO() }

fun _nc_is_dir_path(/*0*/ arg0: kotlin.String?): kotlin.Boolean { TODO() }

fun _nc_is_file_path(/*0*/ arg0: kotlin.String?): kotlin.Boolean { TODO() }

fun _nc_last_db() { TODO() }

fun _nc_merge_entry(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _nc_name_match(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun _nc_next_db(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.DBDIRSVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.DBDIRS /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_panic_mode(/*0*/ arg0: kotlin.Byte) { TODO() }

fun _nc_parse_entry(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.ENTRY /* = platform.osx.entry */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Boolean): kotlin.Int { TODO() }

fun _nc_pathlast(/*0*/ arg0: kotlin.String?): kotlin.UInt { TODO() }

fun _nc_push_token(/*0*/ arg0: kotlin.Int) { TODO() }

fun _nc_read_entry(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?): kotlin.Int { TODO() }

fun _nc_read_entry_source(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Boolean, /*4*/ arg4: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.ENTRY /* = platform.osx.entry */>?) -> kotlin.Boolean>>?) { TODO() }

fun _nc_read_file_entry(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?): kotlin.Int { TODO() }

fun _nc_read_termtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun _nc_reset_input(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun _nc_resolve_uses(/*0*/ arg0: kotlin.Boolean): kotlin.Int { TODO() }

fun _nc_resolve_uses2(/*0*/ arg0: kotlin.Boolean, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun _nc_rootname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_save_str(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_set_source(/*0*/ arg0: kotlin.String?) { TODO() }

fun _nc_set_tty_mode(/*0*/ buf: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): kotlin.Int { TODO() }

fun _nc_set_type(/*0*/ arg0: kotlin.String?) { TODO() }

fun _nc_set_writedir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun _nc_syserr_abort(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

fun _nc_tic_dir(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_tic_expand(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Boolean, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_tic_written(): kotlin.Int { TODO() }

fun _nc_tparm_analyze(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun _nc_trans_string(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun _nc_trim_sgr0(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_visbuf(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_visbuf2(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun _nc_warning(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

fun _nc_wrap_entry(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.ENTRY /* = platform.osx.entry */>?, /*1*/ arg1: kotlin.Boolean) { TODO() }

fun _nc_write_entry(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMTYPE /* = platform.osx.termtype */>?) { TODO() }

fun _time32_to_time(/*0*/ t32: platform.posix.int32_t /* = kotlin.Int */): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun _time64_to_time(/*0*/ t64: platform.posix.int64_t /* = kotlin.Long */): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun _time_to_int(/*0*/ t: platform.posix.time_t /* = kotlin.Long */): kotlin.Int { TODO() }

fun _time_to_long(/*0*/ t: platform.posix.time_t /* = kotlin.Long */): kotlin.Long { TODO() }

fun _time_to_time32(/*0*/ t: platform.posix.time_t /* = kotlin.Long */): platform.posix.int32_t /* = kotlin.Int */ { TODO() }

fun _time_to_time64(/*0*/ t: platform.posix.time_t /* = kotlin.Long */): platform.posix.int64_t /* = kotlin.Long */ { TODO() }

fun add_error_table(/*0*/ et: kotlinx.cinterop.CValuesRef<platform.osx.error_table>?): platform.osx.errcode_t /* = kotlin.Long */ { TODO() }

fun addch(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun addchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun addchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun addnstr(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun addstr(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun alias_endent() { TODO() }

fun alias_getbyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.aliasent>? { TODO() }

fun alias_getent(): kotlinx.cinterop.CPointer<platform.osx.aliasent>? { TODO() }

fun alias_setent() { TODO() }

fun assume_default_colors(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun attr_get(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.attr_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.attr_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun attr_off(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun attr_on(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun attr_set(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlin.Short, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun attroff(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun attron(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun attrset(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun baudrate(): kotlin.Int { TODO() }

fun beep(): kotlin.Int { TODO() }

fun ber_alloc(): kotlinx.cinterop.CPointer<platform.osx.BerElement /* = cnames.structs.berelement */>? { TODO() }

fun ber_alloc_t(/*0*/ beroptions: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.BerElement /* = cnames.structs.berelement */>? { TODO() }

fun ber_bprint(/*0*/ data: kotlin.String?, /*1*/ len: platform.osx.ber_len_t /* = kotlin.ULong */) { TODO() }

fun ber_bvarray_add(/*0*/ p: kotlinx.cinterop.CValuesRef<platform.osx.BerVarrayVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.BerVarray /* = kotlinx.cinterop.CPointer<platform.osx.BerValue /* = platform.osx.berval */> */> */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.BerValue /* = platform.osx.berval */>?): kotlin.Int { TODO() }

fun ber_bvarray_free(/*0*/ p: platform.osx.BerVarray? /* = kotlinx.cinterop.CPointer<platform.osx.BerValue /* = platform.osx.berval */>? */) { TODO() }

fun ber_bvdup(/*0*/ src: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlinx.cinterop.CPointer<platform.osx.berval>? { TODO() }

fun ber_bvecadd(/*0*/ bvec: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.osx.berval> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.berval>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.berval>>>> */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlin.Int { TODO() }

fun ber_bvecfree(/*0*/ bv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.berval> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.berval>> */>?) { TODO() }

fun ber_bvfree(/*0*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?) { TODO() }

fun ber_dump(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ inout: kotlin.Int) { TODO() }

fun ber_dup(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): kotlinx.cinterop.CPointer<platform.osx.BerElement /* = cnames.structs.berelement */>? { TODO() }

fun ber_dupbv(/*0*/ dst: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*1*/ src: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlinx.cinterop.CPointer<platform.osx.berval>? { TODO() }

fun ber_errno_addr(): kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>? { TODO() }

fun ber_error_print(/*0*/ data: kotlin.String?) { TODO() }

fun ber_first_element(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?, /*2*/ last: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_flatten(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bvPtr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.berval> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.berval>> */>?): kotlin.Int { TODO() }

fun ber_flatten2(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*2*/ alloc: kotlin.Int): kotlin.Int { TODO() }

fun ber_flush(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?, /*1*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*2*/ freeit: kotlin.Int): kotlin.Int { TODO() }

fun ber_free(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ freebuf: kotlin.Int) { TODO() }

fun ber_free_buf(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?) { TODO() }

fun ber_get_bitstringa(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_boolean(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ boolval: kotlinx.cinterop.CValuesRef<platform.osx.ber_int_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.ber_int_t /* = kotlin.Int */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_enum(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ num: kotlinx.cinterop.CValuesRef<platform.osx.ber_int_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.ber_int_t /* = kotlin.Int */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_int(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ num: kotlinx.cinterop.CValuesRef<platform.osx.ber_int_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.ber_int_t /* = kotlin.Int */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_next(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?, /*1*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?, /*2*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_null(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_option(/*0*/ item: kotlinx.cinterop.CValuesRef<*>?, /*1*/ option: kotlin.Int, /*2*/ outvalue: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun ber_get_stringa(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_stringal(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.berval> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.berval>> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_stringb(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_stringbv(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*2*/ options: kotlin.Int): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_get_tag(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_init(/*0*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlinx.cinterop.CPointer<platform.osx.BerElement /* = cnames.structs.berelement */>? { TODO() }

fun ber_init2(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*2*/ options: kotlin.Int) { TODO() }

fun ber_init_w_nullc(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ options: kotlin.Int) { TODO() }

fun ber_mem2bv(/*0*/ arg0: kotlin.String?, /*1*/ len: platform.osx.ber_len_t /* = kotlin.ULong */, /*2*/ duplicate: kotlin.Int, /*3*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlinx.cinterop.CPointer<platform.osx.berval>? { TODO() }

fun ber_memalloc(/*0*/ s: platform.osx.ber_len_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun ber_memcalloc(/*0*/ n: platform.osx.ber_len_t /* = kotlin.ULong */, /*1*/ s: platform.osx.ber_len_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun ber_memfree(/*0*/ p: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun ber_memrealloc(/*0*/ p: kotlinx.cinterop.CValuesRef<*>?, /*1*/ s: platform.osx.ber_len_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun ber_memvfree(/*0*/ vector: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) { TODO() }

fun ber_next_element(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?, /*2*/ last: kotlin.String?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_peek_tag(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_printf(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ fmt: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun ber_put_berval(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*2*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_bitstring(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ str: kotlin.String?, /*2*/ bitlen: platform.osx.ber_len_t /* = kotlin.ULong */, /*3*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_boolean(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ boolval: platform.osx.ber_int_t /* = kotlin.Int */, /*2*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_enum(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ num: platform.osx.ber_int_t /* = kotlin.Int */, /*2*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_int(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ num: platform.osx.ber_int_t /* = kotlin.Int */, /*2*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_null(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_ostring(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ str: kotlin.String?, /*2*/ len: platform.osx.ber_len_t /* = kotlin.ULong */, /*3*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_put_seq(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): kotlin.Int { TODO() }

fun ber_put_set(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): kotlin.Int { TODO() }

fun ber_put_string(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ str: kotlin.String?, /*2*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_read(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ len: platform.osx.ber_len_t /* = kotlin.ULong */): platform.osx.ber_slen_t /* = kotlin.Long */ { TODO() }

fun ber_remaining(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?): kotlin.Int { TODO() }

fun ber_reset(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ was_writing: kotlin.Int) { TODO() }

fun ber_scanf(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ fmt: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_set_option(/*0*/ item: kotlinx.cinterop.CValuesRef<*>?, /*1*/ option: kotlin.Int, /*2*/ invalue: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun ber_skip_tag(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ len: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): platform.osx.ber_tag_t /* = kotlin.ULong */ { TODO() }

fun ber_sockbuf_add_io(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?, /*1*/ sbio: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf_IO /* = platform.osx.sockbuf_io */>?, /*2*/ layer: kotlin.Int, /*3*/ arg: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun ber_sockbuf_alloc(): kotlinx.cinterop.CPointer<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>? { TODO() }

fun ber_sockbuf_ctrl(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?, /*1*/ opt: kotlin.Int, /*2*/ arg: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun ber_sockbuf_free(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?) { TODO() }

fun ber_sockbuf_remove_io(/*0*/ sb: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf /* = cnames.structs.sockbuf */>?, /*1*/ sbio: kotlinx.cinterop.CValuesRef<platform.osx.Sockbuf_IO /* = platform.osx.sockbuf_io */>?, /*2*/ layer: kotlin.Int): kotlin.Int { TODO() }

fun ber_start_seq(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_start_set(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ tag: platform.osx.ber_tag_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ber_str2bv(/*0*/ arg0: kotlin.String?, /*1*/ len: platform.osx.ber_len_t /* = kotlin.ULong */, /*2*/ duplicate: kotlin.Int, /*3*/ bv: kotlinx.cinterop.CValuesRef<platform.osx.berval>?): kotlinx.cinterop.CPointer<platform.osx.berval>? { TODO() }

fun ber_strdup(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ber_write(/*0*/ ber: kotlinx.cinterop.CValuesRef<platform.osx.BerElement /* = cnames.structs.berelement */>?, /*1*/ buf: kotlin.String?, /*2*/ len: platform.osx.ber_len_t /* = kotlin.ULong */, /*3*/ zero: kotlin.Int): platform.osx.ber_slen_t /* = kotlin.Long */ { TODO() }

fun bkgd(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun bkgdset(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */) { TODO() }

fun bootparams_endent() { TODO() }

fun bootparams_getbyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.bootparamsent>? { TODO() }

fun bootparams_getent(): kotlinx.cinterop.CPointer<platform.osx.bootparamsent>? { TODO() }

fun bootparams_setent() { TODO() }

fun bootstrap_check_in(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ service_name: platform.osx.name_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ sp: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_create_server(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ server_cmd: platform.osx.cmd_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ server_uid: platform.posix.uid_t /* = kotlin.UInt */, /*3*/ on_demand: platform.posix.boolean_t /* = kotlin.UInt */, /*4*/ server_port: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_create_service(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ service_name: platform.osx.name_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ sp: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_look_up(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ service_name: platform.osx.name_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ sp: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_parent(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ parent_port: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_register(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ service_name: platform.osx.name_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ sp: platform.darwin.mach_port_t /* = kotlin.UInt */): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_status(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ service_name: platform.osx.name_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>? */, /*2*/ service_active: kotlinx.cinterop.CValuesRef<platform.osx.bootstrap_status_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.bootstrap_status_t /* = kotlin.Int */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_strerror(/*0*/ r: platform.darwin.kern_return_t /* = kotlin.Int */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun bootstrap_subset(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ requestor_port: platform.darwin.mach_port_t /* = kotlin.UInt */, /*2*/ subset_port: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun bootstrap_unprivileged(/*0*/ bp: platform.darwin.mach_port_t /* = kotlin.UInt */, /*1*/ unpriv_port: kotlinx.cinterop.CValuesRef<platform.darwin.mach_port_tVar /* = kotlinx.cinterop.UIntVarOf<platform.darwin.mach_port_t /* = kotlin.UInt */> */>?): platform.darwin.kern_return_t /* = kotlin.Int */ { TODO() }

fun border(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */, /*4*/ arg4: platform.osx.chtype /* = kotlin.UInt */, /*5*/ arg5: platform.osx.chtype /* = kotlin.UInt */, /*6*/ arg6: platform.osx.chtype /* = kotlin.UInt */, /*7*/ arg7: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun bottom_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun box(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun bpf_dump(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?, /*1*/ arg1: kotlin.Int) { TODO() }

fun bpf_filter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_insn>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.u_int /* = kotlin.UInt */, /*3*/ arg3: platform.posix.u_int /* = kotlin.UInt */): platform.posix.u_int /* = kotlin.UInt */ { TODO() }

fun bpf_filter_with_aux_data(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_insn>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.u_int /* = kotlin.UInt */, /*3*/ arg3: platform.posix.u_int /* = kotlin.UInt */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.bpf_aux_data>?): platform.posix.u_int /* = kotlin.UInt */ { TODO() }

fun bpf_image(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_insn>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun bpf_validate(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_insn>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun can_change_color(): kotlin.Boolean { TODO() }

fun cbreak(): kotlin.Int { TODO() }

fun chgat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.osx.attr_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Short, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun clear(): kotlin.Int { TODO() }

fun clearok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun clrtobot(): kotlin.Int { TODO() }

fun clrtoeol(): kotlin.Int { TODO() }

fun color_content(/*0*/ arg0: kotlin.Short, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?): kotlin.Int { TODO() }

fun color_set(/*0*/ arg0: kotlin.Short, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun com_err(/*0*/ progname: kotlin.String?, /*1*/ code: platform.osx.errcode_t /* = kotlin.Long */, /*2*/ format: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

fun com_err_va(/*0*/ progname: kotlin.String?, /*1*/ code: platform.osx.errcode_t /* = kotlin.Long */, /*2*/ format: kotlin.String?, /*3*/ args: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun compat_mode(/*0*/ function: kotlin.String?, /*1*/ mode: kotlin.String?): kotlin.Boolean { TODO() }

fun copywin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlin.Int, /*6*/ arg6: kotlin.Int, /*7*/ arg7: kotlin.Int, /*8*/ arg8: kotlin.Int): kotlin.Int { TODO() }

fun current_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>? { TODO() }

fun curs_set(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun curses_version(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun data_ahead(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Boolean { TODO() }

fun data_behind(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Boolean { TODO() }

fun def_prog_mode(): kotlin.Int { TODO() }

fun def_shell_mode(): kotlin.Int { TODO() }

fun define_key(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun del_curterm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMINAL /* = platform.osx.term */>?): kotlin.Int { TODO() }

fun del_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun delay_output(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun delch(): kotlin.Int { TODO() }

fun deleteln(): kotlin.Int { TODO() }

fun delscreen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.SCREEN /* = cnames.structs.screen */>?) { TODO() }

fun delwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun demangleSymbolCString(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun der_alloc(): kotlinx.cinterop.CPointer<platform.osx.BerElement /* = cnames.structs.berelement */>? { TODO() }

fun derwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun doupdate(): kotlin.Int { TODO() }

fun dt_compile_sugar(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<cnames.structs.dt_node>?): kotlinx.cinterop.CPointer<cnames.structs.dt_node>? { TODO() }

fun dtrace_addr2str(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.posix.uint64_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun dtrace_aggregate_clear(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) { TODO() }

fun dtrace_aggregate_print(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_walk_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?): kotlin.Int { TODO() }

fun dtrace_aggregate_snap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_joined(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_aggvarid_tVar /* = kotlinx.cinterop.LongVarOf<platform.osx.dtrace_aggvarid_t /* = kotlin.Long */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_walk_joined_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.dtrace_aggdata_t> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>> */>?, kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_keyrevsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_keysorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_keyvarrevsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_keyvarsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_valrevsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_valsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_valvarrevsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_aggregate_walk_valvarsorted(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_aggregate_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_aggdata_t /* = platform.osx.dtrace_aggdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_attr2str(/*0*/ arg0: kotlinx.cinterop.CValue<platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */>, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_class_name(/*0*/ arg0: platform.osx.dtrace_class_t /* = kotlin.UByte */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) { TODO() }

fun dtrace_consume(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<platform.osx.dtrace_consume_probe_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CPointer<platform.osx.dtrace_consume_rec_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_ctlfd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_desc2str(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_dof_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: platform.osx.uint_t /* = kotlin.UInt */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dtrace_dof_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun dtrace_errmsg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_errno(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_faultstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_fprinta(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, /*5*/ arg5: platform.osx.uint_t /* = kotlin.UInt */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<*>?, /*7*/ arg7: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun dtrace_fprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, /*5*/ arg5: platform.osx.uint_t /* = kotlin.UInt */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<*>?, /*7*/ arg7: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun dtrace_freopen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, /*5*/ arg5: platform.osx.uint_t /* = kotlin.UInt */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<*>?, /*7*/ arg7: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun dtrace_geterr_dof(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dtrace_getopt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_optval_tVar /* = kotlinx.cinterop.LongVarOf<platform.osx.dtrace_optval_t /* = kotlin.Long */> */>?): kotlin.Int { TODO() }

fun dtrace_getopt_dof(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dtrace_go(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_handle_buffered(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_handle_buffered_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_bufdata_t /* = platform.osx.dtrace_bufdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_handle_drop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_handle_drop_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_dropdata_t /* = platform.osx.dtrace_dropdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_handle_err(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_handle_err_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_errdata_t /* = platform.osx.dtrace_errdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_handle_proc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_handle_proc_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<cnames.structs.ps_prochandle>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_handle_setopt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_handle_setopt_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_setoptdata_t /* = platform.osx.dtrace_setoptdata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_id2desc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.osx.dtrace_id_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?): kotlin.Int { TODO() }

fun dtrace_kernel_path(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun dtrace_lookup_by_addr(/*0*/ dtp: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ addr: platform.osx.__GElf_Addr /* = kotlin.ULong */, /*2*/ aux_sym_name_buffer: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ aux_bufsize: platform.posix.size_t /* = kotlin.ULong */, /*4*/ symp: kotlinx.cinterop.CValuesRef<platform.osx.__GElf_Sym>?, /*5*/ sip: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_syminfo_t /* = platform.osx.dtrace_syminfo */>?): kotlin.Int { TODO() }

fun dtrace_lookup_by_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.__GElf_Sym>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_syminfo_t /* = platform.osx.dtrace_syminfo */>?): kotlin.Int { TODO() }

fun dtrace_lookup_by_type(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?): kotlin.Int { TODO() }

fun dtrace_object_info(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_objinfo_t /* = platform.osx.dtrace_objinfo */>?): kotlin.Int { TODO() }

fun dtrace_object_iter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<platform.osx.dtrace_obj_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_objinfo_t /* = platform.osx.dtrace_objinfo */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_open(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>? { TODO() }

fun dtrace_printa_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dtrace_printf_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dtrace_printf_format(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun dtrace_probe_info(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probeinfo_t /* = platform.osx.dtrace_probeinfo */>?): kotlin.Int { TODO() }

fun dtrace_probe_iter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ pdp: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<platform.osx.dtrace_probe_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_proc_continue(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<cnames.structs.ps_prochandle>?) { TODO() }

fun dtrace_proc_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<cnames.structs.ps_prochandle>? { TODO() }

fun dtrace_proc_grab(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.posix.pid_t /* = kotlin.Int */, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<cnames.structs.ps_prochandle>? { TODO() }

fun dtrace_proc_release(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<cnames.structs.ps_prochandle>?) { TODO() }

fun dtrace_proc_waitfor(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<cnames.structs.ps_prochandle>? { TODO() }

fun dtrace_program_exec(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_proginfo_t /* = platform.osx.dtrace_proginfo */>?): kotlin.Int { TODO() }

fun dtrace_program_fcompile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: platform.osx.uint_t /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>? { TODO() }

fun dtrace_program_header(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun dtrace_program_info(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_proginfo_t /* = platform.osx.dtrace_proginfo */>?) { TODO() }

fun dtrace_program_link(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: platform.osx.uint_t /* = kotlin.UInt */, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun dtrace_program_strcompile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.osx.dtrace_probespec_t /* = kotlin.Int */, /*3*/ arg3: platform.osx.uint_t /* = kotlin.UInt */, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>? { TODO() }

fun dtrace_provider_modules(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun dtrace_setopt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun dtrace_signal(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_sleep(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) { TODO() }

fun dtrace_stability_name(/*0*/ arg0: platform.osx.dtrace_stability_t /* = kotlin.UByte */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_status(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_stmt_action(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_stmtdesc_t /* = platform.osx.dtrace_stmtdesc */>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_actdesc_t /* = platform.osx.dtrace_actdesc */>? { TODO() }

fun dtrace_stmt_add(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_stmtdesc_t /* = platform.osx.dtrace_stmtdesc */>?): kotlin.Int { TODO() }

fun dtrace_stmt_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_ecbdesc_t /* = platform.osx.dtrace_ecbdesc */>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_stmtdesc_t /* = platform.osx.dtrace_stmtdesc */>? { TODO() }

fun dtrace_stmt_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_stmtdesc_t /* = platform.osx.dtrace_stmtdesc */>?) { TODO() }

fun dtrace_stmt_iter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<platform.osx.dtrace_stmt_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_prog_t /* = cnames.structs.dtrace_prog */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_stmtdesc_t /* = platform.osx.dtrace_stmtdesc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun dtrace_stop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?): kotlin.Int { TODO() }

fun dtrace_str2attr(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_attribute_t /* = platform.osx.dtrace_attribute */>?): kotlin.Int { TODO() }

fun dtrace_str2desc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.osx.dtrace_probespec_t /* = kotlin.Int */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?): kotlin.Int { TODO() }

fun dtrace_subrstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dtrace_symbol_type(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.__GElf_Sym>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_syminfo_t /* = platform.osx.dtrace_syminfo */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?): kotlin.Int { TODO() }

fun dtrace_system(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, /*5*/ arg5: platform.osx.uint_t /* = kotlin.UInt */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<*>?, /*7*/ arg7: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun dtrace_type_fcompile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?): kotlin.Int { TODO() }

fun dtrace_type_strcompile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_typeinfo_t /* = platform.osx.dtrace_typeinfo */>?): kotlin.Int { TODO() }

fun dtrace_uaddr2str(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.posix.pid_t /* = kotlin.Int */, /*2*/ arg2: platform.posix.uint64_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun dtrace_update(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?) { TODO() }

fun dtrace_vopen(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_vector_t /* = platform.osx.dtrace_vector */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?): kotlinx.cinterop.CPointer<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>? { TODO() }

fun dtrace_work(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<platform.osx.dtrace_consume_probe_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CPointer<platform.osx.dtrace_consume_rec_f /* = kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.dtrace_probedata_t /* = platform.osx.dtrace_probedata */>?, kotlinx.cinterop.CPointer<platform.osx.dtrace_recdesc_t /* = platform.osx.dtrace_recdesc */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?): platform.osx.dtrace_workstatus_t /* = kotlin.Int */ { TODO() }

fun dtrace_xstr2desc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_hdl_t /* = cnames.structs.dtrace_hdl */>?, /*1*/ arg1: platform.osx.dtrace_probespec_t /* = kotlin.Int */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.dtrace_probedesc_t /* = platform.osx.dtrace_probedesc */>?): kotlin.Int { TODO() }

fun dup_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>? { TODO() }

fun dupwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun dynamic_field_info(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun echo(): kotlin.Int { TODO() }

fun echochar(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun el_beep(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?) { TODO() }

fun el_deletestr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int) { TODO() }

fun el_end(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?) { TODO() }

fun el_get(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun el_getc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun el_gets(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun el_init(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.osx.EditLine /* = cnames.structs.editline */>? { TODO() }

fun el_insertstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun el_line(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?): kotlinx.cinterop.CPointer<platform.osx.LineInfo /* = platform.osx.lineinfo */>? { TODO() }

fun el_parse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun el_push(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.String?) { TODO() }

fun el_reset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?) { TODO() }

fun el_resize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?) { TODO() }

fun el_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun el_source(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun el_wget(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun el_wgetc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun el_wgets(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun el_winsertstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun el_wline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?): kotlinx.cinterop.CPointer<platform.osx.LineInfoW /* = platform.osx.lineinfow */>? { TODO() }

fun el_wparse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?): kotlin.Int { TODO() }

fun el_wpush(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?) { TODO() }

fun el_wset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.EditLine /* = cnames.structs.editline */>?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun endwin(): kotlin.Int { TODO() }

fun erase(): kotlin.Int { TODO() }

fun erasechar(): kotlin.Byte { TODO() }

fun error_message(/*0*/ code: platform.osx.errcode_t /* = kotlin.Long */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fgetrune(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Long { TODO() }

fun fhopen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.fhandle>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun field_arg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun field_back(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun field_buffer(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun field_count(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun field_fore(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun field_index(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Int { TODO() }

fun field_info(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun field_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */ { TODO() }

fun field_just(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Int { TODO() }

fun field_opts(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): platform.osx.Field_Options /* = kotlin.Int */ { TODO() }

fun field_opts_off(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: platform.osx.Field_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun field_opts_on(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: platform.osx.Field_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun field_pad(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Int { TODO() }

fun field_status(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Boolean { TODO() }

fun field_term(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */ { TODO() }

fun field_type(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>? { TODO() }

fun field_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun filter() { TODO() }

fun flash(): kotlin.Int { TODO() }

fun flushinp(): kotlin.Int { TODO() }

fun fmount(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun form_driver(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun form_fields(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.FIELD /* = platform.osx.fieldnode */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>> */>? { TODO() }

fun form_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */ { TODO() }

fun form_opts(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): platform.osx.Form_Options /* = kotlin.Int */ { TODO() }

fun form_opts_off(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun form_opts_on(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun form_page(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun form_request_by_name(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun form_request_name(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun form_sub(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun form_term(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */ { TODO() }

fun form_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun form_win(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun fputrune(/*0*/ arg0: platform.posix.rune_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

fun free_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Int { TODO() }

fun free_fieldtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?): kotlin.Int { TODO() }

fun free_form(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun fstatfs(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.statfs>?): kotlin.Int { TODO() }

fun fstatfs64(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.statfs64>?): kotlin.Int { TODO() }

fun fungetrune(/*0*/ arg0: platform.posix.rune_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

fun getattrs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getbegx(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getbegy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getbkgd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun getch(): kotlin.Int { TODO() }

fun getcurx(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getcury(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getfh(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.fhandle_t /* = platform.osx.fhandle */>?): kotlin.Int { TODO() }

fun getfsstat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.statfs>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun getfsstat64(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.statfs64>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun getmaxx(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getmaxy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getmntinfo(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.statfs> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.statfs>> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getmntinfo64(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.statfs64> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.statfs64>> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getmntinfo_r_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.statfs> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.statfs>> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getmouse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.MEVENT>?): kotlin.Int { TODO() }

fun getnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getparx(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getpary(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun getstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun getvfsbyname(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.vfsconf>?): kotlin.Int { TODO() }

fun getwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun gss_accept_sec_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_ctx_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct> */> */>?, /*2*/ arg2: platform.osx.gss_cred_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>? */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: platform.osx.gss_channel_bindings_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_channel_bindings_struct>? */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?, /*7*/ arg7: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*8*/ arg8: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*9*/ arg9: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*10*/ arg10: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_cred_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_acquire_cred(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: platform.osx.OM_uint32 /* = kotlin.UInt */, /*3*/ arg3: platform.osx.gss_OID_set? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct>? */, /*4*/ arg4: platform.osx.gss_cred_usage_t /* = kotlin.Int */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_cred_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct> */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_add_cred(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_cred_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>? */, /*2*/ arg2: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*3*/ arg3: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*4*/ arg4: platform.osx.gss_cred_usage_t /* = kotlin.Int */, /*5*/ arg5: platform.osx.OM_uint32 /* = kotlin.UInt */, /*6*/ arg6: platform.osx.OM_uint32 /* = kotlin.UInt */, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_cred_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct> */> */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?, /*9*/ arg9: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*10*/ arg10: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_add_oid_set_member(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_canonicalize_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_compare_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_context_time(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_create_empty_oid_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_delete_sec_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_ctx_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct> */> */>?, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_display_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_display_status(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.OM_uint32 /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*5*/ arg5: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_duplicate_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_export_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_export_sec_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_ctx_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct> */> */>?, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_get_mic(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_qop_t /* = kotlin.UInt */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_import_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*2*/ arg2: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_import_sec_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_ctx_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_indicate_mechs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_init_sec_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_cred_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_ctx_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_ctx_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct> */> */>?, /*3*/ arg3: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*4*/ arg4: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*5*/ arg5: platform.osx.OM_uint32 /* = kotlin.UInt */, /*6*/ arg6: platform.osx.OM_uint32 /* = kotlin.UInt */, /*7*/ arg7: platform.osx.gss_channel_bindings_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_channel_bindings_struct>? */, /*8*/ arg8: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*9*/ arg9: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?, /*10*/ arg10: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*11*/ arg11: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*12*/ arg12: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_inquire_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_inquire_cred(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_cred_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_usage_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.gss_cred_usage_t /* = kotlin.Int */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_inquire_cred_by_mech(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_cred_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct>? */, /*2*/ arg2: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_usage_tVar /* = kotlinx.cinterop.IntVarOf<platform.osx.gss_cred_usage_t /* = kotlin.Int */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_inquire_mechs_for_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_name_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_inquire_names_for_mech(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_oid_to_str(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_process_context_token(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_release_buffer(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_release_cred(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_cred_id_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_cred_id_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_cred_id_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_release_name(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_name_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_name_t /* = kotlinx.cinterop.CPointer<cnames.structs.gss_name_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_release_oid(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_release_oid_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.gss_OID_setVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID_set /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_seal(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*6*/ arg6: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_sign(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_str_to_oid(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.gss_OIDVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.gss_OID /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct> */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_test_oid_set_member(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_OID? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_desc_struct>? */, /*2*/ arg2: platform.osx.gss_OID_set? /* = kotlinx.cinterop.CPointer<platform.osx.gss_OID_set_desc_struct>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_unseal(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_unwrap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.gss_qop_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.gss_qop_t /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_verify(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_verify_mic(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*3*/ arg3: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.gss_qop_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.gss_qop_t /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_wrap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.gss_qop_t /* = kotlin.UInt */, /*4*/ arg4: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*6*/ arg6: platform.osx.gss_buffer_t? /* = kotlinx.cinterop.CPointer<platform.osx.gss_buffer_desc_struct>? */): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun gss_wrap_size_limit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?, /*1*/ arg1: platform.osx.gss_ctx_id_t? /* = kotlinx.cinterop.CPointer<cnames.structs.gss_ctx_id_struct>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.gss_qop_t /* = kotlin.UInt */, /*4*/ arg4: platform.osx.OM_uint32 /* = kotlin.UInt */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.OM_uint32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.OM_uint32 /* = kotlin.UInt */> */>?): platform.osx.OM_uint32 /* = kotlin.UInt */ { TODO() }

fun halfdelay(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun has_colors(): kotlin.Boolean { TODO() }

fun has_ic(): kotlin.Boolean { TODO() }

fun has_il(): kotlin.Boolean { TODO() }

fun has_key(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun hash_create(/*0*/ size: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.hash_table>? { TODO() }

fun hash_destroy(/*0*/ table: kotlinx.cinterop.CValuesRef<platform.osx.hash_table>?, /*1*/ key: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ nukefunc: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) { TODO() }

fun hash_purge(/*0*/ table: kotlinx.cinterop.CValuesRef<platform.osx.hash_table>?, /*1*/ purge_func: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) { TODO() }

fun hash_search(/*0*/ table: kotlinx.cinterop.CValuesRef<platform.osx.hash_table>?, /*1*/ key: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ datum: kotlinx.cinterop.CValuesRef<*>?, /*3*/ replace_func: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun hash_traverse(/*0*/ table: kotlinx.cinterop.CValuesRef<platform.osx.hash_table>?, /*1*/ func: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?, /*2*/ arg: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

fun hide_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun history(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.History /* = cnames.structs.history */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.HistEvent>?, /*2*/ arg2: kotlin.Int, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun history_end(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.History /* = cnames.structs.history */>?) { TODO() }

fun history_init(): kotlinx.cinterop.CPointer<platform.osx.History /* = cnames.structs.history */>? { TODO() }

fun history_w(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.HistoryW /* = cnames.structs.historyW */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.HistEventW /* = platform.osx.histeventW */>?, /*2*/ arg2: kotlin.Int, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun history_wend(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.HistoryW /* = cnames.structs.historyW */>?) { TODO() }

fun history_winit(): kotlinx.cinterop.CPointer<platform.osx.HistoryW /* = cnames.structs.historyW */>? { TODO() }

fun hline(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun idcok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean) { TODO() }

fun idlok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun immedok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean) { TODO() }

fun inch(): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun inchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun inchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun init_color(/*0*/ arg0: kotlin.Short, /*1*/ arg1: kotlin.Short, /*2*/ arg2: kotlin.Short, /*3*/ arg3: kotlin.Short): kotlin.Int { TODO() }

fun init_pair(/*0*/ arg0: kotlin.Short, /*1*/ arg1: kotlin.Short, /*2*/ arg2: kotlin.Short): kotlin.Int { TODO() }

fun initscr(): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun innstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun insch(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun insdelln(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun insertln(): kotlin.Int { TODO() }

fun insnstr(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun insstr(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun instr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun intrflush(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun is_cleared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_idcok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_idlok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_immedok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_keypad(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_leaveok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_linetouched(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Boolean { TODO() }

fun is_nodelay(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_notimeout(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_scrollok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_syncok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun is_term_resized(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Boolean { TODO() }

fun is_wintouched(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Boolean { TODO() }

fun isendwin(): kotlin.Boolean { TODO() }

fun kcdata_calc_padding(/*0*/ size: platform.posix.uint32_t /* = kotlin.UInt */): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_flags_get_padding(/*0*/ flags: platform.posix.uint64_t /* = kotlin.ULong */): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter(/*0*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*1*/ size: kotlin.ULong): kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */> { TODO() }

fun kcdata_iter_array_elem_count(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_array_elem_size(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_array_elem_type(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_array_size_switch(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_array_valid(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): kotlin.Int { TODO() }

fun kcdata_iter_container_id(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint64_t /* = kotlin.ULong */ { TODO() }

fun kcdata_iter_container_type(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_container_valid(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): kotlin.Int { TODO() }

fun kcdata_iter_data_with_desc_valid(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>, /*1*/ minsize: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun kcdata_iter_find_type(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>, /*1*/ type: platform.posix.uint32_t /* = kotlin.UInt */): kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */> { TODO() }

fun kcdata_iter_flags(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint64_t /* = kotlin.ULong */ { TODO() }

fun kcdata_iter_get_data_with_desc(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>, /*1*/ desc_ptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ data_ptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*3*/ size_ptr: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?) { TODO() }

fun kcdata_iter_is_legacy_item(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>, /*1*/ legacy_size: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun kcdata_iter_next(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */> { TODO() }

fun kcdata_iter_payload(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun kcdata_iter_size(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_string(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>, /*1*/ offset: platform.posix.uint32_t /* = kotlin.UInt */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun kcdata_iter_type(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcdata_iter_unsafe(/*0*/ buffer: kotlinx.cinterop.CValuesRef<*>?): kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */> { TODO() }

fun kcdata_iter_valid(/*0*/ iter: kotlinx.cinterop.CValue<platform.osx.kcdata_iter_t /* = platform.osx.kcdata_iter */>): kotlin.Int { TODO() }

fun kcs_get_elem_count(/*0*/ d: platform.osx.kcdata_subtype_descriptor_t? /* = kotlinx.cinterop.CPointer<platform.osx.kcdata_subtype_descriptor>? */): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcs_get_elem_size(/*0*/ d: platform.osx.kcdata_subtype_descriptor_t? /* = kotlinx.cinterop.CPointer<platform.osx.kcdata_subtype_descriptor>? */): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun kcs_set_elem_size(/*0*/ d: platform.osx.kcdata_subtype_descriptor_t? /* = kotlinx.cinterop.CPointer<platform.osx.kcdata_subtype_descriptor>? */, /*1*/ size: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ count: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun kevent(/*0*/ kq: kotlin.Int, /*1*/ changelist: kotlinx.cinterop.CValuesRef<platform.osx.kevent>?, /*2*/ nchanges: kotlin.Int, /*3*/ eventlist: kotlinx.cinterop.CValuesRef<platform.osx.kevent>?, /*4*/ nevents: kotlin.Int, /*5*/ timeout: kotlinx.cinterop.CValuesRef<platform.osx.timespec>?): kotlin.Int { TODO() }

fun kevent64(/*0*/ kq: kotlin.Int, /*1*/ changelist: kotlinx.cinterop.CValuesRef<platform.osx.kevent64_s>?, /*2*/ nchanges: kotlin.Int, /*3*/ eventlist: kotlinx.cinterop.CValuesRef<platform.osx.kevent64_s>?, /*4*/ nevents: kotlin.Int, /*5*/ flags: kotlin.UInt, /*6*/ timeout: kotlinx.cinterop.CValuesRef<platform.osx.timespec>?): kotlin.Int { TODO() }

fun key_defined(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun keybound(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun keyname(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun keyok(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun keypad(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun killchar(): kotlin.Byte { TODO() }

@kotlin.native.SymbolName(name = "platform_osx_kniBridge0")private external fun kniBridge0(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1")private external fun kniBridge1(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge10")private external fun kniBridge10(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge100")private external fun kniBridge100(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1000")private external fun kniBridge1000(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1001")private external fun kniBridge1001(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1002")private external fun kniBridge1002(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1003")private external fun kniBridge1003(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1004")private external fun kniBridge1004(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1005")private external fun kniBridge1005(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1006")private external fun kniBridge1006(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1007")private external fun kniBridge1007(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1008")private external fun kniBridge1008(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1009")private external fun kniBridge1009(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge101")private external fun kniBridge101(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1010")private external fun kniBridge1010(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1011")private external fun kniBridge1011(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1012")private external fun kniBridge1012(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1013")private external fun kniBridge1013(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1014")private external fun kniBridge1014(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1015")private external fun kniBridge1015(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1016")private external fun kniBridge1016(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1017")private external fun kniBridge1017(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1018")private external fun kniBridge1018(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1019")private external fun kniBridge1019(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge102")private external fun kniBridge102(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1020")private external fun kniBridge1020(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1021")private external fun kniBridge1021(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1022")private external fun kniBridge1022(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1023")private external fun kniBridge1023(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1024")private external fun kniBridge1024(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1025")private external fun kniBridge1025(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1026")private external fun kniBridge1026(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1027")private external fun kniBridge1027(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1028")private external fun kniBridge1028(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1029")private external fun kniBridge1029(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge103")private external fun kniBridge103(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1030")private external fun kniBridge1030(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1031")private external fun kniBridge1031(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1032")private external fun kniBridge1032(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1033")private external fun kniBridge1033(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1034")private external fun kniBridge1034()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1035")private external fun kniBridge1035()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1036")private external fun kniBridge1036(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1037")private external fun kniBridge1037()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1038")private external fun kniBridge1038(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1039")private external fun kniBridge1039(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge104")private external fun kniBridge104(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1040")private external fun kniBridge1040(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1041")private external fun kniBridge1041(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1042")private external fun kniBridge1042(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1043")private external fun kniBridge1043(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1044")private external fun kniBridge1044(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1045")private external fun kniBridge1045(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1046")private external fun kniBridge1046(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1047")private external fun kniBridge1047(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1048")private external fun kniBridge1048(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1049")private external fun kniBridge1049(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge105")private external fun kniBridge105(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1050")private external fun kniBridge1050(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1051")private external fun kniBridge1051(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1052")private external fun kniBridge1052(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1053")private external fun kniBridge1053(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1054")private external fun kniBridge1054(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1055")private external fun kniBridge1055(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1056")private external fun kniBridge1056(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1057")private external fun kniBridge1057(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1058")private external fun kniBridge1058(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1059")private external fun kniBridge1059(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge106")private external fun kniBridge106(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1060")private external fun kniBridge1060(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1061")private external fun kniBridge1061(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1062")private external fun kniBridge1062(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1063")private external fun kniBridge1063(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1064")private external fun kniBridge1064(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1065")private external fun kniBridge1065(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1066")private external fun kniBridge1066(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1067")private external fun kniBridge1067(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1068")private external fun kniBridge1068(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1069")private external fun kniBridge1069(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge107")private external fun kniBridge107(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1070")private external fun kniBridge1070(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1071")private external fun kniBridge1071(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1072")private external fun kniBridge1072(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1073")private external fun kniBridge1073(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1074")private external fun kniBridge1074(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1075")private external fun kniBridge1075(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1076")private external fun kniBridge1076(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1077")private external fun kniBridge1077(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1078")private external fun kniBridge1078(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1079")private external fun kniBridge1079(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge108")private external fun kniBridge108(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1080")private external fun kniBridge1080(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1081")private external fun kniBridge1081(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1082")private external fun kniBridge1082(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1083")private external fun kniBridge1083(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1084")private external fun kniBridge1084(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1085")private external fun kniBridge1085(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1086")private external fun kniBridge1086(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1087")private external fun kniBridge1087(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1088")private external fun kniBridge1088(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1089")private external fun kniBridge1089(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge109")private external fun kniBridge109(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1090")private external fun kniBridge1090(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1091")private external fun kniBridge1091(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1092")private external fun kniBridge1092(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1093")private external fun kniBridge1093(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1094")private external fun kniBridge1094(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1095")private external fun kniBridge1095(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1096")private external fun kniBridge1096(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1097")private external fun kniBridge1097(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1098")private external fun kniBridge1098(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1099")private external fun kniBridge1099(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge11")private external fun kniBridge11(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge110")private external fun kniBridge110(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1100")private external fun kniBridge1100(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1101")private external fun kniBridge1101(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1102")private external fun kniBridge1102(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1103")private external fun kniBridge1103(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1104")private external fun kniBridge1104(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1105")private external fun kniBridge1105(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1106")private external fun kniBridge1106(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1107")private external fun kniBridge1107(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1108")private external fun kniBridge1108(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1109")private external fun kniBridge1109(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge111")private external fun kniBridge111(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1110")private external fun kniBridge1110(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1111")private external fun kniBridge1111(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1112")private external fun kniBridge1112(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1113")private external fun kniBridge1113(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1114")private external fun kniBridge1114(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1115")private external fun kniBridge1115(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1116")private external fun kniBridge1116(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1117")private external fun kniBridge1117(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1118")private external fun kniBridge1118(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1119")private external fun kniBridge1119(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge112")private external fun kniBridge112(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1120")private external fun kniBridge1120(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1121")private external fun kniBridge1121(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1122")private external fun kniBridge1122(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1123")private external fun kniBridge1123(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1124")private external fun kniBridge1124(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1125")private external fun kniBridge1125(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1126")private external fun kniBridge1126(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1127")private external fun kniBridge1127(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1128")private external fun kniBridge1128(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1129")private external fun kniBridge1129(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge113")private external fun kniBridge113(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1130")private external fun kniBridge1130(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1131")private external fun kniBridge1131(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1132")private external fun kniBridge1132(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1133")private external fun kniBridge1133(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1134")private external fun kniBridge1134(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1135")private external fun kniBridge1135(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1136")private external fun kniBridge1136(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1137")private external fun kniBridge1137(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1138")private external fun kniBridge1138(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1139")private external fun kniBridge1139(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge114")private external fun kniBridge114(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1140")private external fun kniBridge1140(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1141")private external fun kniBridge1141(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1142")private external fun kniBridge1142(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1143")private external fun kniBridge1143(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1144")private external fun kniBridge1144(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1145")private external fun kniBridge1145()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1146")private external fun kniBridge1146(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1147")private external fun kniBridge1147(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1148")private external fun kniBridge1148()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1149")private external fun kniBridge1149(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge115")private external fun kniBridge115(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1150")private external fun kniBridge1150(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1151")private external fun kniBridge1151(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1152")private external fun kniBridge1152(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1153")private external fun kniBridge1153(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1154")private external fun kniBridge1154(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1155")private external fun kniBridge1155(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1156")private external fun kniBridge1156(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1157")private external fun kniBridge1157(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1158")private external fun kniBridge1158(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1159")private external fun kniBridge1159(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge116")private external fun kniBridge116(/*0*/ p0: kotlin.UByte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1160")private external fun kniBridge1160(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1161")private external fun kniBridge1161(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1162")private external fun kniBridge1162(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1163")private external fun kniBridge1163(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1164")private external fun kniBridge1164(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1165")private external fun kniBridge1165(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1166")private external fun kniBridge1166(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1167")private external fun kniBridge1167(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1168")private external fun kniBridge1168(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1169")private external fun kniBridge1169(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge117")private external fun kniBridge117(/*0*/ p0: kotlin.UByte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1170")private external fun kniBridge1170(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1171")private external fun kniBridge1171(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1172")private external fun kniBridge1172(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1173")private external fun kniBridge1173(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1174")private external fun kniBridge1174(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1175")private external fun kniBridge1175(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1176")private external fun kniBridge1176(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1177")private external fun kniBridge1177(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1178")private external fun kniBridge1178(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1179")private external fun kniBridge1179(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge118")private external fun kniBridge118(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1180")private external fun kniBridge1180(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1181")private external fun kniBridge1181(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1182")private external fun kniBridge1182(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1183")private external fun kniBridge1183(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1184")private external fun kniBridge1184(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1185")private external fun kniBridge1185(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1186")private external fun kniBridge1186(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1187")private external fun kniBridge1187(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1188")private external fun kniBridge1188(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1189")private external fun kniBridge1189(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge119")private external fun kniBridge119(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1190")private external fun kniBridge1190(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1191")private external fun kniBridge1191(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1192")private external fun kniBridge1192(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1193")private external fun kniBridge1193(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1194")private external fun kniBridge1194(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1195")private external fun kniBridge1195(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1196")private external fun kniBridge1196(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1197")private external fun kniBridge1197(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1198")private external fun kniBridge1198(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1199")private external fun kniBridge1199(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge12")private external fun kniBridge12(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge120")private external fun kniBridge120(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1200")private external fun kniBridge1200(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1201")private external fun kniBridge1201(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1202")private external fun kniBridge1202(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1203")private external fun kniBridge1203(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1204")private external fun kniBridge1204(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1205")private external fun kniBridge1205(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1206")private external fun kniBridge1206(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1207")private external fun kniBridge1207(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1208")private external fun kniBridge1208(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1209")private external fun kniBridge1209(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge121")private external fun kniBridge121(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1210")private external fun kniBridge1210(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1211")private external fun kniBridge1211()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1212")private external fun kniBridge1212(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1213")private external fun kniBridge1213(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1214")private external fun kniBridge1214(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1215")private external fun kniBridge1215(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1216")private external fun kniBridge1216(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1217")private external fun kniBridge1217(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Byte, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1218")private external fun kniBridge1218(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1219")private external fun kniBridge1219(/*0*/ p0: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge122")private external fun kniBridge122(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1220")private external fun kniBridge1220(/*0*/ p0: kotlin.Byte, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1221")private external fun kniBridge1221(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1222")private external fun kniBridge1222(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1223")private external fun kniBridge1223(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1224")private external fun kniBridge1224(/*0*/ p0: kotlin.Byte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1225")private external fun kniBridge1225(/*0*/ p0: kotlin.Byte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1226")private external fun kniBridge1226(/*0*/ p0: kotlin.Byte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1227")private external fun kniBridge1227(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1228")private external fun kniBridge1228(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1229")private external fun kniBridge1229(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge123")private external fun kniBridge123(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1230")private external fun kniBridge1230(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1231")private external fun kniBridge1231(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1232")private external fun kniBridge1232(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1233")private external fun kniBridge1233(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1234")private external fun kniBridge1234(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1235")private external fun kniBridge1235(/*0*/ p0: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1236")private external fun kniBridge1236(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1237")private external fun kniBridge1237(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1238")private external fun kniBridge1238(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1239")private external fun kniBridge1239(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge124")private external fun kniBridge124(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1240")private external fun kniBridge1240(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1241")private external fun kniBridge1241(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1242")private external fun kniBridge1242(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1243")private external fun kniBridge1243(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1244")private external fun kniBridge1244(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1245")private external fun kniBridge1245(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1246")private external fun kniBridge1246(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1247")private external fun kniBridge1247(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1248")private external fun kniBridge1248(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1249")private external fun kniBridge1249(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge125")private external fun kniBridge125(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UByte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1250")private external fun kniBridge1250(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1251")private external fun kniBridge1251(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1252")private external fun kniBridge1252(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1253")private external fun kniBridge1253(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1254")private external fun kniBridge1254(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1255")private external fun kniBridge1255()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1256")private external fun kniBridge1256(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1257")private external fun kniBridge1257(/*0*/ p0: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1258")private external fun kniBridge1258(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1259")private external fun kniBridge1259(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge126")private external fun kniBridge126(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1260")private external fun kniBridge1260(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1261")private external fun kniBridge1261(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1262")private external fun kniBridge1262(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1263")private external fun kniBridge1263(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1264")private external fun kniBridge1264(/*0*/ p0: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1265")private external fun kniBridge1265(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1266")private external fun kniBridge1266(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1267")private external fun kniBridge1267(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1268")private external fun kniBridge1268(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1269")private external fun kniBridge1269(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge127")private external fun kniBridge127(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1270")private external fun kniBridge1270(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1271")private external fun kniBridge1271(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1272")private external fun kniBridge1272(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1273")private external fun kniBridge1273(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1274")private external fun kniBridge1274(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1275")private external fun kniBridge1275(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1276")private external fun kniBridge1276(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1277")private external fun kniBridge1277(/*0*/ p0: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1278")private external fun kniBridge1278(/*0*/ p0: kotlin.ULong): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1279")private external fun kniBridge1279(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge128")private external fun kniBridge128(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1280")private external fun kniBridge1280(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1281")private external fun kniBridge1281(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1282")private external fun kniBridge1282(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1283")private external fun kniBridge1283(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1284")private external fun kniBridge1284(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1285")private external fun kniBridge1285(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1286")private external fun kniBridge1286(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1287")private external fun kniBridge1287(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1288")private external fun kniBridge1288(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1289")private external fun kniBridge1289(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge129")private external fun kniBridge129(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1290")private external fun kniBridge1290(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1291")private external fun kniBridge1291(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1292")private external fun kniBridge1292(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1293")private external fun kniBridge1293(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1294")private external fun kniBridge1294(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1295")private external fun kniBridge1295(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1296")private external fun kniBridge1296(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1297")private external fun kniBridge1297(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1298")private external fun kniBridge1298(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1299")private external fun kniBridge1299(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge13")private external fun kniBridge13(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge130")private external fun kniBridge130(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1300")private external fun kniBridge1300(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1301")private external fun kniBridge1301(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1302")private external fun kniBridge1302(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1303")private external fun kniBridge1303(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1304")private external fun kniBridge1304(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1305")private external fun kniBridge1305(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1306")private external fun kniBridge1306(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1307")private external fun kniBridge1307(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1308")private external fun kniBridge1308(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1309")private external fun kniBridge1309(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge131")private external fun kniBridge131(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1310")private external fun kniBridge1310(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1311")private external fun kniBridge1311(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1312")private external fun kniBridge1312(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1313")private external fun kniBridge1313(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1314")private external fun kniBridge1314(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1315")private external fun kniBridge1315(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1316")private external fun kniBridge1316(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1317")private external fun kniBridge1317(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1318")private external fun kniBridge1318(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1319")private external fun kniBridge1319(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge132")private external fun kniBridge132(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1320")private external fun kniBridge1320(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1321")private external fun kniBridge1321(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1322")private external fun kniBridge1322(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1323")private external fun kniBridge1323(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1324")private external fun kniBridge1324(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1325")private external fun kniBridge1325(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1326")private external fun kniBridge1326(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1327")private external fun kniBridge1327(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1328")private external fun kniBridge1328(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1329")private external fun kniBridge1329(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge133")private external fun kniBridge133(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1330")private external fun kniBridge1330(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1331")private external fun kniBridge1331(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1332")private external fun kniBridge1332(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1333")private external fun kniBridge1333(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1334")private external fun kniBridge1334(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1335")private external fun kniBridge1335(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1336")private external fun kniBridge1336(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1337")private external fun kniBridge1337(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1338")private external fun kniBridge1338(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1339")private external fun kniBridge1339(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge134")private external fun kniBridge134(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1340")private external fun kniBridge1340(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1341")private external fun kniBridge1341(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1342")private external fun kniBridge1342(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1343")private external fun kniBridge1343(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1344")private external fun kniBridge1344(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1345")private external fun kniBridge1345(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1346")private external fun kniBridge1346(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1347")private external fun kniBridge1347(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1348")private external fun kniBridge1348(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1349")private external fun kniBridge1349(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge135")private external fun kniBridge135(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1350")private external fun kniBridge1350(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1351")private external fun kniBridge1351(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1352")private external fun kniBridge1352(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1353")private external fun kniBridge1353(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1354")private external fun kniBridge1354(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1355")private external fun kniBridge1355(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1356")private external fun kniBridge1356(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1357")private external fun kniBridge1357(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1358")private external fun kniBridge1358(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1359")private external fun kniBridge1359(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge136")private external fun kniBridge136(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1360")private external fun kniBridge1360(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1361")private external fun kniBridge1361(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1362")private external fun kniBridge1362(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1363")private external fun kniBridge1363(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1364")private external fun kniBridge1364(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1365")private external fun kniBridge1365(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1366")private external fun kniBridge1366(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1367")private external fun kniBridge1367(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1368")private external fun kniBridge1368(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1369")private external fun kniBridge1369(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge137")private external fun kniBridge137(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1370")private external fun kniBridge1370(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1371")private external fun kniBridge1371(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1372")private external fun kniBridge1372(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1373")private external fun kniBridge1373(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1374")private external fun kniBridge1374(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1375")private external fun kniBridge1375(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1376")private external fun kniBridge1376(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1377")private external fun kniBridge1377(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1378")private external fun kniBridge1378(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1379")private external fun kniBridge1379(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge138")private external fun kniBridge138(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1380")private external fun kniBridge1380(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1381")private external fun kniBridge1381(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1382")private external fun kniBridge1382(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1383")private external fun kniBridge1383(): kotlin.Short

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1384")private external fun kniBridge1384(/*0*/ p0: kotlin.Short)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1385")private external fun kniBridge1385(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1386")private external fun kniBridge1386(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1387")private external fun kniBridge1387(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1388")private external fun kniBridge1388(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1389")private external fun kniBridge1389(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge139")private external fun kniBridge139(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1390")private external fun kniBridge1390(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1391")private external fun kniBridge1391(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1392")private external fun kniBridge1392(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1393")private external fun kniBridge1393(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1394")private external fun kniBridge1394(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1395")private external fun kniBridge1395(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1396")private external fun kniBridge1396(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1397")private external fun kniBridge1397(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1398")private external fun kniBridge1398(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1399")private external fun kniBridge1399(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge14")private external fun kniBridge14(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge140")private external fun kniBridge140(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1400")private external fun kniBridge1400(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1401")private external fun kniBridge1401(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1402")private external fun kniBridge1402(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1403")private external fun kniBridge1403(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1404")private external fun kniBridge1404(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1405")private external fun kniBridge1405(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1406")private external fun kniBridge1406(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1407")private external fun kniBridge1407(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1408")private external fun kniBridge1408(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge1409")private external fun kniBridge1409(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge141")private external fun kniBridge141(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge142")private external fun kniBridge142(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge143")private external fun kniBridge143(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge144")private external fun kniBridge144(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge145")private external fun kniBridge145(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge146")private external fun kniBridge146(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge147")private external fun kniBridge147(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge148")private external fun kniBridge148(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge149")private external fun kniBridge149(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge15")private external fun kniBridge15(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge150")private external fun kniBridge150(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge151")private external fun kniBridge151(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge152")private external fun kniBridge152(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge153")private external fun kniBridge153(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge154")private external fun kniBridge154(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge155")private external fun kniBridge155(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge156")private external fun kniBridge156(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UByte): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge157")private external fun kniBridge157(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge158")private external fun kniBridge158(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge159")private external fun kniBridge159(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge16")private external fun kniBridge16(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge160")private external fun kniBridge160(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge161")private external fun kniBridge161(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge162")private external fun kniBridge162(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge163")private external fun kniBridge163(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge164")private external fun kniBridge164(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UByte): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge165")private external fun kniBridge165(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge166")private external fun kniBridge166(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge167")private external fun kniBridge167(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge168")private external fun kniBridge168(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge169")private external fun kniBridge169(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge17")private external fun kniBridge17(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge170")private external fun kniBridge170(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge171")private external fun kniBridge171(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge172")private external fun kniBridge172(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge173")private external fun kniBridge173(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge174")private external fun kniBridge174(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge175")private external fun kniBridge175(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge176")private external fun kniBridge176(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge177")private external fun kniBridge177(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge178")private external fun kniBridge178(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge179")private external fun kniBridge179(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge18")private external fun kniBridge18(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge180")private external fun kniBridge180(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge181")private external fun kniBridge181(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge182")private external fun kniBridge182(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge183")private external fun kniBridge183(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge184")private external fun kniBridge184(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge185")private external fun kniBridge185(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge186")private external fun kniBridge186(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge187")private external fun kniBridge187(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge188")private external fun kniBridge188(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge189")private external fun kniBridge189(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge19")private external fun kniBridge19(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge190")private external fun kniBridge190(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge191")private external fun kniBridge191(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge192")private external fun kniBridge192(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge193")private external fun kniBridge193(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge194")private external fun kniBridge194(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge195")private external fun kniBridge195(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge196")private external fun kniBridge196(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge197")private external fun kniBridge197(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Short, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge198")private external fun kniBridge198(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge199")private external fun kniBridge199(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge2")private external fun kniBridge2()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge20")private external fun kniBridge20(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge200")private external fun kniBridge200(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge201")private external fun kniBridge201(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge202")private external fun kniBridge202(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge203")private external fun kniBridge203(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge204")private external fun kniBridge204(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge205")private external fun kniBridge205(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge206")private external fun kniBridge206(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Short, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge207")private external fun kniBridge207(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge208")private external fun kniBridge208(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge209")private external fun kniBridge209(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge21")private external fun kniBridge21(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge210")private external fun kniBridge210(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge211")private external fun kniBridge211(/*0*/ p0: kotlin.Short, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge212")private external fun kniBridge212(/*0*/ p0: kotlin.Short, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge213")private external fun kniBridge213(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge214")private external fun kniBridge214(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlin.Int, /*8*/ p8: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge215")private external fun kniBridge215(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge216")private external fun kniBridge216(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge217")private external fun kniBridge217(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge218")private external fun kniBridge218(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge219")private external fun kniBridge219(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge22")private external fun kniBridge22(/*0*/ p0: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge220")private external fun kniBridge220(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge221")private external fun kniBridge221(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge222")private external fun kniBridge222(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge223")private external fun kniBridge223(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge224")private external fun kniBridge224(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge225")private external fun kniBridge225(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge226")private external fun kniBridge226(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge227")private external fun kniBridge227(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge228")private external fun kniBridge228(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge229")private external fun kniBridge229(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge23")private external fun kniBridge23(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge230")private external fun kniBridge230(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge231")private external fun kniBridge231()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge232")private external fun kniBridge232(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge233")private external fun kniBridge233(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge234")private external fun kniBridge234(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge235")private external fun kniBridge235(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge236")private external fun kniBridge236(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge237")private external fun kniBridge237(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge238")private external fun kniBridge238(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge239")private external fun kniBridge239(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge24")private external fun kniBridge24(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge240")private external fun kniBridge240(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge241")private external fun kniBridge241(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge242")private external fun kniBridge242(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge243")private external fun kniBridge243(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge244")private external fun kniBridge244(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge245")private external fun kniBridge245(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge246")private external fun kniBridge246(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge247")private external fun kniBridge247(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge248")private external fun kniBridge248(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge249")private external fun kniBridge249(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge25")private external fun kniBridge25(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge250")private external fun kniBridge250(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge251")private external fun kniBridge251(/*0*/ p0: kotlin.Short, /*1*/ p1: kotlin.Short, /*2*/ p2: kotlin.Short, /*3*/ p3: kotlin.Short): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge252")private external fun kniBridge252(/*0*/ p0: kotlin.Short, /*1*/ p1: kotlin.Short, /*2*/ p2: kotlin.Short): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge253")private external fun kniBridge253(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge254")private external fun kniBridge254(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge255")private external fun kniBridge255(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge256")private external fun kniBridge256(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge257")private external fun kniBridge257(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge258")private external fun kniBridge258(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge259")private external fun kniBridge259(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge26")private external fun kniBridge26(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge260")private external fun kniBridge260(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge261")private external fun kniBridge261(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge262")private external fun kniBridge262(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge263")private external fun kniBridge263(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge264")private external fun kniBridge264(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge265")private external fun kniBridge265(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge266")private external fun kniBridge266(): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge267")private external fun kniBridge267(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge268")private external fun kniBridge268(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge269")private external fun kniBridge269(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge27")private external fun kniBridge27(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge270")private external fun kniBridge270(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge271")private external fun kniBridge271(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge272")private external fun kniBridge272(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge273")private external fun kniBridge273(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge274")private external fun kniBridge274(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge275")private external fun kniBridge275(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge276")private external fun kniBridge276(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Short, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge277")private external fun kniBridge277(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge278")private external fun kniBridge278(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge279")private external fun kniBridge279(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge28")private external fun kniBridge28(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge280")private external fun kniBridge280(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge281")private external fun kniBridge281(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge282")private external fun kniBridge282(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge283")private external fun kniBridge283(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge284")private external fun kniBridge284(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge285")private external fun kniBridge285(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge286")private external fun kniBridge286(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge287")private external fun kniBridge287(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge288")private external fun kniBridge288(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge289")private external fun kniBridge289(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge29")private external fun kniBridge29(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge290")private external fun kniBridge290(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge291")private external fun kniBridge291(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge292")private external fun kniBridge292(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge293")private external fun kniBridge293(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge294")private external fun kniBridge294(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge295")private external fun kniBridge295(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge296")private external fun kniBridge296(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge297")private external fun kniBridge297(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge298")private external fun kniBridge298(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge299")private external fun kniBridge299(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge3")private external fun kniBridge3(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge30")private external fun kniBridge30(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge300")private external fun kniBridge300(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.Short, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge301")private external fun kniBridge301(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge302")private external fun kniBridge302(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge303")private external fun kniBridge303(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge304")private external fun kniBridge304(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge305")private external fun kniBridge305(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge306")private external fun kniBridge306(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge307")private external fun kniBridge307(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge308")private external fun kniBridge308(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge309")private external fun kniBridge309(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge31")private external fun kniBridge31(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge310")private external fun kniBridge310(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge311")private external fun kniBridge311(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge312")private external fun kniBridge312(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge313")private external fun kniBridge313(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge314")private external fun kniBridge314(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge315")private external fun kniBridge315(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge316")private external fun kniBridge316(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge317")private external fun kniBridge317(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge318")private external fun kniBridge318(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge319")private external fun kniBridge319(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge32")private external fun kniBridge32(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge320")private external fun kniBridge320(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge321")private external fun kniBridge321(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge322")private external fun kniBridge322(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge323")private external fun kniBridge323(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge324")private external fun kniBridge324(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge325")private external fun kniBridge325(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge326")private external fun kniBridge326(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge327")private external fun kniBridge327()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge328")private external fun kniBridge328(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge329")private external fun kniBridge329(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge33")private external fun kniBridge33(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge330")private external fun kniBridge330(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge331")private external fun kniBridge331(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge332")private external fun kniBridge332(/*0*/ p0: kotlin.Short, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge333")private external fun kniBridge333(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge334")private external fun kniBridge334(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge335")private external fun kniBridge335(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge336")private external fun kniBridge336(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge337")private external fun kniBridge337(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge338")private external fun kniBridge338(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge339")private external fun kniBridge339()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge34")private external fun kniBridge34(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge340")private external fun kniBridge340(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge341")private external fun kniBridge341(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge342")private external fun kniBridge342(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge343")private external fun kniBridge343(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge344")private external fun kniBridge344(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge345")private external fun kniBridge345(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge346")private external fun kniBridge346(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge347")private external fun kniBridge347(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge348")private external fun kniBridge348(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge349")private external fun kniBridge349(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge35")private external fun kniBridge35(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge350")private external fun kniBridge350(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge351")private external fun kniBridge351(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge352")private external fun kniBridge352(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge353")private external fun kniBridge353(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge354")private external fun kniBridge354(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge355")private external fun kniBridge355(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge356")private external fun kniBridge356(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge357")private external fun kniBridge357(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge358")private external fun kniBridge358(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge359")private external fun kniBridge359(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge36")private external fun kniBridge36(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge360")private external fun kniBridge360(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge361")private external fun kniBridge361(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge362")private external fun kniBridge362(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge363")private external fun kniBridge363(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge364")private external fun kniBridge364(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Short, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge365")private external fun kniBridge365(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge366")private external fun kniBridge366(/*0*/ p0: kotlin.Short): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge367")private external fun kniBridge367(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge368")private external fun kniBridge368(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge369")private external fun kniBridge369(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge37")private external fun kniBridge37(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge370")private external fun kniBridge370(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge371")private external fun kniBridge371(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge372")private external fun kniBridge372(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge373")private external fun kniBridge373(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge374")private external fun kniBridge374(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge375")private external fun kniBridge375(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge376")private external fun kniBridge376(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge377")private external fun kniBridge377(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge378")private external fun kniBridge378(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge379")private external fun kniBridge379(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge38")private external fun kniBridge38(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge380")private external fun kniBridge380(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge381")private external fun kniBridge381(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge382")private external fun kniBridge382(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge383")private external fun kniBridge383(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge384")private external fun kniBridge384(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge385")private external fun kniBridge385(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge386")private external fun kniBridge386(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge387")private external fun kniBridge387(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge388")private external fun kniBridge388(/*0*/ p0: kotlin.Byte)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge389")private external fun kniBridge389(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge39")private external fun kniBridge39(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge390")private external fun kniBridge390(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge391")private external fun kniBridge391(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge392")private external fun kniBridge392(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge393")private external fun kniBridge393(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge394")private external fun kniBridge394(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge395")private external fun kniBridge395(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge396")private external fun kniBridge396(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge397")private external fun kniBridge397(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge398")private external fun kniBridge398(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge399")private external fun kniBridge399(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge4")private external fun kniBridge4()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge40")private external fun kniBridge40(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge400")private external fun kniBridge400(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge401")private external fun kniBridge401(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge402")private external fun kniBridge402(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge403")private external fun kniBridge403(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge404")private external fun kniBridge404(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge405")private external fun kniBridge405(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge406")private external fun kniBridge406(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge407")private external fun kniBridge407(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Short, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge408")private external fun kniBridge408(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge409")private external fun kniBridge409(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge41")private external fun kniBridge41(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge410")private external fun kniBridge410(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlin.UInt, /*8*/ p8: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge411")private external fun kniBridge411(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Short, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge412")private external fun kniBridge412(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge413")private external fun kniBridge413(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge414")private external fun kniBridge414(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge415")private external fun kniBridge415(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Short, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge416")private external fun kniBridge416(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge417")private external fun kniBridge417(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge418")private external fun kniBridge418(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge419")private external fun kniBridge419(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge42")private external fun kniBridge42(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge420")private external fun kniBridge420(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge421")private external fun kniBridge421(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge422")private external fun kniBridge422(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge423")private external fun kniBridge423(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge424")private external fun kniBridge424(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge425")private external fun kniBridge425(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge426")private external fun kniBridge426(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge427")private external fun kniBridge427(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge428")private external fun kniBridge428(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge429")private external fun kniBridge429(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge43")private external fun kniBridge43(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge430")private external fun kniBridge430(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge431")private external fun kniBridge431(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge432")private external fun kniBridge432(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge433")private external fun kniBridge433(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge434")private external fun kniBridge434(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge435")private external fun kniBridge435(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge436")private external fun kniBridge436(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge437")private external fun kniBridge437(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge438")private external fun kniBridge438(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge439")private external fun kniBridge439(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge44")private external fun kniBridge44(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge440")private external fun kniBridge440(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge441")private external fun kniBridge441(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge442")private external fun kniBridge442(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge443")private external fun kniBridge443(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge444")private external fun kniBridge444(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge445")private external fun kniBridge445(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge446")private external fun kniBridge446(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge447")private external fun kniBridge447(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge448")private external fun kniBridge448(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge449")private external fun kniBridge449(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge45")private external fun kniBridge45(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge450")private external fun kniBridge450(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge451")private external fun kniBridge451(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge452")private external fun kniBridge452(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge453")private external fun kniBridge453(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge454")private external fun kniBridge454(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge455")private external fun kniBridge455(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge456")private external fun kniBridge456(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge457")private external fun kniBridge457(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge458")private external fun kniBridge458(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge459")private external fun kniBridge459(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge46")private external fun kniBridge46(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge460")private external fun kniBridge460(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge461")private external fun kniBridge461(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge462")private external fun kniBridge462(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge463")private external fun kniBridge463(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge464")private external fun kniBridge464(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge465")private external fun kniBridge465(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge466")private external fun kniBridge466(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge467")private external fun kniBridge467(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge468")private external fun kniBridge468(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge469")private external fun kniBridge469(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge47")private external fun kniBridge47(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge470")private external fun kniBridge470(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge471")private external fun kniBridge471(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge472")private external fun kniBridge472(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge473")private external fun kniBridge473(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge474")private external fun kniBridge474(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge475")private external fun kniBridge475(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge476")private external fun kniBridge476(/*0*/ p0: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge477")private external fun kniBridge477(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge478")private external fun kniBridge478(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge479")private external fun kniBridge479(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge48")private external fun kniBridge48(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge480")private external fun kniBridge480(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge481")private external fun kniBridge481()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge482")private external fun kniBridge482(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge483")private external fun kniBridge483(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge484")private external fun kniBridge484(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge485")private external fun kniBridge485(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge486")private external fun kniBridge486(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge487")private external fun kniBridge487(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge488")private external fun kniBridge488(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge489")private external fun kniBridge489(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge49")private external fun kniBridge49(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge490")private external fun kniBridge490(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge491")private external fun kniBridge491(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge492")private external fun kniBridge492(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge493")private external fun kniBridge493(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge494")private external fun kniBridge494(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge495")private external fun kniBridge495(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge496")private external fun kniBridge496(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge497")private external fun kniBridge497(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge498")private external fun kniBridge498(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge499")private external fun kniBridge499(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Byte): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge5")private external fun kniBridge5(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge50")private external fun kniBridge50(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge500")private external fun kniBridge500(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Byte): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge501")private external fun kniBridge501(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge502")private external fun kniBridge502(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge503")private external fun kniBridge503(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge504")private external fun kniBridge504(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge505")private external fun kniBridge505(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge506")private external fun kniBridge506(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge507")private external fun kniBridge507(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge508")private external fun kniBridge508(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge509")private external fun kniBridge509(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge51")private external fun kniBridge51(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge510")private external fun kniBridge510(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge511")private external fun kniBridge511(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge512")private external fun kniBridge512(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge513")private external fun kniBridge513(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge514")private external fun kniBridge514(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge515")private external fun kniBridge515(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge516")private external fun kniBridge516(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge517")private external fun kniBridge517(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge518")private external fun kniBridge518(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge519")private external fun kniBridge519(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge52")private external fun kniBridge52(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge520")private external fun kniBridge520(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge521")private external fun kniBridge521(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge522")private external fun kniBridge522(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge523")private external fun kniBridge523(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge524")private external fun kniBridge524(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge525")private external fun kniBridge525(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Byte): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge526")private external fun kniBridge526(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge527")private external fun kniBridge527(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge528")private external fun kniBridge528(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge529")private external fun kniBridge529(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge53")private external fun kniBridge53(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge530")private external fun kniBridge530(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge531")private external fun kniBridge531(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge532")private external fun kniBridge532(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge533")private external fun kniBridge533(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge534")private external fun kniBridge534(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge535")private external fun kniBridge535(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge536")private external fun kniBridge536(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge537")private external fun kniBridge537(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge538")private external fun kniBridge538(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge539")private external fun kniBridge539(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge54")private external fun kniBridge54(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge540")private external fun kniBridge540(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge541")private external fun kniBridge541(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge542")private external fun kniBridge542(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge543")private external fun kniBridge543(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge544")private external fun kniBridge544(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge545")private external fun kniBridge545(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge546")private external fun kniBridge546(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge547")private external fun kniBridge547(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge548")private external fun kniBridge548(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge549")private external fun kniBridge549(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge55")private external fun kniBridge55(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge550")private external fun kniBridge550(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge551")private external fun kniBridge551(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge552")private external fun kniBridge552(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge553")private external fun kniBridge553(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge554")private external fun kniBridge554(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge555")private external fun kniBridge555(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge556")private external fun kniBridge556(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge557")private external fun kniBridge557(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge558")private external fun kniBridge558(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge559")private external fun kniBridge559(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge56")private external fun kniBridge56(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge560")private external fun kniBridge560(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge561")private external fun kniBridge561(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge562")private external fun kniBridge562(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge563")private external fun kniBridge563(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge564")private external fun kniBridge564(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge565")private external fun kniBridge565(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge566")private external fun kniBridge566(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge567")private external fun kniBridge567(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge568")private external fun kniBridge568(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge569")private external fun kniBridge569(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge57")private external fun kniBridge57(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge570")private external fun kniBridge570(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge571")private external fun kniBridge571(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge572")private external fun kniBridge572(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge573")private external fun kniBridge573(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge574")private external fun kniBridge574(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge575")private external fun kniBridge575(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge576")private external fun kniBridge576(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge577")private external fun kniBridge577(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge578")private external fun kniBridge578(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge579")private external fun kniBridge579(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*11*/ p11: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*12*/ p12: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge58")private external fun kniBridge58(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge580")private external fun kniBridge580(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge581")private external fun kniBridge581(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge582")private external fun kniBridge582(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge583")private external fun kniBridge583(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge584")private external fun kniBridge584(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge585")private external fun kniBridge585(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge586")private external fun kniBridge586(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge587")private external fun kniBridge587(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge588")private external fun kniBridge588(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge589")private external fun kniBridge589(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge59")private external fun kniBridge59(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge590")private external fun kniBridge590(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge591")private external fun kniBridge591(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge592")private external fun kniBridge592(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge593")private external fun kniBridge593(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge594")private external fun kniBridge594(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge595")private external fun kniBridge595(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge596")private external fun kniBridge596(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge597")private external fun kniBridge597(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge598")private external fun kniBridge598(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge599")private external fun kniBridge599(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.UInt, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge6")private external fun kniBridge6()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge60")private external fun kniBridge60(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge600")private external fun kniBridge600(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge601")private external fun kniBridge601(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge602")private external fun kniBridge602(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge603")private external fun kniBridge603(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge604")private external fun kniBridge604(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge605")private external fun kniBridge605(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge606")private external fun kniBridge606(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge607")private external fun kniBridge607(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge608")private external fun kniBridge608(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge609")private external fun kniBridge609(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge61")private external fun kniBridge61(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge610")private external fun kniBridge610(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge611")private external fun kniBridge611(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge612")private external fun kniBridge612(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge613")private external fun kniBridge613(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge614")private external fun kniBridge614(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge615")private external fun kniBridge615(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge616")private external fun kniBridge616(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge617")private external fun kniBridge617(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge618")private external fun kniBridge618(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge619")private external fun kniBridge619(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge62")private external fun kniBridge62(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge620")private external fun kniBridge620(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge621")private external fun kniBridge621(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge622")private external fun kniBridge622(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge623")private external fun kniBridge623(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge624")private external fun kniBridge624(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge625")private external fun kniBridge625(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge626")private external fun kniBridge626(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge627")private external fun kniBridge627(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge628")private external fun kniBridge628(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.UByte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge629")private external fun kniBridge629(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.UByte

@kotlin.native.SymbolName(name = "platform_osx_kniBridge63")private external fun kniBridge63(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge630")private external fun kniBridge630(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge631")private external fun kniBridge631(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge632")private external fun kniBridge632(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge633")private external fun kniBridge633(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge634")private external fun kniBridge634(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge635")private external fun kniBridge635(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge636")private external fun kniBridge636(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge637")private external fun kniBridge637(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge638")private external fun kniBridge638(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge639")private external fun kniBridge639(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge64")private external fun kniBridge64(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge640")private external fun kniBridge640(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge641")private external fun kniBridge641(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge642")private external fun kniBridge642(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge643")private external fun kniBridge643(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge644")private external fun kniBridge644(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge645")private external fun kniBridge645(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge646")private external fun kniBridge646(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge647")private external fun kniBridge647(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge648")private external fun kniBridge648(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge649")private external fun kniBridge649(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge65")private external fun kniBridge65(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge650")private external fun kniBridge650(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge651")private external fun kniBridge651(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge652")private external fun kniBridge652(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge653")private external fun kniBridge653(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge654")private external fun kniBridge654(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge655")private external fun kniBridge655(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge656")private external fun kniBridge656(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge657")private external fun kniBridge657(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge658")private external fun kniBridge658(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge659")private external fun kniBridge659(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge66")private external fun kniBridge66(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge660")private external fun kniBridge660(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge661")private external fun kniBridge661(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge662")private external fun kniBridge662(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge663")private external fun kniBridge663(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge664")private external fun kniBridge664(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge665")private external fun kniBridge665(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge666")private external fun kniBridge666(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge667")private external fun kniBridge667(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge668")private external fun kniBridge668(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge669")private external fun kniBridge669(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge67")private external fun kniBridge67(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge670")private external fun kniBridge670(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge671")private external fun kniBridge671(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge672")private external fun kniBridge672(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge673")private external fun kniBridge673(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge674")private external fun kniBridge674(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge675")private external fun kniBridge675(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge676")private external fun kniBridge676(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge677")private external fun kniBridge677(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge678")private external fun kniBridge678(/*0*/ p0: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge679")private external fun kniBridge679(/*0*/ p0: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge68")private external fun kniBridge68(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge680")private external fun kniBridge680(/*0*/ p0: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge681")private external fun kniBridge681(/*0*/ p0: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge682")private external fun kniBridge682(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge683")private external fun kniBridge683(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge684")private external fun kniBridge684(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge685")private external fun kniBridge685(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge686")private external fun kniBridge686(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge687")private external fun kniBridge687(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge688")private external fun kniBridge688(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge689")private external fun kniBridge689(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge69")private external fun kniBridge69(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge690")private external fun kniBridge690(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge691")private external fun kniBridge691(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge692")private external fun kniBridge692(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge693")private external fun kniBridge693(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge694")private external fun kniBridge694(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge695")private external fun kniBridge695(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge696")private external fun kniBridge696(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge697")private external fun kniBridge697(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge698")private external fun kniBridge698(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge699")private external fun kniBridge699(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge7")private external fun kniBridge7(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge70")private external fun kniBridge70(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge700")private external fun kniBridge700(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge701")private external fun kniBridge701(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge702")private external fun kniBridge702(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge703")private external fun kniBridge703(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge704")private external fun kniBridge704(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge705")private external fun kniBridge705(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge706")private external fun kniBridge706(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge707")private external fun kniBridge707(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge708")private external fun kniBridge708(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge709")private external fun kniBridge709(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge71")private external fun kniBridge71(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge710")private external fun kniBridge710(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge711")private external fun kniBridge711(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge712")private external fun kniBridge712(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge713")private external fun kniBridge713(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge714")private external fun kniBridge714(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge715")private external fun kniBridge715(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge716")private external fun kniBridge716(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge717")private external fun kniBridge717(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge718")private external fun kniBridge718(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge719")private external fun kniBridge719(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge72")private external fun kniBridge72(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge720")private external fun kniBridge720(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge721")private external fun kniBridge721(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge722")private external fun kniBridge722(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge723")private external fun kniBridge723(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge724")private external fun kniBridge724(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge725")private external fun kniBridge725(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge726")private external fun kniBridge726(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge727")private external fun kniBridge727(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge728")private external fun kniBridge728(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge729")private external fun kniBridge729(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge73")private external fun kniBridge73(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge730")private external fun kniBridge730(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge731")private external fun kniBridge731(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge732")private external fun kniBridge732(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge733")private external fun kniBridge733(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge734")private external fun kniBridge734(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge735")private external fun kniBridge735(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge736")private external fun kniBridge736(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge737")private external fun kniBridge737(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge738")private external fun kniBridge738(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge739")private external fun kniBridge739(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge74")private external fun kniBridge74(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge740")private external fun kniBridge740(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge741")private external fun kniBridge741(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge742")private external fun kniBridge742(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge743")private external fun kniBridge743(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge744")private external fun kniBridge744(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge745")private external fun kniBridge745(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge746")private external fun kniBridge746(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge747")private external fun kniBridge747(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge748")private external fun kniBridge748(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge749")private external fun kniBridge749(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge75")private external fun kniBridge75(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge750")private external fun kniBridge750(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge751")private external fun kniBridge751(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge752")private external fun kniBridge752(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge753")private external fun kniBridge753(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge754")private external fun kniBridge754(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge755")private external fun kniBridge755(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge756")private external fun kniBridge756(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge757")private external fun kniBridge757(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge758")private external fun kniBridge758(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge759")private external fun kniBridge759(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge76")private external fun kniBridge76(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge760")private external fun kniBridge760(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge761")private external fun kniBridge761(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge762")private external fun kniBridge762(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge763")private external fun kniBridge763(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge764")private external fun kniBridge764(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge765")private external fun kniBridge765(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge766")private external fun kniBridge766(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge767")private external fun kniBridge767(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge768")private external fun kniBridge768(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge769")private external fun kniBridge769(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge77")private external fun kniBridge77(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge770")private external fun kniBridge770(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge771")private external fun kniBridge771(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge772")private external fun kniBridge772(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge773")private external fun kniBridge773(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge774")private external fun kniBridge774(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge775")private external fun kniBridge775(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge776")private external fun kniBridge776(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge777")private external fun kniBridge777(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge778")private external fun kniBridge778(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge779")private external fun kniBridge779(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge78")private external fun kniBridge78(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge780")private external fun kniBridge780(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge781")private external fun kniBridge781(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge782")private external fun kniBridge782(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge783")private external fun kniBridge783(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge784")private external fun kniBridge784(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge785")private external fun kniBridge785(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge786")private external fun kniBridge786(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge787")private external fun kniBridge787(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge788")private external fun kniBridge788(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge789")private external fun kniBridge789(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge79")private external fun kniBridge79(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge790")private external fun kniBridge790(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge791")private external fun kniBridge791(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge792")private external fun kniBridge792(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge793")private external fun kniBridge793(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge794")private external fun kniBridge794(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge795")private external fun kniBridge795(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge796")private external fun kniBridge796(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge797")private external fun kniBridge797(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge798")private external fun kniBridge798(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge799")private external fun kniBridge799(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge8")private external fun kniBridge8(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge80")private external fun kniBridge80(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge800")private external fun kniBridge800(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge801")private external fun kniBridge801(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge802")private external fun kniBridge802(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge803")private external fun kniBridge803(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge804")private external fun kniBridge804(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge805")private external fun kniBridge805(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge806")private external fun kniBridge806(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge807")private external fun kniBridge807(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge808")private external fun kniBridge808(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge809")private external fun kniBridge809(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge81")private external fun kniBridge81(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge810")private external fun kniBridge810(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge811")private external fun kniBridge811(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge812")private external fun kniBridge812(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge813")private external fun kniBridge813(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge814")private external fun kniBridge814(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge815")private external fun kniBridge815(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge816")private external fun kniBridge816(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge817")private external fun kniBridge817(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge818")private external fun kniBridge818(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge819")private external fun kniBridge819(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge82")private external fun kniBridge82(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge820")private external fun kniBridge820(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge821")private external fun kniBridge821(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge822")private external fun kniBridge822(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge823")private external fun kniBridge823(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge824")private external fun kniBridge824(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge825")private external fun kniBridge825(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge826")private external fun kniBridge826(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*11*/ p11: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*12*/ p12: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge827")private external fun kniBridge827(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge828")private external fun kniBridge828(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge829")private external fun kniBridge829(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge83")private external fun kniBridge83(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge830")private external fun kniBridge830(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge831")private external fun kniBridge831(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge832")private external fun kniBridge832(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge833")private external fun kniBridge833(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge834")private external fun kniBridge834(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge835")private external fun kniBridge835(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge836")private external fun kniBridge836(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge837")private external fun kniBridge837(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge838")private external fun kniBridge838(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge839")private external fun kniBridge839(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge84")private external fun kniBridge84(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge840")private external fun kniBridge840(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge841")private external fun kniBridge841(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge842")private external fun kniBridge842(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge843")private external fun kniBridge843(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge844")private external fun kniBridge844(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge845")private external fun kniBridge845(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge846")private external fun kniBridge846(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge847")private external fun kniBridge847(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge848")private external fun kniBridge848(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge849")private external fun kniBridge849(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge85")private external fun kniBridge85(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge850")private external fun kniBridge850(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge851")private external fun kniBridge851(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge852")private external fun kniBridge852(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge853")private external fun kniBridge853(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge854")private external fun kniBridge854(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge855")private external fun kniBridge855(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge856")private external fun kniBridge856(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge857")private external fun kniBridge857(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_osx_kniBridge858")private external fun kniBridge858(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge859")private external fun kniBridge859(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge86")private external fun kniBridge86(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge860")private external fun kniBridge860(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge861")private external fun kniBridge861(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge862")private external fun kniBridge862(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge863")private external fun kniBridge863(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge864")private external fun kniBridge864(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge865")private external fun kniBridge865(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge866")private external fun kniBridge866(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge867")private external fun kniBridge867(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge868")private external fun kniBridge868(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge869")private external fun kniBridge869(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge87")private external fun kniBridge87(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge870")private external fun kniBridge870(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge871")private external fun kniBridge871(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge872")private external fun kniBridge872(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge873")private external fun kniBridge873(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge874")private external fun kniBridge874(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge875")private external fun kniBridge875(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge876")private external fun kniBridge876(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge877")private external fun kniBridge877(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge878")private external fun kniBridge878(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge879")private external fun kniBridge879(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge88")private external fun kniBridge88(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge880")private external fun kniBridge880(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge881")private external fun kniBridge881(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge882")private external fun kniBridge882(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge883")private external fun kniBridge883(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge884")private external fun kniBridge884(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge885")private external fun kniBridge885(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge886")private external fun kniBridge886(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge887")private external fun kniBridge887(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge888")private external fun kniBridge888(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge889")private external fun kniBridge889(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge89")private external fun kniBridge89(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge890")private external fun kniBridge890(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge891")private external fun kniBridge891(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge892")private external fun kniBridge892(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge893")private external fun kniBridge893(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge894")private external fun kniBridge894(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge895")private external fun kniBridge895(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge896")private external fun kniBridge896(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge897")private external fun kniBridge897(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge898")private external fun kniBridge898(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge899")private external fun kniBridge899(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge9")private external fun kniBridge9()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge90")private external fun kniBridge90(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge900")private external fun kniBridge900(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge901")private external fun kniBridge901(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge902")private external fun kniBridge902(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge903")private external fun kniBridge903(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge904")private external fun kniBridge904(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge905")private external fun kniBridge905(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge906")private external fun kniBridge906(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge907")private external fun kniBridge907(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge908")private external fun kniBridge908(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge909")private external fun kniBridge909(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge91")private external fun kniBridge91(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge910")private external fun kniBridge910(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge911")private external fun kniBridge911(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge912")private external fun kniBridge912(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge913")private external fun kniBridge913(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge914")private external fun kniBridge914(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge915")private external fun kniBridge915(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge916")private external fun kniBridge916(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge917")private external fun kniBridge917(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge918")private external fun kniBridge918(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge919")private external fun kniBridge919(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge92")private external fun kniBridge92(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge920")private external fun kniBridge920(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge921")private external fun kniBridge921(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge922")private external fun kniBridge922(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge923")private external fun kniBridge923(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge924")private external fun kniBridge924(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge925")private external fun kniBridge925(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge926")private external fun kniBridge926(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge927")private external fun kniBridge927(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge928")private external fun kniBridge928(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge929")private external fun kniBridge929(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge93")private external fun kniBridge93(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge930")private external fun kniBridge930(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge931")private external fun kniBridge931(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge932")private external fun kniBridge932(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge933")private external fun kniBridge933(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge934")private external fun kniBridge934(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge935")private external fun kniBridge935(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge936")private external fun kniBridge936(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_osx_kniBridge937")private external fun kniBridge937(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge938")private external fun kniBridge938(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge939")private external fun kniBridge939(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge94")private external fun kniBridge94(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge940")private external fun kniBridge940(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge941")private external fun kniBridge941(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge942")private external fun kniBridge942(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge943")private external fun kniBridge943(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge944")private external fun kniBridge944(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_osx_kniBridge945")private external fun kniBridge945(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge946")private external fun kniBridge946(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge947")private external fun kniBridge947(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge948")private external fun kniBridge948(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge949")private external fun kniBridge949(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge95")private external fun kniBridge95(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge950")private external fun kniBridge950(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge951")private external fun kniBridge951(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge952")private external fun kniBridge952(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge953")private external fun kniBridge953(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge954")private external fun kniBridge954(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge955")private external fun kniBridge955(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge956")private external fun kniBridge956(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge957")private external fun kniBridge957(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge958")private external fun kniBridge958(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge959")private external fun kniBridge959(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge96")private external fun kniBridge96(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge960")private external fun kniBridge960(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge961")private external fun kniBridge961(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge962")private external fun kniBridge962(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge963")private external fun kniBridge963(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge964")private external fun kniBridge964(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge965")private external fun kniBridge965(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge966")private external fun kniBridge966(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge967")private external fun kniBridge967(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge968")private external fun kniBridge968(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge969")private external fun kniBridge969(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge97")private external fun kniBridge97(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge970")private external fun kniBridge970(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge971")private external fun kniBridge971(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge972")private external fun kniBridge972(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge973")private external fun kniBridge973(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge974")private external fun kniBridge974(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge975")private external fun kniBridge975(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge976")private external fun kniBridge976(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge977")private external fun kniBridge977(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge978")private external fun kniBridge978(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge979")private external fun kniBridge979(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge98")private external fun kniBridge98(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge980")private external fun kniBridge980(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge981")private external fun kniBridge981(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge982")private external fun kniBridge982(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge983")private external fun kniBridge983(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge984")private external fun kniBridge984(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge985")private external fun kniBridge985()

@kotlin.native.SymbolName(name = "platform_osx_kniBridge986")private external fun kniBridge986(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge987")private external fun kniBridge987(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong, /*5*/ p5: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_osx_kniBridge988")private external fun kniBridge988(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge989")private external fun kniBridge989(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_osx_kniBridge99")private external fun kniBridge99(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge990")private external fun kniBridge990(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge991")private external fun kniBridge991(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge992")private external fun kniBridge992(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge993")private external fun kniBridge993(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge994")private external fun kniBridge994(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge995")private external fun kniBridge995(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge996")private external fun kniBridge996(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge997")private external fun kniBridge997(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge998")private external fun kniBridge998(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_osx_kniBridge999")private external fun kniBridge999(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

fun kqueue(): kotlin.Int { TODO() }

fun krb5_425_conv_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ name: kotlin.String?, /*2*/ instance: kotlin.String?, /*3*/ realm: kotlin.String?, /*4*/ princ: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_524_conv_principal(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ princ: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ name: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ inst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ realm: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_524_convert_creds(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ v5creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ v4creds: kotlinx.cinterop.CValuesRef<cnames.structs.credentials>?): kotlin.Int { TODO() }

fun krb5_address_compare(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_address_order(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?): kotlin.Int { TODO() }

fun krb5_address_search(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_aname_to_localname(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_appdefault_boolean(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ appname: kotlin.String?, /*2*/ realm: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ option: kotlin.String?, /*4*/ default_value: kotlin.Int, /*5*/ ret_value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) { TODO() }

fun krb5_appdefault_string(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ appname: kotlin.String?, /*2*/ realm: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ option: kotlin.String?, /*4*/ default_value: kotlin.String?, /*5*/ ret_value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) { TODO() }

fun krb5_auth_con_free(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_genaddrs(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_get_checksum_func(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_mk_req_checksum_funcVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_mk_req_checksum_func /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>> */>?) -> platform.osx.krb5_error_code /* = kotlin.Int */>> */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getaddrs(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getauthenticator(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getflags(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getlocalseqnumber(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getrcache(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_rcacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_rcache /* = kotlinx.cinterop.CPointer<cnames.structs.krb5_rc_st> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getrecvsubkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getremoteseqnumber(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_getsendsubkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_init(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_set_checksum_func(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: platform.osx.krb5_mk_req_checksum_func? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>> */>?) -> platform.osx.krb5_error_code /* = kotlin.Int */>>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setaddrs(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setflags(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: platform.osx.krb5_int32 /* = kotlin.Int */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setports(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_address /* = platform.osx._krb5_address */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setrcache(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: platform.osx.krb5_rcache? /* = kotlinx.cinterop.CPointer<cnames.structs.krb5_rc_st>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setrecvsubkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setsendsubkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_auth_con_setuseruserkey(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_build_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?, /*2*/ arg2: kotlin.UInt, /*3*/ arg3: kotlin.String?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_build_principal_alloc_va(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?, /*2*/ arg2: kotlin.UInt, /*3*/ arg3: kotlin.String?, /*4*/ arg4: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_build_principal_ext(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?, /*2*/ arg2: kotlin.UInt, /*3*/ arg3: kotlin.String?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_block_size(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ blocksize: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_checksum_length(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cksumtype: platform.osx.krb5_cksumtype /* = kotlin.Int */, /*2*/ length: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_decrypt(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ usage: platform.osx.krb5_keyusage /* = kotlin.Int */, /*3*/ cipher_state: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ input: kotlinx.cinterop.CValuesRef<platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */>?, /*5*/ output: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_encrypt(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ usage: platform.osx.krb5_keyusage /* = kotlin.Int */, /*3*/ cipher_state: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ input: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*5*/ output: kotlinx.cinterop.CValuesRef<platform.osx.krb5_enc_data /* = platform.osx._krb5_enc_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_encrypt_length(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ inputlen: platform.posix.size_t /* = kotlin.ULong */, /*3*/ length: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_enctype_compare(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ e1: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ e2: platform.osx.krb5_enctype /* = kotlin.Int */, /*3*/ similar: kotlinx.cinterop.CValuesRef<platform.osx.krb5_booleanVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_boolean /* = kotlin.UInt */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_free_state(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ state: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_init_state(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ usage: platform.osx.krb5_keyusage /* = kotlin.Int */, /*3*/ new_state: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_is_coll_proof_cksum(/*0*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_c_is_keyed_cksum(/*0*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_c_keyed_checksum_types(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ count: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?, /*3*/ cksumtypes: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_cksumtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_cksumtype /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.osx.krb5_cksumtype /* = kotlin.Int */>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_make_checksum(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cksumtype: platform.osx.krb5_cksumtype /* = kotlin.Int */, /*2*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*3*/ usage: platform.osx.krb5_keyusage /* = kotlin.Int */, /*4*/ input: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*5*/ cksum: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_make_random_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ k5_random_key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_random_add_entropy(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ randsource_id: kotlin.UInt, /*2*/ data: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_random_make_octets(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_random_os_entropy(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ strong: kotlin.Int, /*2*/ success: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_random_seed(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_string_to_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ salt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_string_to_key_with_params(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ salt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ params: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*5*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_c_valid_cksumtype(/*0*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_c_valid_enctype(/*0*/ ktype: platform.osx.krb5_enctype /* = kotlin.Int */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_c_verify_checksum(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ usage: platform.osx.krb5_keyusage /* = kotlin.Int */, /*3*/ data: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ cksum: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?, /*5*/ valid: kotlinx.cinterop.CValuesRef<platform.osx.krb5_booleanVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.krb5_boolean /* = kotlin.UInt */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_calculate_checksum(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */, /*2*/ `in`: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ in_length: platform.posix.size_t /* = kotlin.ULong */, /*4*/ seed: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*5*/ seed_length: platform.posix.size_t /* = kotlin.ULong */, /*6*/ outcksum: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_cache_match(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ id: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_close(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_copy_creds(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ incc: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ outcc: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_default(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_default_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun krb5_cc_destroy(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_end_seq_get(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cc_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cc_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_gen_new(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_get_config(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ arg2: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_get_name(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun krb5_cc_get_principal(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ principal: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_get_type(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun krb5_cc_initialize(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ principal: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_last_change_time(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ change_time: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_lock(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_move(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ src: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ dst: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_new_unique(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ type: kotlin.String?, /*2*/ hint: kotlin.String?, /*3*/ id: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_next_cred(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cc_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cc_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*3*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_remove_cred(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ flags: platform.osx.krb5_flags /* = kotlin.Int */, /*3*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_resolve(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_retrieve_cred(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ flags: platform.osx.krb5_flags /* = kotlin.Int */, /*3*/ mcreds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*4*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_set_config(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ arg2: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_set_default_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_set_flags(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ flags: platform.osx.krb5_flags /* = kotlin.Int */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_start_seq_get(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cc_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cc_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_store_cred(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cc_unlock(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_cursor_free(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cccol_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cccol_cursor /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_cccol_cursor> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_cursor_new(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cccol_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_cccol_cursor /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_cccol_cursor> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_cursor_next(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ cursor: platform.osx.krb5_cccol_cursor? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_cccol_cursor>? */, /*2*/ ccache: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_last_change_time(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ change_time: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_lock(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_cccol_unlock(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_change_password(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ newpw: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ result_code: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*4*/ result_code_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*5*/ result_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_checksum_size(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun krb5_cksumtype_to_string(/*0*/ arg0: platform.osx.krb5_cksumtype /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_clear_error_message(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */) { TODO() }

fun krb5_copy_addresses(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_authdata(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_authenticator(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_checksum(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_context(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_creds(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_data(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data /* = platform.osx._krb5_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_keyblock(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_keyblock_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_copy_ticket(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_decode_ticket(/*0*/ code: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*1*/ rep: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_decrypt(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ inptr: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ outptr: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ size: platform.posix.size_t /* = kotlin.ULong */, /*4*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*5*/ ivec: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_deltat_to_string(/*0*/ arg0: platform.osx.krb5_deltat /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_eblock_enctype(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?): platform.osx.krb5_enctype /* = kotlin.Int */ { TODO() }

fun krb5_encrypt(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ inptr: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ outptr: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ size: platform.posix.size_t /* = kotlin.ULong */, /*4*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*5*/ ivec: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_encrypt_size(/*0*/ length: platform.posix.size_t /* = kotlin.ULong */, /*1*/ crypto: platform.osx.krb5_enctype /* = kotlin.Int */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun krb5_enctype_to_string(/*0*/ arg0: platform.osx.krb5_enctype /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_finish_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_finish_random_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ ptr: kotlinx.cinterop.CValuesRef<platform.osx.krb5_pointerVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_pointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_free_addresses(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) { TODO() }

fun krb5_free_ap_rep_enc_part(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ap_rep_enc_part /* = platform.osx._krb5_ap_rep_enc_part */>?) { TODO() }

fun krb5_free_authdata(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_authdata /* = platform.osx._krb5_authdata */>> */>?) { TODO() }

fun krb5_free_authenticator(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_authenticator /* = platform.osx._krb5_authenticator */>?) { TODO() }

fun krb5_free_checksum(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?) { TODO() }

fun krb5_free_checksum_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?) { TODO() }

fun krb5_free_cksumtypes(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cksumtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_cksumtype /* = kotlin.Int */> */>?) { TODO() }

fun krb5_free_context(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */) { TODO() }

fun krb5_free_cred_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?) { TODO() }

fun krb5_free_creds(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?) { TODO() }

fun krb5_free_data(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) { TODO() }

fun krb5_free_data_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) { TODO() }

fun krb5_free_default_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun krb5_free_error(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_error /* = platform.osx._krb5_error */>?) { TODO() }

fun krb5_free_error_message(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?) { TODO() }

fun krb5_free_host_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_free_keyblock(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) { TODO() }

fun krb5_free_keyblock_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?) { TODO() }

fun krb5_free_keytab_entry_contents(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytab_entry /* = platform.osx.krb5_keytab_entry_st */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_free_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */) { TODO() }

fun krb5_free_tgt_creds(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?) { TODO() }

fun krb5_free_ticket(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?) { TODO() }

fun krb5_free_unparsed_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun krb5_fwd_tgt_creds(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*4*/ arg4: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*5*/ arg5: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*6*/ forwardable: kotlin.Int, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_credentials(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_flags /* = kotlin.Int */, /*2*/ arg2: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_credentials_renew(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_flags /* = kotlin.Int */, /*2*/ arg2: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_credentials_validate(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_flags /* = kotlin.Int */, /*2*/ arg2: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_default_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_error_message(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_error_code /* = kotlin.Int */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun krb5_get_host_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_init_creds_keytab(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ arg_keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*4*/ start_time: platform.osx.krb5_deltat /* = kotlin.Int */, /*5*/ in_tkt_service: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*6*/ k5_gic_options: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_init_creds_opt_alloc(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ opt: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_init_creds_opt_free(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?) { TODO() }

fun krb5_get_init_creds_opt_init(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?) { TODO() }

fun krb5_get_init_creds_opt_set_address_list(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ addresses: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */>?) { TODO() }

fun krb5_get_init_creds_opt_set_canonicalize(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ canonicalize: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_change_password_prompt(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ prompt: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_etype_list(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ etype_list: kotlinx.cinterop.CValuesRef<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?, /*2*/ etype_list_length: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_forwardable(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ forwardable: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_pa(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*2*/ attr: kotlin.String?, /*3*/ value: kotlin.String?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_init_creds_opt_set_preauth_list(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ preauth_list: kotlinx.cinterop.CValuesRef<platform.osx.krb5_preauthtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_preauthtype /* = kotlin.Int */> */>?, /*2*/ preauth_list_length: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_process_last_req(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*2*/ arg2: platform.osx.krb5_gic_process_last_req? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.krb5_last_req_entry> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_last_req_entry /* = platform.osx._krb5_last_req_entry */>> */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> platform.osx.krb5_error_code /* = kotlin.Int */>>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_init_creds_opt_set_proxiable(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ proxiable: kotlin.Int) { TODO() }

fun krb5_get_init_creds_opt_set_renew_life(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ renew_life: platform.osx.krb5_deltat /* = kotlin.Int */) { TODO() }

fun krb5_get_init_creds_opt_set_salt(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ salt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?) { TODO() }

fun krb5_get_init_creds_opt_set_tkt_life(/*0*/ opt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?, /*1*/ tkt_life: platform.osx.krb5_deltat /* = kotlin.Int */) { TODO() }

fun krb5_get_init_creds_password(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ password: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ prompter: platform.osx.krb5_prompter_fct? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int, kotlinx.cinterop.CArrayPointer<platform.osx.krb5_prompt>? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_prompt /* = platform.osx._krb5_prompt */>? */) -> platform.osx.krb5_error_code /* = kotlin.Int */>>? */, /*5*/ data: kotlinx.cinterop.CValuesRef<*>?, /*6*/ start_time: platform.osx.krb5_deltat /* = kotlin.Int */, /*7*/ in_tkt_service: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*8*/ k5_gic_options: kotlinx.cinterop.CValuesRef<platform.osx.krb5_get_init_creds_opt /* = platform.osx._krb5_get_init_creds_opt */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_permitted_enctypes(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_profile(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<cnames.structs._profile_t> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<cnames.structs._profile_t>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_prompt_types(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */): kotlinx.cinterop.CPointer<platform.osx.krb5_prompt_typeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_prompt_type /* = kotlin.Int */> */>? { TODO() }

fun krb5_get_renewed_creds(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*4*/ in_tkt_service: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_server_rcache(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_rcacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_rcache /* = kotlinx.cinterop.CPointer<cnames.structs.krb5_rc_st> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_time_offsets(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_get_validated_creds(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ client: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*4*/ in_tkt_service: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_init_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.krb5_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_init_keyblock(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*2*/ length: platform.posix.size_t /* = kotlin.ULong */, /*3*/ out: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_init_random_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ keyblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*3*/ ptr: kotlinx.cinterop.CValuesRef<platform.osx.krb5_pointerVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_pointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_init_secure_context(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.krb5_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_is_config_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_is_referral_realm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_is_thread_safe(): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_kt_add_entry(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytab_entry /* = platform.osx.krb5_keytab_entry_st */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_close(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_default(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytabVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_keytab /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_default_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_end_seq_get(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_kt_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_kt_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_get_entry(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ principal: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ vno: platform.osx.krb5_kvno /* = kotlin.UInt */, /*4*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */, /*5*/ entry: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytab_entry /* = platform.osx.krb5_keytab_entry_st */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_get_name(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ name: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ namelen: kotlin.UInt): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_get_type(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun krb5_kt_next_entry(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ entry: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytab_entry /* = platform.osx.krb5_keytab_entry_st */>?, /*3*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_kt_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_kt_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_read_service_key(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*2*/ arg2: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ arg3: platform.osx.krb5_kvno /* = kotlin.UInt */, /*4*/ arg4: platform.osx.krb5_enctype /* = kotlin.Int */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_remove_entry(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytab_entry /* = platform.osx.krb5_keytab_entry_st */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_resolve(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keytabVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_keytab /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kt_start_seq_get(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ cursor: kotlinx.cinterop.CValuesRef<platform.osx.krb5_kt_cursorVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_kt_cursor /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_kuserok(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlin.String?): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_mk_1cred(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data /* = platform.osx._krb5_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_error(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_error /* = platform.osx._krb5_error */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_ncred(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_data /* = platform.osx._krb5_data */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_data /* = platform.osx._krb5_data */>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_priv(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_rep(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_req(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: platform.osx.krb5_flags /* = kotlin.Int */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*6*/ arg6: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_req_extended(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: platform.osx.krb5_flags /* = kotlin.Int */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_mk_safe(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_os_localaddr(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.osx.krb5_address /* = platform.osx._krb5_address */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_address /* = platform.osx._krb5_address */>>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_parse_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_parse_name_flags(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_principal2salt(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_principal_compare(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_process_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ key: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_prompter_posix(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ data: kotlinx.cinterop.CValuesRef<*>?, /*2*/ name: kotlin.String?, /*3*/ banner: kotlin.String?, /*4*/ num_prompts: kotlin.Int, /*5*/ prompts: kotlinx.cinterop.CValuesRef<platform.osx.krb5_prompt /* = platform.osx._krb5_prompt */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_random_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ ptr: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ keyblock: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_cred(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_error(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_error /* = platform.osx._krb5_error */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_error /* = platform.osx._krb5_error */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_priv(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_rep(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ap_rep_enc_part /* = platform.osx._krb5_ap_rep_enc_part */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ap_rep_enc_part /* = platform.osx._krb5_ap_rep_enc_part */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_req(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*4*/ arg4: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.osx.krb5_flagsVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_flags /* = kotlin.Int */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_rd_safe(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_auth_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_replay_data>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_read_password(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_realm_compare(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */): platform.osx.krb5_boolean /* = kotlin.UInt */ { TODO() }

fun krb5_recvauth(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*5*/ arg5: platform.osx.krb5_int32 /* = kotlin.Int */, /*6*/ arg6: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*7*/ arg7: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_recvauth_version(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ arg3: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*4*/ arg4: platform.osx.krb5_int32 /* = kotlin.Int */, /*5*/ arg5: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_salttype_to_string(/*0*/ arg0: platform.osx.krb5_int32 /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_sendauth(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_auth_contextVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_auth_context /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_auth_context> */> */>?, /*2*/ arg2: platform.osx.krb5_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*5*/ arg5: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*6*/ arg6: platform.osx.krb5_flags /* = kotlin.Int */, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*9*/ arg9: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*10*/ arg10: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_error /* = platform.osx._krb5_error */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_error /* = platform.osx._krb5_error */>> */>?, /*11*/ arg11: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_ap_rep_enc_part /* = platform.osx._krb5_ap_rep_enc_part */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_ap_rep_enc_part /* = platform.osx._krb5_ap_rep_enc_part */>> */>?, /*12*/ arg12: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.krb5_creds /* = platform.osx._krb5_creds */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_server_decrypt_ticket_keytab(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ kt: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*2*/ ticket: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ticket /* = platform.osx._krb5_ticket */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_default_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_default_tgs_enctypes(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_error_message(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_error_code /* = kotlin.Int */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

fun krb5_set_password(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ newpw: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ change_password_for: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*4*/ result_code: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ result_code_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*6*/ result_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_password_using_ccache(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ccache: platform.osx.krb5_ccache? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache>? */, /*2*/ newpw: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ change_password_for: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*4*/ result_code: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ result_code_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*6*/ result_string: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_principal_realm(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlin.String?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_set_real_time(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_timestamp /* = kotlin.Int */, /*2*/ arg2: platform.osx.krb5_int32 /* = kotlin.Int */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_sname_to_principal(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.osx.krb5_int32 /* = kotlin.Int */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.osx.krb5_principalVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_principal /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data> */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_cksumtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_cksumtypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_cksumtype /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_deltat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_deltatVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_deltat /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_enctype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_enctypeVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_enctype /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_key(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ keyblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_keyblock /* = platform.osx._krb5_keyblock */>?, /*3*/ data: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?, /*4*/ salt: kotlinx.cinterop.CValuesRef<platform.osx.krb5_data /* = platform.osx._krb5_data */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_salttype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_string_to_timestamp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_timeofday(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_timestamp_to_sfstring(/*0*/ arg0: platform.osx.krb5_timestamp /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_timestamp_to_string(/*0*/ arg0: platform.osx.krb5_timestamp /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_unparse_name(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_unparse_name_ext(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_unparse_name_flags(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_unparse_name_flags_ext(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_const_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_us_timeofday(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.krb5_timestampVar /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_timestamp /* = kotlin.Int */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.krb5_int32Var /* = kotlinx.cinterop.IntVarOf<platform.osx.krb5_int32 /* = kotlin.Int */> */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_use_enctype(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ eblock: kotlinx.cinterop.CValuesRef<platform.osx.krb5_encrypt_block /* = platform.osx._krb5_encrypt_block */>?, /*2*/ enctype: platform.osx.krb5_enctype /* = kotlin.Int */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_verify_checksum(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ ctype: platform.osx.krb5_cksumtype /* = kotlin.Int */, /*2*/ cksum: kotlinx.cinterop.CValuesRef<platform.osx.krb5_checksum /* = platform.osx._krb5_checksum */>?, /*3*/ `in`: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*4*/ in_length: platform.posix.size_t /* = kotlin.ULong */, /*5*/ seed: platform.osx.krb5_const_pointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, /*6*/ seed_length: platform.posix.size_t /* = kotlin.ULong */): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_verify_init_creds(/*0*/ context: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ creds: kotlinx.cinterop.CValuesRef<platform.osx.krb5_creds /* = platform.osx._krb5_creds */>?, /*2*/ ap_req_server: platform.osx.krb5_principal? /* = kotlinx.cinterop.CPointer<platform.osx.krb5_principal_data>? */, /*3*/ ap_req_keytab: platform.osx.krb5_keytab? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_kt>? */, /*4*/ ccache: kotlinx.cinterop.CValuesRef<platform.osx.krb5_ccacheVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.krb5_ccache /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_ccache> */> */>?, /*5*/ k5_vic_options: kotlinx.cinterop.CValuesRef<platform.osx.krb5_verify_init_creds_opt /* = platform.osx._krb5_verify_init_creds_opt */>?): platform.osx.krb5_error_code /* = kotlin.Int */ { TODO() }

fun krb5_verify_init_creds_opt_init(/*0*/ k5_vic_options: kotlinx.cinterop.CValuesRef<platform.osx.krb5_verify_init_creds_opt /* = platform.osx._krb5_verify_init_creds_opt */>?) { TODO() }

fun krb5_verify_init_creds_opt_set_ap_req_nofail(/*0*/ k5_vic_options: kotlinx.cinterop.CValuesRef<platform.osx.krb5_verify_init_creds_opt /* = platform.osx._krb5_verify_init_creds_opt */>?, /*1*/ ap_req_nofail: kotlin.Int) { TODO() }

fun krb5_vset_error_message(/*0*/ arg0: platform.osx.krb5_context? /* = kotlinx.cinterop.CPointer<cnames.structs._krb5_context>? */, /*1*/ arg1: platform.osx.krb5_error_code /* = kotlin.Int */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun ldif_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.LDIFFP>?) { TODO() }

fun ldif_countlines(/*0*/ line: kotlin.String?): kotlin.Int { TODO() }

fun ldif_fetch_url(/*0*/ line: kotlin.String?, /*1*/ value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ vlen: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun ldif_getline(/*0*/ next: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ldif_is_not_printable(/*0*/ `val`: kotlin.String?, /*1*/ vlen: platform.osx.ber_len_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun ldif_must_b64_encode_register(/*0*/ name: kotlin.String?, /*1*/ oid: kotlin.String?): kotlin.Int { TODO() }

fun ldif_must_b64_encode_release() { TODO() }

fun ldif_open(/*0*/ file: kotlin.String?, /*1*/ mode: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.LDIFFP>? { TODO() }

fun ldif_open_url(/*0*/ urlstr: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun ldif_parse_line(/*0*/ line: kotlin.String?, /*1*/ name: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*3*/ vlen: kotlinx.cinterop.CValuesRef<platform.osx.ber_len_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.ber_len_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun ldif_parse_line2(/*0*/ line: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ type: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*2*/ value: kotlinx.cinterop.CValuesRef<platform.osx.berval>?, /*3*/ freeval: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun ldif_put(/*0*/ type: kotlin.Int, /*1*/ name: kotlin.String?, /*2*/ `val`: kotlin.String?, /*3*/ vlen: platform.osx.ber_len_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ldif_put_wrap(/*0*/ type: kotlin.Int, /*1*/ name: kotlin.String?, /*2*/ `val`: kotlin.String?, /*3*/ vlen: platform.osx.ber_len_t /* = kotlin.ULong */, /*4*/ wrap: platform.osx.ber_len_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ldif_read_record(/*0*/ fp: kotlinx.cinterop.CValuesRef<platform.osx.LDIFFP>?, /*1*/ lineno: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ bufp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*3*/ buflen: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun ldif_sput(/*0*/ out: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ type: kotlin.Int, /*2*/ name: kotlin.String?, /*3*/ `val`: kotlin.String?, /*4*/ vlen: platform.osx.ber_len_t /* = kotlin.ULong */) { TODO() }

fun ldif_sput_wrap(/*0*/ out: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ type: kotlin.Int, /*2*/ name: kotlin.String?, /*3*/ `val`: kotlin.String?, /*4*/ vlen: platform.osx.ber_len_t /* = kotlin.ULong */, /*5*/ wrap: platform.osx.ber_len_t /* = kotlin.ULong */) { TODO() }

fun leaveok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun link_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>? { TODO() }

fun link_fieldtype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?): kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>? { TODO() }

fun longname(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mbmb(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mbrrune(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.rune_t /* = kotlin.Int */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mbrune(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.rune_t /* = kotlin.Int */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mcprint(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun meta(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun moncontrol(/*0*/ mode: kotlin.Int) { TODO() }

fun moninit() { TODO() }

fun monitor(/*0*/ lowpc: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ highpc: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ bufsiz: kotlin.Int, /*4*/ cntsiz: kotlin.Int) { TODO() }

fun monoutput(/*0*/ filename: kotlin.String?) { TODO() }

fun monreset() { TODO() }

fun monstartup(/*0*/ lowpc: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ highpc: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun mount(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun mouse_trafo(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Boolean): kotlin.Boolean { TODO() }

fun mouseinterval(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun mousemask(/*0*/ arg0: platform.osx.mmask_t /* = kotlin.ULong */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.mmask_tVar /* = kotlinx.cinterop.ULongVarOf<platform.osx.mmask_t /* = kotlin.ULong */> */>?): platform.osx.mmask_t /* = kotlin.ULong */ { TODO() }

fun move(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun move_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun move_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mvaddch(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun mvaddchnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvaddchstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun mvaddnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvaddstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun mvchgat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.attr_t /* = kotlin.UInt */, /*4*/ arg4: kotlin.Short, /*5*/ arg5: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun mvcur(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvdelch(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun mvderwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mvgetch(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun mvgetnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvgetstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun mvhline(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvinch(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun mvinchnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvinchstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun mvinnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvinsch(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun mvinsnstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvinsstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun mvinstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun mvprintw(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun mvscanw(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun mvvline(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun mvwaddch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun mvwaddchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwaddchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun mvwaddnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwaddstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

fun mvwchgat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: platform.osx.attr_t /* = kotlin.UInt */, /*5*/ arg5: kotlin.Short, /*6*/ arg6: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun mvwdelch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mvwgetch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mvwgetnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwgetstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun mvwhline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mvwinch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun mvwinchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwinchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun mvwinnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwinsch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun mvwinsnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun mvwinsstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

fun mvwinstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun mvwprintw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun mvwscanw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun mvwvline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun napms(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun new_field(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>? { TODO() }

fun new_fieldtype(/*0*/ field_check: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?, /*1*/ char_check: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?): kotlinx.cinterop.CPointer<platform.osx.FIELDTYPE /* = platform.osx.typenode */>? { TODO() }

fun new_form(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.FIELD /* = platform.osx.fieldnode */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>> */>?): kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>? { TODO() }

fun new_page(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Boolean { TODO() }

fun new_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlinx.cinterop.CPointer<platform.osx.PANEL /* = platform.osx.panel */>? { TODO() }

fun newpad(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun newterm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.osx.SCREEN /* = cnames.structs.screen */>? { TODO() }

fun newwin(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun nl(): kotlin.Int { TODO() }

fun nocbreak(): kotlin.Int { TODO() }

fun nodelay(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun noecho(): kotlin.Int { TODO() }

fun nofilter() { TODO() }

fun nonl(): kotlin.Int { TODO() }

fun noqiflush() { TODO() }

fun noraw(): kotlin.Int { TODO() }

fun notimeout(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun overlay(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun overwrite(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun pair_content(/*0*/ arg0: kotlin.Short, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?): kotlin.Int { TODO() }

fun panel_above(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlinx.cinterop.CPointer<platform.osx.PANEL /* = platform.osx.panel */>? { TODO() }

fun panel_below(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlinx.cinterop.CPointer<platform.osx.PANEL /* = platform.osx.panel */>? { TODO() }

fun panel_hidden(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun panel_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun panel_window(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun pcap_activate(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_apple_set_exthdr(/*0*/ p: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_breakloop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?) { TODO() }

fun pcap_can_set_rfmon(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?) { TODO() }

fun pcap_compile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int, /*4*/ arg4: platform.osx.bpf_u_int32 /* = kotlin.UInt */): kotlin.Int { TODO() }

fun pcap_compile_nopcap(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.Int, /*5*/ arg5: platform.osx.bpf_u_int32 /* = kotlin.UInt */): kotlin.Int { TODO() }

fun pcap_create(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_datalink(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_datalink_ext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_datalink_name_to_val(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun pcap_datalink_val_to_description(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_datalink_val_to_name(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_dispatch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.pcap_handler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlinx.cinterop.CPointer<platform.osx.pcap_pkthdr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) -> kotlin.Unit>>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun pcap_dump(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.pcap_pkthdr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun pcap_dump_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>?) { TODO() }

fun pcap_dump_file(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun pcap_dump_flush(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>?): kotlin.Int { TODO() }

fun pcap_dump_fopen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ fp: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>? { TODO() }

fun pcap_dump_ftell(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>?): kotlin.Long { TODO() }

fun pcap_dump_open(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>? { TODO() }

fun pcap_dump_open_append(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.pcap_dumper_t /* = cnames.structs.pcap_dumper */>? { TODO() }

fun pcap_ether_aton(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun pcap_ether_hostton(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun pcap_file(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun pcap_fileno(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_findalldevs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.pcap_if_t /* = platform.osx.pcap_if */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.pcap_if_t /* = platform.osx.pcap_if */>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun pcap_fopen_offline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_fopen_offline_with_tstamp_precision(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.u_int /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_free_datalinks(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) { TODO() }

fun pcap_free_selectable_fd_list(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) { TODO() }

fun pcap_free_tstamp_types(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) { TODO() }

fun pcap_freealldevs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_if_t /* = platform.osx.pcap_if */>?) { TODO() }

fun pcap_freecode(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?) { TODO() }

fun pcap_get_selectable_fd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_get_selectable_fd_list(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>> */>?): kotlin.Int { TODO() }

fun pcap_get_tstamp_precision(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_geterr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_getnonblock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun pcap_inject(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pcap_is_swapped(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_lib_version(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_list_datalinks(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>> */>?): kotlin.Int { TODO() }

fun pcap_list_tstamp_types(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>> */>?): kotlin.Int { TODO() }

fun pcap_lookupdev(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_lookupnet(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.bpf_u_int32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.bpf_u_int32 /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.osx.bpf_u_int32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.bpf_u_int32 /* = kotlin.UInt */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun pcap_loop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.pcap_handler? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlinx.cinterop.CPointer<platform.osx.pcap_pkthdr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) -> kotlin.Unit>>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun pcap_major_version(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_minor_version(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_nametoaddr(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.osx.bpf_u_int32Var /* = kotlinx.cinterop.UIntVarOf<platform.osx.bpf_u_int32 /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.osx.bpf_u_int32 /* = kotlin.UInt */>>> */>? { TODO() }

fun pcap_nametoeproto(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun pcap_nametollc(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun pcap_nametonetaddr(/*0*/ arg0: kotlin.String?): platform.osx.bpf_u_int32 /* = kotlin.UInt */ { TODO() }

fun pcap_nametoport(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pcap_nametoportrange(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pcap_nametoproto(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun pcap_next(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.pcap_pkthdr>?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun pcap_next_etherent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_etherent>? { TODO() }

fun pcap_next_ex(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.pcap_pkthdr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.pcap_pkthdr>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun pcap_offline_filter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.pcap_pkthdr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun pcap_open_dead(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_open_dead_with_tstamp_precision(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.u_int /* = kotlin.UInt */): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_open_live(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_open_offline(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_open_offline_with_tstamp_precision(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.u_int /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<platform.osx.pcap_t /* = cnames.structs.pcap */>? { TODO() }

fun pcap_perror(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.String?) { TODO() }

fun pcap_sendpacket(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_buffer_size(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_datalink(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_immediate_mode(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_promisc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_rfmon(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_snaplen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_timeout(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_tstamp_precision(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_set_tstamp_type(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pcap_setdirection(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: platform.osx.pcap_direction_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun pcap_setfilter(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.bpf_program>?): kotlin.Int { TODO() }

fun pcap_setnonblock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun pcap_snapshot(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?): kotlin.Int { TODO() }

fun pcap_stats(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.pcap_t /* = cnames.structs.pcap */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.pcap_stat>?): kotlin.Int { TODO() }

fun pcap_statustostr(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_strerror(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_tstamp_type_name_to_val(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun pcap_tstamp_type_val_to_description(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pcap_tstamp_type_val_to_name(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun pechochar(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun pnoutrefresh(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlin.Int, /*6*/ arg6: kotlin.Int): kotlin.Int { TODO() }

fun pos_form_cursor(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun post_form(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun prdb_end() { TODO() }

fun prdb_get(): kotlinx.cinterop.CPointer<platform.osx.prdb_ent>? { TODO() }

fun prdb_getbyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.prdb_ent>? { TODO() }

fun prdb_set(/*0*/ arg0: kotlin.String?) { TODO() }

fun prefresh(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlin.Int, /*6*/ arg6: kotlin.Int): kotlin.Int { TODO() }

fun printw(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun proc_clear_dirty(/*0*/ pid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ flags: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_get_dirty(/*0*/ pid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ flags: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun proc_kmsgbuf(/*0*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*1*/ buffersize: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_libversion(/*0*/ major: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ minor: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun proc_listallpids(/*0*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*1*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_listchildpids(/*0*/ ppid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*2*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_listpgrppids(/*0*/ pgrpid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*2*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_listpids(/*0*/ type: platform.posix.uint32_t /* = kotlin.UInt */, /*1*/ typeinfo: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*3*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_listpidspath(/*0*/ type: platform.posix.uint32_t /* = kotlin.UInt */, /*1*/ typeinfo: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ path: kotlin.String?, /*3*/ pathflags: platform.posix.uint32_t /* = kotlin.UInt */, /*4*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*5*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_name(/*0*/ pid: kotlin.Int, /*1*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*2*/ buffersize: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_pid_rusage(/*0*/ pid: kotlin.Int, /*1*/ flavor: kotlin.Int, /*2*/ buffer: kotlinx.cinterop.CValuesRef<platform.posix.rusage_info_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.rusage_info_t /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun proc_pidfdinfo(/*0*/ pid: kotlin.Int, /*1*/ fd: kotlin.Int, /*2*/ flavor: kotlin.Int, /*3*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*4*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_pidfileportinfo(/*0*/ pid: kotlin.Int, /*1*/ fileport: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ flavor: kotlin.Int, /*3*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*4*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_pidinfo(/*0*/ pid: kotlin.Int, /*1*/ flavor: kotlin.Int, /*2*/ arg: platform.posix.uint64_t /* = kotlin.ULong */, /*3*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*4*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun proc_pidpath(/*0*/ pid: kotlin.Int, /*1*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*2*/ buffersize: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_regionfilename(/*0*/ pid: kotlin.Int, /*1*/ address: platform.posix.uint64_t /* = kotlin.ULong */, /*2*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*3*/ buffersize: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_set_dirty(/*0*/ pid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ dirty: kotlin.Boolean): kotlin.Int { TODO() }

fun proc_setpcontrol(/*0*/ control: kotlin.Int): kotlin.Int { TODO() }

fun proc_terminate(/*0*/ pid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ sig: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun proc_track_dirty(/*0*/ pid: platform.posix.pid_t /* = kotlin.Int */, /*1*/ flags: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun proc_udata_info(/*0*/ pid: kotlin.Int, /*1*/ flavor: kotlin.Int, /*2*/ buffer: kotlinx.cinterop.CValuesRef<*>?, /*3*/ buffersize: kotlin.Int): kotlin.Int { TODO() }

fun profile_abandon(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */) { TODO() }

fun profile_add_relation(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ new_value: kotlin.String?): kotlin.Long { TODO() }

fun profile_clear_relation(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Long { TODO() }

fun profile_configuration_updated() { TODO() }

fun profile_flush(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */): kotlin.Long { TODO() }

fun profile_flush_to_buffer(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ bufp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Long { TODO() }

fun profile_flush_to_file(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ outfile: kotlin.String?): kotlin.Long { TODO() }

fun profile_free_buffer(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun profile_free_list(/*0*/ list: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) { TODO() }

fun profile_get_boolean(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ name: kotlin.String?, /*2*/ subname: kotlin.String?, /*3*/ subsubname: kotlin.String?, /*4*/ def_val: kotlin.Int, /*5*/ ret_default: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Long { TODO() }

fun profile_get_integer(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ name: kotlin.String?, /*2*/ subname: kotlin.String?, /*3*/ subsubname: kotlin.String?, /*4*/ def_val: kotlin.Int, /*5*/ ret_default: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Long { TODO() }

fun profile_get_relation_names(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ ret_names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?): kotlin.Long { TODO() }

fun profile_get_string(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ name: kotlin.String?, /*2*/ subname: kotlin.String?, /*3*/ subsubname: kotlin.String?, /*4*/ def_val: kotlin.String?, /*5*/ ret_string: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Long { TODO() }

fun profile_get_subsection_names(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ ret_names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?): kotlin.Long { TODO() }

fun profile_get_values(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ ret_values: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?): kotlin.Long { TODO() }

fun profile_init(/*0*/ files: kotlinx.cinterop.CValuesRef<platform.osx.const_profile_filespec_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.const_profile_filespec_t /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> */> */>?, /*1*/ ret_profile: kotlinx.cinterop.CValuesRef<platform.osx.profile_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.profile_t /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t> */> */>?): kotlin.Long { TODO() }

fun profile_init_path(/*0*/ filelist: kotlin.String?, /*1*/ ret_profile: kotlinx.cinterop.CValuesRef<platform.osx.profile_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.osx.profile_t /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t> */> */>?): kotlin.Long { TODO() }

fun profile_is_modified(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ modified: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Long { TODO() }

fun profile_is_writable(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ writable: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Long { TODO() }

fun profile_iterator(/*0*/ iter_p: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*1*/ ret_name: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ ret_value: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Long { TODO() }

fun profile_iterator_create(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ flags: kotlin.Int, /*3*/ ret_iter: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Long { TODO() }

fun profile_iterator_free(/*0*/ iter_p: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?) { TODO() }

fun profile_release(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */) { TODO() }

fun profile_release_string(/*0*/ str: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun profile_rename_section(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ new_name: kotlin.String?): kotlin.Long { TODO() }

fun profile_update_relation(/*0*/ profile: platform.osx.profile_t? /* = kotlinx.cinterop.CPointer<cnames.structs._profile_t>? */, /*1*/ names: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ old_value: kotlin.String?, /*3*/ new_value: kotlin.String?): kotlin.Long { TODO() }

fun putp(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun putwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

fun qiflush() { TODO() }

fun raw(): kotlin.Int { TODO() }

fun redrawwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun refresh(): kotlin.Int { TODO() }

fun remove_error_table(/*0*/ et: kotlinx.cinterop.CValuesRef<platform.osx.error_table>?): platform.osx.errcode_t /* = kotlin.Long */ { TODO() }

fun replace_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun reset_com_err_hook(): platform.osx.com_err_handler_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.osx.errcode_t /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlin.Unit>>? */ { TODO() }

fun reset_prog_mode(): kotlin.Int { TODO() }

fun reset_shell_mode(): kotlin.Int { TODO() }

fun resetty(): kotlin.Int { TODO() }

fun resize_term(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun resizeterm(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun restartterm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun ripoffline(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?, kotlin.Int) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun savetty(): kotlin.Int { TODO() }

fun scale_form(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun scanw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun scr_dump(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun scr_init(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun scr_restore(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun scr_set(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun scrl(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun scroll(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun scrollok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun set_com_err_hook(/*0*/ handler: platform.osx.com_err_handler_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.osx.errcode_t /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlin.Unit>>? */): platform.osx.com_err_handler_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.osx.errcode_t /* = kotlin.Long */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlin.Unit>>? */ { TODO() }

fun set_current_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?): kotlin.Int { TODO() }

fun set_curterm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TERMINAL /* = platform.osx.term */>?): kotlinx.cinterop.CPointer<platform.osx.TERMINAL /* = platform.osx.term */>? { TODO() }

fun set_escdelay(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun set_field_back(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun set_field_buffer(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun set_field_fore(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun set_field_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */): kotlin.Int { TODO() }

fun set_field_just(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun set_field_opts(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: platform.osx.Field_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun set_field_pad(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun set_field_status(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun set_field_term(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */): kotlin.Int { TODO() }

fun set_field_type(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun set_field_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun set_fieldtype_arg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?, /*1*/ make_arg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?, /*2*/ copy_arg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?, /*3*/ free_arg: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?): kotlin.Int { TODO() }

fun set_fieldtype_choice(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELDTYPE /* = platform.osx.typenode */>?, /*1*/ next_choice: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?, /*2*/ prev_choice: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Boolean>>?): kotlin.Int { TODO() }

fun set_form_fields(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.osx.FIELD /* = platform.osx.fieldnode */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.osx.FIELD /* = platform.osx.fieldnode */>> */>?): kotlin.Int { TODO() }

fun set_form_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */): kotlin.Int { TODO() }

fun set_form_opts(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Options /* = kotlin.Int */): kotlin.Int { TODO() }

fun set_form_page(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun set_form_sub(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun set_form_term(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: platform.osx.Form_Hook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.FORM /* = platform.osx.formnode */>?) -> kotlin.Unit>>? */): kotlin.Int { TODO() }

fun set_form_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun set_form_win(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun set_max_field(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun set_new_page(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FIELD /* = platform.osx.fieldnode */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun set_panel_userptr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun set_tabsize(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun set_term(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.SCREEN /* = cnames.structs.screen */>?): kotlinx.cinterop.CPointer<platform.osx.SCREEN /* = cnames.structs.screen */>? { TODO() }

fun setinvalidrune(/*0*/ arg0: platform.posix.rune_t /* = kotlin.Int */) { TODO() }

fun setrunelocale(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun setscrreg(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun setupterm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun show_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun slk_attr(): platform.osx.attr_t /* = kotlin.UInt */ { TODO() }

fun slk_attr_off(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun slk_attr_on(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun slk_attr_set(/*0*/ arg0: platform.osx.attr_t /* = kotlin.UInt */, /*1*/ arg1: kotlin.Short, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun slk_attroff(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun slk_attron(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun slk_attrset(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun slk_clear(): kotlin.Int { TODO() }

fun slk_color(/*0*/ arg0: kotlin.Short): kotlin.Int { TODO() }

fun slk_init(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun slk_label(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun slk_noutrefresh(): kotlin.Int { TODO() }

fun slk_refresh(): kotlin.Int { TODO() }

fun slk_restore(): kotlin.Int { TODO() }

fun slk_set(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun slk_touch(): kotlin.Int { TODO() }

fun standend(): kotlin.Int { TODO() }

fun standout(): kotlin.Int { TODO() }

fun start_color(): kotlin.Int { TODO() }

fun statfs(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.statfs>?): kotlin.Int { TODO() }

fun statfs64(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.statfs64>?): kotlin.Int { TODO() }

fun subpad(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun subwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun syncok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Boolean): kotlin.Int { TODO() }

fun termattrs(): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun termname(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tgetent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun tgetflag(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun tgetnum(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun tgetstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tgoto(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tigetflag(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun tigetnum(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun tigetstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun timeout(/*0*/ arg0: kotlin.Int) { TODO() }

fun tok_end(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.Tokenizer /* = cnames.structs.tokenizer */>?) { TODO() }

fun tok_init(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.osx.Tokenizer /* = cnames.structs.tokenizer */>? { TODO() }

fun tok_line(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.Tokenizer /* = cnames.structs.tokenizer */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.LineInfo /* = platform.osx.lineinfo */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun tok_reset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.Tokenizer /* = cnames.structs.tokenizer */>?) { TODO() }

fun tok_str(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.Tokenizer /* = cnames.structs.tokenizer */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>>> */>?): kotlin.Int { TODO() }

fun tok_wend(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TokenizerW /* = cnames.structs.tokenizerW */>?) { TODO() }

fun tok_winit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.osx.TokenizerW /* = cnames.structs.tokenizerW */>? { TODO() }

fun tok_wline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TokenizerW /* = cnames.structs.tokenizerW */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.LineInfoW /* = platform.osx.lineinfow */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun tok_wreset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TokenizerW /* = cnames.structs.tokenizerW */>?) { TODO() }

fun tok_wstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.TokenizerW /* = cnames.structs.tokenizerW */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>>>> */>?): kotlin.Int { TODO() }

fun top_panel(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.PANEL /* = platform.osx.panel */>?): kotlin.Int { TODO() }

fun touchline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun touchwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun tparm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tputs(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun typeahead(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun unctrl(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ungetch(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun ungetmouse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.MEVENT>?): kotlin.Int { TODO() }

fun unmount(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun unpost_form(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.FORM /* = platform.osx.formnode */>?): kotlin.Int { TODO() }

fun untouchwin(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun update_panels() { TODO() }

fun use_default_colors(): kotlin.Int { TODO() }

fun use_env(/*0*/ arg0: kotlin.Boolean) { TODO() }

fun use_extended_names(/*0*/ arg0: kotlin.Boolean): kotlin.Int { TODO() }

fun use_legacy_coding(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

fun use_screen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.SCREEN /* = cnames.structs.screen */>?, /*1*/ arg1: platform.osx.NCURSES_SCREEN_CB? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.SCREEN /* = cnames.structs.screen */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun use_window(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.NCURSES_WINDOW_CB? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun vidattr(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun vidputs(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun vline(/*0*/ arg0: platform.osx.chtype /* = kotlin.UInt */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun vproc_standby_begin(/*0*/ virtual_proc: platform.osx.vproc_t? /* = kotlinx.cinterop.CPointer<cnames.structs.vproc_s>? */): platform.osx.vproc_standby_t? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun vproc_standby_end(/*0*/ virtual_proc: platform.osx.vproc_t? /* = kotlinx.cinterop.CPointer<cnames.structs.vproc_s>? */, /*1*/ handle: platform.osx.vproc_standby_t? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) { TODO() }

fun vproc_transaction_begin(/*0*/ virtual_proc: platform.osx.vproc_t? /* = kotlinx.cinterop.CPointer<cnames.structs.vproc_s>? */): platform.osx.vproc_transaction_t? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun vproc_transaction_end(/*0*/ virtual_proc: platform.osx.vproc_t? /* = kotlinx.cinterop.CPointer<cnames.structs.vproc_s>? */, /*1*/ handle: platform.osx.vproc_transaction_t? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) { TODO() }

fun vw_printw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vw_scanw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vwprintw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vwscanw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun waddch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun waddchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun waddchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun waddnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun waddstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun wattr_get(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.attr_tVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.attr_t /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ShortVar /* = kotlinx.cinterop.ShortVarOf<kotlin.Short> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wattr_off(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.attr_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wattr_on(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.attr_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wattr_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.attr_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Short, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wattroff(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun wattron(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun wattrset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun wbkgd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun wbkgdset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */) { TODO() }

fun wborder(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */, /*2*/ arg2: platform.osx.chtype /* = kotlin.UInt */, /*3*/ arg3: platform.osx.chtype /* = kotlin.UInt */, /*4*/ arg4: platform.osx.chtype /* = kotlin.UInt */, /*5*/ arg5: platform.osx.chtype /* = kotlin.UInt */, /*6*/ arg6: platform.osx.chtype /* = kotlin.UInt */, /*7*/ arg7: platform.osx.chtype /* = kotlin.UInt */, /*8*/ arg8: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun wchgat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.osx.attr_t /* = kotlin.UInt */, /*3*/ arg3: kotlin.Short, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wclear(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wclrtobot(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wclrtoeol(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wcolor_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Short, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun wcursyncup(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?) { TODO() }

fun wdelch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wdeleteln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wechochar(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun wenclose(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Boolean { TODO() }

fun werase(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wgetch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wgetnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun wgetparent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlinx.cinterop.CPointer<platform.osx.WINDOW /* = cnames.structs._win_st */>? { TODO() }

fun wgetscrreg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun wgetstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun whline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun winch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): platform.osx.chtype /* = kotlin.UInt */ { TODO() }

fun winchnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun winchstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.osx.chtypeVar /* = kotlinx.cinterop.UIntVarOf<platform.osx.chtype /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun winnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun winsch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */): kotlin.Int { TODO() }

fun winsdelln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun winsertln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun winsnstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun winsstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

fun winstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun wmouse_trafo(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlin.Boolean): kotlin.Boolean { TODO() }

fun wmove(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun wnoutrefresh(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wprintw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun wredrawln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun wrefresh(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wresize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun wscanw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun wscrl(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun wsetscrreg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun wstandend(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wstandout(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?): kotlin.Int { TODO() }

fun wsyncdown(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?) { TODO() }

fun wsyncup(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?) { TODO() }

fun wtimeout(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int) { TODO() }

fun wtouchln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun wvline(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.osx.WINDOW /* = cnames.structs._win_st */>?, /*1*/ arg1: platform.osx.chtype /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }


