@file:Suppress("UNUSED_VARIABLE", "UNUSED_EXPRESSION", "UNUSED_PARAMETER", "REDUNDANT_NULLABLE")

package platform.posix

import kotlinx.cinterop.* 

final actual enum class ACTION private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    FIND(TODO()),

    ENTER(TODO());

    actual open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.UInt): platform.posix.ACTION { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.posix.ACTION
            get() = TODO()
            set(value: platform.posix.ACTION) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class DIR public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __dd_fd: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var __dd_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var __dd_len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var __dd_loc: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final val __dd_lock: platform.posix.__darwin_pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */
        get() = TODO()

    actual final var __dd_seek: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var __dd_size: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var __dd_td: kotlinx.cinterop.CPointer<cnames.structs._telldir>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs._telldir>?) = TODO()

    actual final var __padding: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var __dd_buf: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class FTS public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var fts_child: kotlinx.cinterop.CPointer<platform.posix._ftsent>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._ftsent>?) = TODO()

    actual final var fts_cur: kotlinx.cinterop.CPointer<platform.posix._ftsent>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._ftsent>?) = TODO()

    actual final var fts_nitems: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var fts_options: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var fts_pathlen: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var fts_rfd: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var fts_array: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix._ftsent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix._ftsent>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix._ftsent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix._ftsent>> */>?) = TODO()

    final var fts_compar: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var fts_dev: platform.posix.dev_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.dev_t /* = kotlin.Int */) = TODO()

    final var fts_path: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class FTW public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var base: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var level: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual enum class VISIT private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    preorder(TODO()),

    postorder(TODO()),

    endorder(TODO()),

    leaf(TODO());

    actual open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.UInt): platform.posix.VISIT { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.posix.VISIT
            get() = TODO()
            set(value: platform.posix.VISIT) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class _RuneCharClass public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __mask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _RuneEntry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __map: platform.posix.__darwin_rune_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_rune_t /* = kotlin.Int */) = TODO()

    final var __max: platform.posix.__darwin_rune_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_rune_t /* = kotlin.Int */) = TODO()

    final var __min: platform.posix.__darwin_rune_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_rune_t /* = kotlin.Int */) = TODO()

    final var __types: kotlinx.cinterop.CPointer<platform.posix.__uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.__uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _RuneLocale public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __charclasses: kotlinx.cinterop.CPointer<platform.posix._RuneCharClass>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._RuneCharClass>?) = TODO()

    actual final val __maplower_ext: platform.posix._RuneRange
        get() = TODO()

    actual final val __mapupper_ext: platform.posix._RuneRange
        get() = TODO()

    actual final var __ncharclasses: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __runetype_ext: platform.posix._RuneRange
        get() = TODO()

    actual final var __variable_len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val __encoding: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var __invalid_rune: platform.posix.__darwin_rune_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_rune_t /* = kotlin.Int */) = TODO()

    final val __magic: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val __maplower: kotlinx.cinterop.CArrayPointer<platform.posix.__darwin_rune_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_rune_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.__darwin_rune_t /* = kotlin.Int */>> */
        get() = TODO()

    final val __mapupper: kotlinx.cinterop.CArrayPointer<platform.posix.__darwin_rune_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_rune_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.__darwin_rune_t /* = kotlin.Int */>> */
        get() = TODO()

    final val __runetype: kotlinx.cinterop.CArrayPointer<platform.posix.__uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var __sgetrune: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.__darwin_size_t /* = kotlin.ULong */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.posix.__darwin_rune_t /* = kotlin.Int */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.__darwin_size_t /* = kotlin.ULong */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> platform.posix.__darwin_rune_t /* = kotlin.Int */>>?) = TODO()

    final var __sputrune: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.__darwin_rune_t /* = kotlin.Int */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.__darwin_size_t /* = kotlin.ULong */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(platform.posix.__darwin_rune_t /* = kotlin.Int */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, platform.posix.__darwin_size_t /* = kotlin.ULong */, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) -> kotlin.Int>>?) = TODO()

    final var __variable: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _RuneRange public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __nranges: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var __ranges: kotlinx.cinterop.CPointer<platform.posix._RuneEntry>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._RuneEntry>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_fp_control public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __denorm: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __invalid: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __ovrfl: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __pc: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __precis: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __rc: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __undfl: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __zdiv: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_fp_status public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __busy: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __c0: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __c1: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __c2: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __c3: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __denorm: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __errsumm: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __invalid: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __ovrfl: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __precis: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __stkflt: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __tos: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __undfl: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __zdiv: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_i386_avx512_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final val __fpu_k0: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k1: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k2: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k3: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k4: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k5: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k6: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k7: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_zmmh0: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh1: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh2: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh3: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh4: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh5: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh6: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh7: platform.posix.__darwin_ymm_reg
        get() = TODO()

    final val __avx_reserved1: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_i386_avx_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    final val __avx_reserved1: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_i386_exception_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __cpu: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __err: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __faultvaddr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __trapno: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_i386_float_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_i386_thread_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __cs: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __ds: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __eax: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __ebp: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __ebx: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __ecx: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __edi: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __edx: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __eflags: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __eip: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __es: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __esi: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __esp: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __fs: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __gs: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __ss: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_i386_exception_state
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_i386_float_state
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_i386_thread_state
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_x86_exception_state64
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_x86_float_state64
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_x86_thread_state64
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext_avx32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_i386_exception_state
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_i386_avx_state
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_i386_thread_state
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext_avx512_32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_i386_exception_state
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_i386_avx512_state
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_i386_thread_state
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext_avx512_64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_x86_exception_state64
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_x86_avx512_state64
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_x86_thread_state64
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mcontext_avx64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __es: platform.posix.__darwin_x86_exception_state64
        get() = TODO()

    actual final val __fs: platform.posix.__darwin_x86_avx_state64
        get() = TODO()

    actual final val __ss: platform.posix.__darwin_x86_thread_state64
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_mmst_reg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __mmst_reg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val __mmst_rsrv: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_opmask_reg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __opmask_reg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_pthread_handler_rec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __next: kotlinx.cinterop.CPointer<platform.posix.__darwin_pthread_handler_rec>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.__darwin_pthread_handler_rec>?) = TODO()

    final var __arg: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var __routine: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_sigaltstack public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ss_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ss_size: platform.posix.__darwin_size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__darwin_size_t /* = kotlin.ULong */) = TODO()

    final var ss_sp: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_ucontext public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __mcontext_data: platform.posix.__darwin_mcontext64
        get() = TODO()

    actual final var uc_link: kotlinx.cinterop.CPointer<platform.posix.__darwin_ucontext>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.__darwin_ucontext>?) = TODO()

    actual final var uc_mcontext: kotlinx.cinterop.CPointer<platform.posix.__darwin_mcontext64>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.__darwin_mcontext64>?) = TODO()

    actual final var uc_onstack: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val uc_stack: platform.posix.__darwin_sigaltstack
        get() = TODO()

    final var uc_mcsize: platform.posix.__darwin_size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__darwin_size_t /* = kotlin.ULong */) = TODO()

    final var uc_sigmask: platform.posix.__darwin_sigset_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__darwin_sigset_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_avx512_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final val __fpu_k0: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k1: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k2: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k3: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k4: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k5: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k6: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final val __fpu_k7: platform.posix.__darwin_opmask_reg
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm10: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm11: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm12: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm13: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm14: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm15: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm8: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm9: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh10: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh11: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh12: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh13: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh14: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh15: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh8: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh9: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_zmm16: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm17: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm18: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm19: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm20: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm21: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm22: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm23: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm24: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm25: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm26: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm27: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm28: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm29: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm30: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmm31: platform.posix.__darwin_zmm_reg
        get() = TODO()

    actual final val __fpu_zmmh0: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh1: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh10: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh11: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh12: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh13: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh14: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh15: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh2: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh3: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh4: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh5: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh6: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh7: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh8: platform.posix.__darwin_ymm_reg
        get() = TODO()

    actual final val __fpu_zmmh9: platform.posix.__darwin_ymm_reg
        get() = TODO()

    final val __avx_reserved1: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_avx_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm10: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm11: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm12: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm13: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm14: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm15: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm8: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm9: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh10: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh11: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh12: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh13: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh14: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh15: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh8: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_ymmh9: platform.posix.__darwin_xmm_reg
        get() = TODO()

    final val __avx_reserved1: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_cpmu_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __ctrs: kotlinx.cinterop.CArrayPointer<platform.posix.__uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.__uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.__uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_debug_state32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __dr0: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr1: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr2: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr3: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr4: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr5: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr6: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __dr7: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_debug_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __dr0: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr1: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr2: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr3: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr4: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr5: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr6: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __dr7: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_exception_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __cpu: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __err: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __faultvaddr: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __trapno: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_float_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __fpu_fcw: platform.posix.__darwin_fp_control
        get() = TODO()

    actual final val __fpu_fsw: platform.posix.__darwin_fp_status
        get() = TODO()

    actual final var __fpu_reserved1: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val __fpu_stmm0: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm1: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm2: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm3: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm4: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm5: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm6: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_stmm7: platform.posix.__darwin_mmst_reg
        get() = TODO()

    actual final val __fpu_xmm0: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm1: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm10: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm11: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm12: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm13: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm14: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm15: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm2: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm3: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm4: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm5: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm6: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm7: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm8: platform.posix.__darwin_xmm_reg
        get() = TODO()

    actual final val __fpu_xmm9: platform.posix.__darwin_xmm_reg
        get() = TODO()

    final var __fpu_cs: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_dp: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_ds: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_fop: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_ftw: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_ip: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsr: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var __fpu_mxcsrmask: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final val __fpu_reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var __fpu_rsrv1: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var __fpu_rsrv2: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var __fpu_rsrv3: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final val __fpu_rsrv4: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_x86_thread_state64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __cs: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __fs: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __gs: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r10: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r11: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r12: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r13: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r14: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r15: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r8: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __r9: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rax: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rbp: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rbx: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rcx: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rdi: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rdx: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rflags: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rip: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rsi: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var __rsp: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_xmm_reg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __xmm_reg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_ymm_reg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __ymm_reg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __darwin_zmm_reg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __zmm_reg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __double2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __cosval: kotlin.Double
        get() = TODO()
        set(value: kotlin.Double) = TODO()

    actual final var __sinval: kotlin.Double
        get() = TODO()
        set(value: kotlin.Double) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __float2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __cosval: kotlin.Float
        get() = TODO()
        set(value: kotlin.Float) = TODO()

    actual final var __sinval: kotlin.Float
        get() = TODO()
        set(value: kotlin.Float) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __mbstate_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var _mbstateL: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __mbstate8: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __msfilterreq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val msfr_group: platform.posix.sockaddr_storage
        get() = TODO()

    actual final var msfr_srcs: kotlinx.cinterop.CPointer<platform.posix.sockaddr_storage>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr_storage>?) = TODO()

    final var __msfr_align: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var msfr_fmode: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var msfr_ifindex: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var msfr_nsrcs: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual enum class __ns_flag private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    ns_f_qr(TODO()),

    ns_f_opcode(TODO()),

    ns_f_aa(TODO()),

    ns_f_tc(TODO()),

    ns_f_rd(TODO()),

    ns_f_ra(TODO()),

    ns_f_z(TODO()),

    ns_f_ad(TODO()),

    ns_f_cd(TODO()),

    ns_f_rcode(TODO()),

    ns_f_max(TODO());

    actual open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.UInt): platform.posix.__ns_flag { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.posix.__ns_flag
            get() = TODO()
            set(value: platform.posix.__ns_flag) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class __ns_msg public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var _rrnum: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val _counts: kotlinx.cinterop.CArrayPointer<platform.posix.u_int16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */>> */
        get() = TODO()

    final var _eom: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) = TODO()

    final var _flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var _id: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var _msg: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) = TODO()

    final var _msg_ptr: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) = TODO()

    final var _sect: platform.posix.res_9_ns_sect /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.res_9_ns_sect /* = kotlin.UInt */) = TODO()

    final val _sections: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __ns_rr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var rdata: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) = TODO()

    final var rdlength: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var rr_class: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var ttl: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var type: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __res_9_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val _u: platform.posix.anonymousStruct3
        get() = TODO()

    actual final var _vcsock: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ndots: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var nscount: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var nsort: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var res_h_errno: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var retrans: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var retry: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var _flags: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var _pad: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final val defdname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val dnsrch: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
        get() = TODO()

    final var id: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final val nsaddr_list: kotlinx.cinterop.CArrayPointer<platform.posix.sockaddr_in> /* = kotlinx.cinterop.CPointer<platform.posix.sockaddr_in> */
        get() = TODO()

    final var options: platform.posix.u_long /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_long /* = kotlin.ULong */) = TODO()

    final var pfcode: platform.posix.u_long /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_long /* = kotlin.ULong */) = TODO()

    final var qhook: platform.posix.res_send_qhook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.sockaddr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.sockaddr>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) -> platform.posix.res_9_sendhookact>>? */
        get() = TODO()
        set(value: platform.posix.res_send_qhook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.sockaddr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.sockaddr>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) -> platform.posix.res_9_sendhookact>>? */) = TODO()

    final var rhook: platform.posix.res_send_rhook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.sockaddr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) -> platform.posix.res_9_sendhookact>>? */
        get() = TODO()
        set(value: platform.posix.res_send_rhook? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.sockaddr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) -> platform.posix.res_9_sendhookact>>? */) = TODO()

    final val sort_list: kotlinx.cinterop.CArrayPointer<platform.posix.anonymousStruct2> /* = kotlinx.cinterop.CPointer<platform.posix.anonymousStruct2> */
        get() = TODO()

    final val unused: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __sFILE public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val _bf: platform.posix.__sbuf
        get() = TODO()

    actual final var _blksize: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var _extra: kotlinx.cinterop.CPointer<cnames.structs.__sFILEX>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.__sFILEX>?) = TODO()

    actual final var _file: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final var _flags: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final val _lb: platform.posix.__sbuf
        get() = TODO()

    actual final var _lbfsize: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var _r: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val _ub: platform.posix.__sbuf
        get() = TODO()

    actual final var _ur: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var _w: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var _close: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) = TODO()

    final var _cookie: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val _nbuf: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    final var _offset: platform.posix.fpos_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.fpos_t /* = kotlin.Long */) = TODO()

    final var _p: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?) = TODO()

    final var _read: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?) = TODO()

    final var _seek: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.fpos_t /* = kotlin.Long */, kotlin.Int) -> platform.posix.fpos_t /* = kotlin.Long */>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.fpos_t /* = kotlin.Long */, kotlin.Int) -> platform.posix.fpos_t /* = kotlin.Long */>>?) = TODO()

    final val _ubuf: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    final var _write: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __sbuf public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var _size: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var _base: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __shmid_ds_new public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val shm_perm: platform.posix.ipc_perm
        get() = TODO()

    final var shm_atime: platform.posix.time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.time_t /* = kotlin.Long */) = TODO()

    final var shm_cpid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    final var shm_ctime: platform.posix.time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.time_t /* = kotlin.Long */) = TODO()

    final var shm_dtime: platform.posix.time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.time_t /* = kotlin.Long */) = TODO()

    final var shm_internal: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var shm_lpid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    final var shm_nattch: platform.posix.shmatt_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.shmatt_t /* = kotlin.UShort */) = TODO()

    final var shm_segsz: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __sigaction public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __sigaction_u: platform.posix.__sigaction_u
        get() = TODO()

    actual final var sa_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var sa_mask: platform.posix.sigset_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.sigset_t /* = kotlin.UInt */) = TODO()

    final var sa_tramp: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.siginfo_t /* = platform.posix.__siginfo */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlin.Int, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.siginfo_t /* = platform.posix.__siginfo */>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __sigaction_u public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sa_handler: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?) = TODO()

    final var __sa_sigaction: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.__siginfo>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.__siginfo>?, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __siginfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var si_band: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var si_code: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var si_errno: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var si_signo: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var si_status: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val si_value: platform.posix.sigval
        get() = TODO()

    final val __pad: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ULongVar /* = kotlinx.cinterop.ULongVarOf<kotlin.ULong> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<kotlin.ULong>> */
        get() = TODO()

    final var si_addr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var si_pid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    final var si_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class __va_list_tag public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var fp_offset: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var gp_offset: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var overflow_arg_area: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var reg_save_area: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _ftsent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var fts_cycle: kotlinx.cinterop.CPointer<platform.posix._ftsent>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._ftsent>?) = TODO()

    actual final var fts_errno: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var fts_flags: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var fts_info: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var fts_instr: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var fts_level: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final var fts_link: kotlinx.cinterop.CPointer<platform.posix._ftsent>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._ftsent>?) = TODO()

    actual final var fts_namelen: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var fts_number: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var fts_parent: kotlinx.cinterop.CPointer<platform.posix._ftsent>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix._ftsent>?) = TODO()

    actual final var fts_pathlen: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var fts_statp: kotlinx.cinterop.CPointer<platform.posix.stat>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.stat>?) = TODO()

    actual final var fts_symfd: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var fts_accpath: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var fts_dev: platform.posix.dev_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.dev_t /* = kotlin.Int */) = TODO()

    final var fts_ino: platform.posix.ino_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.ino_t /* = kotlin.ULong */) = TODO()

    final val fts_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var fts_nlink: platform.posix.nlink_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.nlink_t /* = kotlin.UShort */) = TODO()

    final var fts_path: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var fts_pointer: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_attr_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_cond_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_condattr_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_mutex_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_mutexattr_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_once_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_rwlock_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_rwlockattr_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _opaque_pthread_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __cleanup_stack: kotlinx.cinterop.CPointer<platform.posix.__darwin_pthread_handler_rec>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.__darwin_pthread_handler_rec>?) = TODO()

    actual final var __sig: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class _res_9_ns_flagdata public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var mask: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var shift: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class accessx_descriptor public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ad_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ad_name_offset: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final val ad_pad: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class addrinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ai_addr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    actual final var ai_family: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ai_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ai_next: kotlinx.cinterop.CPointer<platform.posix.addrinfo>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.addrinfo>?) = TODO()

    actual final var ai_protocol: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ai_socktype: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ai_addrlen: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    final var ai_canonname: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct1 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val __u6_addr16: kotlinx.cinterop.CArrayPointer<platform.posix.__uint16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.__uint16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.__uint16_t /* = kotlin.UShort */>> */
        get() = TODO()

    final val __u6_addr32: kotlinx.cinterop.CArrayPointer<platform.posix.__uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val __u6_addr8: kotlinx.cinterop.CArrayPointer<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct10 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val icmp6_un_data16: kotlinx.cinterop.CArrayPointer<platform.posix.u_int16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */>> */
        get() = TODO()

    final val icmp6_un_data32: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val icmp6_un_data8: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct11 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ip6_un1: platform.posix.ip6_hdrctl
        get() = TODO()

    final var ip6_un2_vfc: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct12 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ih_gwaddr: platform.posix.in_addr
        get() = TODO()

    actual final val ih_idseq: platform.posix.ih_idseq
        get() = TODO()

    actual final val ih_pmtu: platform.posix.ih_pmtu
        get() = TODO()

    actual final val ih_rtradv: platform.posix.ih_rtradv
        get() = TODO()

    actual final var ih_void: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ih_pptr: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct13 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val id_ip: platform.posix.id_ip
        get() = TODO()

    actual final val id_radv: platform.posix.icmp_ra_addr
        get() = TODO()

    actual final val id_ts: platform.posix.id_ts
        get() = TODO()

    final val id_data: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var id_mask: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val addr: platform.posix.in_addr
        get() = TODO()

    final var mask: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val _ext: platform.posix.anonymousStruct4
        get() = TODO()

    final val pad: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct4 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ext: kotlinx.cinterop.CPointer<cnames.structs.__res_9_state_ext>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.__res_9_state_ext>?) = TODO()

    final var nscount: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final val nssocks: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final val nstimes: kotlinx.cinterop.CArrayPointer<platform.posix.u_int16_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t /* = kotlin.UShort */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct5 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var w_Coredump: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var w_Filler: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var w_Retcode: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var w_Termsig: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct6 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var w_Filler: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var w_Stopsig: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var w_Stopval: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct7 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifk_value: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ifk_ptr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct8 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifru_addr: platform.posix.sockaddr
        get() = TODO()

    actual final val ifru_broadaddr: platform.posix.sockaddr
        get() = TODO()

    actual final val ifru_devmtu: platform.posix.ifdevmtu
        get() = TODO()

    actual final val ifru_dstaddr: platform.posix.sockaddr
        get() = TODO()

    actual final var ifru_flags: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final var ifru_intval: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val ifru_kpi: platform.posix.ifkpi
        get() = TODO()

    actual final var ifru_media: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifru_metric: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifru_mtu: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifru_phys: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val ifru_cap: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>> */
        get() = TODO()

    final var ifru_data: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    final var ifru_functional_type: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifru_route_refcnt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifru_wake_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class anonymousStruct9 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifcu_req: kotlinx.cinterop.CPointer<platform.posix.ifreq>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.ifreq>?) = TODO()

    final var ifcu_buf: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */
        get() = TODO()
        set(value: platform.posix.caddr_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class atomic_flag public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class clockinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var hz: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var profhz: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var stathz: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tick: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tickadj: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class cmsghdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var cmsg_level: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var cmsg_type: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var cmsg_len: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class dirent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var d_ino: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final val d_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var d_namlen: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var d_reclen: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var d_seekoff: platform.posix.__uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__uint64_t /* = kotlin.ULong */) = TODO()

    final var d_type: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class div_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var quot: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var rem: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class dl_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var dli_fbase: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var dli_fname: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var dli_saddr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var dli_sname: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class entry public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var key: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ether_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val octet: kotlinx.cinterop.CArrayPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ether_header public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ether_dhost: kotlinx.cinterop.CArrayPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>> */
        get() = TODO()

    final val ether_shost: kotlinx.cinterop.CArrayPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>> */
        get() = TODO()

    final var ether_type: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class exception public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var arg1: kotlin.Double
        get() = TODO()
        set(value: kotlin.Double) = TODO()

    actual final var arg2: kotlin.Double
        get() = TODO()
        set(value: kotlin.Double) = TODO()

    actual final var retval: kotlin.Double
        get() = TODO()
        set(value: kotlin.Double) = TODO()

    actual final var type: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fbootstraptransfer public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fbt_buffer: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var fbt_length: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var fbt_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fchecklv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var lv_error_message: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var lv_error_message_size: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var lv_file_start: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fcodeblobs public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __padding: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var f_arch: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var f_cd_buffer: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var f_cd_hash: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var f_cd_size: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var f_hash_size: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var f_out_size: kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fd_set public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val fds_bits: kotlinx.cinterop.CArrayPointer<platform.posix.__int32_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.__int32_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.__int32_t /* = kotlin.Int */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fenv_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var __control: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var __mxcsr: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var __status: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final val __reserved: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class flock public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var l_type: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final var l_whence: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    final var l_len: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var l_pid: platform.posix.pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.pid_t /* = kotlin.Int */) = TODO()

    final var l_start: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class flocktimeout public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val fl: platform.posix.flock
        get() = TODO()

    actual final val timeout: platform.posix.timespec
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fpunchhole public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var fp_flags: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var reserved: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var fp_length: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var fp_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fsignatures public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fs_blob_size: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final var fs_blob_start: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var fs_file_start: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class fstore public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var fst_flags: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var fst_posmode: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var fst_bytesalloc: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var fst_length: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var fst_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ftrimactivefile public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var fta_length: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var fta_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class group public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var gr_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var gr_mem: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var gr_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var gr_passwd: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class group_req public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val gr_group: platform.posix.sockaddr_storage
        get() = TODO()

    final var gr_interface: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class group_source_req public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val gsr_group: platform.posix.sockaddr_storage
        get() = TODO()

    actual final val gsr_source: platform.posix.sockaddr_storage
        get() = TODO()

    final var gsr_interface: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class guid_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val g_guid: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class hostent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var h_addrtype: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var h_length: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var h_addr_list: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var h_aliases: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var h_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val icmp_dun: platform.posix.anonymousStruct13
        get() = TODO()

    actual final val icmp_hun: platform.posix.anonymousStruct12
        get() = TODO()

    final var icmp_cksum: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var icmp_code: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var icmp_type: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6_filter public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val icmp6_filt: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val icmp6_dataun: platform.posix.anonymousStruct10
        get() = TODO()

    final var icmp6_cksum: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var icmp6_code: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var icmp6_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6_namelookup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val icmp6_nl_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    final val icmp6_nl_nonce: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var icmp6_nl_ttl: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6_nodeinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val icmp6_ni_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    final val icmp6_ni_nonce: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6_router_renum public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val rr_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    final var rr_flags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rr_maxdelay: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var rr_reserved: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rr_segnum: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6errstat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var icp6errs_dst_unreach_addr: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_dst_unreach_admin: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_dst_unreach_beyondscope: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_dst_unreach_noport: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_dst_unreach_noroute: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_packet_too_big: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_paramprob_header: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_paramprob_nextheader: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_paramprob_option: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_redirect: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_time_exceed_reassembly: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_time_exceed_transit: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6errs_unknown: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp6stat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val icp6s_outerrhist: platform.posix.icmp6errstat
        get() = TODO()

    final var icp6s_badcode: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badlen: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badna: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badns: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badra: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badredirect: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_badrs: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_canterror: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_checksum: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_error: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final val icp6s_inhist: kotlinx.cinterop.CArrayPointer<platform.posix.u_quad_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.u_quad_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.u_quad_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var icp6s_nd_badopt: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_nd_toomanyopt: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final val icp6s_outhist: kotlinx.cinterop.CArrayPointer<platform.posix.u_quad_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.u_quad_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.u_quad_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var icp6s_pmtuchg: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_reflect: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_rfc6980_drop: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_toofreq: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    final var icp6s_tooshort: platform.posix.u_quad_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_quad_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class icmp_ra_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ira_addr: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ira_preference: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class id_ip public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val idi_ip: platform.posix.ip
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class id_ts public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var its_otime: platform.posix.n_time /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.n_time /* = kotlin.UInt */) = TODO()

    final var its_rtime: platform.posix.n_time /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.n_time /* = kotlin.UInt */) = TODO()

    final var its_ttime: platform.posix.n_time /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.n_time /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual enum class idtype_t private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    P_ALL(TODO()),

    P_PID(TODO()),

    P_PGID(TODO());

    actual open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.UInt): platform.posix.idtype_t { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.posix.idtype_t
            get() = TODO()
            set(value: platform.posix.idtype_t) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class if_clonereq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifcr_count: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifcr_total: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ifcr_buffer: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class if_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifi_lastchange: platform.posix.timeval32
        get() = TODO()

    final var ifi_addrlen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_baudrate: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_collisions: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_hdrlen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_hwassist: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_ibytes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_ierrors: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_imcasts: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_ipackets: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_iqdrops: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_metric: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_mtu: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_noproto: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_obytes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_oerrors: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_omcasts: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_opackets: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_physical: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_recvquota: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_recvtiming: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_reserved1: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_reserved2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_type: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_typelen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_unused1: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_unused2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_xmitquota: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_xmittiming: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class if_data64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifi_lastchange: platform.posix.timeval32
        get() = TODO()

    final var ifi_addrlen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_baudrate: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_collisions: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_hdrlen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_ibytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_ierrors: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_imcasts: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_ipackets: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_iqdrops: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_metric: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_mtu: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_noproto: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_obytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_oerrors: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_omcasts: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_opackets: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var ifi_physical: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_recvquota: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_recvtiming: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ifi_type: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_typelen: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_unused1: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_xmitquota: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifi_xmittiming: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class if_msghdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifm_addrs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val ifm_data: platform.posix.if_data
        get() = TODO()

    actual final var ifm_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_index: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifm_msglen: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifm_type: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual final var ifm_version: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class if_msghdr2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifm_addrs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val ifm_data: platform.posix.if_data64
        get() = TODO()

    actual final var ifm_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_snd_drops: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_snd_len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_snd_maxlen: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_timer: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ifm_index: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ifm_msglen: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ifm_type: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifm_version: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class if_nameindex public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var if_index: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var if_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifa_msghdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifam_addrs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifam_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifam_index: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifam_metric: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifam_msglen: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifam_type: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual final var ifam_version: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifaliasreq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifra_addr: platform.posix.sockaddr
        get() = TODO()

    actual final val ifra_broadaddr: platform.posix.sockaddr
        get() = TODO()

    actual final val ifra_mask: platform.posix.sockaddr
        get() = TODO()

    final val ifra_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifconf public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifc_ifcu: platform.posix.anonymousStruct9
        get() = TODO()

    actual final var ifc_len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifdevmtu public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifdm_current: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifdm_max: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifdm_min: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifdrv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifd_cmd: kotlin.ULong
        get() = TODO()
        set(value: kotlin.ULong) = TODO()

    final var ifd_data: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var ifd_len: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    final val ifd_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifkpi public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifk_data: platform.posix.anonymousStruct7
        get() = TODO()

    actual final var ifk_module_id: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var ifk_type: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifma_msghdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifmam_addrs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifmam_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifmam_index: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifmam_msglen: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ifmam_type: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual final var ifmam_version: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifma_msghdr2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifmam_addrs: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifmam_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ifmam_index: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ifmam_msglen: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ifmam_refcount: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final var ifmam_type: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ifmam_version: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifmediareq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifm_active: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_count: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_current: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_mask: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifm_status: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val ifm_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ifm_ulist: kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifqueue public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ifq_drops: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifq_len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var ifq_maxlen: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ifq_head: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var ifq_tail: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifreq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ifr_ifru: platform.posix.anonymousStruct8
        get() = TODO()

    final val ifr_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ifstat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ascii: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val ifs_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ih_idseq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var icd_id: platform.posix.n_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.n_short /* = kotlin.UShort */) = TODO()

    final var icd_seq: platform.posix.n_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.n_short /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ih_pmtu public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ipm_nextmtu: platform.posix.n_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.n_short /* = kotlin.UShort */) = TODO()

    final var ipm_void: platform.posix.n_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.n_short /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ih_rtradv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var irt_lifetime: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var irt_num_addrs: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var irt_wpa: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class imaxdiv_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var quot: platform.posix.intmax_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.intmax_t /* = kotlin.Long */) = TODO()

    final var rem: platform.posix.intmax_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.intmax_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class in6_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __u6_addr: platform.posix.anonymousStruct1
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class in6_pktinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ipi6_addr: platform.posix.in6_addr
        get() = TODO()

    actual final var ipi6_ifindex: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class in_addr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var s_addr: platform.posix.in_addr_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.in_addr_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class in_pktinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ipi_addr: platform.posix.in_addr
        get() = TODO()

    actual final var ipi_ifindex: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final val ipi_spec_dst: platform.posix.in_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class iovec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var iov_base: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var iov_len: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ip_dst: platform.posix.in_addr
        get() = TODO()

    actual final val ip_src: platform.posix.in_addr
        get() = TODO()

    final var ip_hl: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var ip_id: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ip_len: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ip_off: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ip_p: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ip_sum: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var ip_tos: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ip_ttl: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ip_v: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_dest public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6d_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6d_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_ext public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6e_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6e_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_frag public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6f_ident: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ip6f_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6f_offlg: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var ip6f_reserved: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_hbh public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6h_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6h_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ip6_ctlun: platform.posix.anonymousStruct11
        get() = TODO()

    actual final val ip6_dst: platform.posix.in6_addr
        get() = TODO()

    actual final val ip6_src: platform.posix.in6_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_hdrctl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6_un1_flow: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ip6_un1_hlim: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6_un1_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6_un1_plen: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_mtuinfo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ip6m_addr: platform.posix.sockaddr_in6
        get() = TODO()

    final var ip6m_mtu: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_opt public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6o_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6o_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_opt_jumbo public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ip6oj_jumbo_len: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ip6oj_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6oj_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_opt_nsap public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6on_dst_nsap_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6on_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6on_src_nsap_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6on_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_opt_router public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6or_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6or_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final val ip6or_value: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_opt_tunnel public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6ot_encap_limit: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6ot_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6ot_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_rthdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ip6r_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r_segleft: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip6_rthdr0 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ip6r0_addr: kotlinx.cinterop.CArrayPointer<platform.posix.in6_addr> /* = kotlinx.cinterop.CPointer<platform.posix.in6_addr> */
        get() = TODO()

    final var ip6r0_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r0_nxt: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r0_reserved: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ip6r0_segleft: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final val ip6r0_slmap: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ip6r0_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip_mreq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val imr_interface: platform.posix.in_addr
        get() = TODO()

    actual final val imr_multiaddr: platform.posix.in_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip_mreq_source public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val imr_interface: platform.posix.in_addr
        get() = TODO()

    actual final val imr_multiaddr: platform.posix.in_addr
        get() = TODO()

    actual final val imr_sourceaddr: platform.posix.in_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip_mreqn public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val imr_address: platform.posix.in_addr
        get() = TODO()

    actual final var imr_ifindex: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val imr_multiaddr: platform.posix.in_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip_opts public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ip_dst: platform.posix.in_addr
        get() = TODO()

    final val ip_opts: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ip_timestamp public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ipt_timestamp: platform.posix.ipt_timestamp
        get() = TODO()

    final var ipt_code: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ipt_flg: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var ipt_len: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    final var ipt_oflw: platform.posix.u_int /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int /* = kotlin.UInt */) = TODO()

    final var ipt_ptr: platform.posix.u_char /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_char /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ipc_perm public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var _seq: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    final var _key: platform.posix.key_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.key_t /* = kotlin.Int */) = TODO()

    final var cgid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var cuid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var mode: platform.posix.mode_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.mode_t /* = kotlin.UShort */) = TODO()

    final var uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ipt_ta public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ipt_addr: platform.posix.in_addr
        get() = TODO()

    final var ipt_time: platform.posix.n_long /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.n_long /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ipt_timestamp public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ipt_ta: kotlinx.cinterop.CArrayPointer<platform.posix.ipt_ta> /* = kotlinx.cinterop.CPointer<platform.posix.ipt_ta> */
        get() = TODO()

    final val ipt_time: kotlinx.cinterop.CArrayPointer<platform.posix.n_longVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.n_long /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.n_long /* = kotlin.UInt */>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ipv6_mreq public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ipv6mr_interface: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final val ipv6mr_multiaddr: platform.posix.in6_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class itimerval public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val it_interval: platform.posix.timeval
        get() = TODO()

    actual final val it_value: platform.posix.timeval
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kauth_ace public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val ace_applicable: platform.posix.guid_t
        get() = TODO()

    final var ace_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var ace_rights: platform.posix.kauth_ace_rights_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.kauth_ace_rights_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kauth_acl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val acl_ace: kotlinx.cinterop.CArrayPointer<platform.posix.kauth_ace> /* = kotlinx.cinterop.CPointer<platform.posix.kauth_ace> */
        get() = TODO()

    final var acl_entrycount: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var acl_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kauth_cache_sizes public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var kcs_group_size: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var kcs_id_size: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kauth_filesec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val fsec_acl: platform.posix.kauth_acl
        get() = TODO()

    actual final val fsec_group: platform.posix.guid_t
        get() = TODO()

    actual final val fsec_owner: platform.posix.guid_t
        get() = TODO()

    final var fsec_magic: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kauth_identity_extlookup public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val el_gguid: platform.posix.guid_t
        get() = TODO()

    actual final val el_gsid: platform.posix.ntsid_t
        get() = TODO()

    actual final val el_uguid: platform.posix.guid_t
        get() = TODO()

    actual final val el_usid: platform.posix.ntsid_t
        get() = TODO()

    final var el_extend: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var el_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_gguid_valid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var el_gsid_valid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_info_pid: platform.posix.__darwin_pid_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_pid_t /* = kotlin.Int */) = TODO()

    final var el_info_reserved_1: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_member_valid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_result: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_seqno: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val el_sup_groups: kotlinx.cinterop.CArrayPointer<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */>> */
        get() = TODO()

    final var el_sup_grp_cnt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_uguid_valid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var el_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    final var el_usid_valid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class kev_dl_proto_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val link_data: platform.posix.net_event_data
        get() = TODO()

    final var proto_family: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var proto_remaining_count: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class lconv public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var frac_digits: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_frac_digits: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_n_cs_precedes: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_n_sep_by_space: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_n_sign_posn: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_p_cs_precedes: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_p_sep_by_space: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var int_p_sign_posn: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var n_cs_precedes: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var n_sep_by_space: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var n_sign_posn: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var p_cs_precedes: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var p_sep_by_space: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    actual final var p_sign_posn: kotlin.Byte
        get() = TODO()
        set(value: kotlin.Byte) = TODO()

    final var currency_symbol: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var decimal_point: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var grouping: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var int_curr_symbol: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var mon_decimal_point: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var mon_grouping: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var mon_thousands_sep: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var negative_sign: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var positive_sign: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var thousands_sep: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ldiv_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var quot: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var rem: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class linger public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var l_linger: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var l_onoff: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class lldiv_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var quot: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var rem: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class log2phys public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var l2p_flags: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var l2p_contigbytes: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var l2p_devoffset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class mld_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val mld_addr: platform.posix.in6_addr
        get() = TODO()

    actual final val mld_icmp6_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class msghdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var msg_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var msg_iov: kotlinx.cinterop.CPointer<platform.posix.iovec>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.iovec>?) = TODO()

    actual final var msg_iovlen: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var msg_control: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var msg_controllen: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    final var msg_name: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final var msg_namelen: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_neighbor_advert public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_na_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    actual final val nd_na_target: platform.posix.in6_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_neighbor_solicit public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_ns_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    actual final val nd_ns_target: platform.posix.in6_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_dnssl public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nd_opt_dnssl_domains: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var nd_opt_dnssl_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_dnssl_lifetime: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_dnssl_reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var nd_opt_dnssl_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nd_opt_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_mtu public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nd_opt_mtu_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_mtu_mtu: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_mtu_reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var nd_opt_mtu_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_nonce public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nd_opt_nonce: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var nd_opt_nonce_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_nonce_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_prefix_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_opt_pi_prefix: platform.posix.in6_addr
        get() = TODO()

    final var nd_opt_pi_flags_reserved: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_pi_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_pi_preferred_time: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_pi_prefix_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_pi_reserved2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_pi_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_pi_valid_time: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_rd_hdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nd_opt_rh_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_rh_reserved1: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var nd_opt_rh_reserved2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_rh_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_rdnss public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val nd_opt_rdnss_addr: kotlinx.cinterop.CArrayPointer<platform.posix.in6_addr> /* = kotlinx.cinterop.CPointer<platform.posix.in6_addr> */
        get() = TODO()

    final var nd_opt_rdnss_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_rdnss_lifetime: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_rdnss_reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var nd_opt_rdnss_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_opt_route_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var nd_opt_rti_flags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_rti_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_rti_lifetime: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_opt_rti_prefixlen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var nd_opt_rti_type: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_redirect public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_rd_dst: platform.posix.in6_addr
        get() = TODO()

    actual final val nd_rd_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    actual final val nd_rd_target: platform.posix.in6_addr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_router_advert public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_ra_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    final var nd_ra_reachable: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var nd_ra_retransmit: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class nd_router_solicit public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val nd_rs_hdr: platform.posix.icmp6_hdr
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class net_event_data public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var if_family: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final val if_name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var if_unit: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class netent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var n_addrtype: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var n_aliases: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var n_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var n_net: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ni_reply_fqdn public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val ni_fqdn_name: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ni_fqdn_namelen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var ni_fqdn_ttl: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ntsid_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sid_authcount: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final val sid_authorities: kotlinx.cinterop.CArrayPointer<platform.posix.u_int32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t /* = kotlin.UInt */>> */
        get() = TODO()

    final val sid_authority: kotlinx.cinterop.CArrayPointer<platform.posix.u_int8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var sid_kind: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class option public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var has_arg: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var `val`: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var flag: kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?) = TODO()

    final var name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ostat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val st_atimespec: platform.posix.timespec
        get() = TODO()

    actual final val st_ctimespec: platform.posix.timespec
        get() = TODO()

    actual final val st_mtimespec: platform.posix.timespec
        get() = TODO()

    final var st_blksize: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    final var st_blocks: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    final var st_dev: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var st_flags: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var st_gen: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var st_gid: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var st_ino: platform.posix.ino_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.ino_t /* = kotlin.ULong */) = TODO()

    final var st_mode: platform.posix.mode_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.mode_t /* = kotlin.UShort */) = TODO()

    final var st_nlink: platform.posix.nlink_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.nlink_t /* = kotlin.UShort */) = TODO()

    final var st_rdev: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var st_size: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    final var st_uid: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class passwd public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var pw_change: platform.posix.__darwin_time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__darwin_time_t /* = kotlin.Long */) = TODO()

    final var pw_class: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_dir: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_expire: platform.posix.__darwin_time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__darwin_time_t /* = kotlin.Long */) = TODO()

    final var pw_gecos: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var pw_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_passwd: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_shell: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var pw_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class pollfd public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var events: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual final var fd: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var revents: kotlin.Short
        get() = TODO()
        set(value: kotlin.Short) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class proc_rlimit_control_wakeupmon public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var wm_flags: platform.posix.uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uint32_t /* = kotlin.UInt */) = TODO()

    final var wm_rate: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class protoent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var p_proto: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var p_aliases: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var p_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class radvisory public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ra_count: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ra_offset: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class regex_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var re_g: kotlinx.cinterop.CPointer<cnames.structs.re_guts>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.re_guts>?) = TODO()

    actual final var re_magic: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var re_endp: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var re_nsub: platform.posix.size_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.size_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class regmatch_t public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var rm_eo: platform.posix.regoff_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.regoff_t /* = kotlin.Long */) = TODO()

    final var rm_so: platform.posix.regoff_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.regoff_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class res_9_ns_tcp_tsig_state public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var counter: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var key: kotlinx.cinterop.CPointer<cnames.structs.dst_key>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<cnames.structs.dst_key>?) = TODO()

    actual final var siglen: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ctx: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    final val sig: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class res_9_ns_tsig_key public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var len: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val alg: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var data: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?) = TODO()

    final val name: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual enum class res_9_sendhookact private constructor(/*0*/ value: kotlin.UInt): kotlinx.cinterop.CEnum {
    res_9_goahead(TODO()),

    res_9_nextns(TODO()),

    res_9_modified(TODO()),

    res_9_done(TODO()),

    res_9_error(TODO());

    actual open override /*1*/ val value: kotlin.UInt
        get() = TODO()

    actual companion object Companion {
        final actual fun byValue(/*0*/ value: kotlin.UInt): platform.posix.res_9_sendhookact { TODO() }
    }

    final actual class Var public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CEnumVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
        actual final var value: platform.posix.res_9_sendhookact
            get() = TODO()
            set(value: platform.posix.res_9_sendhookact) = TODO()

        actual companion object Companion: kotlinx.cinterop.CPrimitiveVar.Type(TODO() as kotlin.Int) {
        }
    }
}

final actual class res_9_sockaddr_union public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val sin: platform.posix.sockaddr_in
        get() = TODO()

    actual final val sin6: platform.posix.sockaddr_in6
        get() = TODO()

    final var __align32: platform.posix.int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.int32_t /* = kotlin.Int */) = TODO()

    final val __space: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class res_9_sym public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var number: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var humanname: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rlimit public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var rlim_cur: platform.posix.rlim_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.rlim_t /* = kotlin.ULong */) = TODO()

    final var rlim_max: platform.posix.rlim_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.rlim_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rpcent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var r_number: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var r_aliases: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var r_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rr_pco_match public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val rpm_prefix: platform.posix.in6_addr
        get() = TODO()

    final var rpm_code: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_len: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_matchlen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_maxlen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_minlen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_ordinal: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpm_reserved: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rr_pco_use public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val rpu_prefix: platform.posix.in6_addr
        get() = TODO()

    final var rpu_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rpu_keeplen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpu_pltime: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rpu_raflags: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpu_ramask: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpu_uselen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rpu_vltime: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rr_result public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val rrr_prefix: platform.posix.in6_addr
        get() = TODO()

    final var rrr_flags: platform.posix.u_int16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_int16_t /* = kotlin.UShort */) = TODO()

    final var rrr_ifid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var rrr_matchedlen: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var rrr_ordinal: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rslvmulti_req public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sa: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    final var llsa: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.sockaddr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.sockaddr>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.sockaddr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.sockaddr>> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ru_idrss: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_inblock: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_isrss: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_ixrss: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_majflt: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_maxrss: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_minflt: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_msgrcv: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_msgsnd: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_nivcsw: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_nsignals: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_nswap: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_nvcsw: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var ru_oublock: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final val ru_stime: platform.posix.timeval
        get() = TODO()

    actual final val ru_utime: platform.posix.timeval
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage_info_v0 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ri_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_exit_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_start_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ri_wired_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage_info_v1 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ri_child_elapsed_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_exit_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_start_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ri_wired_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage_info_v2 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ri_child_elapsed_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_bytesread: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_byteswritten: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_exit_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_start_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ri_wired_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage_info_v3 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ri_billed_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_elapsed_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_background: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_default: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_legacy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_maintenance: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_user_initiated: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_user_interactive: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_utility: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_bytesread: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_byteswritten: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_exit_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_start_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_serviced_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ri_wired_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class rusage_info_v4 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var ri_billed_energy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_billed_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_elapsed_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_child_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_background: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_default: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_legacy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_maintenance: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_user_initiated: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_user_interactive: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cpu_time_qos_utility: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_cycles: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_bytesread: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_diskio_byteswritten: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_instructions: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_interrupt_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_interval_max_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_lifetime_max_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_logical_writes: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pageins: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_phys_footprint: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_pkg_idle_wkups: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_exit_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_proc_start_abstime: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_resident_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_serviced_energy: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_serviced_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final var ri_system_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_unused: kotlinx.cinterop.CArrayPointer<platform.posix.uint64_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t /* = kotlin.ULong */>> */
        get() = TODO()

    final var ri_user_time: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    final val ri_uuid: kotlinx.cinterop.CArrayPointer<platform.posix.uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var ri_wired_size: platform.posix.uint64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.uint64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sa_endpoints public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sae_dstaddr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    actual final var sae_srcaddr: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.sockaddr>?) = TODO()

    actual final var sae_srcif: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var sae_dstaddrlen: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    final var sae_srcaddrlen: platform.posix.socklen_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.socklen_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sched_param public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sched_priority: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final val __opaque: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class servent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var s_port: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var s_aliases: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?) = TODO()

    final var s_name: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    final var s_proto: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sf_hdtr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var hdr_cnt: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var headers: kotlinx.cinterop.CPointer<platform.posix.iovec>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.iovec>?) = TODO()

    actual final var trailers: kotlinx.cinterop.CPointer<platform.posix.iovec>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.iovec>?) = TODO()

    actual final var trl_cnt: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sigaction public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val __sigaction_u: platform.posix.__sigaction_u
        get() = TODO()

    actual final var sa_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var sa_mask: platform.posix.sigset_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.sigset_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sigevent public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sigev_notify: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var sigev_notify_function: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.posix.sigval>) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CValue<platform.posix.sigval>) -> kotlin.Unit>>?) = TODO()

    actual final var sigev_signo: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final val sigev_value: platform.posix.sigval
        get() = TODO()

    final var sigev_notify_attributes: kotlinx.cinterop.CPointer<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sigstack public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ss_onstack: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var ss_sp: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sigval public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sival_int: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var sival_ptr: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */
        get() = TODO()
        set(value: kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sigvec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var sv_flags: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var sv_handler: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?) = TODO()

    actual final var sv_mask: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class so_np_extensions public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var npx_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var npx_mask: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sockaddr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val sa_data: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var sa_family: platform.posix.sa_family_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.sa_family_t /* = kotlin.UByte */) = TODO()

    final var sa_len: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sockaddr_in public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val sin_addr: platform.posix.in_addr
        get() = TODO()

    final var sin_family: platform.posix.sa_family_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.sa_family_t /* = kotlin.UByte */) = TODO()

    final var sin_len: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var sin_port: platform.posix.in_port_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.in_port_t /* = kotlin.UShort */) = TODO()

    final val sin_zero: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sockaddr_in6 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val sin6_addr: platform.posix.in6_addr
        get() = TODO()

    final var sin6_family: platform.posix.sa_family_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.sa_family_t /* = kotlin.UByte */) = TODO()

    final var sin6_flowinfo: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var sin6_len: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    final var sin6_port: platform.posix.in_port_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.in_port_t /* = kotlin.UShort */) = TODO()

    final var sin6_scope_id: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sockaddr_storage public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __ss_align: platform.posix.__int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__int64_t /* = kotlin.Long */) = TODO()

    final val __ss_pad1: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val __ss_pad2: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final var ss_family: platform.posix.sa_family_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.sa_family_t /* = kotlin.UByte */) = TODO()

    final var ss_len: platform.posix.__uint8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.__uint8_t /* = kotlin.UByte */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class sockproto public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var sp_family: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    final var sp_protocol: platform.posix.__uint16_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.__uint16_t /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class stat public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val st_atimespec: platform.posix.timespec
        get() = TODO()

    actual final val st_ctimespec: platform.posix.timespec
        get() = TODO()

    actual final val st_mtimespec: platform.posix.timespec
        get() = TODO()

    final val st_birthtimespec: platform.posix.timespec
        get() = TODO()

    final var st_blksize: platform.posix.blksize_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.blksize_t /* = kotlin.Int */) = TODO()

    final var st_blocks: platform.posix.blkcnt_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.blkcnt_t /* = kotlin.Long */) = TODO()

    final var st_dev: platform.posix.dev_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.dev_t /* = kotlin.Int */) = TODO()

    final var st_flags: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var st_gen: platform.posix.__uint32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.__uint32_t /* = kotlin.UInt */) = TODO()

    final var st_gid: platform.posix.gid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.gid_t /* = kotlin.UInt */) = TODO()

    final var st_ino: platform.posix.__darwin_ino64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.__darwin_ino64_t /* = kotlin.ULong */) = TODO()

    final var st_lspare: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    final var st_mode: platform.posix.mode_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.mode_t /* = kotlin.UShort */) = TODO()

    final var st_nlink: platform.posix.nlink_t /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.nlink_t /* = kotlin.UShort */) = TODO()

    final val st_qspare: kotlinx.cinterop.CArrayPointer<platform.posix.__int64_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.__int64_t /* = kotlin.Long */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.LongVarOf<platform.posix.__int64_t /* = kotlin.Long */>> */
        get() = TODO()

    final var st_rdev: platform.posix.dev_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.dev_t /* = kotlin.Int */) = TODO()

    final var st_size: platform.posix.off_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.off_t /* = kotlin.Long */) = TODO()

    final var st_uid: platform.posix.uid_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.uid_t /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class tcp_connection_info public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var __pad1: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var __pad2: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_flags: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_maxseg: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_options: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_rcv_wnd: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_rcv_wscale: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var tcpi_rto: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_rttcur: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_rttvar: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_rxbytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_rxoutoforderbytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_rxpackets: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_snd_cwnd: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_snd_sbbytes: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_snd_ssthresh: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_snd_wnd: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_snd_wscale: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var tcpi_srtt: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_state: platform.posix.u_int8_t /* = kotlin.UByte */
        get() = TODO()
        set(value: platform.posix.u_int8_t /* = kotlin.UByte */) = TODO()

    final var tcpi_tfo_cookie_invalid: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_cookie_rcv: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_cookie_req: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_cookie_req_rcv: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_cookie_sent: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_cookie_wrong: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_heuristics_disable: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_no_cookie_rcv: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_onebyte_proxy: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_recv_blackhole: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_send_blackhole: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_syn_data_acked: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_syn_data_rcv: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_syn_data_sent: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_tfo_syn_loss: platform.posix.u_int32_t /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.u_int32_t /* = kotlin.UInt */) = TODO()

    final var tcpi_txbytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_txpackets: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_txretransmitbytes: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    final var tcpi_txretransmitpackets: platform.posix.u_int64_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.u_int64_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class tcphdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var th_dport: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var th_flags: kotlin.UByte
        get() = TODO()
        set(value: kotlin.UByte) = TODO()

    actual final var th_off: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    actual final var th_sport: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var th_sum: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var th_urp: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var th_win: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var th_x2: kotlin.UInt
        get() = TODO()
        set(value: kotlin.UInt) = TODO()

    final var th_ack: platform.posix.tcp_seq /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.tcp_seq /* = kotlin.UInt */) = TODO()

    final var th_seq: platform.posix.tcp_seq /* = kotlin.UInt */
        get() = TODO()
        set(value: platform.posix.tcp_seq /* = kotlin.UInt */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class termios public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val c_cc: kotlinx.cinterop.CArrayPointer<platform.posix.cc_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.cc_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.cc_t /* = kotlin.UByte */>> */
        get() = TODO()

    final var c_cflag: platform.posix.tcflag_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.tcflag_t /* = kotlin.ULong */) = TODO()

    final var c_iflag: platform.posix.tcflag_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.tcflag_t /* = kotlin.ULong */) = TODO()

    final var c_ispeed: platform.posix.speed_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.speed_t /* = kotlin.ULong */) = TODO()

    final var c_lflag: platform.posix.tcflag_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.tcflag_t /* = kotlin.ULong */) = TODO()

    final var c_oflag: platform.posix.tcflag_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.tcflag_t /* = kotlin.ULong */) = TODO()

    final var c_ospeed: platform.posix.speed_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.speed_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class timespec public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var tv_nsec: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    final var tv_sec: platform.posix.__darwin_time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__darwin_time_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class timeval public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tv_sec: platform.posix.__darwin_time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__darwin_time_t /* = kotlin.Long */) = TODO()

    final var tv_usec: platform.posix.__darwin_suseconds_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__darwin_suseconds_t /* = kotlin.Int */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class timeval32 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tv_sec: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    final var tv_usec: platform.posix.__int32_t /* = kotlin.Int */
        get() = TODO()
        set(value: platform.posix.__int32_t /* = kotlin.Int */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class timeval64 public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tv_sec: platform.posix.__int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__int64_t /* = kotlin.Long */) = TODO()

    final var tv_usec: platform.posix.__int64_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.__int64_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class timezone public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var tz_dsttime: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tz_minuteswest: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class tm public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var tm_gmtoff: kotlin.Long
        get() = TODO()
        set(value: kotlin.Long) = TODO()

    actual final var tm_hour: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_isdst: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_mday: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_min: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_mon: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_sec: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_wday: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_yday: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual final var tm_year: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    final var tm_zone: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
        get() = TODO()
        set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class tms public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var tms_cstime: platform.posix.clock_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.clock_t /* = kotlin.ULong */) = TODO()

    final var tms_cutime: platform.posix.clock_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.clock_t /* = kotlin.ULong */) = TODO()

    final var tms_stime: platform.posix.clock_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.clock_t /* = kotlin.ULong */) = TODO()

    final var tms_utime: platform.posix.clock_t /* = kotlin.ULong */
        get() = TODO()
        set(value: platform.posix.clock_t /* = kotlin.ULong */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class ttysize public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ts_cols: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ts_lines: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ts_xxx: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ts_yyy: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class udphdr public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var uh_dport: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var uh_sport: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var uh_sum: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    final var uh_ulen: platform.posix.u_short /* = kotlin.UShort */
        get() = TODO()
        set(value: platform.posix.u_short /* = kotlin.UShort */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class utimbuf public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final var actime: platform.posix.time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.time_t /* = kotlin.Long */) = TODO()

    final var modtime: platform.posix.time_t /* = kotlin.Long */
        get() = TODO()
        set(value: platform.posix.time_t /* = kotlin.Long */) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class utsname public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    final val machine: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val nodename: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val release: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val sysname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    final val version: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>> */
        get() = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class wait public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final val w_S: platform.posix.anonymousStruct6
        get() = TODO()

    actual final val w_T: platform.posix.anonymousStruct5
        get() = TODO()

    actual final var w_status: kotlin.Int
        get() = TODO()
        set(value: kotlin.Int) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

final actual class winsize public constructor(/*0*/ rawPtr: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.CStructVar(TODO() as kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */) {
    actual final var ws_col: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ws_row: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ws_xpixel: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual final var ws_ypixel: kotlin.UShort
        get() = TODO()
        set(value: kotlin.UShort) = TODO()

    actual companion object Companion: kotlinx.cinterop.CStructVar.Type(TODO() as kotlin.Long, TODO() as kotlin.Int) {
    }
}

actual typealias Dl_info = platform.posix.dl_info

actual typealias ENTRY = platform.posix.entry

actual typealias FILE = platform.posix.__sFILE

actual typealias FTSENT = platform.posix._ftsent

actual typealias __darwin_ct_rune_t = kotlin.Int

actual typealias __darwin_fp_control_t = platform.posix.__darwin_fp_control

actual typealias __darwin_fp_status_t = platform.posix.__darwin_fp_status

actual typealias __darwin_intptr_t = kotlin.Long

actual typealias __darwin_mbstate_t = platform.posix.__mbstate_t

actual typealias __darwin_nl_item = kotlin.Int

actual typealias __darwin_pthread_attr_t = platform.posix._opaque_pthread_attr_t

actual typealias __darwin_pthread_cond_t = platform.posix._opaque_pthread_cond_t

actual typealias __darwin_pthread_condattr_t = platform.posix._opaque_pthread_condattr_t

actual typealias __darwin_pthread_mutex_t = platform.posix._opaque_pthread_mutex_t

actual typealias __darwin_pthread_mutexattr_t = platform.posix._opaque_pthread_mutexattr_t

actual typealias __darwin_pthread_once_t = platform.posix._opaque_pthread_once_t

actual typealias __darwin_pthread_rwlock_t = platform.posix._opaque_pthread_rwlock_t

actual typealias __darwin_pthread_rwlockattr_t = platform.posix._opaque_pthread_rwlockattr_t

actual typealias __darwin_ptrdiff_t = kotlin.Long

actual typealias __darwin_ssize_t = kotlin.Long

actual typealias __darwin_time_t = kotlin.Long

actual typealias __darwin_wchar_t = kotlin.Int

actual typealias __darwin_wctrans_t = kotlin.Int

actual typealias __darwin_wint_t = kotlin.Int

actual typealias __int16_t = kotlin.Short

actual typealias __int32_t = kotlin.Int

actual typealias __int64_t = kotlin.Long

actual typealias __int8_t = kotlin.Byte

actual typealias acl_entry_id_t = kotlin.Int

actual typealias double_t = kotlin.Double

actual typealias errno_t = kotlin.Int

actual typealias ether_addr_t = platform.posix.ether_addr

actual typealias ether_header_t = platform.posix.ether_header

actual typealias fbootstraptransfer_t = platform.posix.fbootstraptransfer

actual typealias fchecklv_t = platform.posix.fchecklv

actual typealias fcodeblobs_t = platform.posix.fcodeblobs

actual typealias float_t = kotlin.Float

actual typealias fpunchhole_t = platform.posix.fpunchhole

actual typealias fsignatures_t = platform.posix.fsignatures

actual typealias fstore_t = platform.posix.fstore

actual typealias ftrimactivefile_t = platform.posix.ftrimactivefile

actual typealias in6_addr_t = platform.posix.in6_addr

actual typealias int16_t = kotlin.Short

actual typealias int32_t = kotlin.Int

actual typealias int64_t = kotlin.Long

actual typealias int8_t = kotlin.Byte

actual typealias intmax_t = kotlin.Long

actual typealias ptrdiff_t = kotlin.Long

actual typealias res_9_ns_flag = platform.posix.__ns_flag

actual typealias res_9_ns_flagVar = platform.posix.__ns_flag.Var

actual typealias res_9_ns_msg = platform.posix.__ns_msg

actual typealias res_9_ns_rr = platform.posix.__ns_rr

actual typealias rusage_info_current = platform.posix.rusage_info_v4

actual typealias sa_endpoints_t = platform.posix.sa_endpoints

actual typealias sem_t = kotlin.Int

actual typealias sig_atomic_t = kotlin.Int

actual typealias siginfo_t = platform.posix.__siginfo

actual typealias stack_t = platform.posix.__darwin_sigaltstack

actual typealias ucontext_t = platform.posix.__darwin_ucontext

actual val DBL_EPSILON: kotlin.Double
    get() = TODO()

actual val DBL_MAX: kotlin.Double
    get() = TODO()

actual val DBL_MIN: kotlin.Double
    get() = TODO()

actual val DBL_TRUE_MIN: kotlin.Double
    get() = TODO()

actual val FLT_EPSILON: kotlin.Float
    get() = TODO()

actual val FLT_MAX: kotlin.Float
    get() = TODO()

actual val FLT_MIN: kotlin.Float
    get() = TODO()

actual val FLT_TRUE_MIN: kotlin.Float
    get() = TODO()

actual val HUGE: kotlin.Float
    get() = TODO()

actual val HUGE_VAL: kotlin.Double
    get() = TODO()

actual val HUGE_VALF: kotlin.Float
    get() = TODO()

actual val IDENTITYSVC_ENTITLEMENT: kotlin.String
    get() = TODO()

actual val INFINITY: kotlin.Float
    get() = TODO()

actual val KAUTH_FILESEC_XATTR: kotlin.String
    get() = TODO()

actual val MAXFLOAT: kotlin.Float
    get() = TODO()

actual val M_1_PI: kotlin.Double
    get() = TODO()

actual val M_2_PI: kotlin.Double
    get() = TODO()

actual val M_2_SQRTPI: kotlin.Double
    get() = TODO()

actual val M_E: kotlin.Double
    get() = TODO()

actual val M_LN10: kotlin.Double
    get() = TODO()

actual val M_LN2: kotlin.Double
    get() = TODO()

actual val M_LOG10E: kotlin.Double
    get() = TODO()

actual val M_LOG2E: kotlin.Double
    get() = TODO()

actual val M_PI: kotlin.Double
    get() = TODO()

actual val M_PI_2: kotlin.Double
    get() = TODO()

actual val M_PI_4: kotlin.Double
    get() = TODO()

actual val M_SQRT1_2: kotlin.Double
    get() = TODO()

actual val M_SQRT2: kotlin.Double
    get() = TODO()

actual val NAN: kotlin.Float
    get() = TODO()

actual val NS_TSIG_ALG_HMAC_MD5: kotlin.String
    get() = TODO()

actual val PRIX16: kotlin.String
    get() = TODO()

actual val PRIX32: kotlin.String
    get() = TODO()

actual val PRIX64: kotlin.String
    get() = TODO()

actual val PRIX8: kotlin.String
    get() = TODO()

actual val PRIXFAST16: kotlin.String
    get() = TODO()

actual val PRIXFAST32: kotlin.String
    get() = TODO()

actual val PRIXFAST64: kotlin.String
    get() = TODO()

actual val PRIXFAST8: kotlin.String
    get() = TODO()

actual val PRIXLEAST16: kotlin.String
    get() = TODO()

actual val PRIXLEAST32: kotlin.String
    get() = TODO()

actual val PRIXLEAST64: kotlin.String
    get() = TODO()

actual val PRIXLEAST8: kotlin.String
    get() = TODO()

actual val PRIXMAX: kotlin.String
    get() = TODO()

actual val PRIXPTR: kotlin.String
    get() = TODO()

actual val PRId16: kotlin.String
    get() = TODO()

actual val PRId32: kotlin.String
    get() = TODO()

actual val PRId64: kotlin.String
    get() = TODO()

actual val PRId8: kotlin.String
    get() = TODO()

actual val PRIdFAST16: kotlin.String
    get() = TODO()

actual val PRIdFAST32: kotlin.String
    get() = TODO()

actual val PRIdFAST64: kotlin.String
    get() = TODO()

actual val PRIdFAST8: kotlin.String
    get() = TODO()

actual val PRIdLEAST16: kotlin.String
    get() = TODO()

actual val PRIdLEAST32: kotlin.String
    get() = TODO()

actual val PRIdLEAST64: kotlin.String
    get() = TODO()

actual val PRIdLEAST8: kotlin.String
    get() = TODO()

actual val PRIdMAX: kotlin.String
    get() = TODO()

actual val PRIdPTR: kotlin.String
    get() = TODO()

actual val PRIi16: kotlin.String
    get() = TODO()

actual val PRIi32: kotlin.String
    get() = TODO()

actual val PRIi64: kotlin.String
    get() = TODO()

actual val PRIi8: kotlin.String
    get() = TODO()

actual val PRIiFAST16: kotlin.String
    get() = TODO()

actual val PRIiFAST32: kotlin.String
    get() = TODO()

actual val PRIiFAST64: kotlin.String
    get() = TODO()

actual val PRIiFAST8: kotlin.String
    get() = TODO()

actual val PRIiLEAST16: kotlin.String
    get() = TODO()

actual val PRIiLEAST32: kotlin.String
    get() = TODO()

actual val PRIiLEAST64: kotlin.String
    get() = TODO()

actual val PRIiLEAST8: kotlin.String
    get() = TODO()

actual val PRIiMAX: kotlin.String
    get() = TODO()

actual val PRIiPTR: kotlin.String
    get() = TODO()

actual val PRIo16: kotlin.String
    get() = TODO()

actual val PRIo32: kotlin.String
    get() = TODO()

actual val PRIo64: kotlin.String
    get() = TODO()

actual val PRIo8: kotlin.String
    get() = TODO()

actual val PRIoFAST16: kotlin.String
    get() = TODO()

actual val PRIoFAST32: kotlin.String
    get() = TODO()

actual val PRIoFAST64: kotlin.String
    get() = TODO()

actual val PRIoFAST8: kotlin.String
    get() = TODO()

actual val PRIoLEAST16: kotlin.String
    get() = TODO()

actual val PRIoLEAST32: kotlin.String
    get() = TODO()

actual val PRIoLEAST64: kotlin.String
    get() = TODO()

actual val PRIoLEAST8: kotlin.String
    get() = TODO()

actual val PRIoMAX: kotlin.String
    get() = TODO()

actual val PRIoPTR: kotlin.String
    get() = TODO()

actual val PRIu16: kotlin.String
    get() = TODO()

actual val PRIu32: kotlin.String
    get() = TODO()

actual val PRIu64: kotlin.String
    get() = TODO()

actual val PRIu8: kotlin.String
    get() = TODO()

actual val PRIuFAST16: kotlin.String
    get() = TODO()

actual val PRIuFAST32: kotlin.String
    get() = TODO()

actual val PRIuFAST64: kotlin.String
    get() = TODO()

actual val PRIuFAST8: kotlin.String
    get() = TODO()

actual val PRIuLEAST16: kotlin.String
    get() = TODO()

actual val PRIuLEAST32: kotlin.String
    get() = TODO()

actual val PRIuLEAST64: kotlin.String
    get() = TODO()

actual val PRIuLEAST8: kotlin.String
    get() = TODO()

actual val PRIuMAX: kotlin.String
    get() = TODO()

actual val PRIuPTR: kotlin.String
    get() = TODO()

actual val PRIx16: kotlin.String
    get() = TODO()

actual val PRIx32: kotlin.String
    get() = TODO()

actual val PRIx64: kotlin.String
    get() = TODO()

actual val PRIx8: kotlin.String
    get() = TODO()

actual val PRIxFAST16: kotlin.String
    get() = TODO()

actual val PRIxFAST32: kotlin.String
    get() = TODO()

actual val PRIxFAST64: kotlin.String
    get() = TODO()

actual val PRIxFAST8: kotlin.String
    get() = TODO()

actual val PRIxLEAST16: kotlin.String
    get() = TODO()

actual val PRIxLEAST32: kotlin.String
    get() = TODO()

actual val PRIxLEAST64: kotlin.String
    get() = TODO()

actual val PRIxLEAST8: kotlin.String
    get() = TODO()

actual val PRIxMAX: kotlin.String
    get() = TODO()

actual val PRIxPTR: kotlin.String
    get() = TODO()

actual val P_tmpdir: kotlin.String
    get() = TODO()

actual val QOS_CLASS_BACKGROUND: kotlin.UInt
    get() = TODO()

actual val QOS_CLASS_DEFAULT: kotlin.UInt
    get() = TODO()

actual val QOS_CLASS_UNSPECIFIED: kotlin.UInt
    get() = TODO()

actual val QOS_CLASS_USER_INITIATED: kotlin.UInt
    get() = TODO()

actual val QOS_CLASS_USER_INTERACTIVE: kotlin.UInt
    get() = TODO()

actual val QOS_CLASS_UTILITY: kotlin.UInt
    get() = TODO()

actual val SCNd16: kotlin.String
    get() = TODO()

actual val SCNd32: kotlin.String
    get() = TODO()

actual val SCNd64: kotlin.String
    get() = TODO()

actual val SCNd8: kotlin.String
    get() = TODO()

actual val SCNdFAST16: kotlin.String
    get() = TODO()

actual val SCNdFAST32: kotlin.String
    get() = TODO()

actual val SCNdFAST64: kotlin.String
    get() = TODO()

actual val SCNdFAST8: kotlin.String
    get() = TODO()

actual val SCNdLEAST16: kotlin.String
    get() = TODO()

actual val SCNdLEAST32: kotlin.String
    get() = TODO()

actual val SCNdLEAST64: kotlin.String
    get() = TODO()

actual val SCNdLEAST8: kotlin.String
    get() = TODO()

actual val SCNdMAX: kotlin.String
    get() = TODO()

actual val SCNdPTR: kotlin.String
    get() = TODO()

actual val SCNi16: kotlin.String
    get() = TODO()

actual val SCNi32: kotlin.String
    get() = TODO()

actual val SCNi64: kotlin.String
    get() = TODO()

actual val SCNi8: kotlin.String
    get() = TODO()

actual val SCNiFAST16: kotlin.String
    get() = TODO()

actual val SCNiFAST32: kotlin.String
    get() = TODO()

actual val SCNiFAST64: kotlin.String
    get() = TODO()

actual val SCNiFAST8: kotlin.String
    get() = TODO()

actual val SCNiLEAST16: kotlin.String
    get() = TODO()

actual val SCNiLEAST32: kotlin.String
    get() = TODO()

actual val SCNiLEAST64: kotlin.String
    get() = TODO()

actual val SCNiLEAST8: kotlin.String
    get() = TODO()

actual val SCNiMAX: kotlin.String
    get() = TODO()

actual val SCNiPTR: kotlin.String
    get() = TODO()

actual val SCNo16: kotlin.String
    get() = TODO()

actual val SCNo32: kotlin.String
    get() = TODO()

actual val SCNo64: kotlin.String
    get() = TODO()

actual val SCNo8: kotlin.String
    get() = TODO()

actual val SCNoFAST16: kotlin.String
    get() = TODO()

actual val SCNoFAST32: kotlin.String
    get() = TODO()

actual val SCNoFAST64: kotlin.String
    get() = TODO()

actual val SCNoFAST8: kotlin.String
    get() = TODO()

actual val SCNoLEAST16: kotlin.String
    get() = TODO()

actual val SCNoLEAST32: kotlin.String
    get() = TODO()

actual val SCNoLEAST64: kotlin.String
    get() = TODO()

actual val SCNoLEAST8: kotlin.String
    get() = TODO()

actual val SCNoMAX: kotlin.String
    get() = TODO()

actual val SCNoPTR: kotlin.String
    get() = TODO()

actual val SCNu16: kotlin.String
    get() = TODO()

actual val SCNu32: kotlin.String
    get() = TODO()

actual val SCNu64: kotlin.String
    get() = TODO()

actual val SCNu8: kotlin.String
    get() = TODO()

actual val SCNuFAST16: kotlin.String
    get() = TODO()

actual val SCNuFAST32: kotlin.String
    get() = TODO()

actual val SCNuFAST64: kotlin.String
    get() = TODO()

actual val SCNuFAST8: kotlin.String
    get() = TODO()

actual val SCNuLEAST16: kotlin.String
    get() = TODO()

actual val SCNuLEAST32: kotlin.String
    get() = TODO()

actual val SCNuLEAST64: kotlin.String
    get() = TODO()

actual val SCNuLEAST8: kotlin.String
    get() = TODO()

actual val SCNuMAX: kotlin.String
    get() = TODO()

actual val SCNuPTR: kotlin.String
    get() = TODO()

actual val SCNx16: kotlin.String
    get() = TODO()

actual val SCNx32: kotlin.String
    get() = TODO()

actual val SCNx64: kotlin.String
    get() = TODO()

actual val SCNx8: kotlin.String
    get() = TODO()

actual val SCNxFAST16: kotlin.String
    get() = TODO()

actual val SCNxFAST32: kotlin.String
    get() = TODO()

actual val SCNxFAST64: kotlin.String
    get() = TODO()

actual val SCNxFAST8: kotlin.String
    get() = TODO()

actual val SCNxLEAST16: kotlin.String
    get() = TODO()

actual val SCNxLEAST32: kotlin.String
    get() = TODO()

actual val SCNxLEAST64: kotlin.String
    get() = TODO()

actual val SCNxLEAST8: kotlin.String
    get() = TODO()

actual val SCNxMAX: kotlin.String
    get() = TODO()

actual val SCNxPTR: kotlin.String
    get() = TODO()

actual val X_TLOSS: kotlin.Double
    get() = TODO()

actual var _CurrentRuneLocale: kotlinx.cinterop.CPointer<platform.posix._RuneLocale>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.posix._RuneLocale>?) = TODO()

actual val _DefaultRuneLocale: platform.posix._RuneLocale
    get() = TODO()

actual val _FE_DFL_DISABLE_SSE_DENORMS_ENV: platform.posix.fenv_t
    get() = TODO()

actual val _FE_DFL_ENV: platform.posix.fenv_t
    get() = TODO()

actual val _MASTERPASSWD: kotlin.String
    get() = TODO()

actual val _MP_DB: kotlin.String
    get() = TODO()

actual val _PASSWD: kotlin.String
    get() = TODO()

actual val _PATH_BSHELL: kotlin.String
    get() = TODO()

actual val _PATH_CONSOLE: kotlin.String
    get() = TODO()

actual val _PATH_CSHELL: kotlin.String
    get() = TODO()

actual val _PATH_DATANAME: kotlin.String
    get() = TODO()

actual val _PATH_DEFPATH: kotlin.String
    get() = TODO()

actual val _PATH_DEFTAPE: kotlin.String
    get() = TODO()

actual val _PATH_DEV: kotlin.String
    get() = TODO()

actual val _PATH_DEVDB: kotlin.String
    get() = TODO()

actual val _PATH_DEVNULL: kotlin.String
    get() = TODO()

actual val _PATH_DRUM: kotlin.String
    get() = TODO()

actual val _PATH_FORKSPECIFIER: kotlin.String
    get() = TODO()

actual val _PATH_FSIRAND: kotlin.String
    get() = TODO()

actual val _PATH_GROUP: kotlin.String
    get() = TODO()

actual val _PATH_HEQUIV: kotlin.String
    get() = TODO()

actual val _PATH_HOSTS: kotlin.String
    get() = TODO()

actual val _PATH_KMEM: kotlin.String
    get() = TODO()

actual val _PATH_KVMDB: kotlin.String
    get() = TODO()

actual val _PATH_LOCALE: kotlin.String
    get() = TODO()

actual val _PATH_LOG: kotlin.String
    get() = TODO()

actual val _PATH_MAILDIR: kotlin.String
    get() = TODO()

actual val _PATH_MAN: kotlin.String
    get() = TODO()

actual val _PATH_MASTERPASSWD: kotlin.String
    get() = TODO()

actual val _PATH_MASTERPASSWD_LOCK: kotlin.String
    get() = TODO()

actual val _PATH_MEM: kotlin.String
    get() = TODO()

actual val _PATH_MP_DB: kotlin.String
    get() = TODO()

actual val _PATH_NETWORKS: kotlin.String
    get() = TODO()

actual val _PATH_NOLOGIN: kotlin.String
    get() = TODO()

actual val _PATH_PASSWD: kotlin.String
    get() = TODO()

actual val _PATH_PROTOCOLS: kotlin.String
    get() = TODO()

actual val _PATH_PWD: kotlin.String
    get() = TODO()

actual val _PATH_PWD_MKDB: kotlin.String
    get() = TODO()

actual val _PATH_RESCONF: kotlin.String
    get() = TODO()

actual val _PATH_RSH: kotlin.String
    get() = TODO()

actual val _PATH_RSRCFORKSPEC: kotlin.String
    get() = TODO()

actual val _PATH_RSRCNAME: kotlin.String
    get() = TODO()

actual val _PATH_SENDMAIL: kotlin.String
    get() = TODO()

actual val _PATH_SERVICES: kotlin.String
    get() = TODO()

actual val _PATH_SHELLS: kotlin.String
    get() = TODO()

actual val _PATH_SMP_DB: kotlin.String
    get() = TODO()

actual val _PATH_STDPATH: kotlin.String
    get() = TODO()

actual val _PATH_TMP: kotlin.String
    get() = TODO()

actual val _PATH_TTY: kotlin.String
    get() = TODO()

actual val _PATH_UNIX: kotlin.String
    get() = TODO()

actual val _PATH_UUCPLOCK: kotlin.String
    get() = TODO()

actual val _PATH_VARDB: kotlin.String
    get() = TODO()

actual val _PATH_VARRUN: kotlin.String
    get() = TODO()

actual val _PATH_VARTMP: kotlin.String
    get() = TODO()

actual val _PATH_VI: kotlin.String
    get() = TODO()

actual val _RUNE_MAGIC_A: kotlin.String
    get() = TODO()

actual val _SMP_DB: kotlin.String
    get() = TODO()

actual val __DARWIN_SUF_EXTSN: kotlin.String
    get() = TODO()

actual val __KAME_VERSION: kotlin.String
    get() = TODO()

actual val __PRI_64_LENGTH_MODIFIER__: kotlin.String
    get() = TODO()

actual val __PRI_8_LENGTH_MODIFIER__: kotlin.String
    get() = TODO()

actual val __PRI_MAX_LENGTH_MODIFIER__: kotlin.String
    get() = TODO()

actual val __SCN_64_LENGTH_MODIFIER__: kotlin.String
    get() = TODO()

actual val __SCN_MAX_LENGTH_MODIFIER__: kotlin.String
    get() = TODO()

actual var __mb_cur_max: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var __stderrp: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?) = TODO()

actual var __stdinp: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?) = TODO()

actual var __stdoutp: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>?) = TODO()

actual val _res: platform.posix.__res_9_state
    get() = TODO()

actual var daylight: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var getdate_err: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var h_errno: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual val in6addr_any: platform.posix.in6_addr
    get() = TODO()

actual val in6addr_linklocal_allnodes: platform.posix.in6_addr
    get() = TODO()

actual val in6addr_linklocal_allrouters: platform.posix.in6_addr
    get() = TODO()

actual val in6addr_loopback: platform.posix.in6_addr
    get() = TODO()

actual val in6addr_nodelocal_allnodes: platform.posix.in6_addr
    get() = TODO()

actual var opterr: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var optind: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var optopt: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var optreset: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual var signgam: kotlin.Int
    get() = TODO()
    set(value: kotlin.Int) = TODO()

actual val sys_nerr: kotlin.Int
    get() = TODO()

actual var timezone_: kotlin.Long
    get() = TODO()
    set(value: kotlin.Long) = TODO()

actual fun _Exit(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun ___mb_cur_max(): kotlin.Int { TODO() }

actual fun __assert_rtn(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?) { TODO() }

actual fun __cospi(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun __cospif(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun __darwin_fd_isset(/*0*/ _n: kotlin.Int, /*1*/ _p: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?): kotlin.Int { TODO() }

actual fun __exp10(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun __exp10f(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun __fpclassifyd(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __fpclassifyf(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __inline_isfinited(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __inline_isfinitef(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __inline_isinfd(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __inline_isinff(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __inline_isnand(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __inline_isnanf(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __inline_isnormald(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __inline_isnormalf(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __inline_signbitd(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun __inline_signbitf(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun __math_errhandling(): kotlin.Int { TODO() }

actual fun __opendir2(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.DIR>? { TODO() }

actual fun __sigbits(/*0*/ __signo: kotlin.Int): kotlin.Int { TODO() }

actual fun __sincos_stret(/*0*/ arg0: kotlin.Double): kotlinx.cinterop.CValue<platform.posix.__double2> { TODO() }

actual fun __sincosf_stret(/*0*/ arg0: kotlin.Float): kotlinx.cinterop.CValue<platform.posix.__float2> { TODO() }

actual fun __sincospi_stret(/*0*/ arg0: kotlin.Double): kotlinx.cinterop.CValue<platform.posix.__double2> { TODO() }

actual fun __sincospif_stret(/*0*/ arg0: kotlin.Float): kotlinx.cinterop.CValue<platform.posix.__float2> { TODO() }

actual fun __sinpi(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun __sinpif(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun __sputc(/*0*/ _c: kotlin.Int, /*1*/ _p: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun __srget(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun __swbuf(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun __tanpi(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun __tanpif(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun _exit(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun _res_9_h_errno_set(/*0*/ res: kotlinx.cinterop.CValuesRef<platform.posix.__res_9_state>?, /*1*/ err: kotlin.Int) { TODO() }

actual fun a64l(/*0*/ arg0: kotlin.String?): kotlin.Long { TODO() }

actual fun abort() { TODO() }

actual fun abs(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun access(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun acct(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun acl_delete_def_file(/*0*/ path_p: kotlin.String?): kotlin.Int { TODO() }

actual fun acl_free(/*0*/ obj_p: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun acos(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun acosf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun acosh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun acoshf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun adjtime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?): kotlin.Int { TODO() }

actual fun alarm(/*0*/ arg0: kotlin.UInt): kotlin.UInt { TODO() }

actual fun arc4random_stir() { TODO() }

actual fun asin(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun asinf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun asinh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun asinhf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun atan(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun atan2(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun atan2f(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun atanf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun atanh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun atanhf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun atexit(/*0*/ arg0: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>?): kotlin.Int { TODO() }

actual fun atof(/*0*/ arg0: kotlin.String?): kotlin.Double { TODO() }

actual fun atoi(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun atol(/*0*/ arg0: kotlin.String?): kotlin.Long { TODO() }

actual fun atoll(/*0*/ arg0: kotlin.String?): kotlin.Long { TODO() }

external actual fun atomic_flag_clear(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.atomic_flag>?)

external actual fun atomic_flag_test_and_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.atomic_flag>?): kotlin.Boolean

actual fun bindresvport(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr_in>?): kotlin.Int { TODO() }

actual fun bindresvport_sa(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?): kotlin.Int { TODO() }

actual fun bsd_signal(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>? { TODO() }

actual fun cbrt(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun cbrtf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun ceil(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun ceilf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun cfmakeraw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?) { TODO() }

actual fun cgetclose(): kotlin.Int { TODO() }

actual fun cgetmatch(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun cgetset(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun chdir(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun chroot(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun clearerr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

actual fun close(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun closedir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?): kotlin.Int { TODO() }

actual fun closelog() { TODO() }

actual fun copysign(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun copysignf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun cos(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun cosf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun cosh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun coshf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun daemon(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun deinit_sockets() { TODO() }

actual fun digittoint(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun dirfd(/*0*/ dirp: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?): kotlin.Int { TODO() }

actual fun div(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CValue<platform.posix.div_t> { TODO() }

actual fun dladdr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.Dl_info /* = platform.posix.dl_info */>?): kotlin.Int { TODO() }

actual fun dlclose(/*0*/ __handle: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun dlopen_preflight(/*0*/ __path: kotlin.String?): kotlin.Boolean { TODO() }

actual fun dprintf(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun drand48(): kotlin.Double { TODO() }

actual fun dup(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun dup2(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun endgrent() { TODO() }

actual fun endhostent() { TODO() }

actual fun endnetent() { TODO() }

actual fun endnetgrent() { TODO() }

actual fun endprotoent() { TODO() }

actual fun endpwent() { TODO() }

actual fun endrpcent() { TODO() }

actual fun endservent() { TODO() }

actual fun endusershell() { TODO() }

actual fun erf(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun erfc(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun erfcf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun erff(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun err(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun err_set_exit(/*0*/ arg0: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?) { TODO() }

actual fun err_set_file(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

actual fun errc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun errx(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun ether_aton(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.ether_addr>? { TODO() }

actual fun ether_hostton(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.ether_addr>?): kotlin.Int { TODO() }

actual fun exchangedata(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.UInt): kotlin.Int { TODO() }

actual fun execl(/*0*/ __path: kotlin.String?, /*1*/ __arg0: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun execle(/*0*/ __path: kotlin.String?, /*1*/ __arg0: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun execlp(/*0*/ __file: kotlin.String?, /*1*/ __arg0: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun exit(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun exp(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun exp2(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun exp2f(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun expf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun expm1(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun expm1f(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun fabs(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun fabsf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun faccessat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

actual fun fchdir(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun fclose(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fcntl(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun fdim(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun fdimf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun fdopen(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

actual fun fdopendir(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.DIR>? { TODO() }

actual fun feclearexcept(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun fegetenv(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fenv_t>?): kotlin.Int { TODO() }

actual fun fegetround(): kotlin.Int { TODO() }

actual fun feholdexcept(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fenv_t>?): kotlin.Int { TODO() }

actual fun feof(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun feraiseexcept(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun ferror(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fesetenv(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fenv_t>?): kotlin.Int { TODO() }

actual fun fesetround(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun fetestexcept(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun feupdateenv(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fenv_t>?): kotlin.Int { TODO() }

actual fun fflush(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun ffs(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun ffsctl(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.ULong, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlin.UInt): kotlin.Int { TODO() }

actual fun ffsl(/*0*/ arg0: kotlin.Long): kotlin.Int { TODO() }

actual fun ffsll(/*0*/ arg0: kotlin.Long): kotlin.Int { TODO() }

actual fun fgetc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fileno(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun flock(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun flockfile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

actual fun floor(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun floorf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun fls(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun flsl(/*0*/ arg0: kotlin.Long): kotlin.Int { TODO() }

actual fun flsll(/*0*/ arg0: kotlin.Long): kotlin.Int { TODO() }

actual fun fma(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double, /*2*/ arg2: kotlin.Double): kotlin.Double { TODO() }

actual fun fmaf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float, /*2*/ arg2: kotlin.Float): kotlin.Float { TODO() }

actual fun fmax(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun fmaxf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun fmin(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun fminf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun fmod(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun fmodf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun fnmatch(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun fopen(/*0*/ __filename: kotlin.String?, /*1*/ __mode: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

actual fun fpathconf(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Long { TODO() }

actual fun fprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun fpurge(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fputc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fputs(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun free(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

actual fun freeaddrinfo(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.addrinfo>?) { TODO() }

actual fun freehostent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.hostent>?) { TODO() }

actual fun freopen(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

actual fun fscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun fsctl(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.ULong, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlin.UInt): kotlin.Int { TODO() }

actual fun fseek(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.Long, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun fstat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?): kotlin.Int { TODO() }

actual fun fstatat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.stat>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

actual fun fsync(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun fsync_volume_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun ftell(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Long { TODO() }

actual fun ftrylockfile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun fts_children(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FTS>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.FTSENT /* = platform.posix._ftsent */>? { TODO() }

actual fun fts_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FTS>?): kotlin.Int { TODO() }

actual fun fts_read(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FTS>?): kotlinx.cinterop.CPointer<platform.posix.FTSENT /* = platform.posix._ftsent */>? { TODO() }

actual fun fts_set(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FTS>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FTSENT /* = platform.posix._ftsent */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun funlockfile(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

actual fun futimens(/*0*/ __fd: kotlin.Int, /*1*/ __times: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?): kotlin.Int { TODO() }

actual fun futimes(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?): kotlin.Int { TODO() }

actual fun fwide(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun getc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

external actual fun getc_unlocked(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int

actual fun getchar(): kotlin.Int { TODO() }

actual fun getchar_unlocked(): kotlin.Int { TODO() }

actual fun getcontext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.ucontext_t /* = platform.posix.__darwin_ucontext */>?): kotlin.Int { TODO() }

actual fun getdate(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.tm>? { TODO() }

actual fun getdtablesize(): kotlin.Int { TODO() }

actual fun getgrent(): kotlinx.cinterop.CPointer<platform.posix.group>? { TODO() }

actual fun getgrnam(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.group>? { TODO() }

actual fun gethostbyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

actual fun gethostbyname2(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

actual fun gethostent(): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

actual fun gethostid(): kotlin.Long { TODO() }

actual fun getiopolicy_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun getitimer(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.itimerval>?): kotlin.Int { TODO() }

actual fun getnetbyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.netent>? { TODO() }

actual fun getnetent(): kotlinx.cinterop.CPointer<platform.posix.netent>? { TODO() }

actual fun getpagesize(): kotlin.Int { TODO() }

actual fun getprotobyname(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.protoent>? { TODO() }

actual fun getprotobynumber(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.protoent>? { TODO() }

actual fun getprotoent(): kotlinx.cinterop.CPointer<platform.posix.protoent>? { TODO() }

actual fun getpwent(): kotlinx.cinterop.CPointer<platform.posix.passwd>? { TODO() }

actual fun getpwnam(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.passwd>? { TODO() }

actual fun getrlimit(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.rlimit>?): kotlin.Int { TODO() }

actual fun getrpcbyname(/*0*/ name: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.rpcent>? { TODO() }

actual fun getrpcbynumber(/*0*/ number: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.rpcent>? { TODO() }

actual fun getrpcent(): kotlinx.cinterop.CPointer<platform.posix.rpcent>? { TODO() }

actual fun getrusage(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.rusage>?): kotlin.Int { TODO() }

actual fun getservbyname(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.servent>? { TODO() }

actual fun getservbyport(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.servent>? { TODO() }

actual fun getservent(): kotlinx.cinterop.CPointer<platform.posix.servent>? { TODO() }

actual fun gettimeofday(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun getw(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun grantpt(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun hdestroy() { TODO() }

actual fun herror(/*0*/ arg0: kotlin.String?) { TODO() }

actual fun hsearch(/*0*/ arg0: kotlinx.cinterop.CValue<platform.posix.ENTRY /* = platform.posix.entry */>, /*1*/ arg1: platform.posix.ACTION): kotlinx.cinterop.CPointer<platform.posix.ENTRY /* = platform.posix.entry */>? { TODO() }

actual fun hypot(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun hypotf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun if_freenameindex(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.if_nameindex>?) { TODO() }

actual fun if_nameindex(): kotlinx.cinterop.CPointer<platform.posix.if_nameindex>? { TODO() }

actual fun if_nametoindex(/*0*/ arg0: kotlin.String?): kotlin.UInt { TODO() }

actual fun ilogb(/*0*/ arg0: kotlin.Double): kotlin.Int { TODO() }

actual fun ilogbf(/*0*/ arg0: kotlin.Float): kotlin.Int { TODO() }

actual fun inet6_option_space(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun inet6_rth_add(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.in6_addr>?): kotlin.Int { TODO() }

actual fun inet6_rth_getaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.in6_addr>? { TODO() }

actual fun inet6_rth_reverse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun inet6_rth_segments(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun inet6_rthdr_add(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.in6_addr>?, /*2*/ arg2: kotlin.UInt): kotlin.Int { TODO() }

actual fun inet6_rthdr_getaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.in6_addr>? { TODO() }

actual fun inet6_rthdr_getflags(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun inet6_rthdr_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.cmsghdr>? { TODO() }

actual fun inet6_rthdr_lasthop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlin.UInt): kotlin.Int { TODO() }

actual fun inet6_rthdr_segments(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?): kotlin.Int { TODO() }

actual fun init_sockets(): kotlin.Int { TODO() }

actual fun initgroups(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun innetgr(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

actual fun insque(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

actual fun ioctl(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.ULong, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun iruserok(/*0*/ arg0: kotlin.ULong, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

actual fun iruserok_sa(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.String?): kotlin.Int { TODO() }

actual fun isalnum(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isalpha(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isascii(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isatty(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun isblank(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun iscntrl(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isdigit(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isgraph(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun ishexnumber(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isideogram(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun islower(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isnumber(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isphonogram(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isprint(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun ispunct(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isrune(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun issetugid(): kotlin.Int { TODO() }

actual fun isspace(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isspecial(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isupper(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun isxdigit(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun j0(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun j1(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun jn(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun labs(/*0*/ arg0: kotlin.Long): kotlin.Long { TODO() }

actual fun ldexp(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Int): kotlin.Double { TODO() }

actual fun ldexpf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Int): kotlin.Float { TODO() }

actual fun ldiv(/*0*/ arg0: kotlin.Long, /*1*/ arg1: kotlin.Long): kotlinx.cinterop.CValue<platform.posix.ldiv_t> { TODO() }

actual fun lgamma(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun lgammaf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun link(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun linkat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

actual fun listen(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun llabs(/*0*/ arg0: kotlin.Long): kotlin.Long { TODO() }

actual fun lldiv(/*0*/ arg0: kotlin.Long, /*1*/ arg1: kotlin.Long): kotlinx.cinterop.CValue<platform.posix.lldiv_t> { TODO() }

actual fun llrint(/*0*/ arg0: kotlin.Double): kotlin.Long { TODO() }

actual fun llrintf(/*0*/ arg0: kotlin.Float): kotlin.Long { TODO() }

actual fun llround(/*0*/ arg0: kotlin.Double): kotlin.Long { TODO() }

actual fun llroundf(/*0*/ arg0: kotlin.Float): kotlin.Long { TODO() }

actual fun localeconv(): kotlinx.cinterop.CPointer<platform.posix.lconv>? { TODO() }

actual fun log(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun log10(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun log10f(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun log1p(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun log1pf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun log2(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun log2f(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun logb(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun logbf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun logf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun longjmperror() { TODO() }

actual fun lrand48(): kotlin.Long { TODO() }

actual fun lrint(/*0*/ arg0: kotlin.Double): kotlin.Long { TODO() }

actual fun lrintf(/*0*/ arg0: kotlin.Float): kotlin.Long { TODO() }

actual fun lround(/*0*/ arg0: kotlin.Double): kotlin.Long { TODO() }

actual fun lroundf(/*0*/ arg0: kotlin.Float): kotlin.Long { TODO() }

actual fun lstat(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?): kotlin.Int { TODO() }

actual fun lutimes(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?): kotlin.Int { TODO() }

actual fun makecontext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.ucontext_t /* = platform.posix.__darwin_ucontext */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlin.Int, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun mlockall(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun mrand48(): kotlin.Long { TODO() }

actual fun munlockall(): kotlin.Int { TODO() }

actual fun nan(/*0*/ arg0: kotlin.String?): kotlin.Double { TODO() }

actual fun nanf(/*0*/ arg0: kotlin.String?): kotlin.Float { TODO() }

actual fun nanosleep(/*0*/ __rqtp: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?, /*1*/ __rmtp: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?): kotlin.Int { TODO() }

actual fun nearbyint(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun nearbyintf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun nextafter(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun nextafterf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun nfssvc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun nice(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun open(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun open_dprotected_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun opendir(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.DIR>? { TODO() }

actual fun openlog(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int) { TODO() }

actual fun pathconf(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Long { TODO() }

actual fun pause(): kotlin.Int { TODO() }

actual fun pclose(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun perror(/*0*/ arg0: kotlin.String?) { TODO() }

actual fun popen(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

actual fun posix_errno(): kotlin.Int { TODO() }

actual fun posix_h_errno(): kotlin.Int { TODO() }

actual fun posix_openpt(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun pow(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun powf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun printf(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun psignal(/*0*/ arg0: kotlin.UInt, /*1*/ arg1: kotlin.String?) { TODO() }

actual fun pthread_atfork(/*0*/ arg0: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>?): kotlin.Int { TODO() }

actual fun pthread_exit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

actual fun pthread_getconcurrency(): kotlin.Int { TODO() }

actual fun pthread_setconcurrency(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun pthread_testcancel() { TODO() }

actual fun putc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun putc_unlocked(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun putchar(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun putchar_unlocked(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun puts(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun putw(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun raise(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun rand(): kotlin.Int { TODO() }

actual fun random(): kotlin.Long { TODO() }

actual fun readdir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?): kotlinx.cinterop.CPointer<platform.posix.dirent>? { TODO() }

actual fun reboot(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun regcomp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun regfree(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?) { TODO() }

actual fun remainder(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun remainderf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float): kotlin.Float { TODO() }

actual fun remove(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun remque(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?) { TODO() }

actual fun rename(/*0*/ __old: kotlin.String?, /*1*/ __new: kotlin.String?): kotlin.Int { TODO() }

actual fun renameat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

actual fun renameatx_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.UInt): kotlin.Int { TODO() }

actual fun renamex_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.UInt): kotlin.Int { TODO() }

actual fun res_9_close() { TODO() }

actual fun res_9_dn_count_labels(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_dnok(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_hnok(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_init(): kotlin.Int { TODO() }

actual fun res_9_isourserver(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr_in>?): kotlin.Int { TODO() }

actual fun res_9_mailok(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_ns_msg_getflag(/*0*/ arg0: kotlinx.cinterop.CValue<platform.posix.res_9_ns_msg /* = platform.posix.__ns_msg */>, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun res_9_ns_samedomain(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_ns_samename(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_ns_subdomain(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun res_9_ownok(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun res_buildprotolist() { TODO() }

actual fun res_destroyprotolist() { TODO() }

actual fun res_destroyservicelist() { TODO() }

actual fun revoke(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun rewind(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

actual fun rewinddir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?) { TODO() }

actual fun rint(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun rintf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun rmdir(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun round(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun roundf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun ruserok(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?): kotlin.Int { TODO() }

actual fun scalb(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

actual fun scalbln(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Long): kotlin.Double { TODO() }

actual fun scalblnf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Long): kotlin.Float { TODO() }

actual fun scalbn(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Int): kotlin.Double { TODO() }

actual fun scalbnf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Int): kotlin.Float { TODO() }

actual fun scanf(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun sched_get_priority_max(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sched_get_priority_min(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sched_yield(): kotlin.Int { TODO() }

actual fun seekdir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?, /*1*/ arg1: kotlin.Long) { TODO() }

actual fun select(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?): kotlin.Int { TODO() }

actual fun sem_unlink(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun set_posix_errno(/*0*/ value: kotlin.Int) { TODO() }

actual fun set_posix_h_errno(/*0*/ value: kotlin.Int) { TODO() }

actual fun setcontext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.ucontext_t /* = platform.posix.__darwin_ucontext */>?): kotlin.Int { TODO() }

actual fun setdomainname(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun setenv(/*0*/ __name: kotlin.String?, /*1*/ __value: kotlin.String?, /*2*/ __overwrite: kotlin.Int): kotlin.Int { TODO() }

actual fun setgrent() { TODO() }

actual fun sethostent(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun sethostid(/*0*/ arg0: kotlin.Long) { TODO() }

actual fun sethostname(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun setiopolicy_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun setitimer(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.itimerval>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.itimerval>?): kotlin.Int { TODO() }

actual fun setkey(/*0*/ arg0: kotlin.String?) { TODO() }

actual fun setlinebuf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun setlogin(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun setlogmask(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun setnetent(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun setnetgrent(/*0*/ arg0: kotlin.String?) { TODO() }

actual fun setprogname(/*0*/ arg0: kotlin.String?) { TODO() }

actual fun setprotoent(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun setpwent() { TODO() }

actual fun setrlimit(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.rlimit>?): kotlin.Int { TODO() }

actual fun setrpcent(/*0*/ stayopen: kotlin.Int) { TODO() }

actual fun setservent(/*0*/ arg0: kotlin.Int) { TODO() }

actual fun settimeofday(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.timezone>?): kotlin.Int { TODO() }

actual fun setusershell() { TODO() }

actual fun shm_open(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun shm_unlink(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun shmctl(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.__shmid_ds_new>?): kotlin.Int { TODO() }

actual fun shmdt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

actual fun shmsys(/*0*/ arg0: kotlin.Int, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun shutdown(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun sigaction(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sigaction>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sigaction>?): kotlin.Int { TODO() }

actual fun sigaltstack(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.stack_t /* = platform.posix.__darwin_sigaltstack */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stack_t /* = platform.posix.__darwin_sigaltstack */>?): kotlin.Int { TODO() }

actual fun sigblock(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sighold(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sigignore(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun siginterrupt(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun signal(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>? { TODO() }

actual fun sigpause(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sigrelse(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sigset(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>? { TODO() }

actual fun sigsetmask(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun sigvec(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sigvec>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sigvec>?): kotlin.Int { TODO() }

actual fun sin(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun sinf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun sinh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun sinhf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun sleep(/*0*/ arg0: kotlin.UInt): kotlin.UInt { TODO() }

actual fun sockatmark(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun socket(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun sqrt(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun sqrtf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun srand(/*0*/ arg0: kotlin.UInt) { TODO() }

actual fun srand48(/*0*/ arg0: kotlin.Long) { TODO() }

actual fun sranddev() { TODO() }

actual fun srandom(/*0*/ arg0: kotlin.UInt) { TODO() }

actual fun srandomdev() { TODO() }

actual fun sscanf(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun stat(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?): kotlin.Int { TODO() }

actual fun strcasecmp(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun strcmp(/*0*/ __s1: kotlin.String?, /*1*/ __s2: kotlin.String?): kotlin.Int { TODO() }

actual fun strcoll(/*0*/ __s1: kotlin.String?, /*1*/ __s2: kotlin.String?): kotlin.Int { TODO() }

actual fun strcspn(/*0*/ __s: kotlin.String?, /*1*/ __charset: kotlin.String?): kotlin.ULong { TODO() }

actual fun strlen(/*0*/ __s: kotlin.String?): kotlin.ULong { TODO() }

actual fun strspn(/*0*/ __s: kotlin.String?, /*1*/ __charset: kotlin.String?): kotlin.ULong { TODO() }

actual fun swapcontext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.ucontext_t /* = platform.posix.__darwin_ucontext */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.ucontext_t /* = platform.posix.__darwin_ucontext */>?): kotlin.Int { TODO() }

actual fun swapon(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun symlink(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlin.Int { TODO() }

actual fun symlinkat(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

actual fun sync() { TODO() }

actual fun sync_volume_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun syscall(/*0*/ arg0: kotlin.Int, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

actual fun sysconf(/*0*/ arg0: kotlin.Int): kotlin.Long { TODO() }

actual fun syslog(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun tan(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun tanf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun tanh(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun tanhf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun tcdrain(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun tcflow(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun tcflush(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun tcgetattr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): kotlin.Int { TODO() }

actual fun tcsendbreak(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

actual fun tcsetattr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): kotlin.Int { TODO() }

actual fun telldir(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?): kotlin.Long { TODO() }

actual fun tgamma(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun tgammaf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun tmpfile(): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

actual fun toascii(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun tolower(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun toupper(/*0*/ _c: kotlin.Int): kotlin.Int { TODO() }

actual fun trunc(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun truncf(/*0*/ arg0: kotlin.Float): kotlin.Float { TODO() }

actual fun ttyslot(): kotlin.Int { TODO() }

actual fun tzset() { TODO() }

actual fun tzsetwall() { TODO() }

actual fun uname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.utsname>?): kotlin.Int { TODO() }

actual fun undelete(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun ungetc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

actual fun unlink(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun unlinkat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

actual fun unlockpt(/*0*/ arg0: kotlin.Int): kotlin.Int { TODO() }

actual fun unsetenv(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

actual fun utime(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.utimbuf>?): kotlin.Int { TODO() }

actual fun utimensat(/*0*/ __fd: kotlin.Int, /*1*/ __path: kotlin.String?, /*2*/ __times: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?, /*3*/ __flag: kotlin.Int): kotlin.Int { TODO() }

actual fun utimes(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.timeval>?): kotlin.Int { TODO() }

actual fun vfork(): kotlin.Int { TODO() }

actual fun warn(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun warnc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun warnx(/*0*/ arg0: kotlin.String?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/) { TODO() }

actual fun y0(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun y1(/*0*/ arg0: kotlin.Double): kotlin.Double { TODO() }

actual fun yn(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Double): kotlin.Double { TODO() }

typealias __builtin_va_list = kotlinx.cinterop.CArrayPointer<platform.posix.__va_list_tag>

typealias __builtin_va_listVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__builtin_va_list>

typealias __darwin_blkcnt_t = platform.posix.__int64_t

typealias __darwin_blkcnt_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_blkcnt_t>

typealias __darwin_blksize_t = platform.posix.__int32_t

typealias __darwin_blksize_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_blksize_t>

typealias __darwin_clock_t = kotlin.ULong

typealias __darwin_clock_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__darwin_clock_t>

typealias __darwin_ct_rune_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_ct_rune_t>

typealias __darwin_dev_t = platform.posix.__int32_t

typealias __darwin_dev_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_dev_t>

typealias __darwin_fsblkcnt_t = kotlin.UInt

typealias __darwin_fsblkcnt_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_fsblkcnt_t>

typealias __darwin_fsfilcnt_t = kotlin.UInt

typealias __darwin_fsfilcnt_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_fsfilcnt_t>

typealias __darwin_gid_t = platform.posix.__uint32_t

typealias __darwin_gid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_gid_t>

typealias __darwin_id_t = platform.posix.__uint32_t

typealias __darwin_id_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_id_t>

typealias __darwin_ino64_t = platform.posix.__uint64_t

typealias __darwin_ino64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__darwin_ino64_t>

typealias __darwin_ino_t = platform.posix.__darwin_ino64_t

typealias __darwin_ino_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__darwin_ino_t>

typealias __darwin_intptr_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_intptr_t>

typealias __darwin_mach_port_name_t = platform.posix.__darwin_natural_t

typealias __darwin_mach_port_name_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_mach_port_name_t>

typealias __darwin_mach_port_t = platform.posix.__darwin_mach_port_name_t

typealias __darwin_mach_port_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_mach_port_t>

typealias __darwin_mode_t = platform.posix.__uint16_t

typealias __darwin_mode_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.__darwin_mode_t>

typealias __darwin_natural_t = kotlin.UInt

typealias __darwin_natural_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_natural_t>

typealias __darwin_nl_itemVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_nl_item>

typealias __darwin_off_t = platform.posix.__int64_t

typealias __darwin_off_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_off_t>

typealias __darwin_pid_t = platform.posix.__int32_t

typealias __darwin_pid_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_pid_t>

typealias __darwin_pthread_key_t = kotlin.ULong

typealias __darwin_pthread_key_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__darwin_pthread_key_t>

typealias __darwin_pthread_t = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>

typealias __darwin_pthread_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__darwin_pthread_t>

typealias __darwin_ptrdiff_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_ptrdiff_t>

typealias __darwin_rune_t = platform.posix.__darwin_wchar_t

typealias __darwin_rune_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_rune_t>

typealias __darwin_sigset_t = platform.posix.__uint32_t

typealias __darwin_sigset_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_sigset_t>

typealias __darwin_size_t = kotlin.ULong

typealias __darwin_size_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__darwin_size_t>

typealias __darwin_socklen_t = platform.posix.__uint32_t

typealias __darwin_socklen_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_socklen_t>

typealias __darwin_ssize_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_ssize_t>

typealias __darwin_suseconds_t = platform.posix.__int32_t

typealias __darwin_suseconds_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_suseconds_t>

typealias __darwin_time_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__darwin_time_t>

typealias __darwin_uid_t = platform.posix.__uint32_t

typealias __darwin_uid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_uid_t>

typealias __darwin_useconds_t = platform.posix.__uint32_t

typealias __darwin_useconds_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_useconds_t>

typealias __darwin_uuid_string_t = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.ByteVar>

typealias __darwin_uuid_string_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__darwin_uuid_string_t>

typealias __darwin_uuid_t = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.UByteVar>

typealias __darwin_uuid_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__darwin_uuid_t>

typealias __darwin_va_list = platform.posix.__builtin_va_list

typealias __darwin_va_listVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__darwin_va_list>

typealias __darwin_wchar_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_wchar_t>

typealias __darwin_wctrans_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_wctrans_t>

typealias __darwin_wctype_t = platform.posix.__uint32_t

typealias __darwin_wctype_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__darwin_wctype_t>

typealias __darwin_wint_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__darwin_wint_t>

typealias __gnuc_va_list = platform.posix.__builtin_va_list

typealias __gnuc_va_listVar = kotlinx.cinterop.CPointerVarOf<platform.posix.__gnuc_va_list>

typealias __int16_tVar = kotlinx.cinterop.ShortVarOf<platform.posix.__int16_t>

typealias __int32_tVar = kotlinx.cinterop.IntVarOf<platform.posix.__int32_t>

typealias __int64_tVar = kotlinx.cinterop.LongVarOf<platform.posix.__int64_t>

typealias __int8_tVar = kotlinx.cinterop.ByteVarOf<platform.posix.__int8_t>

typealias __ns_cert_types = kotlin.UInt

typealias __ns_cert_typesVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_cert_types>

typealias __ns_class = kotlin.UInt

typealias __ns_classVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_class>

typealias __ns_key_types = kotlin.UInt

typealias __ns_key_typesVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_key_types>

typealias __ns_opcode = kotlin.UInt

typealias __ns_opcodeVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_opcode>

typealias __ns_rcode = kotlin.UInt

typealias __ns_rcodeVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_rcode>

typealias __ns_sect = kotlin.UInt

typealias __ns_sectVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_sect>

typealias __ns_type = kotlin.UInt

typealias __ns_typeVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_type>

typealias __ns_update_operation = kotlin.UInt

typealias __ns_update_operationVar = kotlinx.cinterop.UIntVarOf<platform.posix.__ns_update_operation>

typealias __uint16_t = kotlin.UShort

typealias __uint16_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.__uint16_t>

typealias __uint32_t = kotlin.UInt

typealias __uint32_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.__uint32_t>

typealias __uint64_t = kotlin.ULong

typealias __uint64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.__uint64_t>

typealias __uint8_t = kotlin.UByte

typealias __uint8_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t>

typealias acl_entry_id_tVar = kotlinx.cinterop.IntVarOf<platform.posix.acl_entry_id_t>

typealias acl_entry_t = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>

typealias acl_entry_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_entry_t>

typealias acl_flag_t = kotlin.UInt

typealias acl_flag_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.acl_flag_t>

typealias acl_flagset_t = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>

typealias acl_flagset_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_flagset_t>

typealias acl_perm_t = kotlin.UInt

typealias acl_perm_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.acl_perm_t>

typealias acl_permset_mask_t = platform.posix.u_int64_t

typealias acl_permset_mask_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.acl_permset_mask_t>

typealias acl_permset_t = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>

typealias acl_permset_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_permset_t>

typealias acl_t = kotlinx.cinterop.CPointer<cnames.structs._acl>

typealias acl_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_t>

typealias acl_tag_t = kotlin.UInt

typealias acl_tag_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.acl_tag_t>

typealias acl_type_t = kotlin.UInt

typealias acl_type_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.acl_type_t>

typealias blkcnt_t = platform.posix.__darwin_blkcnt_t

typealias blkcnt_tVar = kotlinx.cinterop.LongVarOf<platform.posix.blkcnt_t>

typealias blksize_t = platform.posix.__darwin_blksize_t

typealias blksize_tVar = kotlinx.cinterop.IntVarOf<platform.posix.blksize_t>

typealias boolean_t = kotlin.UInt

typealias boolean_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.boolean_t>

typealias caddr_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar>

typealias caddr_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.caddr_t>

typealias cc_t = kotlin.UByte

typealias cc_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.cc_t>

typealias clock_t = platform.posix.__darwin_clock_t

typealias clock_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.clock_t>

typealias clockid_t = kotlin.UInt

typealias clockid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.clockid_t>

typealias ct_rune_t = platform.posix.__darwin_ct_rune_t

typealias ct_rune_tVar = kotlinx.cinterop.IntVarOf<platform.posix.ct_rune_t>

typealias daddr_t = platform.posix.int32_t

typealias daddr_tVar = kotlinx.cinterop.IntVarOf<platform.posix.daddr_t>

typealias dev_t = platform.posix.__darwin_dev_t

typealias dev_tVar = kotlinx.cinterop.IntVarOf<platform.posix.dev_t>

typealias double_tVar = kotlinx.cinterop.DoubleVarOf<platform.posix.double_t>

typealias errno_tVar = kotlinx.cinterop.IntVarOf<platform.posix.errno_t>

typealias fd_mask = platform.posix.__int32_t

typealias fd_maskVar = kotlinx.cinterop.IntVarOf<platform.posix.fd_mask>

typealias fexcept_t = kotlin.UShort

typealias fexcept_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.fexcept_t>

typealias filesec_property_t = kotlin.UInt

typealias filesec_property_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.filesec_property_t>

typealias filesec_t = kotlinx.cinterop.CPointer<cnames.structs._filesec>

typealias filesec_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.filesec_t>

typealias fixpt_t = platform.posix.u_int32_t

typealias fixpt_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.fixpt_t>

typealias float_tVar = kotlinx.cinterop.FloatVarOf<platform.posix.float_t>

typealias fpos_t = platform.posix.__darwin_off_t

typealias fpos_tVar = kotlinx.cinterop.LongVarOf<platform.posix.fpos_t>

typealias fsblkcnt_t = platform.posix.__darwin_fsblkcnt_t

typealias fsblkcnt_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.fsblkcnt_t>

typealias fsfilcnt_t = platform.posix.__darwin_fsfilcnt_t

typealias fsfilcnt_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.fsfilcnt_t>

typealias gid_t = platform.posix.__darwin_gid_t

typealias gid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t>

typealias id_t = platform.posix.__darwin_id_t

typealias id_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.id_t>

typealias in_addr_t = platform.posix.__uint32_t

typealias in_addr_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.in_addr_t>

typealias in_port_t = platform.posix.__uint16_t

typealias in_port_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.in_port_t>

typealias ino64_t = platform.posix.__darwin_ino64_t

typealias ino64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.ino64_t>

typealias ino_t = platform.posix.__darwin_ino_t

typealias ino_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.ino_t>

typealias int16_tVar = kotlinx.cinterop.ShortVarOf<platform.posix.int16_t>

typealias int32_tVar = kotlinx.cinterop.IntVarOf<platform.posix.int32_t>

typealias int64_tVar = kotlinx.cinterop.LongVarOf<platform.posix.int64_t>

typealias int8_tVar = kotlinx.cinterop.ByteVarOf<platform.posix.int8_t>

typealias int_fast16_t = platform.posix.int16_t

typealias int_fast16_tVar = kotlinx.cinterop.ShortVarOf<platform.posix.int_fast16_t>

typealias int_fast32_t = platform.posix.int32_t

typealias int_fast32_tVar = kotlinx.cinterop.IntVarOf<platform.posix.int_fast32_t>

typealias int_fast64_t = platform.posix.int64_t

typealias int_fast64_tVar = kotlinx.cinterop.LongVarOf<platform.posix.int_fast64_t>

typealias int_fast8_t = platform.posix.int8_t

typealias int_fast8_tVar = kotlinx.cinterop.ByteVarOf<platform.posix.int_fast8_t>

typealias int_least16_t = platform.posix.int16_t

typealias int_least16_tVar = kotlinx.cinterop.ShortVarOf<platform.posix.int_least16_t>

typealias int_least32_t = platform.posix.int32_t

typealias int_least32_tVar = kotlinx.cinterop.IntVarOf<platform.posix.int_least32_t>

typealias int_least64_t = platform.posix.int64_t

typealias int_least64_tVar = kotlinx.cinterop.LongVarOf<platform.posix.int_least64_t>

typealias int_least8_t = platform.posix.int8_t

typealias int_least8_tVar = kotlinx.cinterop.ByteVarOf<platform.posix.int_least8_t>

typealias intmax_tVar = kotlinx.cinterop.LongVarOf<platform.posix.intmax_t>

typealias intptr_t = platform.posix.__darwin_intptr_t

typealias intptr_tVar = kotlinx.cinterop.LongVarOf<platform.posix.intptr_t>

typealias jmp_buf = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar>

typealias jmp_bufVar = kotlinx.cinterop.CPointerVarOf<platform.posix.jmp_buf>

typealias kauth_ace_rights_t = platform.posix.u_int32_t

typealias kauth_ace_rights_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.kauth_ace_rights_t>

typealias kauth_ace_t = kotlinx.cinterop.CPointer<platform.posix.kauth_ace>

typealias kauth_ace_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.kauth_ace_t>

typealias kauth_acl_t = kotlinx.cinterop.CPointer<platform.posix.kauth_acl>

typealias kauth_acl_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.kauth_acl_t>

typealias kauth_filesec_t = kotlinx.cinterop.CPointer<platform.posix.kauth_filesec>

typealias kauth_filesec_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.kauth_filesec_t>

typealias key_t = platform.posix.__int32_t

typealias key_tVar = kotlinx.cinterop.IntVarOf<platform.posix.key_t>

typealias locale_t = kotlinx.cinterop.CPointer<cnames.structs._xlocale>

typealias locale_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.locale_t>

typealias mbstate_t = platform.posix.__darwin_mbstate_t

typealias mcontext_t = kotlinx.cinterop.CPointer<platform.posix.__darwin_mcontext64>

typealias mcontext_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.mcontext_t>

typealias memory_order = kotlin.UInt

typealias memory_orderVar = kotlinx.cinterop.UIntVarOf<platform.posix.memory_order>

typealias mode_t = platform.posix.__darwin_mode_t

typealias mode_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.mode_t>

typealias n_long = platform.posix.__uint32_t

typealias n_longVar = kotlinx.cinterop.UIntVarOf<platform.posix.n_long>

typealias n_short = platform.posix.__uint16_t

typealias n_shortVar = kotlinx.cinterop.UShortVarOf<platform.posix.n_short>

typealias n_time = platform.posix.__uint32_t

typealias n_timeVar = kotlinx.cinterop.UIntVarOf<platform.posix.n_time>

typealias nfds_t = kotlin.UInt

typealias nfds_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.nfds_t>

typealias nlink_t = platform.posix.__uint16_t

typealias nlink_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.nlink_t>

typealias ns_type = platform.posix.__ns_type

typealias ns_typeVar = kotlinx.cinterop.UIntVarOf<platform.posix.ns_type>

typealias off_t = platform.posix.__darwin_off_t

typealias off_tVar = kotlinx.cinterop.LongVarOf<platform.posix.off_t>

typealias pid_t = platform.posix.__darwin_pid_t

typealias pid_tVar = kotlinx.cinterop.IntVarOf<platform.posix.pid_t>

typealias pthread_attr_t = platform.posix.__darwin_pthread_attr_t

typealias pthread_cond_t = platform.posix.__darwin_pthread_cond_t

typealias pthread_condattr_t = platform.posix.__darwin_pthread_condattr_t

typealias pthread_key_t = platform.posix.__darwin_pthread_key_t

typealias pthread_key_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.pthread_key_t>

typealias pthread_mutex_t = platform.posix.__darwin_pthread_mutex_t

typealias pthread_mutexattr_t = platform.posix.__darwin_pthread_mutexattr_t

typealias pthread_once_t = platform.posix.__darwin_pthread_once_t

typealias pthread_override_t = kotlinx.cinterop.CPointer<cnames.structs.pthread_override_s>

typealias pthread_override_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.pthread_override_t>

typealias pthread_rwlock_t = platform.posix.__darwin_pthread_rwlock_t

typealias pthread_rwlockattr_t = platform.posix.__darwin_pthread_rwlockattr_t

typealias pthread_t = platform.posix.__darwin_pthread_t

typealias pthread_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.pthread_t>

typealias ptrdiff_tVar = kotlinx.cinterop.LongVarOf<platform.posix.ptrdiff_t>

typealias qaddr_t = kotlinx.cinterop.CPointer<platform.posix.quad_tVar>

typealias qaddr_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.qaddr_t>

typealias qos_class_t = kotlin.UInt

typealias qos_class_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.qos_class_t>

typealias quad_t = platform.posix.int64_t

typealias quad_tVar = kotlinx.cinterop.LongVarOf<platform.posix.quad_t>

typealias register_t = platform.posix.int64_t

typealias register_tVar = kotlinx.cinterop.LongVarOf<platform.posix.register_t>

typealias regoff_t = platform.posix.__darwin_off_t

typealias regoff_tVar = kotlinx.cinterop.LongVarOf<platform.posix.regoff_t>

typealias res_9_ns_cert_types = platform.posix.__ns_cert_types

typealias res_9_ns_cert_typesVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_cert_types>

typealias res_9_ns_class = platform.posix.__ns_class

typealias res_9_ns_classVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_class>

typealias res_9_ns_key_types = platform.posix.__ns_key_types

typealias res_9_ns_key_typesVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_key_types>

typealias res_9_ns_opcode = platform.posix.__ns_opcode

typealias res_9_ns_opcodeVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_opcode>

typealias res_9_ns_rcode = platform.posix.__ns_rcode

typealias res_9_ns_rcodeVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_rcode>

typealias res_9_ns_sect = platform.posix.__ns_sect

typealias res_9_ns_sectVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_sect>

typealias res_9_ns_update_operation = platform.posix.__ns_update_operation

typealias res_9_ns_update_operationVar = kotlinx.cinterop.UIntVarOf<platform.posix.res_9_ns_update_operation>

typealias res_9_state = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>

typealias res_9_stateVar = kotlinx.cinterop.CPointerVarOf<platform.posix.res_9_state>

typealias res_send_qhook = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.sockaddr>>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar>>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar>?) -> platform.posix.res_9_sendhookact>>

typealias res_send_qhookVar = kotlinx.cinterop.CPointerVarOf<platform.posix.res_send_qhook>

typealias res_send_rhook = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.sockaddr>?, kotlinx.cinterop.CPointer<platform.posix.u_charVar>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.u_charVar>?, kotlin.Int, kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar>?) -> platform.posix.res_9_sendhookact>>

typealias res_send_rhookVar = kotlinx.cinterop.CPointerVarOf<platform.posix.res_send_rhook>

typealias rlim_t = platform.posix.__uint64_t

typealias rlim_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.rlim_t>

typealias rsize_t = platform.posix.__darwin_size_t

typealias rsize_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.rsize_t>

typealias rune_t = platform.posix.__darwin_rune_t

typealias rune_tVar = kotlinx.cinterop.IntVarOf<platform.posix.rune_t>

typealias rusage_info_t = kotlinx.cinterop.COpaquePointer

typealias rusage_info_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.rusage_info_t>

typealias sa_family_t = platform.posix.__uint8_t

typealias sa_family_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.sa_family_t>

typealias sae_associd_t = platform.posix.__uint32_t

typealias sae_associd_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.sae_associd_t>

typealias sae_connid_t = platform.posix.__uint32_t

typealias sae_connid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.sae_connid_t>

typealias segsz_t = platform.posix.int32_t

typealias segsz_tVar = kotlinx.cinterop.IntVarOf<platform.posix.segsz_t>

typealias sem_tVar = kotlinx.cinterop.IntVarOf<platform.posix.sem_t>

typealias shmatt_t = kotlin.UShort

typealias shmatt_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.shmatt_t>

typealias sig_atomic_tVar = kotlinx.cinterop.IntVarOf<platform.posix.sig_atomic_t>

typealias sig_t = kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlin.Int) -> kotlin.Unit>>

typealias sig_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.sig_t>

typealias sigjmp_buf = kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.IntVar>

typealias sigjmp_bufVar = kotlinx.cinterop.CPointerVarOf<platform.posix.sigjmp_buf>

typealias sigset_t = platform.posix.__darwin_sigset_t

typealias sigset_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t>

typealias size_t = platform.posix.__darwin_size_t

typealias size_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.size_t>

typealias socklen_t = platform.posix.__darwin_socklen_t

typealias socklen_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t>

typealias speed_t = kotlin.ULong

typealias speed_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.speed_t>

typealias ssize_t = platform.posix.__darwin_ssize_t

typealias ssize_tVar = kotlinx.cinterop.LongVarOf<platform.posix.ssize_t>

typealias suseconds_t = platform.posix.__darwin_suseconds_t

typealias suseconds_tVar = kotlinx.cinterop.IntVarOf<platform.posix.suseconds_t>

typealias swblk_t = platform.posix.int32_t

typealias swblk_tVar = kotlinx.cinterop.IntVarOf<platform.posix.swblk_t>

typealias syscall_arg_t = platform.posix.u_int64_t

typealias syscall_arg_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.syscall_arg_t>

typealias tcflag_t = kotlin.ULong

typealias tcflag_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.tcflag_t>

typealias tcp_cc = platform.posix.__uint32_t

typealias tcp_ccVar = kotlinx.cinterop.UIntVarOf<platform.posix.tcp_cc>

typealias tcp_seq = platform.posix.__uint32_t

typealias tcp_seqVar = kotlinx.cinterop.UIntVarOf<platform.posix.tcp_seq>

typealias time_t = platform.posix.__darwin_time_t

typealias time_tVar = kotlinx.cinterop.LongVarOf<platform.posix.time_t>

typealias u_char = kotlin.UByte

typealias u_charVar = kotlinx.cinterop.UByteVarOf<platform.posix.u_char>

typealias u_int = kotlin.UInt

typealias u_int16_t = kotlin.UShort

typealias u_int16_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.u_int16_t>

typealias u_int32_t = kotlin.UInt

typealias u_int32_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.u_int32_t>

typealias u_int64_t = kotlin.ULong

typealias u_int64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.u_int64_t>

typealias u_int8_t = kotlin.UByte

typealias u_int8_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.u_int8_t>

typealias u_intVar = kotlinx.cinterop.UIntVarOf<platform.posix.u_int>

typealias u_long = kotlin.ULong

typealias u_longVar = kotlinx.cinterop.ULongVarOf<platform.posix.u_long>

typealias u_quad_t = platform.posix.u_int64_t

typealias u_quad_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.u_quad_t>

typealias u_short = kotlin.UShort

typealias u_shortVar = kotlinx.cinterop.UShortVarOf<platform.posix.u_short>

typealias uid_t = platform.posix.__darwin_uid_t

typealias uid_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.uid_t>

typealias uint = kotlin.UInt

typealias uint16_t = kotlin.UShort

typealias uint16_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.uint16_t>

typealias uint32_t = kotlin.UInt

typealias uint32_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t>

typealias uint64_t = kotlin.ULong

typealias uint64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.uint64_t>

typealias uint8_t = kotlin.UByte

typealias uint8_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.uint8_t>

typealias uintVar = kotlinx.cinterop.UIntVarOf<platform.posix.uint>

typealias uint_fast16_t = platform.posix.uint16_t

typealias uint_fast16_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.uint_fast16_t>

typealias uint_fast32_t = platform.posix.uint32_t

typealias uint_fast32_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.uint_fast32_t>

typealias uint_fast64_t = platform.posix.uint64_t

typealias uint_fast64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.uint_fast64_t>

typealias uint_fast8_t = platform.posix.uint8_t

typealias uint_fast8_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.uint_fast8_t>

typealias uint_least16_t = platform.posix.uint16_t

typealias uint_least16_tVar = kotlinx.cinterop.UShortVarOf<platform.posix.uint_least16_t>

typealias uint_least32_t = platform.posix.uint32_t

typealias uint_least32_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.uint_least32_t>

typealias uint_least64_t = platform.posix.uint64_t

typealias uint_least64_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.uint_least64_t>

typealias uint_least8_t = platform.posix.uint8_t

typealias uint_least8_tVar = kotlinx.cinterop.UByteVarOf<platform.posix.uint_least8_t>

typealias uintmax_t = kotlin.ULong

typealias uintmax_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.uintmax_t>

typealias uintptr_t = kotlin.ULong

typealias uintptr_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.uintptr_t>

typealias useconds_t = platform.posix.__darwin_useconds_t

typealias useconds_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.useconds_t>

typealias user_addr_t = platform.posix.u_int64_t

typealias user_addr_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.user_addr_t>

typealias user_long_t = platform.posix.int64_t

typealias user_long_tVar = kotlinx.cinterop.LongVarOf<platform.posix.user_long_t>

typealias user_off_t = platform.posix.int64_t

typealias user_off_tVar = kotlinx.cinterop.LongVarOf<platform.posix.user_off_t>

typealias user_size_t = platform.posix.u_int64_t

typealias user_size_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.user_size_t>

typealias user_ssize_t = platform.posix.int64_t

typealias user_ssize_tVar = kotlinx.cinterop.LongVarOf<platform.posix.user_ssize_t>

typealias user_time_t = platform.posix.int64_t

typealias user_time_tVar = kotlinx.cinterop.LongVarOf<platform.posix.user_time_t>

typealias user_ulong_t = platform.posix.u_int64_t

typealias user_ulong_tVar = kotlinx.cinterop.ULongVarOf<platform.posix.user_ulong_t>

typealias ushort = kotlin.UShort

typealias ushortVar = kotlinx.cinterop.UShortVarOf<platform.posix.ushort>

typealias uuid_t = platform.posix.__darwin_uuid_t

typealias uuid_tVar = kotlinx.cinterop.CPointerVarOf<platform.posix.uuid_t>

typealias va_list = platform.posix.__darwin_va_list

typealias va_listVar = kotlinx.cinterop.CPointerVarOf<platform.posix.va_list>

typealias wchar_t = platform.posix.__darwin_wchar_t

typealias wchar_tVar = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t>

typealias wctrans_t = platform.posix.__darwin_wctrans_t

typealias wctrans_tVar = kotlinx.cinterop.IntVarOf<platform.posix.wctrans_t>

typealias wctype_t = platform.posix.__darwin_wctype_t

typealias wctype_tVar = kotlinx.cinterop.UIntVarOf<platform.posix.wctype_t>

typealias wint_t = platform.posix.__darwin_wint_t

typealias wint_tVar = kotlinx.cinterop.IntVarOf<platform.posix.wint_t>

const val ACCESSPERMS: kotlin.Int = 0

const val ACCESSX_MAX_DESCRIPTORS: kotlin.Int = 0

const val ACCESSX_MAX_TABLESIZE: kotlin.Int = 0

val ACL_ADD_FILE: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ADD_SUBDIRECTORY: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_APPEND_DATA: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_CHANGE_OWNER: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_DELETE: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_DELETE_CHILD: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ENTRY_DIRECTORY_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ENTRY_FILE_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ENTRY_INHERITED: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ENTRY_LIMIT_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_ENTRY_ONLY_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_EXECUTE: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_EXTENDED_ALLOW: platform.posix.acl_tag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_EXTENDED_DENY: platform.posix.acl_tag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_FIRST_ENTRY: platform.posix.acl_entry_id_t /* = kotlin.Int */
    get() = TODO()

val ACL_FLAG_DEFER_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_FLAG_NO_INHERIT: platform.posix.acl_flag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_LAST_ENTRY: platform.posix.acl_entry_id_t /* = kotlin.Int */
    get() = TODO()

val ACL_LIST_DIRECTORY: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

const val ACL_MAX_ENTRIES: kotlin.Int = 0

val ACL_NEXT_ENTRY: platform.posix.acl_entry_id_t /* = kotlin.Int */
    get() = TODO()

val ACL_READ_ATTRIBUTES: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_READ_DATA: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_READ_EXTATTRIBUTES: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_READ_SECURITY: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_SEARCH: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_SYNCHRONIZE: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_ACCESS: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_AFS: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_CODA: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_DEFAULT: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_EXTENDED: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_NTFS: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_TYPE_NWFS: platform.posix.acl_type_t /* = kotlin.UInt */
    get() = TODO()

val ACL_UNDEFINED_TAG: platform.posix.acl_tag_t /* = kotlin.UInt */
    get() = TODO()

val ACL_WRITE_ATTRIBUTES: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_WRITE_DATA: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_WRITE_EXTATTRIBUTES: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

val ACL_WRITE_SECURITY: platform.posix.acl_perm_t /* = kotlin.UInt */
    get() = TODO()

const val AF_APPLETALK: kotlin.Int = 0

const val AF_CCITT: kotlin.Int = 0

const val AF_CHAOS: kotlin.Int = 0

const val AF_CNT: kotlin.Int = 0

const val AF_COIP: kotlin.Int = 0

const val AF_DATAKIT: kotlin.Int = 0

const val AF_DECnet: kotlin.Int = 0

const val AF_DLI: kotlin.Int = 0

const val AF_E164: kotlin.Int = 0

const val AF_ECMA: kotlin.Int = 0

const val AF_HYLINK: kotlin.Int = 0

const val AF_IEEE80211: kotlin.Int = 0

const val AF_IMPLINK: kotlin.Int = 0

const val AF_INET: kotlin.Int = 0

const val AF_INET6: kotlin.Int = 0

const val AF_IPX: kotlin.Int = 0

const val AF_ISDN: kotlin.Int = 0

const val AF_ISO: kotlin.Int = 0

const val AF_LAT: kotlin.Int = 0

const val AF_LINK: kotlin.Int = 0

const val AF_LOCAL: kotlin.Int = 0

const val AF_MAX: kotlin.Int = 0

const val AF_NATM: kotlin.Int = 0

const val AF_NDRV: kotlin.Int = 0

const val AF_NETBIOS: kotlin.Int = 0

const val AF_NS: kotlin.Int = 0

const val AF_OSI: kotlin.Int = 0

const val AF_PPP: kotlin.Int = 0

const val AF_PUP: kotlin.Int = 0

const val AF_RESERVED_36: kotlin.Int = 0

const val AF_ROUTE: kotlin.Int = 0

const val AF_SIP: kotlin.Int = 0

const val AF_SNA: kotlin.Int = 0

const val AF_SYSTEM: kotlin.Int = 0

const val AF_UNIX: kotlin.Int = 0

const val AF_UNSPEC: kotlin.Int = 0

const val AF_UTUN: kotlin.Int = 0

const val AI_ADDRCONFIG: kotlin.Int = 0

const val AI_ALL: kotlin.Int = 0

const val AI_CANONNAME: kotlin.Int = 0

const val AI_DEFAULT: kotlin.Int = 0

const val AI_MASK: kotlin.Int = 0

const val AI_NUMERICHOST: kotlin.Int = 0

const val AI_NUMERICSERV: kotlin.Int = 0

const val AI_PASSIVE: kotlin.Int = 0

const val AI_UNUSABLE: kotlin.Int = 0

const val AI_V4MAPPED: kotlin.Int = 0

const val AI_V4MAPPED_CFG: kotlin.Int = 0

const val ALIGNBYTES: kotlin.ULong = 0u

const val ALLPERMS: kotlin.Int = 0

const val ALTWERASE: kotlin.Int = 0

const val APPLE_IF_FAM_BOND: kotlin.Int = 0

const val APPLE_IF_FAM_DISC: kotlin.Int = 0

const val APPLE_IF_FAM_ETHERNET: kotlin.Int = 0

const val APPLE_IF_FAM_FAITH: kotlin.Int = 0

const val APPLE_IF_FAM_FIREWIRE: kotlin.Int = 0

const val APPLE_IF_FAM_GIF: kotlin.Int = 0

const val APPLE_IF_FAM_LOOPBACK: kotlin.Int = 0

const val APPLE_IF_FAM_MDECAP: kotlin.Int = 0

const val APPLE_IF_FAM_PPP: kotlin.Int = 0

const val APPLE_IF_FAM_PVC: kotlin.Int = 0

const val APPLE_IF_FAM_SLIP: kotlin.Int = 0

const val APPLE_IF_FAM_STF: kotlin.Int = 0

const val APPLE_IF_FAM_TUN: kotlin.Int = 0

const val APPLE_IF_FAM_VLAN: kotlin.Int = 0

const val ARG_MAX: kotlin.Int = 0

const val ATOMIC_BOOL_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_CHAR16_T_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_CHAR32_T_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_CHAR_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_INT_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_LLONG_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_LONG_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_POINTER_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_SHORT_LOCK_FREE: kotlin.Int = 0

const val ATOMIC_WCHAR_T_LOCK_FREE: kotlin.Int = 0

const val AT_EACCESS: kotlin.Int = 0

const val AT_FDCWD: kotlin.Int = 0

const val AT_REMOVEDIR: kotlin.Int = 0

const val AT_SYMLINK_FOLLOW: kotlin.Int = 0

const val AT_SYMLINK_NOFOLLOW: kotlin.Int = 0

const val B0: kotlin.Int = 0

const val B110: kotlin.Int = 0

const val B115200: kotlin.Int = 0

const val B1200: kotlin.Int = 0

const val B134: kotlin.Int = 0

const val B14400: kotlin.Int = 0

const val B150: kotlin.Int = 0

const val B1800: kotlin.Int = 0

const val B19200: kotlin.Int = 0

const val B200: kotlin.Int = 0

const val B230400: kotlin.Int = 0

const val B2400: kotlin.Int = 0

const val B28800: kotlin.Int = 0

const val B300: kotlin.Int = 0

const val B38400: kotlin.Int = 0

const val B4800: kotlin.Int = 0

const val B50: kotlin.Int = 0

const val B57600: kotlin.Int = 0

const val B600: kotlin.Int = 0

const val B7200: kotlin.Int = 0

const val B75: kotlin.Int = 0

const val B76800: kotlin.Int = 0

const val B9600: kotlin.Int = 0

const val BC_BASE_MAX: kotlin.Int = 0

const val BC_DIM_MAX: kotlin.Int = 0

const val BC_SCALE_MAX: kotlin.Int = 0

const val BC_STRING_MAX: kotlin.Int = 0

const val BIG_ENDIAN: kotlin.Int = 0

const val BLKDEV_IOSIZE: kotlin.Int = 0

const val BRKINT: kotlin.Int = 0

const val BS0: kotlin.Int = 0

const val BS1: kotlin.Int = 0

const val BSD: kotlin.Int = 0

const val BSD4_3: kotlin.Int = 0

const val BSD4_4: kotlin.Int = 0

const val BSDLY: kotlin.Int = 0

const val BUFSIZ: kotlin.Int = 0

const val BUS_ADRALN: kotlin.Int = 0

const val BUS_ADRERR: kotlin.Int = 0

const val BUS_NOOP: kotlin.Int = 0

const val BUS_OBJERR: kotlin.Int = 0

const val BYTE_ORDER: kotlin.Int = 0

const val CBLOCK: kotlin.Int = 0

const val CBQSIZE: kotlin.Int = 0

const val CBRK: kotlin.Int = 0

const val CBSIZE: kotlin.ULong = 0u

const val CCAR_OFLOW: kotlin.Int = 0

const val CCTS_OFLOW: kotlin.Int = 0

const val CDISCARD: kotlin.Int = 0

const val CDSR_OFLOW: kotlin.Int = 0

const val CDSUSP: kotlin.Int = 0

const val CDTR_IFLOW: kotlin.Int = 0

const val CEOF: kotlin.Int = 0

const val CEOL: kotlin.Int = 0

const val CEOT: kotlin.Int = 0

const val CERASE: kotlin.Int = 0

const val CFLUSH: kotlin.Int = 0

const val CHARCLASS_NAME_MAX: kotlin.Int = 0

const val CHAR_BIT: kotlin.Int = 0

const val CHAR_MAX: kotlin.Int = 0

const val CHAR_MIN: kotlin.Int = 0

const val CHILD_MAX: kotlin.Int = 0

const val CIGNORE: kotlin.Int = 0

const val CINTR: kotlin.Int = 0

const val CKILL: kotlin.Int = 0

const val CLBYTES: kotlin.Int = 0

const val CLD_CONTINUED: kotlin.Int = 0

const val CLD_DUMPED: kotlin.Int = 0

const val CLD_EXITED: kotlin.Int = 0

const val CLD_KILLED: kotlin.Int = 0

const val CLD_NOOP: kotlin.Int = 0

const val CLD_STOPPED: kotlin.Int = 0

const val CLD_TRAPPED: kotlin.Int = 0

const val CLK_TCK: kotlin.Int = 0

const val CLNEXT: kotlin.Int = 0

const val CLOCAL: kotlin.Int = 0

const val CLOCKS_PER_SEC: kotlin.Int = 0

const val CLOCK_MONOTONIC: kotlin.Int = 0

const val CLOCK_MONOTONIC_RAW: kotlin.Int = 0

const val CLOCK_MONOTONIC_RAW_APPROX: kotlin.Int = 0

const val CLOCK_PROCESS_CPUTIME_ID: kotlin.Int = 0

const val CLOCK_REALTIME: kotlin.Int = 0

const val CLOCK_THREAD_CPUTIME_ID: kotlin.Int = 0

const val CLOCK_UPTIME_RAW: kotlin.Int = 0

const val CLOCK_UPTIME_RAW_APPROX: kotlin.Int = 0

const val CLOFF: kotlin.Int = 0

const val CLOFSET: kotlin.Int = 0

const val CLSHIFT: kotlin.Int = 0

const val CLSIZE: kotlin.Int = 0

const val CLSIZELOG2: kotlin.Int = 0

const val CMASK: kotlin.Int = 0

const val CMIN: kotlin.Int = 0

const val COLL_WEIGHTS_MAX: kotlin.Int = 0

const val CONNECT_DATA_AUTHENTICATED: kotlin.Int = 0

const val CONNECT_DATA_IDEMPOTENT: kotlin.Int = 0

const val CONNECT_RESUME_ON_READ_WRITE: kotlin.Int = 0

const val CPF_IGNORE_MODE: kotlin.Int = 0

const val CPF_MASK: kotlin.Int = 0

const val CPF_OVERWRITE: kotlin.Int = 0

const val CPUMON_MAKE_FATAL: kotlin.Int = 0

const val CQUIT: kotlin.Int = 0

const val CR0: kotlin.Int = 0

const val CR1: kotlin.Int = 0

const val CR2: kotlin.Int = 0

const val CR3: kotlin.Int = 0

const val CRDLY: kotlin.Int = 0

const val CREAD: kotlin.Int = 0

const val CREPRINT: kotlin.Int = 0

const val CROUND: kotlin.Int = 0

const val CRPRNT: kotlin.Int = 0

const val CRTSCTS: kotlin.Int = 0

const val CRTS_IFLOW: kotlin.Int = 0

const val CS5: kotlin.Int = 0

const val CS6: kotlin.Int = 0

const val CS7: kotlin.Int = 0

const val CS8: kotlin.Int = 0

const val CSIZE: kotlin.Int = 0

const val CSTART: kotlin.Int = 0

const val CSTATUS: kotlin.Int = 0

const val CSTOP: kotlin.Int = 0

const val CSTOPB: kotlin.Int = 0

const val CSUSP: kotlin.Int = 0

const val CTIME: kotlin.Int = 0

const val CWERASE: kotlin.Int = 0

const val DBL_DECIMAL_DIG: kotlin.Int = 0

const val DBL_DIG: kotlin.Int = 0

const val DBL_MANT_DIG: kotlin.Int = 0

const val DBL_MAX_10_EXP: kotlin.Int = 0

const val DBL_MAX_EXP: kotlin.Int = 0

const val DBL_MIN_10_EXP: kotlin.Int = 0

const val DBL_MIN_EXP: kotlin.Int = 0

const val DECIMAL_DIG: kotlin.Int = 0

const val DEFFILEMODE: kotlin.Int = 0

const val DEV_BSHIFT: kotlin.Int = 0

const val DEV_BSIZE: kotlin.Int = 0

const val DIRBLKSIZ: kotlin.Int = 0

const val DOMAIN: kotlin.Int = 0

const val DST_AUST: kotlin.Int = 0

const val DST_CAN: kotlin.Int = 0

const val DST_EET: kotlin.Int = 0

const val DST_MET: kotlin.Int = 0

const val DST_NONE: kotlin.Int = 0

const val DST_USA: kotlin.Int = 0

const val DST_WET: kotlin.Int = 0

const val DTF_HIDEW: kotlin.Int = 0

const val DTF_NODUP: kotlin.Int = 0

const val DTF_REWIND: kotlin.Int = 0

const val DT_BLK: kotlin.Int = 0

const val DT_CHR: kotlin.Int = 0

const val DT_DIR: kotlin.Int = 0

const val DT_FIFO: kotlin.Int = 0

const val DT_LNK: kotlin.Int = 0

const val DT_REG: kotlin.Int = 0

const val DT_SOCK: kotlin.Int = 0

const val DT_UNKNOWN: kotlin.Int = 0

const val DT_WHT: kotlin.Int = 0

const val E2BIG: kotlin.Int = 0

const val EACCES: kotlin.Int = 0

const val EADDRINUSE: kotlin.Int = 0

const val EADDRNOTAVAIL: kotlin.Int = 0

const val EAFNOSUPPORT: kotlin.Int = 0

const val EAGAIN: kotlin.Int = 0

const val EAI_ADDRFAMILY: kotlin.Int = 0

const val EAI_AGAIN: kotlin.Int = 0

const val EAI_BADFLAGS: kotlin.Int = 0

const val EAI_BADHINTS: kotlin.Int = 0

const val EAI_FAIL: kotlin.Int = 0

const val EAI_FAMILY: kotlin.Int = 0

const val EAI_MAX: kotlin.Int = 0

const val EAI_MEMORY: kotlin.Int = 0

const val EAI_NODATA: kotlin.Int = 0

const val EAI_NONAME: kotlin.Int = 0

const val EAI_OVERFLOW: kotlin.Int = 0

const val EAI_PROTOCOL: kotlin.Int = 0

const val EAI_SERVICE: kotlin.Int = 0

const val EAI_SOCKTYPE: kotlin.Int = 0

const val EAI_SYSTEM: kotlin.Int = 0

const val EALREADY: kotlin.Int = 0

const val EAUTH: kotlin.Int = 0

const val EBADARCH: kotlin.Int = 0

const val EBADEXEC: kotlin.Int = 0

const val EBADF: kotlin.Int = 0

const val EBADMACHO: kotlin.Int = 0

const val EBADMSG: kotlin.Int = 0

const val EBADRPC: kotlin.Int = 0

const val EBUSY: kotlin.Int = 0

const val ECANCELED: kotlin.Int = 0

const val ECHILD: kotlin.Int = 0

const val ECHO: kotlin.Int = 0

const val ECHOCTL: kotlin.Int = 0

const val ECHOE: kotlin.Int = 0

const val ECHOK: kotlin.Int = 0

const val ECHOKE: kotlin.Int = 0

const val ECHONL: kotlin.Int = 0

const val ECHOPRT: kotlin.Int = 0

const val ECONNABORTED: kotlin.Int = 0

const val ECONNREFUSED: kotlin.Int = 0

const val ECONNRESET: kotlin.Int = 0

const val EDEADLK: kotlin.Int = 0

const val EDESTADDRREQ: kotlin.Int = 0

const val EDEVERR: kotlin.Int = 0

const val EDOM: kotlin.Int = 0

const val EDQUOT: kotlin.Int = 0

const val EEXIST: kotlin.Int = 0

const val EFAULT: kotlin.Int = 0

const val EFBIG: kotlin.Int = 0

const val EFTYPE: kotlin.Int = 0

const val EHOSTDOWN: kotlin.Int = 0

const val EHOSTUNREACH: kotlin.Int = 0

const val EIDRM: kotlin.Int = 0

const val EILSEQ: kotlin.Int = 0

const val EINPROGRESS: kotlin.Int = 0

const val EINTR: kotlin.Int = 0

const val EINVAL: kotlin.Int = 0

const val EIO: kotlin.Int = 0

const val EISCONN: kotlin.Int = 0

const val EISDIR: kotlin.Int = 0

const val ELAST: kotlin.Int = 0

const val ELOOP: kotlin.Int = 0

const val EMFILE: kotlin.Int = 0

const val EMLINK: kotlin.Int = 0

const val EMSGSIZE: kotlin.Int = 0

const val EMULTIHOP: kotlin.Int = 0

const val ENAMETOOLONG: kotlin.Int = 0

const val ENEEDAUTH: kotlin.Int = 0

const val ENETDOWN: kotlin.Int = 0

const val ENETRESET: kotlin.Int = 0

const val ENETUNREACH: kotlin.Int = 0

const val ENFILE: kotlin.Int = 0

const val ENOATTR: kotlin.Int = 0

const val ENOBUFS: kotlin.Int = 0

const val ENODATA: kotlin.Int = 0

const val ENODEV: kotlin.Int = 0

const val ENOENT: kotlin.Int = 0

const val ENOEXEC: kotlin.Int = 0

const val ENOLCK: kotlin.Int = 0

const val ENOLINK: kotlin.Int = 0

const val ENOMEM: kotlin.Int = 0

const val ENOMSG: kotlin.Int = 0

const val ENOPOLICY: kotlin.Int = 0

const val ENOPROTOOPT: kotlin.Int = 0

const val ENOSPC: kotlin.Int = 0

const val ENOSR: kotlin.Int = 0

const val ENOSTR: kotlin.Int = 0

const val ENOSYS: kotlin.Int = 0

const val ENOTBLK: kotlin.Int = 0

const val ENOTCONN: kotlin.Int = 0

const val ENOTDIR: kotlin.Int = 0

const val ENOTEMPTY: kotlin.Int = 0

const val ENOTRECOVERABLE: kotlin.Int = 0

const val ENOTSOCK: kotlin.Int = 0

const val ENOTSUP: kotlin.Int = 0

const val ENOTTY: kotlin.Int = 0

const val ENXIO: kotlin.Int = 0

const val EOF: kotlin.Int = 0

const val EOPNOTSUPP: kotlin.Int = 0

const val EOVERFLOW: kotlin.Int = 0

const val EOWNERDEAD: kotlin.Int = 0

const val EPERM: kotlin.Int = 0

const val EPFNOSUPPORT: kotlin.Int = 0

const val EPIPE: kotlin.Int = 0

const val EPROCLIM: kotlin.Int = 0

const val EPROCUNAVAIL: kotlin.Int = 0

const val EPROGMISMATCH: kotlin.Int = 0

const val EPROGUNAVAIL: kotlin.Int = 0

const val EPROTO: kotlin.Int = 0

const val EPROTONOSUPPORT: kotlin.Int = 0

const val EPROTOTYPE: kotlin.Int = 0

const val EPWROFF: kotlin.Int = 0

const val EQFULL: kotlin.Int = 0

const val EQUIV_CLASS_MAX: kotlin.Int = 0

const val ERANGE: kotlin.Int = 0

const val EREMOTE: kotlin.Int = 0

const val EROFS: kotlin.Int = 0

const val ERPCMISMATCH: kotlin.Int = 0

const val ESHLIBVERS: kotlin.Int = 0

const val ESHUTDOWN: kotlin.Int = 0

const val ESOCKTNOSUPPORT: kotlin.Int = 0

const val ESPIPE: kotlin.Int = 0

const val ESRCH: kotlin.Int = 0

const val ESTALE: kotlin.Int = 0

const val ETHERMIN: kotlin.Int = 0

const val ETHERMTU: kotlin.Int = 0

const val ETHERTYPE_ARP: kotlin.Int = 0

const val ETHERTYPE_IP: kotlin.Int = 0

const val ETHERTYPE_IPV6: kotlin.Int = 0

const val ETHERTYPE_LOOPBACK: kotlin.Int = 0

const val ETHERTYPE_NTRAILER: kotlin.Int = 0

const val ETHERTYPE_PAE: kotlin.Int = 0

const val ETHERTYPE_PTP: kotlin.Int = 0

const val ETHERTYPE_PUP: kotlin.Int = 0

const val ETHERTYPE_REVARP: kotlin.Int = 0

const val ETHERTYPE_RSN_PREAUTH: kotlin.Int = 0

const val ETHERTYPE_TRAIL: kotlin.Int = 0

const val ETHERTYPE_VLAN: kotlin.Int = 0

const val ETHER_ADDR_LEN: kotlin.Int = 0

const val ETHER_ALIGN: kotlin.Int = 0

const val ETHER_CRC_LEN: kotlin.Int = 0

const val ETHER_HDR_LEN: kotlin.Int = 0

const val ETHER_MAX_LEN: kotlin.Int = 0

const val ETHER_MIN_LEN: kotlin.Int = 0

const val ETHER_TYPE_LEN: kotlin.Int = 0

const val ETIME: kotlin.Int = 0

const val ETIMEDOUT: kotlin.Int = 0

const val ETOOMANYREFS: kotlin.Int = 0

const val ETXTBSY: kotlin.Int = 0

const val EUSERS: kotlin.Int = 0

const val EWOULDBLOCK: kotlin.Int = 0

const val EXDEV: kotlin.Int = 0

const val EXIT_FAILURE: kotlin.Int = 0

const val EXIT_SUCCESS: kotlin.Int = 0

const val EXPR_NEST_MAX: kotlin.Int = 0

const val EXTA: kotlin.Int = 0

const val EXTB: kotlin.Int = 0

const val EXTPROC: kotlin.Int = 0

const val FALSE: kotlin.Int = 0

const val FAPPEND: kotlin.Int = 0

const val FASYNC: kotlin.Int = 0

const val FCNTL_FS_SPECIFIC_BASE: kotlin.Int = 0

const val FD_CLOEXEC: kotlin.Int = 0

const val FD_SETSIZE: kotlin.Int = 0

const val FE_ALL_EXCEPT: kotlin.Int = 0

const val FE_DENORMALOPERAND: kotlin.Int = 0

const val FE_DIVBYZERO: kotlin.Int = 0

const val FE_DOWNWARD: kotlin.Int = 0

const val FE_INEXACT: kotlin.Int = 0

const val FE_INVALID: kotlin.Int = 0

const val FE_OVERFLOW: kotlin.Int = 0

const val FE_TONEAREST: kotlin.Int = 0

const val FE_TOWARDZERO: kotlin.Int = 0

const val FE_UNDERFLOW: kotlin.Int = 0

const val FE_UPWARD: kotlin.Int = 0

const val FF0: kotlin.Int = 0

const val FF1: kotlin.Int = 0

const val FFDLY: kotlin.Int = 0

const val FFDSYNC: kotlin.Int = 0

const val FFSYNC: kotlin.Int = 0

const val FILENAME_MAX: kotlin.Int = 0

val FILESEC_ACL: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_ACL_ALLOCSIZE: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_ACL_RAW: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_GROUP: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_GRPUUID: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

const val FILESEC_GUID: kotlin.Int = 0

val FILESEC_MODE: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_OWNER: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

val FILESEC_UUID: platform.posix.filesec_property_t /* = kotlin.UInt */
    get() = TODO()

const val FIOASYNC: kotlin.ULong = 0u

const val FIOCLEX: kotlin.UInt = 0u

const val FIODTYPE: kotlin.ULong = 0u

const val FIOGETOWN: kotlin.ULong = 0u

const val FIONBIO: kotlin.ULong = 0u

const val FIONCLEX: kotlin.UInt = 0u

const val FIONREAD: kotlin.ULong = 0u

const val FIOSETOWN: kotlin.ULong = 0u

const val FLT_DECIMAL_DIG: kotlin.Int = 0

const val FLT_DIG: kotlin.Int = 0

const val FLT_EVAL_METHOD: kotlin.Int = 0

const val FLT_MANT_DIG: kotlin.Int = 0

const val FLT_MAX_10_EXP: kotlin.Int = 0

const val FLT_MAX_EXP: kotlin.Int = 0

const val FLT_MIN_10_EXP: kotlin.Int = 0

const val FLT_MIN_EXP: kotlin.Int = 0

const val FLT_RADIX: kotlin.Int = 0

const val FLUSHO: kotlin.Int = 0

const val FNDELAY: kotlin.Int = 0

const val FNM_CASEFOLD: kotlin.Int = 0

const val FNM_FILE_NAME: kotlin.Int = 0

const val FNM_IGNORECASE: kotlin.Int = 0

const val FNM_LEADING_DIR: kotlin.Int = 0

const val FNM_NOESCAPE: kotlin.Int = 0

const val FNM_NOMATCH: kotlin.Int = 0

const val FNM_NOSYS: kotlin.Int = 0

const val FNM_PATHNAME: kotlin.Int = 0

const val FNM_PERIOD: kotlin.Int = 0

const val FNONBLOCK: kotlin.Int = 0

const val FOOTPRINT_INTERVAL_RESET: kotlin.Int = 0

const val FOPEN_MAX: kotlin.Int = 0

const val FPE_FLTDIV: kotlin.Int = 0

const val FPE_FLTINV: kotlin.Int = 0

const val FPE_FLTOVF: kotlin.Int = 0

const val FPE_FLTRES: kotlin.Int = 0

const val FPE_FLTSUB: kotlin.Int = 0

const val FPE_FLTUND: kotlin.Int = 0

const val FPE_INTDIV: kotlin.Int = 0

const val FPE_INTOVF: kotlin.Int = 0

const val FPE_NOOP: kotlin.Int = 0

const val FP_CHOP: kotlin.Int = 0

const val FP_ILOGB0: kotlin.Int = 0

const val FP_ILOGBNAN: kotlin.Int = 0

const val FP_INFINITE: kotlin.Int = 0

const val FP_NAN: kotlin.Int = 0

const val FP_NORMAL: kotlin.Int = 0

const val FP_PREC_24B: kotlin.Int = 0

const val FP_PREC_53B: kotlin.Int = 0

const val FP_PREC_64B: kotlin.Int = 0

const val FP_QNAN: kotlin.Int = 0

const val FP_RND_DOWN: kotlin.Int = 0

const val FP_RND_NEAR: kotlin.Int = 0

const val FP_RND_UP: kotlin.Int = 0

const val FP_SNAN: kotlin.Int = 0

const val FP_STATE_BYTES: kotlin.Int = 0

const val FP_SUBNORMAL: kotlin.Int = 0

const val FP_SUPERNORMAL: kotlin.Int = 0

const val FP_ZERO: kotlin.Int = 0

const val FREAD: kotlin.Int = 0

const val FSCALE: kotlin.Int = 0

const val FSHIFT: kotlin.Int = 0

const val FTS_AGAIN: kotlin.Int = 0

const val FTS_BLOCK_COMPAR: kotlin.UInt = 0u

const val FTS_COMFOLLOW: kotlin.Int = 0

const val FTS_COMFOLLOWDIR: kotlin.Int = 0

const val FTS_D: kotlin.Int = 0

const val FTS_DC: kotlin.Int = 0

const val FTS_DEFAULT: kotlin.Int = 0

const val FTS_DNR: kotlin.Int = 0

const val FTS_DONTCHDIR: kotlin.Int = 0

const val FTS_DOT: kotlin.Int = 0

const val FTS_DP: kotlin.Int = 0

const val FTS_ERR: kotlin.Int = 0

const val FTS_F: kotlin.Int = 0

const val FTS_FOLLOW: kotlin.Int = 0

const val FTS_INIT: kotlin.Int = 0

const val FTS_ISW: kotlin.Int = 0

const val FTS_LOGICAL: kotlin.Int = 0

const val FTS_MAXLEVEL: kotlin.Int = 0

const val FTS_NAMEONLY: kotlin.Int = 0

const val FTS_NOCHDIR: kotlin.Int = 0

const val FTS_NOINSTR: kotlin.Int = 0

const val FTS_NOSTAT: kotlin.Int = 0

const val FTS_NOSTAT_TYPE: kotlin.Int = 0

const val FTS_NS: kotlin.Int = 0

const val FTS_NSOK: kotlin.Int = 0

const val FTS_OPTIONMASK: kotlin.Int = 0

const val FTS_PHYSICAL: kotlin.Int = 0

const val FTS_ROOTLEVEL: kotlin.Int = 0

const val FTS_ROOTPARENTLEVEL: kotlin.Int = 0

const val FTS_SEEDOT: kotlin.Int = 0

const val FTS_SKIP: kotlin.Int = 0

const val FTS_SL: kotlin.Int = 0

const val FTS_SLNONE: kotlin.Int = 0

const val FTS_STOP: kotlin.Int = 0

const val FTS_SYMFOLLOW: kotlin.Int = 0

const val FTS_W: kotlin.Int = 0

const val FTS_WHITEOUT: kotlin.Int = 0

const val FTS_XDEV: kotlin.Int = 0

const val FTW_CHDIR: kotlin.Int = 0

const val FTW_D: kotlin.Int = 0

const val FTW_DEPTH: kotlin.Int = 0

const val FTW_DNR: kotlin.Int = 0

const val FTW_DP: kotlin.Int = 0

const val FTW_F: kotlin.Int = 0

const val FTW_MOUNT: kotlin.Int = 0

const val FTW_NS: kotlin.Int = 0

const val FTW_PHYS: kotlin.Int = 0

const val FTW_SL: kotlin.Int = 0

const val FTW_SLN: kotlin.Int = 0

const val FWRITE: kotlin.Int = 0

const val F_ADDFILESIGS: kotlin.Int = 0

const val F_ADDFILESIGS_FOR_DYLD_SIM: kotlin.Int = 0

const val F_ADDFILESIGS_RETURN: kotlin.Int = 0

const val F_ADDSIGS: kotlin.Int = 0

const val F_ALLOCATEALL: kotlin.Int = 0

const val F_ALLOCATECONTIG: kotlin.Int = 0

const val F_BARRIERFSYNC: kotlin.Int = 0

const val F_CHECK_LV: kotlin.Int = 0

const val F_CHKCLEAN: kotlin.Int = 0

const val F_DUPFD: kotlin.Int = 0

const val F_DUPFD_CLOEXEC: kotlin.Int = 0

const val F_FINDSIGS: kotlin.Int = 0

const val F_FLUSH_DATA: kotlin.Int = 0

const val F_FREEZE_FS: kotlin.Int = 0

const val F_FULLFSYNC: kotlin.Int = 0

const val F_GETCODEDIR: kotlin.Int = 0

const val F_GETFD: kotlin.Int = 0

const val F_GETFL: kotlin.Int = 0

const val F_GETLK: kotlin.Int = 0

const val F_GETLKPID: kotlin.Int = 0

const val F_GETNOSIGPIPE: kotlin.Int = 0

const val F_GETOWN: kotlin.Int = 0

const val F_GETPATH: kotlin.Int = 0

const val F_GETPATH_MTMINFO: kotlin.Int = 0

const val F_GETPROTECTIONCLASS: kotlin.Int = 0

const val F_GETPROTECTIONLEVEL: kotlin.Int = 0

const val F_GLOBAL_NOCACHE: kotlin.Int = 0

const val F_LOCK: kotlin.Int = 0

const val F_LOG2PHYS: kotlin.Int = 0

const val F_LOG2PHYS_EXT: kotlin.Int = 0

const val F_NOCACHE: kotlin.Int = 0

const val F_NODIRECT: kotlin.Int = 0

const val F_OK: kotlin.Int = 0

const val F_PATHPKG_CHECK: kotlin.Int = 0

const val F_PEOFPOSMODE: kotlin.Int = 0

const val F_PREALLOCATE: kotlin.Int = 0

const val F_PUNCHHOLE: kotlin.Int = 0

const val F_RDADVISE: kotlin.Int = 0

const val F_RDAHEAD: kotlin.Int = 0

const val F_RDLCK: kotlin.Int = 0

const val F_SETBACKINGSTORE: kotlin.Int = 0

const val F_SETFD: kotlin.Int = 0

const val F_SETFL: kotlin.Int = 0

const val F_SETLK: kotlin.Int = 0

const val F_SETLKW: kotlin.Int = 0

const val F_SETLKWTIMEOUT: kotlin.Int = 0

const val F_SETNOSIGPIPE: kotlin.Int = 0

const val F_SETOWN: kotlin.Int = 0

const val F_SETPROTECTIONCLASS: kotlin.Int = 0

const val F_SETSIZE: kotlin.Int = 0

const val F_SINGLE_WRITER: kotlin.Int = 0

const val F_TEST: kotlin.Int = 0

const val F_THAW_FS: kotlin.Int = 0

const val F_TLOCK: kotlin.Int = 0

const val F_TRANSCODEKEY: kotlin.Int = 0

const val F_TRIM_ACTIVE_FILE: kotlin.Int = 0

const val F_ULOCK: kotlin.Int = 0

const val F_UNLCK: kotlin.Int = 0

const val F_VOLPOSMODE: kotlin.Int = 0

const val F_WRLCK: kotlin.Int = 0

const val GID_MAX: kotlin.UInt = 0u

const val HOST_NOT_FOUND: kotlin.Int = 0

const val HUPCL: kotlin.Int = 0

const val ICANON: kotlin.Int = 0

const val ICMP6_DST_UNREACH: kotlin.Int = 0

const val ICMP6_DST_UNREACH_ADDR: kotlin.Int = 0

const val ICMP6_DST_UNREACH_ADMIN: kotlin.Int = 0

const val ICMP6_DST_UNREACH_BEYONDSCOPE: kotlin.Int = 0

const val ICMP6_DST_UNREACH_NOPORT: kotlin.Int = 0

const val ICMP6_DST_UNREACH_NOROUTE: kotlin.Int = 0

const val ICMP6_DST_UNREACH_NOTNEIGHBOR: kotlin.Int = 0

const val ICMP6_ECHO_REPLY: kotlin.Int = 0

const val ICMP6_ECHO_REQUEST: kotlin.Int = 0

const val ICMP6_FILTER: kotlin.Int = 0

const val ICMP6_FQDN_QUERY: kotlin.Int = 0

const val ICMP6_FQDN_REPLY: kotlin.Int = 0

const val ICMP6_INFOMSG_MASK: kotlin.Int = 0

const val ICMP6_MAXTYPE: kotlin.Int = 0

const val ICMP6_MEMBERSHIP_QUERY: kotlin.Int = 0

const val ICMP6_MEMBERSHIP_REDUCTION: kotlin.Int = 0

const val ICMP6_MEMBERSHIP_REPORT: kotlin.Int = 0

const val ICMP6_NI_QUERY: kotlin.Int = 0

const val ICMP6_NI_REFUSED: kotlin.Int = 0

const val ICMP6_NI_REPLY: kotlin.Int = 0

const val ICMP6_NI_SUBJ_FQDN: kotlin.Int = 0

const val ICMP6_NI_SUBJ_IPV4: kotlin.Int = 0

const val ICMP6_NI_SUBJ_IPV6: kotlin.Int = 0

const val ICMP6_NI_SUCCESS: kotlin.Int = 0

const val ICMP6_NI_UNKNOWN: kotlin.Int = 0

const val ICMP6_PACKET_TOO_BIG: kotlin.Int = 0

const val ICMP6_PARAMPROB_HEADER: kotlin.Int = 0

const val ICMP6_PARAMPROB_NEXTHEADER: kotlin.Int = 0

const val ICMP6_PARAMPROB_OPTION: kotlin.Int = 0

const val ICMP6_PARAM_PROB: kotlin.Int = 0

const val ICMP6_ROUTER_RENUMBERING: kotlin.Int = 0

const val ICMP6_ROUTER_RENUMBERING_COMMAND: kotlin.Int = 0

const val ICMP6_ROUTER_RENUMBERING_RESULT: kotlin.Int = 0

const val ICMP6_ROUTER_RENUMBERING_SEQNUM_RESET: kotlin.Int = 0

const val ICMP6_RR_FLAGS_FORCEAPPLY: kotlin.Int = 0

const val ICMP6_RR_FLAGS_PREVDONE: kotlin.Int = 0

const val ICMP6_RR_FLAGS_REQRESULT: kotlin.Int = 0

const val ICMP6_RR_FLAGS_SPECSITE: kotlin.Int = 0

const val ICMP6_RR_FLAGS_TEST: kotlin.Int = 0

const val ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME: kotlin.Int = 0

const val ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME: kotlin.Int = 0

const val ICMP6_RR_PCOUSE_RAFLAGS_AUTO: kotlin.Int = 0

const val ICMP6_RR_PCOUSE_RAFLAGS_ONLINK: kotlin.Int = 0

const val ICMP6_RR_RESULT_FLAGS_FORBIDDEN: kotlin.Int = 0

const val ICMP6_RR_RESULT_FLAGS_OOB: kotlin.Int = 0

const val ICMP6_TIME_EXCEEDED: kotlin.Int = 0

const val ICMP6_TIME_EXCEED_REASSEMBLY: kotlin.Int = 0

const val ICMP6_TIME_EXCEED_TRANSIT: kotlin.Int = 0

const val ICMP6_WRUREPLY: kotlin.Int = 0

const val ICMP6_WRUREQUEST: kotlin.Int = 0

const val ICMPV6CTL_ERRPPSLIMIT: kotlin.Int = 0

const val ICMPV6CTL_MAXID: kotlin.Int = 0

const val ICMPV6CTL_MLD_MAXSRCFILTER: kotlin.Int = 0

const val ICMPV6CTL_MLD_SOMAXSRC: kotlin.Int = 0

const val ICMPV6CTL_MLD_VERSION: kotlin.Int = 0

const val ICMPV6CTL_MTUDISC_HIWAT: kotlin.Int = 0

const val ICMPV6CTL_MTUDISC_LOWAT: kotlin.Int = 0

const val ICMPV6CTL_ND6_ACCEPT_6TO4: kotlin.Int = 0

const val ICMPV6CTL_ND6_DEBUG: kotlin.Int = 0

const val ICMPV6CTL_ND6_DELAY: kotlin.Int = 0

const val ICMPV6CTL_ND6_DRLIST: kotlin.Int = 0

const val ICMPV6CTL_ND6_MAXNUDHINT: kotlin.Int = 0

const val ICMPV6CTL_ND6_MAXQLEN: kotlin.Int = 0

const val ICMPV6CTL_ND6_MMAXTRIES: kotlin.Int = 0

const val ICMPV6CTL_ND6_ONLINKNSRFC4861: kotlin.Int = 0

const val ICMPV6CTL_ND6_OPTIMISTIC_DAD: kotlin.Int = 0

const val ICMPV6CTL_ND6_PRLIST: kotlin.Int = 0

const val ICMPV6CTL_ND6_PRUNE: kotlin.Int = 0

const val ICMPV6CTL_ND6_UMAXTRIES: kotlin.Int = 0

const val ICMPV6CTL_ND6_USELOOPBACK: kotlin.Int = 0

const val ICMPV6CTL_NODEINFO: kotlin.Int = 0

const val ICMPV6CTL_REDIRACCEPT: kotlin.Int = 0

const val ICMPV6CTL_REDIRTIMEOUT: kotlin.Int = 0

const val ICMPV6CTL_STATS: kotlin.Int = 0

const val ICMPV6_PLD_MAXLEN: kotlin.Int = 0

const val ICMP_ADVLENMIN: kotlin.ULong = 0u

const val ICMP_ALTHOSTADDR: kotlin.Int = 0

const val ICMP_DATACONVERR: kotlin.Int = 0

const val ICMP_ECHO: kotlin.Int = 0

const val ICMP_ECHOREPLY: kotlin.Int = 0

const val ICMP_IPV6_IAMHERE: kotlin.Int = 0

const val ICMP_IPV6_WHEREAREYOU: kotlin.Int = 0

const val ICMP_IREQ: kotlin.Int = 0

const val ICMP_IREQREPLY: kotlin.Int = 0

const val ICMP_MASKLEN: kotlin.Int = 0

const val ICMP_MASKREPLY: kotlin.Int = 0

const val ICMP_MASKREQ: kotlin.Int = 0

const val ICMP_MAXTYPE: kotlin.Int = 0

const val ICMP_MINLEN: kotlin.Int = 0

const val ICMP_MOBILE_REDIRECT: kotlin.Int = 0

const val ICMP_MOBILE_REGREPLY: kotlin.Int = 0

const val ICMP_MOBILE_REGREQUEST: kotlin.Int = 0

const val ICMP_PARAMPROB: kotlin.Int = 0

const val ICMP_PARAMPROB_ERRATPTR: kotlin.Int = 0

const val ICMP_PARAMPROB_LENGTH: kotlin.Int = 0

const val ICMP_PARAMPROB_OPTABSENT: kotlin.Int = 0

const val ICMP_PHOTURIS: kotlin.Int = 0

const val ICMP_PHOTURIS_AUTH_FAILED: kotlin.Int = 0

const val ICMP_PHOTURIS_DECRYPT_FAILED: kotlin.Int = 0

const val ICMP_PHOTURIS_UNKNOWN_INDEX: kotlin.Int = 0

const val ICMP_REDIRECT: kotlin.Int = 0

const val ICMP_REDIRECT_HOST: kotlin.Int = 0

const val ICMP_REDIRECT_NET: kotlin.Int = 0

const val ICMP_REDIRECT_TOSHOST: kotlin.Int = 0

const val ICMP_REDIRECT_TOSNET: kotlin.Int = 0

const val ICMP_ROUTERADVERT: kotlin.Int = 0

const val ICMP_ROUTERADVERT_NORMAL: kotlin.Int = 0

const val ICMP_ROUTERADVERT_NOROUTE_COMMON: kotlin.Int = 0

const val ICMP_ROUTERSOLICIT: kotlin.Int = 0

const val ICMP_SKIP: kotlin.Int = 0

const val ICMP_SOURCEQUENCH: kotlin.Int = 0

const val ICMP_TIMXCEED: kotlin.Int = 0

const val ICMP_TIMXCEED_INTRANS: kotlin.Int = 0

const val ICMP_TIMXCEED_REASS: kotlin.Int = 0

const val ICMP_TRACEROUTE: kotlin.Int = 0

const val ICMP_TSLEN: kotlin.ULong = 0u

const val ICMP_TSTAMP: kotlin.Int = 0

const val ICMP_TSTAMPREPLY: kotlin.Int = 0

const val ICMP_UNREACH: kotlin.Int = 0

const val ICMP_UNREACH_FILTER_PROHIB: kotlin.Int = 0

const val ICMP_UNREACH_HOST: kotlin.Int = 0

const val ICMP_UNREACH_HOST_PRECEDENCE: kotlin.Int = 0

const val ICMP_UNREACH_HOST_PROHIB: kotlin.Int = 0

const val ICMP_UNREACH_HOST_UNKNOWN: kotlin.Int = 0

const val ICMP_UNREACH_ISOLATED: kotlin.Int = 0

const val ICMP_UNREACH_NEEDFRAG: kotlin.Int = 0

const val ICMP_UNREACH_NET: kotlin.Int = 0

const val ICMP_UNREACH_NET_PROHIB: kotlin.Int = 0

const val ICMP_UNREACH_NET_UNKNOWN: kotlin.Int = 0

const val ICMP_UNREACH_PORT: kotlin.Int = 0

const val ICMP_UNREACH_PRECEDENCE_CUTOFF: kotlin.Int = 0

const val ICMP_UNREACH_PROTOCOL: kotlin.Int = 0

const val ICMP_UNREACH_SRCFAIL: kotlin.Int = 0

const val ICMP_UNREACH_TOSHOST: kotlin.Int = 0

const val ICMP_UNREACH_TOSNET: kotlin.Int = 0

const val ICRNL: kotlin.Int = 0

const val IEXTEN: kotlin.Int = 0

const val IFCAP_AV: kotlin.Int = 0

const val IFCAP_CSUM_PARTIAL: kotlin.Int = 0

const val IFCAP_CSUM_ZERO_INVERT: kotlin.Int = 0

const val IFCAP_HWCSUM: kotlin.Int = 0

const val IFCAP_HW_TIMESTAMP: kotlin.Int = 0

const val IFCAP_JUMBO_MTU: kotlin.Int = 0

const val IFCAP_LRO: kotlin.Int = 0

const val IFCAP_RXCSUM: kotlin.Int = 0

const val IFCAP_SKYWALK: kotlin.Int = 0

const val IFCAP_SW_TIMESTAMP: kotlin.Int = 0

const val IFCAP_TSO: kotlin.Int = 0

const val IFCAP_TSO4: kotlin.Int = 0

const val IFCAP_TSO6: kotlin.Int = 0

const val IFCAP_TXCSUM: kotlin.Int = 0

const val IFCAP_TXSTATUS: kotlin.Int = 0

const val IFCAP_VALID: kotlin.Int = 0

const val IFCAP_VLAN_HWTAGGING: kotlin.Int = 0

const val IFCAP_VLAN_MTU: kotlin.Int = 0

const val IFF_ALLMULTI: kotlin.Int = 0

const val IFF_ALTPHYS: kotlin.Int = 0

const val IFF_BROADCAST: kotlin.Int = 0

const val IFF_DEBUG: kotlin.Int = 0

const val IFF_LINK0: kotlin.Int = 0

const val IFF_LINK1: kotlin.Int = 0

const val IFF_LINK2: kotlin.Int = 0

const val IFF_LOOPBACK: kotlin.Int = 0

const val IFF_MULTICAST: kotlin.Int = 0

const val IFF_NOARP: kotlin.Int = 0

const val IFF_NOTRAILERS: kotlin.Int = 0

const val IFF_OACTIVE: kotlin.Int = 0

const val IFF_POINTOPOINT: kotlin.Int = 0

const val IFF_PROMISC: kotlin.Int = 0

const val IFF_RUNNING: kotlin.Int = 0

const val IFF_SIMPLEX: kotlin.Int = 0

const val IFF_UP: kotlin.Int = 0

const val IFNAMSIZ: kotlin.Int = 0

const val IFNET_SLOWHZ: kotlin.Int = 0

const val IFQ_MAXLEN: kotlin.Int = 0

const val IFQ_TARGET_DELAY: kotlin.ULong = 0u

const val IFQ_UPDATE_INTERVAL: kotlin.ULong = 0u

const val IFRTYPE_FUNCTIONAL_CELLULAR: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_INTCOPROC: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_LAST: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_LOOPBACK: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_UNKNOWN: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_WIFI_AWDL: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_WIFI_INFRA: kotlin.Int = 0

const val IFRTYPE_FUNCTIONAL_WIRED: kotlin.Int = 0

const val IFSTATMAX: kotlin.Int = 0

const val IF_MAXMTU: kotlin.Int = 0

const val IF_MINMTU: kotlin.Int = 0

const val IF_NAMESIZE: kotlin.Int = 0

const val IF_WAKE_ON_MAGIC_PACKET: kotlin.Int = 0

const val IGNBRK: kotlin.Int = 0

const val IGNCR: kotlin.Int = 0

const val IGNPAR: kotlin.Int = 0

const val ILL_BADSTK: kotlin.Int = 0

const val ILL_COPROC: kotlin.Int = 0

const val ILL_ILLADR: kotlin.Int = 0

const val ILL_ILLOPC: kotlin.Int = 0

const val ILL_ILLOPN: kotlin.Int = 0

const val ILL_ILLTRP: kotlin.Int = 0

const val ILL_NOOP: kotlin.Int = 0

const val ILL_PRVOPC: kotlin.Int = 0

const val ILL_PRVREG: kotlin.Int = 0

const val IMAXBEL: kotlin.Int = 0

const val INADDR_ALLHOSTS_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_ALLMDNS_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_ALLRPTS_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_ALLRTRS_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_ANY: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_BROADCAST: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_CARP_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_LOOPBACK: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_MAX_LOCAL_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_NONE: kotlin.UInt = 0u

const val INADDR_PFSYNC_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INADDR_UNSPEC_GROUP: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val INET6_ADDRSTRLEN: kotlin.Int = 0

const val INET_ADDRSTRLEN: kotlin.Int = 0

const val INLCR: kotlin.Int = 0

const val INPCK: kotlin.Int = 0

const val INT16_MAX: kotlin.Int = 0

const val INT16_MIN: kotlin.Int = 0

const val INT32_MAX: kotlin.Int = 0

const val INT32_MIN: kotlin.Int = 0

const val INT64_MAX: kotlin.Long = 0L

const val INT64_MIN: kotlin.Long = 0L

const val INT8_MAX: kotlin.Int = 0

const val INT8_MIN: kotlin.Int = 0

const val INTMAX_MAX: kotlin.Long = 0L

const val INTMAX_MIN: kotlin.Long = 0L

const val INTPTR_MAX: kotlin.Long = 0L

const val INTPTR_MIN: kotlin.Long = 0L

const val INT_FAST16_MAX: kotlin.Int = 0

const val INT_FAST16_MIN: kotlin.Int = 0

const val INT_FAST32_MAX: kotlin.Int = 0

const val INT_FAST32_MIN: kotlin.Int = 0

const val INT_FAST64_MAX: kotlin.Long = 0L

const val INT_FAST64_MIN: kotlin.Long = 0L

const val INT_FAST8_MAX: kotlin.Int = 0

const val INT_FAST8_MIN: kotlin.Int = 0

const val INT_LEAST16_MAX: kotlin.Int = 0

const val INT_LEAST16_MIN: kotlin.Int = 0

const val INT_LEAST32_MAX: kotlin.Int = 0

const val INT_LEAST32_MIN: kotlin.Int = 0

const val INT_LEAST64_MAX: kotlin.Long = 0L

const val INT_LEAST64_MIN: kotlin.Long = 0L

const val INT_LEAST8_MAX: kotlin.Int = 0

const val INT_LEAST8_MIN: kotlin.Int = 0

const val INT_MAX: kotlin.Int = 0

const val INT_MIN: kotlin.Int = 0

const val IN_CLASSA_HOST: kotlin.Int = 0

const val IN_CLASSA_MAX: kotlin.Int = 0

const val IN_CLASSA_NET: kotlin.UInt = 0u

const val IN_CLASSA_NSHIFT: kotlin.Int = 0

const val IN_CLASSB_HOST: kotlin.Int = 0

const val IN_CLASSB_MAX: kotlin.Int = 0

const val IN_CLASSB_NET: kotlin.UInt = 0u

const val IN_CLASSB_NSHIFT: kotlin.Int = 0

const val IN_CLASSC_HOST: kotlin.Int = 0

const val IN_CLASSC_NET: kotlin.UInt = 0u

const val IN_CLASSC_NSHIFT: kotlin.Int = 0

const val IN_CLASSD_HOST: kotlin.Int = 0

const val IN_CLASSD_NET: kotlin.UInt = 0u

const val IN_CLASSD_NSHIFT: kotlin.Int = 0

const val IN_LINKLOCALNETNUM: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val IN_LOOPBACKNET: kotlin.Int = 0

const val IOCPARM_MASK: kotlin.Int = 0

const val IOCPARM_MAX: kotlin.Int = 0

const val IOC_DIRMASK: platform.posix.__uint32_t /* = kotlin.UInt */ = 0u

const val IOC_IN: platform.posix.__uint32_t /* = kotlin.UInt */ = 0u

const val IOC_INOUT: kotlin.UInt = 0u

const val IOC_OUT: platform.posix.__uint32_t /* = kotlin.UInt */ = 0u

const val IOC_VOID: platform.posix.__uint32_t /* = kotlin.UInt */ = 0u

const val IOPOL_APPLICATION: kotlin.Int = 0

const val IOPOL_ATIME_UPDATES_DEFAULT: kotlin.Int = 0

const val IOPOL_ATIME_UPDATES_OFF: kotlin.Int = 0

const val IOPOL_DEFAULT: kotlin.Int = 0

const val IOPOL_IMPORTANT: kotlin.Int = 0

const val IOPOL_NORMAL: kotlin.Int = 0

const val IOPOL_PASSIVE: kotlin.Int = 0

const val IOPOL_SCOPE_DARWIN_BG: kotlin.Int = 0

const val IOPOL_SCOPE_PROCESS: kotlin.Int = 0

const val IOPOL_SCOPE_THREAD: kotlin.Int = 0

const val IOPOL_STANDARD: kotlin.Int = 0

const val IOPOL_THROTTLE: kotlin.Int = 0

const val IOPOL_TYPE_DISK: kotlin.Int = 0

const val IOPOL_TYPE_VFS_ATIME_UPDATES: kotlin.Int = 0

const val IOPOL_UTILITY: kotlin.Int = 0

const val IOV_MAX: kotlin.Int = 0

const val IP6FLOW_DSCP_MASK: kotlin.Int = 0

const val IP6FLOW_DSCP_SHIFT: kotlin.Int = 0

const val IP6F_MORE_FRAG: kotlin.Int = 0

const val IP6F_OFF_MASK: kotlin.Int = 0

const val IP6F_RESERVED_MASK: kotlin.Int = 0

const val IP6OPT_EID: kotlin.Int = 0

const val IP6OPT_JUMBO: kotlin.Int = 0

const val IP6OPT_JUMBO_LEN: kotlin.Int = 0

const val IP6OPT_MINLEN: kotlin.Int = 0

const val IP6OPT_MUTABLE: kotlin.Int = 0

const val IP6OPT_NSAP_ADDR: kotlin.Int = 0

const val IP6OPT_PAD1: kotlin.Int = 0

const val IP6OPT_PADN: kotlin.Int = 0

const val IP6OPT_ROUTER_ALERT: kotlin.Int = 0

const val IP6OPT_RTALERT: kotlin.Int = 0

const val IP6OPT_RTALERT_ACTNET: kotlin.Int = 0

const val IP6OPT_RTALERT_LEN: kotlin.Int = 0

const val IP6OPT_RTALERT_MLD: kotlin.Int = 0

const val IP6OPT_RTALERT_RSVP: kotlin.Int = 0

const val IP6OPT_TUNNEL_LIMIT: kotlin.Int = 0

const val IP6OPT_TYPE_DISCARD: kotlin.Int = 0

const val IP6OPT_TYPE_FORCEICMP: kotlin.Int = 0

const val IP6OPT_TYPE_ICMP: kotlin.Int = 0

const val IP6OPT_TYPE_SKIP: kotlin.Int = 0

const val IP6TOS_CE: kotlin.Int = 0

const val IP6TOS_ECT: kotlin.Int = 0

const val IP6_ALERT_AN: kotlin.Int = 0

const val IP6_ALERT_MLD: kotlin.Int = 0

const val IP6_ALERT_RSVP: kotlin.Int = 0

const val IPCTL_ACCEPTSOURCEROUTE: kotlin.Int = 0

const val IPCTL_DEFTTL: kotlin.Int = 0

const val IPCTL_DIRECTEDBROADCAST: kotlin.Int = 0

const val IPCTL_FASTFORWARDING: kotlin.Int = 0

const val IPCTL_FORWARDING: kotlin.Int = 0

const val IPCTL_GIF_TTL: kotlin.Int = 0

const val IPCTL_INTRQDROPS: kotlin.Int = 0

const val IPCTL_INTRQMAXLEN: kotlin.Int = 0

const val IPCTL_KEEPFAITH: kotlin.Int = 0

const val IPCTL_MAXID: kotlin.Int = 0

const val IPCTL_RTEXPIRE: kotlin.Int = 0

const val IPCTL_RTMAXCACHE: kotlin.Int = 0

const val IPCTL_RTMINEXPIRE: kotlin.Int = 0

const val IPCTL_SENDREDIRECTS: kotlin.Int = 0

const val IPCTL_SOURCEROUTE: kotlin.Int = 0

const val IPCTL_STATS: kotlin.Int = 0

const val IPC_CREAT: kotlin.Int = 0

const val IPC_EXCL: kotlin.Int = 0

const val IPC_M: kotlin.Int = 0

const val IPC_NOWAIT: kotlin.Int = 0

const val IPC_PRIVATE: platform.posix.key_t /* = kotlin.Int */ = 0

const val IPC_R: kotlin.Int = 0

const val IPC_RMID: kotlin.Int = 0

const val IPC_SET: kotlin.Int = 0

const val IPC_STAT: kotlin.Int = 0

const val IPC_W: kotlin.Int = 0

const val IPDEFTTL: kotlin.Int = 0

const val IPFRAGTTL: kotlin.Int = 0

const val IPOPT_CONTROL: kotlin.Int = 0

const val IPOPT_DEBMEAS: kotlin.Int = 0

const val IPOPT_EOL: kotlin.Int = 0

const val IPOPT_LSRR: kotlin.Int = 0

const val IPOPT_MINOFF: kotlin.Int = 0

const val IPOPT_NOP: kotlin.Int = 0

const val IPOPT_OFFSET: kotlin.Int = 0

const val IPOPT_OLEN: kotlin.Int = 0

const val IPOPT_OPTVAL: kotlin.Int = 0

const val IPOPT_RA: kotlin.Int = 0

const val IPOPT_RESERVED1: kotlin.Int = 0

const val IPOPT_RESERVED2: kotlin.Int = 0

const val IPOPT_RR: kotlin.Int = 0

const val IPOPT_SATID: kotlin.Int = 0

const val IPOPT_SECURITY: kotlin.Int = 0

const val IPOPT_SECUR_CONFID: kotlin.Int = 0

const val IPOPT_SECUR_EFTO: kotlin.Int = 0

const val IPOPT_SECUR_MMMM: kotlin.Int = 0

const val IPOPT_SECUR_RESTR: kotlin.Int = 0

const val IPOPT_SECUR_SECRET: kotlin.Int = 0

const val IPOPT_SECUR_TOPSECRET: kotlin.Int = 0

const val IPOPT_SECUR_UNCLASS: kotlin.Int = 0

const val IPOPT_SSRR: kotlin.Int = 0

const val IPOPT_TS: kotlin.Int = 0

const val IPOPT_TS_PRESPEC: kotlin.Int = 0

const val IPOPT_TS_TSANDADDR: kotlin.Int = 0

const val IPOPT_TS_TSONLY: kotlin.Int = 0

const val IPPORT_HIFIRSTAUTO: kotlin.Int = 0

const val IPPORT_HILASTAUTO: kotlin.Int = 0

const val IPPORT_RESERVED: kotlin.Int = 0

const val IPPORT_RESERVEDSTART: kotlin.Int = 0

const val IPPORT_USERRESERVED: kotlin.Int = 0

const val IPPROTO_3PC: kotlin.Int = 0

const val IPPROTO_ADFS: kotlin.Int = 0

const val IPPROTO_AH: kotlin.Int = 0

const val IPPROTO_AHIP: kotlin.Int = 0

const val IPPROTO_APES: kotlin.Int = 0

const val IPPROTO_ARGUS: kotlin.Int = 0

const val IPPROTO_AX25: kotlin.Int = 0

const val IPPROTO_BHA: kotlin.Int = 0

const val IPPROTO_BLT: kotlin.Int = 0

const val IPPROTO_BRSATMON: kotlin.Int = 0

const val IPPROTO_CFTP: kotlin.Int = 0

const val IPPROTO_CHAOS: kotlin.Int = 0

const val IPPROTO_CMTP: kotlin.Int = 0

const val IPPROTO_CPHB: kotlin.Int = 0

const val IPPROTO_CPNX: kotlin.Int = 0

const val IPPROTO_DDP: kotlin.Int = 0

const val IPPROTO_DGP: kotlin.Int = 0

const val IPPROTO_DIVERT: kotlin.Int = 0

const val IPPROTO_DONE: kotlin.Int = 0

const val IPPROTO_DSTOPTS: kotlin.Int = 0

const val IPPROTO_EGP: kotlin.Int = 0

const val IPPROTO_EMCON: kotlin.Int = 0

const val IPPROTO_ENCAP: kotlin.Int = 0

const val IPPROTO_EON: kotlin.Int = 0

const val IPPROTO_ESP: kotlin.Int = 0

const val IPPROTO_ETHERIP: kotlin.Int = 0

const val IPPROTO_FRAGMENT: kotlin.Int = 0

const val IPPROTO_GGP: kotlin.Int = 0

const val IPPROTO_GMTP: kotlin.Int = 0

const val IPPROTO_GRE: kotlin.Int = 0

const val IPPROTO_HELLO: kotlin.Int = 0

const val IPPROTO_HMP: kotlin.Int = 0

const val IPPROTO_HOPOPTS: kotlin.Int = 0

const val IPPROTO_ICMP: kotlin.Int = 0

const val IPPROTO_ICMPV6: kotlin.Int = 0

const val IPPROTO_IDP: kotlin.Int = 0

const val IPPROTO_IDPR: kotlin.Int = 0

const val IPPROTO_IDRP: kotlin.Int = 0

const val IPPROTO_IGMP: kotlin.Int = 0

const val IPPROTO_IGP: kotlin.Int = 0

const val IPPROTO_IGRP: kotlin.Int = 0

const val IPPROTO_IL: kotlin.Int = 0

const val IPPROTO_INLSP: kotlin.Int = 0

const val IPPROTO_INP: kotlin.Int = 0

const val IPPROTO_IP: kotlin.Int = 0

const val IPPROTO_IPCOMP: kotlin.Int = 0

const val IPPROTO_IPCV: kotlin.Int = 0

const val IPPROTO_IPEIP: kotlin.Int = 0

const val IPPROTO_IPIP: kotlin.Int = 0

const val IPPROTO_IPPC: kotlin.Int = 0

const val IPPROTO_IPV4: kotlin.Int = 0

const val IPPROTO_IPV6: kotlin.Int = 0

const val IPPROTO_IRTP: kotlin.Int = 0

const val IPPROTO_KRYPTOLAN: kotlin.Int = 0

const val IPPROTO_LARP: kotlin.Int = 0

const val IPPROTO_LEAF1: kotlin.Int = 0

const val IPPROTO_LEAF2: kotlin.Int = 0

const val IPPROTO_MAX: kotlin.Int = 0

const val IPPROTO_MAXID: kotlin.Int = 0

const val IPPROTO_MEAS: kotlin.Int = 0

const val IPPROTO_MHRP: kotlin.Int = 0

const val IPPROTO_MICP: kotlin.Int = 0

const val IPPROTO_MTP: kotlin.Int = 0

const val IPPROTO_MUX: kotlin.Int = 0

const val IPPROTO_ND: kotlin.Int = 0

const val IPPROTO_NHRP: kotlin.Int = 0

const val IPPROTO_NONE: kotlin.Int = 0

const val IPPROTO_NSP: kotlin.Int = 0

const val IPPROTO_NVPII: kotlin.Int = 0

const val IPPROTO_OSPFIGP: kotlin.Int = 0

const val IPPROTO_PGM: kotlin.Int = 0

const val IPPROTO_PIGP: kotlin.Int = 0

const val IPPROTO_PIM: kotlin.Int = 0

const val IPPROTO_PRM: kotlin.Int = 0

const val IPPROTO_PUP: kotlin.Int = 0

const val IPPROTO_PVP: kotlin.Int = 0

const val IPPROTO_RAW: kotlin.Int = 0

const val IPPROTO_RCCMON: kotlin.Int = 0

const val IPPROTO_RDP: kotlin.Int = 0

const val IPPROTO_ROUTING: kotlin.Int = 0

const val IPPROTO_RSVP: kotlin.Int = 0

const val IPPROTO_RVD: kotlin.Int = 0

const val IPPROTO_SATEXPAK: kotlin.Int = 0

const val IPPROTO_SATMON: kotlin.Int = 0

const val IPPROTO_SCCSP: kotlin.Int = 0

const val IPPROTO_SCTP: kotlin.Int = 0

const val IPPROTO_SDRP: kotlin.Int = 0

const val IPPROTO_SEP: kotlin.Int = 0

const val IPPROTO_SRPC: kotlin.Int = 0

const val IPPROTO_ST: kotlin.Int = 0

const val IPPROTO_SVMTP: kotlin.Int = 0

const val IPPROTO_SWIPE: kotlin.Int = 0

const val IPPROTO_TCF: kotlin.Int = 0

const val IPPROTO_TCP: kotlin.Int = 0

const val IPPROTO_TP: kotlin.Int = 0

const val IPPROTO_TPXX: kotlin.Int = 0

const val IPPROTO_TRUNK1: kotlin.Int = 0

const val IPPROTO_TRUNK2: kotlin.Int = 0

const val IPPROTO_TTP: kotlin.Int = 0

const val IPPROTO_UDP: kotlin.Int = 0

const val IPPROTO_VINES: kotlin.Int = 0

const val IPPROTO_VISA: kotlin.Int = 0

const val IPPROTO_VMTP: kotlin.Int = 0

const val IPPROTO_WBEXPAK: kotlin.Int = 0

const val IPPROTO_WBMON: kotlin.Int = 0

const val IPPROTO_WSN: kotlin.Int = 0

const val IPPROTO_XNET: kotlin.Int = 0

const val IPPROTO_XTP: kotlin.Int = 0

const val IPTOS_CE: kotlin.Int = 0

const val IPTOS_DSCP_SHIFT: kotlin.Int = 0

const val IPTOS_ECN_CE: kotlin.Int = 0

const val IPTOS_ECN_ECT0: kotlin.Int = 0

const val IPTOS_ECN_ECT1: kotlin.Int = 0

const val IPTOS_ECN_MASK: kotlin.Int = 0

const val IPTOS_ECN_NOTECT: kotlin.Int = 0

const val IPTOS_ECT: kotlin.Int = 0

const val IPTOS_LOWDELAY: kotlin.Int = 0

const val IPTOS_MINCOST: kotlin.Int = 0

const val IPTOS_PREC_CRITIC_ECP: kotlin.Int = 0

const val IPTOS_PREC_FLASH: kotlin.Int = 0

const val IPTOS_PREC_FLASHOVERRIDE: kotlin.Int = 0

const val IPTOS_PREC_IMMEDIATE: kotlin.Int = 0

const val IPTOS_PREC_INTERNETCONTROL: kotlin.Int = 0

const val IPTOS_PREC_NETCONTROL: kotlin.Int = 0

const val IPTOS_PREC_PRIORITY: kotlin.Int = 0

const val IPTOS_PREC_ROUTINE: kotlin.Int = 0

const val IPTOS_RELIABILITY: kotlin.Int = 0

const val IPTOS_THROUGHPUT: kotlin.Int = 0

const val IPTTLDEC: kotlin.Int = 0

const val IPV6CTL_ACCEPT_RTADV: kotlin.Int = 0

const val IPV6CTL_ADDRCTLPOLICY: kotlin.Int = 0

const val IPV6CTL_AUTO_FLOWLABEL: kotlin.Int = 0

const val IPV6CTL_AUTO_LINKLOCAL: kotlin.Int = 0

const val IPV6CTL_DAD_COUNT: kotlin.Int = 0

const val IPV6CTL_DEFHLIM: kotlin.Int = 0

const val IPV6CTL_DEFMCASTHLIM: kotlin.Int = 0

const val IPV6CTL_FORWARDING: kotlin.Int = 0

const val IPV6CTL_FORWSRCRT: kotlin.Int = 0

const val IPV6CTL_GIF_HLIM: kotlin.Int = 0

const val IPV6CTL_HDRNESTLIMIT: kotlin.Int = 0

const val IPV6CTL_KAME_VERSION: kotlin.Int = 0

const val IPV6CTL_KEEPFAITH: kotlin.Int = 0

const val IPV6CTL_LOG_INTERVAL: kotlin.Int = 0

const val IPV6CTL_MAXDYNROUTES: kotlin.Int = 0

const val IPV6CTL_MAXFRAGPACKETS: kotlin.Int = 0

const val IPV6CTL_MAXFRAGS: kotlin.Int = 0

const val IPV6CTL_MAXID: kotlin.Int = 0

const val IPV6CTL_MAXIFDEFROUTERS: kotlin.Int = 0

const val IPV6CTL_MAXIFPREFIXES: kotlin.Int = 0

const val IPV6CTL_MCAST_PMTU: kotlin.Int = 0

const val IPV6CTL_MRTPROTO: kotlin.Int = 0

const val IPV6CTL_MRTSTATS: kotlin.Int = 0

const val IPV6CTL_NEIGHBORGCTHRESH: kotlin.Int = 0

const val IPV6CTL_PREFER_TEMPADDR: kotlin.Int = 0

const val IPV6CTL_RIP6STATS: kotlin.Int = 0

const val IPV6CTL_RR_PRUNE: kotlin.Int = 0

const val IPV6CTL_RTEXPIRE: kotlin.Int = 0

const val IPV6CTL_RTMAXCACHE: kotlin.Int = 0

const val IPV6CTL_RTMINEXPIRE: kotlin.Int = 0

const val IPV6CTL_SENDREDIRECTS: kotlin.Int = 0

const val IPV6CTL_SOURCECHECK: kotlin.Int = 0

const val IPV6CTL_SOURCECHECK_LOGINT: kotlin.Int = 0

const val IPV6CTL_STATS: kotlin.Int = 0

const val IPV6CTL_TEMPPLTIME: kotlin.Int = 0

const val IPV6CTL_TEMPVLTIME: kotlin.Int = 0

const val IPV6CTL_USETEMPADDR: kotlin.Int = 0

const val IPV6CTL_USE_DEFAULTZONE: kotlin.Int = 0

const val IPV6CTL_USE_DEPRECATED: kotlin.Int = 0

const val IPV6CTL_V6ONLY: kotlin.Int = 0

const val IPV6PORT_ANONMAX: kotlin.Int = 0

const val IPV6PORT_ANONMIN: kotlin.Int = 0

const val IPV6PORT_RESERVED: kotlin.Int = 0

const val IPV6PORT_RESERVEDMAX: kotlin.Int = 0

const val IPV6PORT_RESERVEDMIN: kotlin.Int = 0

const val IPV6PROTO_MAXID: kotlin.Int = 0

const val IPV6_2292DSTOPTS: kotlin.Int = 0

const val IPV6_2292HOPLIMIT: kotlin.Int = 0

const val IPV6_2292HOPOPTS: kotlin.Int = 0

const val IPV6_2292NEXTHOP: kotlin.Int = 0

const val IPV6_2292PKTINFO: kotlin.Int = 0

const val IPV6_2292PKTOPTIONS: kotlin.Int = 0

const val IPV6_2292RTHDR: kotlin.Int = 0

const val IPV6_BINDV6ONLY: kotlin.Int = 0

const val IPV6_BOUND_IF: kotlin.Int = 0

const val IPV6_CHECKSUM: kotlin.Int = 0

const val IPV6_DEFAULT_MULTICAST_HOPS: kotlin.Int = 0

const val IPV6_DEFAULT_MULTICAST_LOOP: kotlin.Int = 0

const val IPV6_DEFHLIM: kotlin.Int = 0

const val IPV6_FAITH: kotlin.Int = 0

const val IPV6_FLOWINFO_MASK: kotlin.UInt = 0u

const val IPV6_FLOWLABEL_MASK: kotlin.UInt = 0u

const val IPV6_FLOW_ECN_MASK: kotlin.Int = 0

const val IPV6_FRAGTTL: kotlin.Int = 0

const val IPV6_FW_ADD: kotlin.Int = 0

const val IPV6_FW_DEL: kotlin.Int = 0

const val IPV6_FW_FLUSH: kotlin.Int = 0

const val IPV6_FW_GET: kotlin.Int = 0

const val IPV6_FW_ZERO: kotlin.Int = 0

const val IPV6_HLIMDEC: kotlin.Int = 0

const val IPV6_IPSEC_POLICY: kotlin.Int = 0

const val IPV6_JOIN_GROUP: kotlin.Int = 0

const val IPV6_LEAVE_GROUP: kotlin.Int = 0

const val IPV6_MAXHLIM: kotlin.Int = 0

const val IPV6_MAXOPTHDR: kotlin.Int = 0

const val IPV6_MAXPACKET: kotlin.Int = 0

const val IPV6_MAX_GROUP_SRC_FILTER: kotlin.Int = 0

const val IPV6_MAX_MEMBERSHIPS: kotlin.Int = 0

const val IPV6_MAX_SOCK_SRC_FILTER: kotlin.Int = 0

const val IPV6_MIN_MEMBERSHIPS: kotlin.Int = 0

const val IPV6_MMTU: kotlin.Int = 0

const val IPV6_MULTICAST_HOPS: kotlin.Int = 0

const val IPV6_MULTICAST_IF: kotlin.Int = 0

const val IPV6_MULTICAST_LOOP: kotlin.Int = 0

const val IPV6_PORTRANGE: kotlin.Int = 0

const val IPV6_PORTRANGE_DEFAULT: kotlin.Int = 0

const val IPV6_PORTRANGE_HIGH: kotlin.Int = 0

const val IPV6_PORTRANGE_LOW: kotlin.Int = 0

const val IPV6_RECVTCLASS: kotlin.Int = 0

const val IPV6_RTHDR_LOOSE: kotlin.Int = 0

const val IPV6_RTHDR_STRICT: kotlin.Int = 0

const val IPV6_RTHDR_TYPE_0: kotlin.Int = 0

const val IPV6_SOCKOPT_RESERVED1: kotlin.Int = 0

const val IPV6_TCLASS: kotlin.Int = 0

const val IPV6_UNICAST_HOPS: kotlin.Int = 0

const val IPV6_V6ONLY: kotlin.Int = 0

const val IPV6_VERSION: kotlin.Int = 0

const val IPV6_VERSION_MASK: kotlin.Int = 0

const val IPVERSION: kotlin.Int = 0

const val IP_ADD_MEMBERSHIP: kotlin.Int = 0

const val IP_ADD_SOURCE_MEMBERSHIP: kotlin.Int = 0

const val IP_BLOCK_SOURCE: kotlin.Int = 0

const val IP_BOUND_IF: kotlin.Int = 0

const val IP_DEFAULT_MULTICAST_LOOP: kotlin.Int = 0

const val IP_DEFAULT_MULTICAST_TTL: kotlin.Int = 0

const val IP_DF: kotlin.Int = 0

const val IP_DROP_MEMBERSHIP: kotlin.Int = 0

const val IP_DROP_SOURCE_MEMBERSHIP: kotlin.Int = 0

const val IP_DUMMYNET_CONFIGURE: kotlin.Int = 0

const val IP_DUMMYNET_DEL: kotlin.Int = 0

const val IP_DUMMYNET_FLUSH: kotlin.Int = 0

const val IP_DUMMYNET_GET: kotlin.Int = 0

const val IP_FAITH: kotlin.Int = 0

const val IP_FW_ADD: kotlin.Int = 0

const val IP_FW_DEL: kotlin.Int = 0

const val IP_FW_FLUSH: kotlin.Int = 0

const val IP_FW_GET: kotlin.Int = 0

const val IP_FW_RESETLOG: kotlin.Int = 0

const val IP_FW_ZERO: kotlin.Int = 0

const val IP_HDRINCL: kotlin.Int = 0

const val IP_IPSEC_POLICY: kotlin.Int = 0

const val IP_MAXPACKET: kotlin.Int = 0

const val IP_MAX_GROUP_SRC_FILTER: kotlin.Int = 0

const val IP_MAX_MEMBERSHIPS: kotlin.Int = 0

const val IP_MAX_SOCK_MUTE_FILTER: kotlin.Int = 0

const val IP_MAX_SOCK_SRC_FILTER: kotlin.Int = 0

const val IP_MF: kotlin.Int = 0

const val IP_MIN_MEMBERSHIPS: kotlin.Int = 0

const val IP_MSFILTER: kotlin.Int = 0

const val IP_MSS: kotlin.Int = 0

const val IP_MULTICAST_IF: kotlin.Int = 0

const val IP_MULTICAST_IFINDEX: kotlin.Int = 0

const val IP_MULTICAST_LOOP: kotlin.Int = 0

const val IP_MULTICAST_TTL: kotlin.Int = 0

const val IP_MULTICAST_VIF: kotlin.Int = 0

const val IP_NAT__XXX: kotlin.Int = 0

const val IP_OFFMASK: kotlin.Int = 0

const val IP_OLD_FW_ADD: kotlin.Int = 0

const val IP_OLD_FW_DEL: kotlin.Int = 0

const val IP_OLD_FW_FLUSH: kotlin.Int = 0

const val IP_OLD_FW_GET: kotlin.Int = 0

const val IP_OLD_FW_RESETLOG: kotlin.Int = 0

const val IP_OLD_FW_ZERO: kotlin.Int = 0

const val IP_OPTIONS: kotlin.Int = 0

const val IP_PKTINFO: kotlin.Int = 0

const val IP_PORTRANGE: kotlin.Int = 0

const val IP_PORTRANGE_DEFAULT: kotlin.Int = 0

const val IP_PORTRANGE_HIGH: kotlin.Int = 0

const val IP_PORTRANGE_LOW: kotlin.Int = 0

const val IP_RECVDSTADDR: kotlin.Int = 0

const val IP_RECVIF: kotlin.Int = 0

const val IP_RECVOPTS: kotlin.Int = 0

const val IP_RECVPKTINFO: kotlin.Int = 0

const val IP_RECVRETOPTS: kotlin.Int = 0

const val IP_RECVTOS: kotlin.Int = 0

const val IP_RECVTTL: kotlin.Int = 0

const val IP_RETOPTS: kotlin.Int = 0

const val IP_RF: kotlin.Int = 0

const val IP_RSVP_OFF: kotlin.Int = 0

const val IP_RSVP_ON: kotlin.Int = 0

const val IP_RSVP_VIF_OFF: kotlin.Int = 0

const val IP_RSVP_VIF_ON: kotlin.Int = 0

const val IP_STRIPHDR: kotlin.Int = 0

const val IP_TOS: kotlin.Int = 0

const val IP_TRAFFIC_MGT_BACKGROUND: kotlin.Int = 0

const val IP_TTL: kotlin.Int = 0

const val IP_UNBLOCK_SOURCE: kotlin.Int = 0

const val ISIG: kotlin.Int = 0

const val ISTRIP: kotlin.Int = 0

const val ITIMER_PROF: kotlin.Int = 0

const val ITIMER_REAL: kotlin.Int = 0

const val ITIMER_VIRTUAL: kotlin.Int = 0

const val IUTF8: kotlin.Int = 0

const val IXANY: kotlin.Int = 0

const val IXOFF: kotlin.Int = 0

const val IXON: kotlin.Int = 0

const val KAUTH_ACE_ALARM: kotlin.Int = 0

const val KAUTH_ACE_AUDIT: kotlin.Int = 0

const val KAUTH_ACE_DENY: kotlin.Int = 0

const val KAUTH_ACE_DIRECTORY_INHERIT: kotlin.Int = 0

const val KAUTH_ACE_FAILURE: kotlin.Int = 0

const val KAUTH_ACE_FILE_INHERIT: kotlin.Int = 0

const val KAUTH_ACE_GENERIC_ALL: kotlin.Int = 0

const val KAUTH_ACE_GENERIC_EXECUTE: kotlin.Int = 0

const val KAUTH_ACE_GENERIC_READ: kotlin.Int = 0

const val KAUTH_ACE_GENERIC_WRITE: kotlin.Int = 0

const val KAUTH_ACE_INHERITED: kotlin.Int = 0

const val KAUTH_ACE_INHERIT_CONTROL_FLAGS: kotlin.Int = 0

const val KAUTH_ACE_KINDMASK: kotlin.Int = 0

const val KAUTH_ACE_LIMIT_INHERIT: kotlin.Int = 0

const val KAUTH_ACE_ONLY_INHERIT: kotlin.Int = 0

const val KAUTH_ACE_PERMIT: kotlin.Int = 0

const val KAUTH_ACE_SUCCESS: kotlin.Int = 0

const val KAUTH_ACL_DEFER_INHERIT: kotlin.Int = 0

const val KAUTH_ACL_FLAGS_PRIVATE: kotlin.Int = 0

const val KAUTH_ACL_MAX_ENTRIES: kotlin.Int = 0

const val KAUTH_ACL_NO_INHERIT: kotlin.Int = 0

const val KAUTH_CLEAR_CACHES: kotlin.Int = 0

const val KAUTH_ENDIAN_DISK: kotlin.Int = 0

const val KAUTH_ENDIAN_HOST: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_BADRQ: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_DEREGISTER: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_FAILURE: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_FATAL: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_INPROG: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_ISMEMBER: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_REGISTER: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_RESULT: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_SUCCESS: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_GGUID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_GID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_GRNAM: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_GSID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_MEMBERSHIP: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_PWNAM: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_SUPGRPS: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_UGUID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_UID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_VALID_USID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_GGUID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_GID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_GRNAM: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_GSID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_MEMBERSHIP: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_PWNAM: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_SUPGRPS: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_UGUID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_UID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WANT_USID: kotlin.Int = 0

const val KAUTH_EXTLOOKUP_WORKER: kotlin.Int = 0

const val KAUTH_FILESEC_DEFER_INHERIT: kotlin.Int = 0

const val KAUTH_FILESEC_FLAGS_PRIVATE: kotlin.Int = 0

const val KAUTH_FILESEC_MAGIC: kotlin.Int = 0

const val KAUTH_FILESEC_NOACL: platform.posix.u_int32_t /* = kotlin.UInt */ = 0u

const val KAUTH_FILESEC_NO_INHERIT: kotlin.Int = 0

const val KAUTH_GET_CACHE_SIZES: kotlin.Int = 0

const val KAUTH_GID_NONE: kotlin.UInt = 0u

const val KAUTH_GUID_SIZE: kotlin.Int = 0

const val KAUTH_NTSID_HDRSIZE: kotlin.Int = 0

const val KAUTH_NTSID_MAX_AUTHORITIES: kotlin.Int = 0

const val KAUTH_SET_CACHE_SIZES: kotlin.Int = 0

const val KAUTH_UID_NONE: kotlin.UInt = 0u

const val KAUTH_VNODE_ACCESS: kotlin.Int = 0

const val KAUTH_VNODE_ADD_FILE: kotlin.Int = 0

const val KAUTH_VNODE_ADD_SUBDIRECTORY: kotlin.Int = 0

const val KAUTH_VNODE_APPEND_DATA: kotlin.Int = 0

const val KAUTH_VNODE_CHANGE_OWNER: kotlin.Int = 0

const val KAUTH_VNODE_CHECKIMMUTABLE: kotlin.Int = 0

const val KAUTH_VNODE_DELETE: kotlin.Int = 0

const val KAUTH_VNODE_DELETE_CHILD: kotlin.Int = 0

const val KAUTH_VNODE_EXECUTE: kotlin.Int = 0

const val KAUTH_VNODE_GENERIC_ALL_BITS: kotlin.Int = 0

const val KAUTH_VNODE_GENERIC_EXECUTE_BITS: kotlin.Int = 0

const val KAUTH_VNODE_GENERIC_READ_BITS: kotlin.Int = 0

const val KAUTH_VNODE_GENERIC_WRITE_BITS: kotlin.Int = 0

const val KAUTH_VNODE_LINKTARGET: kotlin.Int = 0

const val KAUTH_VNODE_LIST_DIRECTORY: kotlin.Int = 0

const val KAUTH_VNODE_NOIMMUTABLE: kotlin.Int = 0

const val KAUTH_VNODE_READ_ATTRIBUTES: kotlin.Int = 0

const val KAUTH_VNODE_READ_DATA: kotlin.Int = 0

const val KAUTH_VNODE_READ_EXTATTRIBUTES: kotlin.Int = 0

const val KAUTH_VNODE_READ_SECURITY: kotlin.Int = 0

const val KAUTH_VNODE_SEARCH: kotlin.Int = 0

const val KAUTH_VNODE_SEARCHBYANYONE: kotlin.Int = 0

const val KAUTH_VNODE_SYNCHRONIZE: kotlin.Int = 0

const val KAUTH_VNODE_TAKE_OWNERSHIP: kotlin.Int = 0

const val KAUTH_VNODE_WRITE_ATTRIBUTES: kotlin.Int = 0

const val KAUTH_VNODE_WRITE_DATA: kotlin.Int = 0

const val KAUTH_VNODE_WRITE_EXTATTRIBUTES: kotlin.Int = 0

const val KAUTH_VNODE_WRITE_RIGHTS: kotlin.Int = 0

const val KAUTH_VNODE_WRITE_SECURITY: kotlin.Int = 0

const val KEV_DL_ADDMULTI: kotlin.Int = 0

const val KEV_DL_AWDL_RESTRICTED: kotlin.Int = 0

const val KEV_DL_AWDL_UNRESTRICTED: kotlin.Int = 0

const val KEV_DL_DELMULTI: kotlin.Int = 0

const val KEV_DL_IFCAP_CHANGED: kotlin.Int = 0

const val KEV_DL_IFDELEGATE_CHANGED: kotlin.Int = 0

const val KEV_DL_IF_ATTACHED: kotlin.Int = 0

const val KEV_DL_IF_DETACHED: kotlin.Int = 0

const val KEV_DL_IF_DETACHING: kotlin.Int = 0

const val KEV_DL_IF_IDLE_ROUTE_REFCNT: kotlin.Int = 0

const val KEV_DL_ISSUES: kotlin.Int = 0

const val KEV_DL_LINK_ADDRESS_CHANGED: kotlin.Int = 0

const val KEV_DL_LINK_OFF: kotlin.Int = 0

const val KEV_DL_LINK_ON: kotlin.Int = 0

const val KEV_DL_LINK_QUALITY_METRIC_CHANGED: kotlin.Int = 0

const val KEV_DL_LOW_POWER_MODE_CHANGED: kotlin.Int = 0

const val KEV_DL_MASTER_ELECTED: kotlin.Int = 0

const val KEV_DL_NODE_ABSENCE: kotlin.Int = 0

const val KEV_DL_NODE_PRESENCE: kotlin.Int = 0

const val KEV_DL_PROTO_ATTACHED: kotlin.Int = 0

const val KEV_DL_PROTO_DETACHED: kotlin.Int = 0

const val KEV_DL_QOS_MODE_CHANGED: kotlin.Int = 0

const val KEV_DL_RRC_STATE_CHANGED: kotlin.Int = 0

const val KEV_DL_SIFFLAGS: kotlin.Int = 0

const val KEV_DL_SIFGENERIC: kotlin.Int = 0

const val KEV_DL_SIFMEDIA: kotlin.Int = 0

const val KEV_DL_SIFMETRICS: kotlin.Int = 0

const val KEV_DL_SIFMTU: kotlin.Int = 0

const val KEV_DL_SIFPHYS: kotlin.Int = 0

const val KEV_DL_SUBCLASS: kotlin.Int = 0

const val KEV_DL_WAKEFLAGS_CHANGED: kotlin.Int = 0

const val KEV_INET6_ADDR_DELETED: kotlin.Int = 0

const val KEV_INET6_CHANGED_ADDR: kotlin.Int = 0

const val KEV_INET6_DEFROUTER: kotlin.Int = 0

const val KEV_INET6_NEW_LL_ADDR: kotlin.Int = 0

const val KEV_INET6_NEW_RTADV_ADDR: kotlin.Int = 0

const val KEV_INET6_NEW_USER_ADDR: kotlin.Int = 0

const val KEV_INET6_REQUEST_NAT64_PREFIX: kotlin.Int = 0

const val KEV_INET6_SUBCLASS: kotlin.Int = 0

const val KEV_INET_ADDR_DELETED: kotlin.Int = 0

const val KEV_INET_ARPCOLLISION: kotlin.Int = 0

const val KEV_INET_ARPRTRALIVE: kotlin.Int = 0

const val KEV_INET_ARPRTRFAILURE: kotlin.Int = 0

const val KEV_INET_CHANGED_ADDR: kotlin.Int = 0

const val KEV_INET_NEW_ADDR: kotlin.Int = 0

const val KEV_INET_PORTINUSE: kotlin.Int = 0

const val KEV_INET_SIFBRDADDR: kotlin.Int = 0

const val KEV_INET_SIFDSTADDR: kotlin.Int = 0

const val KEV_INET_SIFNETMASK: kotlin.Int = 0

const val KEV_INET_SUBCLASS: kotlin.Int = 0

const val LC_ALL: kotlin.Int = 0

const val LC_ALL_MASK: kotlin.Int = 0

const val LC_COLLATE: kotlin.Int = 0

const val LC_COLLATE_MASK: kotlin.Int = 0

const val LC_CTYPE: kotlin.Int = 0

const val LC_CTYPE_MASK: kotlin.Int = 0

const val LC_MESSAGES: kotlin.Int = 0

const val LC_MESSAGES_MASK: kotlin.Int = 0

const val LC_MONETARY: kotlin.Int = 0

const val LC_MONETARY_MASK: kotlin.Int = 0

const val LC_NUMERIC: kotlin.Int = 0

const val LC_NUMERIC_MASK: kotlin.Int = 0

const val LC_TIME: kotlin.Int = 0

const val LC_TIME_MASK: kotlin.Int = 0

const val LDBL_DECIMAL_DIG: kotlin.Int = 0

const val LDBL_DIG: kotlin.Int = 0

const val LDBL_MANT_DIG: kotlin.Int = 0

const val LDBL_MAX_10_EXP: kotlin.Int = 0

const val LDBL_MAX_EXP: kotlin.Int = 0

const val LDBL_MIN_10_EXP: kotlin.Int = 0

const val LDBL_MIN_EXP: kotlin.Int = 0

const val LINE_MAX: kotlin.Int = 0

const val LINK_MAX: kotlin.Int = 0

const val LITTLE_ENDIAN: kotlin.Int = 0

const val LLONG_MAX: kotlin.Long = 0L

const val LLONG_MIN: kotlin.Long = 0L

const val LOCALDOMAINPARTS: kotlin.Int = 0

const val LOCK_EX: kotlin.Int = 0

const val LOCK_NB: kotlin.Int = 0

const val LOCK_SH: kotlin.Int = 0

const val LOCK_UN: kotlin.Int = 0

const val LOG_ALERT: kotlin.Int = 0

const val LOG_AUTH: kotlin.Int = 0

const val LOG_AUTHPRIV: kotlin.Int = 0

const val LOG_CONS: kotlin.Int = 0

const val LOG_CRIT: kotlin.Int = 0

const val LOG_CRON: kotlin.Int = 0

const val LOG_DAEMON: kotlin.Int = 0

const val LOG_DEBUG: kotlin.Int = 0

const val LOG_EMERG: kotlin.Int = 0

const val LOG_ERR: kotlin.Int = 0

const val LOG_FACMASK: kotlin.Int = 0

const val LOG_FTP: kotlin.Int = 0

const val LOG_INFO: kotlin.Int = 0

const val LOG_INSTALL: kotlin.Int = 0

const val LOG_KERN: kotlin.Int = 0

const val LOG_LAUNCHD: kotlin.Int = 0

const val LOG_LOCAL0: kotlin.Int = 0

const val LOG_LOCAL1: kotlin.Int = 0

const val LOG_LOCAL2: kotlin.Int = 0

const val LOG_LOCAL3: kotlin.Int = 0

const val LOG_LOCAL4: kotlin.Int = 0

const val LOG_LOCAL5: kotlin.Int = 0

const val LOG_LOCAL6: kotlin.Int = 0

const val LOG_LOCAL7: kotlin.Int = 0

const val LOG_LPR: kotlin.Int = 0

const val LOG_MAIL: kotlin.Int = 0

const val LOG_NDELAY: kotlin.Int = 0

const val LOG_NETINFO: kotlin.Int = 0

const val LOG_NEWS: kotlin.Int = 0

const val LOG_NFACILITIES: kotlin.Int = 0

const val LOG_NOTICE: kotlin.Int = 0

const val LOG_NOWAIT: kotlin.Int = 0

const val LOG_ODELAY: kotlin.Int = 0

const val LOG_PERROR: kotlin.Int = 0

const val LOG_PID: kotlin.Int = 0

const val LOG_PRIMASK: kotlin.Int = 0

const val LOG_RAS: kotlin.Int = 0

const val LOG_REMOTEAUTH: kotlin.Int = 0

const val LOG_SYSLOG: kotlin.Int = 0

const val LOG_USER: kotlin.Int = 0

const val LOG_UUCP: kotlin.Int = 0

const val LOG_WARNING: kotlin.Int = 0

const val LONG_BIT: kotlin.Int = 0

const val LONG_LONG_MAX: kotlin.Long = 0L

const val LONG_LONG_MIN: kotlin.Long = 0L

const val LONG_MAX: kotlin.Long = 0L

const val LONG_MIN: kotlin.Long = 0L

const val L_INCR: kotlin.Int = 0

const val L_SET: kotlin.Int = 0

const val L_XTND: kotlin.Int = 0

const val L_ctermid: kotlin.Int = 0

const val L_tmpnam: kotlin.Int = 0

const val M16KCLBYTES: kotlin.Int = 0

const val M16KCLSHIFT: kotlin.Int = 0

const val MADV_CAN_REUSE: kotlin.Int = 0

const val MADV_DONTNEED: kotlin.Int = 0

const val MADV_FREE: kotlin.Int = 0

const val MADV_FREE_REUSABLE: kotlin.Int = 0

const val MADV_FREE_REUSE: kotlin.Int = 0

const val MADV_NORMAL: kotlin.Int = 0

const val MADV_PAGEOUT: kotlin.Int = 0

const val MADV_RANDOM: kotlin.Int = 0

const val MADV_SEQUENTIAL: kotlin.Int = 0

const val MADV_WILLNEED: kotlin.Int = 0

const val MADV_ZERO_WIRED_PAGES: kotlin.Int = 0

const val MAP_ANON: kotlin.Int = 0

const val MAP_ANONYMOUS: kotlin.Int = 0

const val MAP_COPY: kotlin.Int = 0

const val MAP_FILE: kotlin.Int = 0

const val MAP_FIXED: kotlin.Int = 0

const val MAP_HASSEMAPHORE: kotlin.Int = 0

const val MAP_JIT: kotlin.Int = 0

const val MAP_NOCACHE: kotlin.Int = 0

const val MAP_NOEXTEND: kotlin.Int = 0

const val MAP_NORESERVE: kotlin.Int = 0

const val MAP_PRIVATE: kotlin.Int = 0

const val MAP_RENAME: kotlin.Int = 0

const val MAP_RESERVED0080: kotlin.Int = 0

const val MAP_RESILIENT_CODESIGN: kotlin.Int = 0

const val MAP_RESILIENT_MEDIA: kotlin.Int = 0

const val MAP_SHARED: kotlin.Int = 0

const val MATH_ERREXCEPT: kotlin.Int = 0

const val MATH_ERRNO: kotlin.Int = 0

const val MAXALLOCSAVE: kotlin.Int = 0

const val MAXBSIZE: kotlin.Int = 0

const val MAXCOMLEN: kotlin.Int = 0

const val MAXDFLSRCH: kotlin.Int = 0

const val MAXDNSRCH: kotlin.Int = 0

const val MAXDOMNAMELEN: kotlin.Int = 0

const val MAXFRAG: kotlin.Int = 0

const val MAXHOSTNAMELEN: kotlin.Int = 0

const val MAXINTERP: kotlin.Int = 0

const val MAXLOGNAME: kotlin.Int = 0

const val MAXNAMLEN: kotlin.Int = 0

const val MAXNS: kotlin.Int = 0

const val MAXPATHLEN: kotlin.Int = 0

const val MAXPHYS: kotlin.Int = 0

const val MAXPHYSIO: kotlin.Int = 0

const val MAXPHYSIO_WIRED: kotlin.Int = 0

const val MAXPRI: kotlin.Int = 0

const val MAXRESOLVSORT: kotlin.Int = 0

const val MAXSYMLINKS: kotlin.Int = 0

const val MAXTTL: kotlin.Int = 0

const val MAXUPRC: kotlin.Int = 0

const val MAX_CANON: kotlin.Int = 0

const val MAX_INPUT: kotlin.Int = 0

const val MAX_SACK_BLKS: kotlin.Int = 0

const val MAX_TCPOPTLEN: kotlin.Int = 0

const val MBIGCLBYTES: kotlin.Int = 0

const val MBIGCLSHIFT: kotlin.Int = 0

const val MB_LEN_MAX: kotlin.Int = 0

const val MCAST_BLOCK_SOURCE: kotlin.Int = 0

const val MCAST_EXCLUDE: kotlin.Int = 0

const val MCAST_INCLUDE: kotlin.Int = 0

const val MCAST_JOIN_GROUP: kotlin.Int = 0

const val MCAST_JOIN_SOURCE_GROUP: kotlin.Int = 0

const val MCAST_LEAVE_GROUP: kotlin.Int = 0

const val MCAST_LEAVE_SOURCE_GROUP: kotlin.Int = 0

const val MCAST_UNBLOCK_SOURCE: kotlin.Int = 0

const val MCAST_UNDEFINED: kotlin.Int = 0

const val MCLBYTES: kotlin.Int = 0

const val MCLOFSET: kotlin.Int = 0

const val MCLSHIFT: kotlin.Int = 0

const val MCL_CURRENT: kotlin.Int = 0

const val MCL_FUTURE: kotlin.Int = 0

const val MDMBUF: kotlin.Int = 0

const val MINBUCKET: kotlin.Int = 0

const val MINCORE_ANONYMOUS: kotlin.Int = 0

const val MINCORE_COPIED: kotlin.Int = 0

const val MINCORE_INCORE: kotlin.Int = 0

const val MINCORE_MODIFIED: kotlin.Int = 0

const val MINCORE_MODIFIED_OTHER: kotlin.Int = 0

const val MINCORE_PAGED_OUT: kotlin.Int = 0

const val MINCORE_REFERENCED: kotlin.Int = 0

const val MINCORE_REFERENCED_OTHER: kotlin.Int = 0

const val MINSIGSTKSZ: kotlin.Int = 0

const val MLD6_LISTENER_DONE: kotlin.Int = 0

const val MLD6_LISTENER_QUERY: kotlin.Int = 0

const val MLD6_LISTENER_REPORT: kotlin.Int = 0

const val MLD6_MTRACE: kotlin.Int = 0

const val MLD6_MTRACE_RESP: kotlin.Int = 0

const val MLDV2_LISTENER_REPORT: kotlin.Int = 0

const val MLD_LISTENER_DONE: kotlin.Int = 0

const val MLD_LISTENER_QUERY: kotlin.Int = 0

const val MLD_LISTENER_REDUCTION: kotlin.Int = 0

const val MLD_LISTENER_REPORT: kotlin.Int = 0

const val MLD_MTRACE: kotlin.Int = 0

const val MLD_MTRACE_RESP: kotlin.Int = 0

const val MSG_CTRUNC: kotlin.Int = 0

const val MSG_DONTROUTE: kotlin.Int = 0

const val MSG_DONTWAIT: kotlin.Int = 0

const val MSG_EOF: kotlin.Int = 0

const val MSG_EOR: kotlin.Int = 0

const val MSG_FLUSH: kotlin.Int = 0

const val MSG_HAVEMORE: kotlin.Int = 0

const val MSG_HOLD: kotlin.Int = 0

const val MSG_NEEDSA: kotlin.Int = 0

const val MSG_OOB: kotlin.Int = 0

const val MSG_PEEK: kotlin.Int = 0

const val MSG_RCVMORE: kotlin.Int = 0

const val MSG_SEND: kotlin.Int = 0

const val MSG_TRUNC: kotlin.Int = 0

const val MSG_WAITALL: kotlin.Int = 0

const val MSG_WAITSTREAM: kotlin.Int = 0

const val MSIZE: kotlin.Int = 0

const val MSIZESHIFT: kotlin.Int = 0

const val MS_ASYNC: kotlin.Int = 0

const val MS_DEACTIVATE: kotlin.Int = 0

const val MS_INVALIDATE: kotlin.Int = 0

const val MS_KILLPAGES: kotlin.Int = 0

const val MS_SYNC: kotlin.Int = 0

const val NAME_MAX: kotlin.Int = 0

const val NBBY: kotlin.Int = 0

const val NBPG: kotlin.Int = 0

const val NBPW: kotlin.ULong = 0u

const val NCARGS: kotlin.Int = 0

const val NCCS: kotlin.Int = 0

const val ND_NA_FLAG_OVERRIDE: kotlin.Int = 0

const val ND_NA_FLAG_ROUTER: kotlin.Int = 0

const val ND_NA_FLAG_SOLICITED: kotlin.Int = 0

const val ND_NEIGHBOR_ADVERT: kotlin.Int = 0

const val ND_NEIGHBOR_SOLICIT: kotlin.Int = 0

const val ND_OPT_DNSSL: kotlin.Int = 0

const val ND_OPT_MTU: kotlin.Int = 0

const val ND_OPT_NONCE: kotlin.Int = 0

const val ND_OPT_NONCE_LEN: kotlin.Int = 0

const val ND_OPT_PI_FLAG_AUTO: kotlin.Int = 0

const val ND_OPT_PI_FLAG_ONLINK: kotlin.Int = 0

const val ND_OPT_PREFIX_INFORMATION: kotlin.Int = 0

const val ND_OPT_RDNSS: kotlin.Int = 0

const val ND_OPT_REDIRECTED_HEADER: kotlin.Int = 0

const val ND_OPT_ROUTE_INFO: kotlin.Int = 0

const val ND_OPT_SOURCE_LINKADDR: kotlin.Int = 0

const val ND_OPT_TARGET_LINKADDR: kotlin.Int = 0

const val ND_RA_FLAG_HA: kotlin.Int = 0

const val ND_RA_FLAG_MANAGED: kotlin.Int = 0

const val ND_RA_FLAG_OTHER: kotlin.Int = 0

const val ND_RA_FLAG_RTPREF_HIGH: kotlin.Int = 0

const val ND_RA_FLAG_RTPREF_LOW: kotlin.Int = 0

const val ND_RA_FLAG_RTPREF_MASK: kotlin.Int = 0

const val ND_RA_FLAG_RTPREF_MEDIUM: kotlin.Int = 0

const val ND_RA_FLAG_RTPREF_RSV: kotlin.Int = 0

const val ND_REDIRECT: kotlin.Int = 0

const val ND_REDIRECT_ONLINK: kotlin.Int = 0

const val ND_REDIRECT_ROUTER: kotlin.Int = 0

const val ND_ROUTER_ADVERT: kotlin.Int = 0

const val ND_ROUTER_SOLICIT: kotlin.Int = 0

const val NETDB_INTERNAL: kotlin.Int = 0

const val NETDB_SUCCESS: kotlin.Int = 0

const val NETSVC_MRKNG_LVL_L2: kotlin.Int = 0

const val NETSVC_MRKNG_LVL_L3L2_ALL: kotlin.Int = 0

const val NETSVC_MRKNG_LVL_L3L2_BK: kotlin.Int = 0

const val NETSVC_MRKNG_UNKNOWN: kotlin.Int = 0

const val NET_MAXID: kotlin.Int = 0

const val NET_RT_DUMP: kotlin.Int = 0

const val NET_RT_DUMP2: kotlin.Int = 0

const val NET_RT_FLAGS: kotlin.Int = 0

const val NET_RT_FLAGS_PRIV: kotlin.Int = 0

const val NET_RT_IFLIST: kotlin.Int = 0

const val NET_RT_IFLIST2: kotlin.Int = 0

const val NET_RT_MAXID: kotlin.Int = 0

const val NET_RT_STAT: kotlin.Int = 0

const val NET_RT_TRASH: kotlin.Int = 0

const val NET_SERVICE_TYPE_AV: kotlin.Int = 0

const val NET_SERVICE_TYPE_BE: kotlin.Int = 0

const val NET_SERVICE_TYPE_BK: kotlin.Int = 0

const val NET_SERVICE_TYPE_OAM: kotlin.Int = 0

const val NET_SERVICE_TYPE_RD: kotlin.Int = 0

const val NET_SERVICE_TYPE_RV: kotlin.Int = 0

const val NET_SERVICE_TYPE_SIG: kotlin.Int = 0

const val NET_SERVICE_TYPE_VI: kotlin.Int = 0

const val NET_SERVICE_TYPE_VO: kotlin.Int = 0

const val NFDBITS: kotlin.ULong = 0u

const val NGROUPS: kotlin.Int = 0

const val NGROUPS_MAX: kotlin.Int = 0

const val NI_DGRAM: kotlin.Int = 0

const val NI_FQDN_FLAG_VALIDTTL: kotlin.Int = 0

const val NI_MAXHOST: kotlin.Int = 0

const val NI_MAXSERV: kotlin.Int = 0

const val NI_NAMEREQD: kotlin.Int = 0

const val NI_NODEADDR_FLAG_ALL: kotlin.Int = 0

const val NI_NODEADDR_FLAG_ANYCAST: kotlin.Int = 0

const val NI_NODEADDR_FLAG_COMPAT: kotlin.Int = 0

const val NI_NODEADDR_FLAG_GLOBAL: kotlin.Int = 0

const val NI_NODEADDR_FLAG_LINKLOCAL: kotlin.Int = 0

const val NI_NODEADDR_FLAG_SITELOCAL: kotlin.Int = 0

const val NI_NODEADDR_FLAG_TRUNCATE: kotlin.Int = 0

const val NI_NOFQDN: kotlin.Int = 0

const val NI_NUMERICHOST: kotlin.Int = 0

const val NI_NUMERICSCOPE: kotlin.Int = 0

const val NI_NUMERICSERV: kotlin.Int = 0

const val NI_QTYPE_DNSNAME: kotlin.Int = 0

const val NI_QTYPE_FQDN: kotlin.Int = 0

const val NI_QTYPE_IPV4ADDR: kotlin.Int = 0

const val NI_QTYPE_NODEADDR: kotlin.Int = 0

const val NI_QTYPE_NOOP: kotlin.Int = 0

const val NI_QTYPE_SUPTYPES: kotlin.Int = 0

const val NI_SUPTYPE_FLAG_COMPRESS: kotlin.Int = 0

const val NI_WITHSCOPEID: kotlin.Int = 0

const val NL0: kotlin.Int = 0

const val NL1: kotlin.Int = 0

const val NL2: kotlin.Int = 0

const val NL3: kotlin.Int = 0

const val NLDLY: kotlin.Int = 0

const val NL_ARGMAX: kotlin.Int = 0

const val NL_LANGMAX: kotlin.Int = 0

const val NL_MSGMAX: kotlin.Int = 0

const val NL_NMAX: kotlin.Int = 0

const val NL_SETMAX: kotlin.Int = 0

const val NL_TEXTMAX: kotlin.Int = 0

const val NMBCLUSTERS: kotlin.Int = 0

const val NODEV: platform.posix.dev_t /* = kotlin.Int */ = 0

const val NOFILE: kotlin.Int = 0

const val NOFLSH: kotlin.UInt = 0u

const val NOGROUP: kotlin.Int = 0

const val NOKERNINFO: kotlin.Int = 0

const val NO_ADDRESS: kotlin.Int = 0

const val NO_DATA: kotlin.Int = 0

const val NO_RECOVERY: kotlin.Int = 0

const val NSIG: kotlin.Int = 0

const val NS_ALG_DH: kotlin.Int = 0

const val NS_ALG_DSA: kotlin.Int = 0

const val NS_ALG_DSS: kotlin.Int = 0

const val NS_ALG_EXPIRE_ONLY: kotlin.Int = 0

const val NS_ALG_MD5RSA: kotlin.Int = 0

const val NS_ALG_PRIVATE_OID: kotlin.Int = 0

const val NS_CMPRSFLGS: kotlin.Int = 0

const val NS_DEFAULTPORT: kotlin.Int = 0

const val NS_DSA_MAX_BYTES: kotlin.Int = 0

const val NS_DSA_MIN_SIZE: kotlin.Int = 0

const val NS_DSA_SIG_SIZE: kotlin.Int = 0

const val NS_HFIXEDSZ: kotlin.Int = 0

const val NS_IN6ADDRSZ: kotlin.Int = 0

const val NS_INADDRSZ: kotlin.Int = 0

const val NS_INT16SZ: kotlin.Int = 0

const val NS_INT32SZ: kotlin.Int = 0

const val NS_INT8SZ: kotlin.Int = 0

const val NS_KEY_EXTENDED_FLAGS: kotlin.Int = 0

const val NS_KEY_NAME_ENTITY: kotlin.Int = 0

const val NS_KEY_NAME_RESERVED: kotlin.Int = 0

const val NS_KEY_NAME_TYPE: kotlin.Int = 0

const val NS_KEY_NAME_USER: kotlin.Int = 0

const val NS_KEY_NAME_ZONE: kotlin.Int = 0

const val NS_KEY_NO_AUTH: kotlin.Int = 0

const val NS_KEY_NO_CONF: kotlin.Int = 0

const val NS_KEY_PROT_ANY: kotlin.Int = 0

const val NS_KEY_PROT_DNSSEC: kotlin.Int = 0

const val NS_KEY_PROT_EMAIL: kotlin.Int = 0

const val NS_KEY_PROT_IPSEC: kotlin.Int = 0

const val NS_KEY_PROT_TLS: kotlin.Int = 0

const val NS_KEY_RESERVED10: kotlin.Int = 0

const val NS_KEY_RESERVED11: kotlin.Int = 0

const val NS_KEY_RESERVED2: kotlin.Int = 0

const val NS_KEY_RESERVED4: kotlin.Int = 0

const val NS_KEY_RESERVED5: kotlin.Int = 0

const val NS_KEY_RESERVED8: kotlin.Int = 0

const val NS_KEY_RESERVED9: kotlin.Int = 0

const val NS_KEY_RESERVED_BITMASK: kotlin.Int = 0

const val NS_KEY_RESERVED_BITMASK2: kotlin.Int = 0

const val NS_KEY_SIGNATORYMASK: kotlin.Int = 0

const val NS_KEY_TYPEMASK: kotlin.Int = 0

const val NS_KEY_TYPE_AUTH_CONF: kotlin.Int = 0

const val NS_KEY_TYPE_AUTH_ONLY: kotlin.Int = 0

const val NS_KEY_TYPE_CONF_ONLY: kotlin.Int = 0

const val NS_KEY_TYPE_NO_KEY: kotlin.Int = 0

const val NS_MAXCDNAME: kotlin.Int = 0

const val NS_MAXDNAME: kotlin.Int = 0

const val NS_MAXLABEL: kotlin.Int = 0

const val NS_MD5RSA_MAX_BASE64: kotlin.Int = 0

const val NS_MD5RSA_MAX_BITS: kotlin.Int = 0

const val NS_MD5RSA_MAX_BYTES: kotlin.Int = 0

const val NS_MD5RSA_MAX_SIZE: kotlin.Int = 0

const val NS_MD5RSA_MIN_BITS: kotlin.Int = 0

const val NS_MD5RSA_MIN_SIZE: kotlin.Int = 0

const val NS_NXT_BITS: kotlin.Int = 0

const val NS_NXT_MAX: kotlin.Int = 0

const val NS_OPT_DNSSEC_OK: kotlin.UInt = 0u

const val NS_PACKETSZ: kotlin.Int = 0

const val NS_QFIXEDSZ: kotlin.Int = 0

const val NS_RRFIXEDSZ: kotlin.Int = 0

const val NS_SIG_ALG: kotlin.Int = 0

const val NS_SIG_EXPIR: kotlin.Int = 0

const val NS_SIG_FOOT: kotlin.Int = 0

const val NS_SIG_LABELS: kotlin.Int = 0

const val NS_SIG_OTTL: kotlin.Int = 0

const val NS_SIG_SIGNED: kotlin.Int = 0

const val NS_SIG_SIGNER: kotlin.Int = 0

const val NS_SIG_TYPE: kotlin.Int = 0

const val NS_TSIG_ERROR_FORMERR: kotlin.Int = 0

const val NS_TSIG_ERROR_NO_SPACE: kotlin.Int = 0

const val NS_TSIG_ERROR_NO_TSIG: kotlin.Int = 0

const val NS_TSIG_FUDGE: kotlin.Int = 0

const val NS_TSIG_TCP_COUNT: kotlin.Int = 0

const val NZERO: kotlin.Int = 0

const val NeXTBSD: kotlin.Int = 0

const val NeXTBSD4_0: kotlin.Int = 0

const val OCRNL: kotlin.Int = 0

const val OFDEL: kotlin.Int = 0

const val OFF_MAX: kotlin.Long = 0L

const val OFF_MIN: kotlin.Long = 0L

const val OFILL: kotlin.Int = 0

const val ONLCR: kotlin.Int = 0

const val ONLRET: kotlin.Int = 0

const val ONOCR: kotlin.Int = 0

const val ONOEOT: kotlin.Int = 0

const val OPEN_MAX: kotlin.Int = 0

const val OPOST: kotlin.Int = 0

const val OVERFLOW: kotlin.Int = 0

const val OXTABS: kotlin.Int = 0

const val O_ACCMODE: kotlin.Int = 0

const val O_ALERT: kotlin.Int = 0

const val O_APPEND: kotlin.Int = 0

const val O_ASYNC: kotlin.Int = 0

const val O_CLOEXEC: kotlin.Int = 0

const val O_CREAT: kotlin.Int = 0

const val O_DIRECTORY: kotlin.Int = 0

const val O_DP_GETRAWENCRYPTED: kotlin.Int = 0

const val O_DP_GETRAWUNENCRYPTED: kotlin.Int = 0

const val O_DSYNC: kotlin.Int = 0

const val O_EVTONLY: kotlin.Int = 0

const val O_EXCL: kotlin.Int = 0

const val O_EXLOCK: kotlin.Int = 0

const val O_FSYNC: kotlin.Int = 0

const val O_NDELAY: kotlin.Int = 0

const val O_NOCTTY: kotlin.Int = 0

const val O_NOFOLLOW: kotlin.Int = 0

const val O_NONBLOCK: kotlin.Int = 0

const val O_POPUP: kotlin.UInt = 0u

const val O_RDONLY: kotlin.Int = 0

const val O_RDWR: kotlin.Int = 0

const val O_SHLOCK: kotlin.Int = 0

const val O_SYMLINK: kotlin.Int = 0

const val O_SYNC: kotlin.Int = 0

const val O_TRUNC: kotlin.Int = 0

const val O_WRONLY: kotlin.Int = 0

const val PARENB: kotlin.Int = 0

const val PARMRK: kotlin.Int = 0

const val PARODD: kotlin.Int = 0

const val PASS_MAX: kotlin.Int = 0

const val PATH_MAX: kotlin.Int = 0

const val PCATCH: kotlin.Int = 0

const val PDP_ENDIAN: kotlin.Int = 0

const val PDROP: kotlin.Int = 0

const val PENDIN: kotlin.Int = 0

const val PERSIST_TIMEOUT: kotlin.Int = 0

const val PF_APPLETALK: kotlin.Int = 0

const val PF_BOND: platform.posix.uint32_t /* = kotlin.UInt */ = 0u

const val PF_CCITT: kotlin.Int = 0

const val PF_CHAOS: kotlin.Int = 0

const val PF_CNT: kotlin.Int = 0

const val PF_COIP: kotlin.Int = 0

const val PF_DATAKIT: kotlin.Int = 0

const val PF_DECnet: kotlin.Int = 0

const val PF_DLI: kotlin.Int = 0

const val PF_ECMA: kotlin.Int = 0

const val PF_HYLINK: kotlin.Int = 0

const val PF_IMPLINK: kotlin.Int = 0

const val PF_INET: kotlin.Int = 0

const val PF_INET6: kotlin.Int = 0

const val PF_IPX: kotlin.Int = 0

const val PF_ISDN: kotlin.Int = 0

const val PF_ISO: kotlin.Int = 0

const val PF_KEY: kotlin.Int = 0

const val PF_LAT: kotlin.Int = 0

const val PF_LINK: kotlin.Int = 0

const val PF_LOCAL: kotlin.Int = 0

const val PF_MAX: kotlin.Int = 0

const val PF_NATM: kotlin.Int = 0

const val PF_NDRV: kotlin.Int = 0

const val PF_NETBIOS: kotlin.Int = 0

const val PF_NS: kotlin.Int = 0

const val PF_OSI: kotlin.Int = 0

const val PF_PIP: kotlin.Int = 0

const val PF_PPP: kotlin.Int = 0

const val PF_PUP: kotlin.Int = 0

const val PF_RESERVED_36: kotlin.Int = 0

const val PF_ROUTE: kotlin.Int = 0

const val PF_RTIP: kotlin.Int = 0

const val PF_SIP: kotlin.Int = 0

const val PF_SNA: kotlin.Int = 0

const val PF_SYSTEM: kotlin.Int = 0

const val PF_UNIX: kotlin.Int = 0

const val PF_UNSPEC: kotlin.Int = 0

const val PF_UTUN: kotlin.Int = 0

const val PF_VLAN: platform.posix.uint32_t /* = kotlin.UInt */ = 0u

const val PF_XTP: kotlin.Int = 0

const val PGOFSET: kotlin.Int = 0

const val PGSHIFT: kotlin.Int = 0

const val PINOD: kotlin.Int = 0

const val PIPE_BUF: kotlin.Int = 0

const val PLOCK: kotlin.Int = 0

const val PLOSS: kotlin.Int = 0

const val POLLATTRIB: kotlin.Int = 0

const val POLLERR: kotlin.Int = 0

const val POLLEXTEND: kotlin.Int = 0

const val POLLHUP: kotlin.Int = 0

const val POLLIN: kotlin.Int = 0

const val POLLNLINK: kotlin.Int = 0

const val POLLNVAL: kotlin.Int = 0

const val POLLOUT: kotlin.Int = 0

const val POLLPRI: kotlin.Int = 0

const val POLLRDBAND: kotlin.Int = 0

const val POLLRDNORM: kotlin.Int = 0

const val POLLSTANDARD: kotlin.Int = 0

const val POLLWRBAND: kotlin.Int = 0

const val POLLWRITE: kotlin.Int = 0

const val POLLWRNORM: kotlin.Int = 0

const val POLL_ERR: kotlin.Int = 0

const val POLL_HUP: kotlin.Int = 0

const val POLL_IN: kotlin.Int = 0

const val POLL_MSG: kotlin.Int = 0

const val POLL_OUT: kotlin.Int = 0

const val POLL_PRI: kotlin.Int = 0

const val POSIX_MADV_DONTNEED: kotlin.Int = 0

const val POSIX_MADV_NORMAL: kotlin.Int = 0

const val POSIX_MADV_RANDOM: kotlin.Int = 0

const val POSIX_MADV_SEQUENTIAL: kotlin.Int = 0

const val POSIX_MADV_WILLNEED: kotlin.Int = 0

const val PPAUSE: kotlin.Int = 0

const val PPPDISC: kotlin.Int = 0

const val PRIBIO: kotlin.Int = 0

const val PRIMASK: kotlin.Int = 0

const val PRIO_DARWIN_BG: kotlin.Int = 0

const val PRIO_DARWIN_NONUI: kotlin.Int = 0

const val PRIO_DARWIN_PROCESS: kotlin.Int = 0

const val PRIO_DARWIN_THREAD: kotlin.Int = 0

const val PRIO_MAX: kotlin.Int = 0

const val PRIO_MIN: kotlin.Int = 0

const val PRIO_PGRP: kotlin.Int = 0

const val PRIO_PROCESS: kotlin.Int = 0

const val PRIO_USER: kotlin.Int = 0

const val PROT_EXEC: kotlin.Int = 0

const val PROT_NONE: kotlin.Int = 0

const val PROT_READ: kotlin.Int = 0

const val PROT_WRITE: kotlin.Int = 0

const val PSOCK: kotlin.Int = 0

const val PSPIN: kotlin.Int = 0

const val PSWP: kotlin.Int = 0

const val PTHREAD_CANCEL_ASYNCHRONOUS: kotlin.Int = 0

const val PTHREAD_CANCEL_DEFERRED: kotlin.Int = 0

const val PTHREAD_CANCEL_DISABLE: kotlin.Int = 0

const val PTHREAD_CANCEL_ENABLE: kotlin.Int = 0

const val PTHREAD_CREATE_DETACHED: kotlin.Int = 0

const val PTHREAD_CREATE_JOINABLE: kotlin.Int = 0

const val PTHREAD_DESTRUCTOR_ITERATIONS: kotlin.Int = 0

const val PTHREAD_EXPLICIT_SCHED: kotlin.Int = 0

const val PTHREAD_INHERIT_SCHED: kotlin.Int = 0

const val PTHREAD_KEYS_MAX: kotlin.Int = 0

const val PTHREAD_MUTEX_DEFAULT: kotlin.Int = 0

const val PTHREAD_MUTEX_ERRORCHECK: kotlin.Int = 0

const val PTHREAD_MUTEX_NORMAL: kotlin.Int = 0

const val PTHREAD_MUTEX_POLICY_FAIRSHARE_NP: kotlin.Int = 0

const val PTHREAD_MUTEX_POLICY_FIRSTFIT_NP: kotlin.Int = 0

const val PTHREAD_MUTEX_RECURSIVE: kotlin.Int = 0

const val PTHREAD_PRIO_INHERIT: kotlin.Int = 0

const val PTHREAD_PRIO_NONE: kotlin.Int = 0

const val PTHREAD_PRIO_PROTECT: kotlin.Int = 0

const val PTHREAD_PROCESS_PRIVATE: kotlin.Int = 0

const val PTHREAD_PROCESS_SHARED: kotlin.Int = 0

const val PTHREAD_SCOPE_PROCESS: kotlin.Int = 0

const val PTHREAD_SCOPE_SYSTEM: kotlin.Int = 0

const val PTHREAD_STACK_MIN: kotlin.Int = 0

const val PTRDIFF_MAX: kotlin.Long = 0L

const val PTRDIFF_MIN: kotlin.Long = 0L

const val PTTYBLOCK: kotlin.Int = 0

const val PUSER: kotlin.Int = 0

const val PVFS: kotlin.Int = 0

const val PVM: kotlin.Int = 0

const val PWAIT: kotlin.Int = 0

const val PZERO: kotlin.Int = 0

const val QOS_MIN_RELATIVE_PRIORITY: kotlin.Int = 0

const val RAND_MAX: kotlin.Int = 0

const val REG_ASSERT: kotlin.Int = 0

const val REG_ATOI: kotlin.Int = 0

const val REG_BACKR: kotlin.Int = 0

const val REG_BACKTRACKING_MATCHER: kotlin.Int = 0

const val REG_BADBR: kotlin.Int = 0

const val REG_BADPAT: kotlin.Int = 0

const val REG_BADRPT: kotlin.Int = 0

const val REG_BASIC: kotlin.Int = 0

const val REG_DUMP: kotlin.Int = 0

const val REG_EBRACE: kotlin.Int = 0

const val REG_EBRACK: kotlin.Int = 0

const val REG_ECOLLATE: kotlin.Int = 0

const val REG_ECTYPE: kotlin.Int = 0

const val REG_EESCAPE: kotlin.Int = 0

const val REG_EMPTY: kotlin.Int = 0

const val REG_ENHANCED: kotlin.Int = 0

const val REG_ENOSYS: kotlin.Int = 0

const val REG_EPAREN: kotlin.Int = 0

const val REG_ERANGE: kotlin.Int = 0

const val REG_ESPACE: kotlin.Int = 0

const val REG_ESUBREG: kotlin.Int = 0

const val REG_EXTENDED: kotlin.Int = 0

const val REG_ICASE: kotlin.Int = 0

const val REG_ILLSEQ: kotlin.Int = 0

const val REG_INVARG: kotlin.Int = 0

const val REG_ITOA: kotlin.Int = 0

const val REG_LARGE: kotlin.Int = 0

const val REG_LITERAL: kotlin.Int = 0

const val REG_MINIMAL: kotlin.Int = 0

const val REG_NEWLINE: kotlin.Int = 0

const val REG_NOMATCH: kotlin.Int = 0

const val REG_NOSPEC: kotlin.Int = 0

const val REG_NOSUB: kotlin.Int = 0

const val REG_NOTBOL: kotlin.Int = 0

const val REG_NOTEOL: kotlin.Int = 0

const val REG_PEND: kotlin.Int = 0

const val REG_STARTEND: kotlin.Int = 0

const val REG_TRACE: kotlin.Int = 0

const val REG_UNGREEDY: kotlin.Int = 0

const val RENAME_EXCL: kotlin.Int = 0

const val RENAME_SECLUDE: kotlin.Int = 0

const val RENAME_SWAP: kotlin.Int = 0

const val RES_AAONLY: kotlin.Int = 0

const val RES_BLAST: kotlin.Int = 0

const val RES_DEBUG: kotlin.Int = 0

const val RES_DEFAULT: kotlin.Int = 0

const val RES_DEFNAMES: kotlin.Int = 0

const val RES_DFLRETRY: kotlin.Int = 0

const val RES_DNSRCH: kotlin.Int = 0

const val RES_EXHAUSTIVE: kotlin.Int = 0

const val RES_F_CONN: kotlin.Int = 0

const val RES_F_EDNS0ERR: kotlin.Int = 0

const val RES_F_VC: kotlin.Int = 0

const val RES_IGNTC: kotlin.Int = 0

const val RES_INIT: kotlin.Int = 0

const val RES_INSECURE1: kotlin.Int = 0

const val RES_INSECURE2: kotlin.Int = 0

const val RES_IPV4ONLY: kotlin.Int = 0

const val RES_IPV6ONLY: kotlin.Int = 0

const val RES_KEEPTSIG: kotlin.Int = 0

const val RES_MAXNDOTS: kotlin.Int = 0

const val RES_MAXRETRANS: kotlin.Int = 0

const val RES_MAXRETRY: kotlin.Int = 0

const val RES_MAXTIME: kotlin.Int = 0

const val RES_NOALIASES: kotlin.Int = 0

const val RES_NOCHECKNAME: kotlin.Int = 0

const val RES_NOTLDQUERY: kotlin.Int = 0

const val RES_NO_BITSTRING: kotlin.Int = 0

const val RES_NO_NIBBLE: kotlin.Int = 0

const val RES_NO_NIBBLE2: kotlin.UInt = 0u

const val RES_PRF_ADD: kotlin.Int = 0

const val RES_PRF_ANS: kotlin.Int = 0

const val RES_PRF_AUTH: kotlin.Int = 0

const val RES_PRF_CLASS: kotlin.Int = 0

const val RES_PRF_CMD: kotlin.Int = 0

const val RES_PRF_HEAD1: kotlin.Int = 0

const val RES_PRF_HEAD2: kotlin.Int = 0

const val RES_PRF_HEADX: kotlin.Int = 0

const val RES_PRF_INIT: kotlin.Int = 0

const val RES_PRF_QUERY: kotlin.Int = 0

const val RES_PRF_QUES: kotlin.Int = 0

const val RES_PRF_REPLY: kotlin.Int = 0

const val RES_PRF_STATS: kotlin.Int = 0

const val RES_PRF_TRUNC: kotlin.Int = 0

const val RES_PRF_TTLID: kotlin.Int = 0

const val RES_PRF_UPDATE: kotlin.Int = 0

const val RES_PRIMARY: kotlin.Int = 0

const val RES_RECURSE: kotlin.Int = 0

const val RES_ROTATE: kotlin.Int = 0

const val RES_STAYOPEN: kotlin.Int = 0

const val RES_TIMEOUT: kotlin.Int = 0

const val RES_USEVC: kotlin.Int = 0

const val RES_USE_A6: kotlin.Int = 0

const val RES_USE_DNAME: kotlin.Int = 0

const val RES_USE_DNSSEC: kotlin.Int = 0

const val RES_USE_EDNS0: kotlin.Int = 0

const val RES_USE_INET6: kotlin.Int = 0

const val RE_DUP_MAX: kotlin.Int = 0

const val RLIMIT_AS: kotlin.Int = 0

const val RLIMIT_CORE: kotlin.Int = 0

const val RLIMIT_CPU: kotlin.Int = 0

const val RLIMIT_CPU_USAGE_MONITOR: kotlin.Int = 0

const val RLIMIT_DATA: kotlin.Int = 0

const val RLIMIT_FOOTPRINT_INTERVAL: kotlin.Int = 0

const val RLIMIT_FSIZE: kotlin.Int = 0

const val RLIMIT_MEMLOCK: kotlin.Int = 0

const val RLIMIT_NOFILE: kotlin.Int = 0

const val RLIMIT_NPROC: kotlin.Int = 0

const val RLIMIT_RSS: kotlin.Int = 0

const val RLIMIT_STACK: kotlin.Int = 0

const val RLIMIT_THREAD_CPULIMITS: kotlin.Int = 0

const val RLIMIT_WAKEUPS_MONITOR: kotlin.Int = 0

const val RLIM_INFINITY: kotlin.ULong = 0u

const val RLIM_NLIMITS: kotlin.Int = 0

const val RLIM_SAVED_CUR: kotlin.ULong = 0u

const val RLIM_SAVED_MAX: kotlin.ULong = 0u

const val RPM_PCO_ADD: kotlin.Int = 0

const val RPM_PCO_CHANGE: kotlin.Int = 0

const val RPM_PCO_MAX: kotlin.Int = 0

const val RPM_PCO_SETGLOBAL: kotlin.Int = 0

const val RSIZE_MAX: kotlin.ULong = 0u

const val RTLD_FIRST: kotlin.Int = 0

const val RTLD_GLOBAL: kotlin.Int = 0

const val RTLD_LAZY: kotlin.Int = 0

const val RTLD_LOCAL: kotlin.Int = 0

const val RTLD_NODELETE: kotlin.Int = 0

const val RTLD_NOLOAD: kotlin.Int = 0

const val RTLD_NOW: kotlin.Int = 0

const val RUSAGE_CHILDREN: kotlin.Int = 0

const val RUSAGE_INFO_CURRENT: kotlin.Int = 0

const val RUSAGE_INFO_V0: kotlin.Int = 0

const val RUSAGE_INFO_V1: kotlin.Int = 0

const val RUSAGE_INFO_V2: kotlin.Int = 0

const val RUSAGE_INFO_V3: kotlin.Int = 0

const val RUSAGE_INFO_V4: kotlin.Int = 0

const val RUSAGE_SELF: kotlin.Int = 0

const val R_OK: kotlin.Int = 0

const val SAE_ASSOCID_ALL: platform.posix.sae_associd_t /* = kotlin.UInt */ = 0u

const val SAE_ASSOCID_ANY: kotlin.Int = 0

const val SAE_CONNID_ALL: platform.posix.sae_connid_t /* = kotlin.UInt */ = 0u

const val SAE_CONNID_ANY: kotlin.Int = 0

const val SA_64REGSET: kotlin.Int = 0

const val SA_NOCLDSTOP: kotlin.Int = 0

const val SA_NOCLDWAIT: kotlin.Int = 0

const val SA_NODEFER: kotlin.Int = 0

const val SA_ONSTACK: kotlin.Int = 0

const val SA_RESETHAND: kotlin.Int = 0

const val SA_RESTART: kotlin.Int = 0

const val SA_SIGINFO: kotlin.Int = 0

const val SA_USERSPACE_MASK: kotlin.Int = 0

const val SA_USERTRAMP: kotlin.Int = 0

const val SCHAR_MAX: kotlin.Int = 0

const val SCHAR_MIN: kotlin.Int = 0

const val SCHED_FIFO: kotlin.Int = 0

const val SCHED_OTHER: kotlin.Int = 0

const val SCHED_RR: kotlin.Int = 0

const val SCM_CREDS: kotlin.Int = 0

const val SCM_RIGHTS: kotlin.Int = 0

const val SCM_TIMESTAMP: kotlin.Int = 0

const val SCM_TIMESTAMP_MONOTONIC: kotlin.Int = 0

const val SCOPE_DELIMITER: kotlin.Int = 0

const val SEEK_CUR: kotlin.Int = 0

const val SEEK_DATA: kotlin.Int = 0

const val SEEK_END: kotlin.Int = 0

const val SEEK_HOLE: kotlin.Int = 0

const val SEEK_SET: kotlin.Int = 0

const val SEGV_ACCERR: kotlin.Int = 0

const val SEGV_MAPERR: kotlin.Int = 0

const val SEGV_NOOP: kotlin.Int = 0

const val SEM_VALUE_MAX: kotlin.Int = 0

const val SF_APPEND: kotlin.Int = 0

const val SF_ARCHIVED: kotlin.Int = 0

const val SF_IMMUTABLE: kotlin.Int = 0

const val SF_NOUNLINK: kotlin.Int = 0

const val SF_RESTRICTED: kotlin.Int = 0

const val SF_SETTABLE: kotlin.UInt = 0u

const val SF_SUPPORTED: kotlin.Int = 0

const val SHMLBA: kotlin.Int = 0

const val SHM_R: kotlin.Int = 0

const val SHM_RDONLY: kotlin.Int = 0

const val SHM_RND: kotlin.Int = 0

const val SHM_W: kotlin.Int = 0

const val SHRT_MAX: kotlin.Int = 0

const val SHRT_MIN: kotlin.Int = 0

const val SHUT_RD: kotlin.Int = 0

const val SHUT_RDWR: kotlin.Int = 0

const val SHUT_WR: kotlin.Int = 0

const val SIGABRT: kotlin.Int = 0

const val SIGALRM: kotlin.Int = 0

const val SIGBUS: kotlin.Int = 0

const val SIGCHLD: kotlin.Int = 0

const val SIGCONT: kotlin.Int = 0

const val SIGEMT: kotlin.Int = 0

const val SIGEV_NONE: kotlin.Int = 0

const val SIGEV_SIGNAL: kotlin.Int = 0

const val SIGEV_THREAD: kotlin.Int = 0

const val SIGFPE: kotlin.Int = 0

const val SIGHUP: kotlin.Int = 0

const val SIGILL: kotlin.Int = 0

const val SIGINFO: kotlin.Int = 0

const val SIGINT: kotlin.Int = 0

const val SIGIO: kotlin.Int = 0

const val SIGIOT: kotlin.Int = 0

const val SIGKILL: kotlin.Int = 0

const val SIGPIPE: kotlin.Int = 0

const val SIGPROF: kotlin.Int = 0

const val SIGQUIT: kotlin.Int = 0

const val SIGSEGV: kotlin.Int = 0

const val SIGSTKSZ: kotlin.Int = 0

const val SIGSTOP: kotlin.Int = 0

const val SIGSYS: kotlin.Int = 0

const val SIGTERM: kotlin.Int = 0

const val SIGTRAP: kotlin.Int = 0

const val SIGTSTP: kotlin.Int = 0

const val SIGTTIN: kotlin.Int = 0

const val SIGTTOU: kotlin.Int = 0

const val SIGURG: kotlin.Int = 0

const val SIGUSR1: kotlin.Int = 0

const val SIGUSR2: kotlin.Int = 0

const val SIGVTALRM: kotlin.Int = 0

const val SIGWINCH: kotlin.Int = 0

const val SIGXCPU: kotlin.Int = 0

const val SIGXFSZ: kotlin.Int = 0

const val SIG_ATOMIC_MAX: kotlin.Int = 0

const val SIG_ATOMIC_MIN: kotlin.Int = 0

const val SIG_BLOCK: kotlin.Int = 0

const val SIG_SETMASK: kotlin.Int = 0

const val SIG_UNBLOCK: kotlin.Int = 0

const val SING: kotlin.Int = 0

const val SIOCADDMULTI: kotlin.ULong = 0u

const val SIOCAIFADDR: kotlin.ULong = 0u

const val SIOCARPIPLL: kotlin.ULong = 0u

const val SIOCATMARK: kotlin.ULong = 0u

const val SIOCAUTOADDR: kotlin.ULong = 0u

const val SIOCAUTONETMASK: kotlin.ULong = 0u

const val SIOCDELMULTI: kotlin.ULong = 0u

const val SIOCDIFADDR: kotlin.ULong = 0u

const val SIOCDIFPHYADDR: kotlin.ULong = 0u

const val SIOCGDRVSPEC: kotlin.ULong = 0u

const val SIOCGETVLAN: kotlin.ULong = 0u

const val SIOCGHIWAT: kotlin.ULong = 0u

const val SIOCGIFADDR: kotlin.ULong = 0u

const val SIOCGIFALTMTU: kotlin.ULong = 0u

const val SIOCGIFASYNCMAP: kotlin.ULong = 0u

const val SIOCGIFBOND: kotlin.ULong = 0u

const val SIOCGIFBRDADDR: kotlin.ULong = 0u

const val SIOCGIFCAP: kotlin.ULong = 0u

const val SIOCGIFCONF: kotlin.ULong = 0u

const val SIOCGIFDEVMTU: kotlin.ULong = 0u

const val SIOCGIFDSTADDR: kotlin.ULong = 0u

const val SIOCGIFFLAGS: kotlin.ULong = 0u

const val SIOCGIFFUNCTIONALTYPE: kotlin.ULong = 0u

const val SIOCGIFGENERIC: kotlin.ULong = 0u

const val SIOCGIFKPI: kotlin.ULong = 0u

const val SIOCGIFMAC: kotlin.ULong = 0u

const val SIOCGIFMEDIA: kotlin.ULong = 0u

const val SIOCGIFMETRIC: kotlin.ULong = 0u

const val SIOCGIFMTU: kotlin.ULong = 0u

const val SIOCGIFNETMASK: kotlin.ULong = 0u

const val SIOCGIFPDSTADDR: kotlin.ULong = 0u

const val SIOCGIFPHYS: kotlin.ULong = 0u

const val SIOCGIFPSRCADDR: kotlin.ULong = 0u

const val SIOCGIFSTATUS: kotlin.ULong = 0u

const val SIOCGIFVLAN: kotlin.ULong = 0u

const val SIOCGIFWAKEFLAGS: kotlin.ULong = 0u

const val SIOCGLOWAT: kotlin.ULong = 0u

const val SIOCGPGRP: kotlin.ULong = 0u

const val SIOCIFCREATE: kotlin.ULong = 0u

const val SIOCIFCREATE2: kotlin.ULong = 0u

const val SIOCIFDESTROY: kotlin.ULong = 0u

const val SIOCIFGCLONERS: kotlin.ULong = 0u

const val SIOCRSLVMULTI: kotlin.ULong = 0u

const val SIOCSDRVSPEC: kotlin.ULong = 0u

const val SIOCSETVLAN: kotlin.ULong = 0u

const val SIOCSHIWAT: kotlin.ULong = 0u

const val SIOCSIFADDR: kotlin.ULong = 0u

const val SIOCSIFALTMTU: kotlin.ULong = 0u

const val SIOCSIFASYNCMAP: kotlin.ULong = 0u

const val SIOCSIFBOND: kotlin.ULong = 0u

const val SIOCSIFBRDADDR: kotlin.ULong = 0u

const val SIOCSIFCAP: kotlin.ULong = 0u

const val SIOCSIFDSTADDR: kotlin.ULong = 0u

const val SIOCSIFFLAGS: kotlin.ULong = 0u

const val SIOCSIFGENERIC: kotlin.ULong = 0u

const val SIOCSIFKPI: kotlin.ULong = 0u

const val SIOCSIFLLADDR: kotlin.ULong = 0u

const val SIOCSIFMAC: kotlin.ULong = 0u

const val SIOCSIFMEDIA: kotlin.ULong = 0u

const val SIOCSIFMETRIC: kotlin.ULong = 0u

const val SIOCSIFMTU: kotlin.ULong = 0u

const val SIOCSIFNETMASK: kotlin.ULong = 0u

const val SIOCSIFPHYADDR: kotlin.ULong = 0u

const val SIOCSIFPHYS: kotlin.ULong = 0u

const val SIOCSIFVLAN: kotlin.ULong = 0u

const val SIOCSLOWAT: kotlin.ULong = 0u

const val SIOCSPGRP: kotlin.ULong = 0u

const val SIZE_MAX: kotlin.ULong = 0u

const val SI_ASYNCIO: kotlin.Int = 0

const val SI_MESGQ: kotlin.Int = 0

const val SI_QUEUE: kotlin.Int = 0

const val SI_TIMER: kotlin.Int = 0

const val SI_USER: kotlin.Int = 0

const val SLIPDISC: kotlin.Int = 0

const val SOCK_DGRAM: kotlin.Int = 0

const val SOCK_MAXADDRLEN: kotlin.Int = 0

const val SOCK_RAW: kotlin.Int = 0

const val SOCK_RDM: kotlin.Int = 0

const val SOCK_SEQPACKET: kotlin.Int = 0

const val SOCK_STREAM: kotlin.Int = 0

const val SOL_SOCKET: kotlin.Int = 0

const val SOMAXCONN: kotlin.Int = 0

const val SONPX_SETOPTSHUT: kotlin.Int = 0

const val SO_ACCEPTCONN: kotlin.Int = 0

const val SO_BROADCAST: kotlin.Int = 0

const val SO_DEBUG: kotlin.Int = 0

const val SO_DONTROUTE: kotlin.Int = 0

const val SO_DONTTRUNC: kotlin.Int = 0

const val SO_ERROR: kotlin.Int = 0

const val SO_KEEPALIVE: kotlin.Int = 0

const val SO_LABEL: kotlin.Int = 0

const val SO_LINGER: kotlin.Int = 0

const val SO_LINGER_SEC: kotlin.Int = 0

const val SO_NETSVC_MARKING_LEVEL: kotlin.Int = 0

const val SO_NET_SERVICE_TYPE: kotlin.Int = 0

const val SO_NKE: kotlin.Int = 0

const val SO_NOADDRERR: kotlin.Int = 0

const val SO_NOSIGPIPE: kotlin.Int = 0

const val SO_NOTIFYCONFLICT: kotlin.Int = 0

const val SO_NP_EXTENSIONS: kotlin.Int = 0

const val SO_NREAD: kotlin.Int = 0

const val SO_NUMRCVPKT: kotlin.Int = 0

const val SO_NWRITE: kotlin.Int = 0

const val SO_OOBINLINE: kotlin.Int = 0

const val SO_PEERLABEL: kotlin.Int = 0

const val SO_RANDOMPORT: kotlin.Int = 0

const val SO_RCVBUF: kotlin.Int = 0

const val SO_RCVLOWAT: kotlin.Int = 0

const val SO_RCVTIMEO: kotlin.Int = 0

const val SO_REUSEADDR: kotlin.Int = 0

const val SO_REUSEPORT: kotlin.Int = 0

const val SO_REUSESHAREUID: kotlin.Int = 0

const val SO_SNDBUF: kotlin.Int = 0

const val SO_SNDLOWAT: kotlin.Int = 0

const val SO_SNDTIMEO: kotlin.Int = 0

const val SO_TIMESTAMP: kotlin.Int = 0

const val SO_TIMESTAMP_MONOTONIC: kotlin.Int = 0

const val SO_TYPE: kotlin.Int = 0

const val SO_UPCALLCLOSEWAIT: kotlin.Int = 0

const val SO_USELOOPBACK: kotlin.Int = 0

const val SO_WANTMORE: kotlin.Int = 0

const val SO_WANTOOBFLAG: kotlin.Int = 0

const val SSIZE_MAX: kotlin.Long = 0L

const val SS_DISABLE: kotlin.Int = 0

const val SS_ONSTACK: kotlin.Int = 0

const val STDERR_FILENO: kotlin.Int = 0

const val STDIN_FILENO: kotlin.Int = 0

const val STDOUT_FILENO: kotlin.Int = 0

const val SV_INTERRUPT: kotlin.Int = 0

const val SV_NOCLDSTOP: kotlin.Int = 0

const val SV_NODEFER: kotlin.Int = 0

const val SV_ONSTACK: kotlin.Int = 0

const val SV_RESETHAND: kotlin.Int = 0

const val SV_SIGINFO: kotlin.Int = 0

const val SYNC_VOLUME_FULLSYNC: kotlin.Int = 0

const val SYNC_VOLUME_WAIT: kotlin.Int = 0

const val S_BLKSIZE: kotlin.Int = 0

const val S_IEXEC: kotlin.Int = 0

const val S_IFBLK: kotlin.Int = 0

const val S_IFCHR: kotlin.Int = 0

const val S_IFDIR: kotlin.Int = 0

const val S_IFIFO: kotlin.Int = 0

const val S_IFLNK: kotlin.Int = 0

const val S_IFMT: kotlin.Int = 0

const val S_IFREG: kotlin.Int = 0

const val S_IFSOCK: kotlin.Int = 0

const val S_IFWHT: kotlin.Int = 0

const val S_IREAD: kotlin.Int = 0

const val S_IRGRP: kotlin.Int = 0

const val S_IROTH: kotlin.Int = 0

const val S_IRUSR: kotlin.Int = 0

const val S_IRWXG: kotlin.Int = 0

const val S_IRWXO: kotlin.Int = 0

const val S_IRWXU: kotlin.Int = 0

const val S_ISGID: kotlin.Int = 0

const val S_ISTXT: kotlin.Int = 0

const val S_ISUID: kotlin.Int = 0

const val S_ISVTX: kotlin.Int = 0

const val S_IWGRP: kotlin.Int = 0

const val S_IWOTH: kotlin.Int = 0

const val S_IWRITE: kotlin.Int = 0

const val S_IWUSR: kotlin.Int = 0

const val S_IXGRP: kotlin.Int = 0

const val S_IXOTH: kotlin.Int = 0

const val S_IXUSR: kotlin.Int = 0

const val TAB0: kotlin.Int = 0

const val TAB1: kotlin.Int = 0

const val TAB2: kotlin.Int = 0

const val TAB3: kotlin.Int = 0

const val TABDLY: kotlin.Int = 0

const val TABLDISC: kotlin.Int = 0

const val TCIFLUSH: kotlin.Int = 0

const val TCIOFF: kotlin.Int = 0

const val TCIOFLUSH: kotlin.Int = 0

const val TCION: kotlin.Int = 0

const val TCOFLUSH: kotlin.Int = 0

const val TCOOFF: kotlin.Int = 0

const val TCOON: kotlin.Int = 0

const val TCP6_MSS: kotlin.Int = 0

const val TCPCI_FLAG_LOSSRECOVERY: kotlin.Int = 0

const val TCPCI_FLAG_REORDERING_DETECTED: kotlin.Int = 0

const val TCPCI_OPT_ECN: kotlin.Int = 0

const val TCPCI_OPT_SACK: kotlin.Int = 0

const val TCPCI_OPT_TIMESTAMPS: kotlin.Int = 0

const val TCPCI_OPT_WSCALE: kotlin.Int = 0

const val TCPOLEN_CC: kotlin.Int = 0

const val TCPOLEN_CC_APPA: kotlin.Int = 0

const val TCPOLEN_FASTOPEN_REQ: kotlin.Int = 0

const val TCPOLEN_MAXSEG: kotlin.Int = 0

const val TCPOLEN_SACK: kotlin.Int = 0

const val TCPOLEN_SACK_PERMITTED: kotlin.Int = 0

const val TCPOLEN_SIGNATURE: kotlin.Int = 0

const val TCPOLEN_TIMESTAMP: kotlin.Int = 0

const val TCPOLEN_TSTAMP_APPA: kotlin.Int = 0

const val TCPOLEN_WINDOW: kotlin.Int = 0

const val TCPOPT_CC: kotlin.Int = 0

const val TCPOPT_CCECHO: kotlin.Int = 0

const val TCPOPT_CCNEW: kotlin.Int = 0

const val TCPOPT_EOL: kotlin.Int = 0

const val TCPOPT_FASTOPEN: kotlin.Int = 0

const val TCPOPT_MAXSEG: kotlin.Int = 0

const val TCPOPT_NOP: kotlin.Int = 0

const val TCPOPT_SACK: kotlin.Int = 0

const val TCPOPT_SACK_HDR: kotlin.Int = 0

const val TCPOPT_SACK_PERMITTED: kotlin.Int = 0

const val TCPOPT_SACK_PERMIT_HDR: kotlin.Int = 0

const val TCPOPT_SIGNATURE: kotlin.Int = 0

const val TCPOPT_TIMESTAMP: kotlin.Int = 0

const val TCPOPT_TSTAMP_HDR: kotlin.Int = 0

const val TCPOPT_WINDOW: kotlin.Int = 0

const val TCP_CONNECTIONTIMEOUT: kotlin.Int = 0

const val TCP_CONNECTION_INFO: kotlin.Int = 0

const val TCP_ENABLE_ECN: kotlin.Int = 0

const val TCP_FASTOPEN: kotlin.Int = 0

const val TCP_KEEPALIVE: kotlin.Int = 0

const val TCP_KEEPCNT: kotlin.Int = 0

const val TCP_KEEPINTVL: kotlin.Int = 0

const val TCP_MAXHLEN: kotlin.Int = 0

const val TCP_MAXOLEN: kotlin.ULong = 0u

const val TCP_MAXSEG: kotlin.Int = 0

const val TCP_MAXWIN: kotlin.Int = 0

const val TCP_MAX_SACK: kotlin.Int = 0

const val TCP_MAX_WINSHIFT: kotlin.Int = 0

const val TCP_MINMSS: kotlin.Int = 0

const val TCP_MSS: kotlin.Int = 0

const val TCP_NODELAY: kotlin.Int = 0

const val TCP_NOOPT: kotlin.Int = 0

const val TCP_NOPUSH: kotlin.Int = 0

const val TCP_NOTSENT_LOWAT: kotlin.Int = 0

const val TCP_RXT_CONNDROPTIME: kotlin.Int = 0

const val TCP_RXT_FINDROP: kotlin.Int = 0

const val TCP_SENDMOREACKS: kotlin.Int = 0

const val TCSADRAIN: kotlin.Int = 0

const val TCSAFLUSH: kotlin.Int = 0

const val TCSANOW: kotlin.Int = 0

const val TCSASOFT: kotlin.Int = 0

const val TH_ACCEPT: kotlin.Int = 0

const val TH_ACK: kotlin.Int = 0

const val TH_CWR: kotlin.Int = 0

const val TH_ECE: kotlin.Int = 0

const val TH_FIN: kotlin.Int = 0

const val TH_FLAGS: kotlin.Int = 0

const val TH_PUSH: kotlin.Int = 0

const val TH_RST: kotlin.Int = 0

const val TH_SYN: kotlin.Int = 0

const val TH_URG: kotlin.Int = 0

const val TIOCCBRK: kotlin.UInt = 0u

const val TIOCCDTR: kotlin.UInt = 0u

const val TIOCCONS: kotlin.ULong = 0u

const val TIOCDCDTIMESTAMP: kotlin.ULong = 0u

const val TIOCDRAIN: kotlin.UInt = 0u

const val TIOCDSIMICROCODE: kotlin.UInt = 0u

const val TIOCEXCL: kotlin.UInt = 0u

const val TIOCEXT: kotlin.ULong = 0u

const val TIOCFLUSH: kotlin.ULong = 0u

const val TIOCGDRAINWAIT: kotlin.ULong = 0u

const val TIOCGETA: kotlin.ULong = 0u

const val TIOCGETD: kotlin.ULong = 0u

const val TIOCGPGRP: kotlin.ULong = 0u

const val TIOCGSIZE: kotlin.ULong = 0u

const val TIOCGWINSZ: kotlin.ULong = 0u

const val TIOCIXOFF: kotlin.UInt = 0u

const val TIOCIXON: kotlin.UInt = 0u

const val TIOCMBIC: kotlin.ULong = 0u

const val TIOCMBIS: kotlin.ULong = 0u

const val TIOCMGDTRWAIT: kotlin.ULong = 0u

const val TIOCMGET: kotlin.ULong = 0u

const val TIOCMODG: kotlin.ULong = 0u

const val TIOCMODS: kotlin.ULong = 0u

const val TIOCMSDTRWAIT: kotlin.ULong = 0u

const val TIOCMSET: kotlin.ULong = 0u

const val TIOCM_CAR: kotlin.Int = 0

const val TIOCM_CD: kotlin.Int = 0

const val TIOCM_CTS: kotlin.Int = 0

const val TIOCM_DSR: kotlin.Int = 0

const val TIOCM_DTR: kotlin.Int = 0

const val TIOCM_LE: kotlin.Int = 0

const val TIOCM_RI: kotlin.Int = 0

const val TIOCM_RNG: kotlin.Int = 0

const val TIOCM_RTS: kotlin.Int = 0

const val TIOCM_SR: kotlin.Int = 0

const val TIOCM_ST: kotlin.Int = 0

const val TIOCNOTTY: kotlin.UInt = 0u

const val TIOCNXCL: kotlin.UInt = 0u

const val TIOCOUTQ: kotlin.ULong = 0u

const val TIOCPKT: kotlin.ULong = 0u

const val TIOCPKT_DATA: kotlin.Int = 0

const val TIOCPKT_DOSTOP: kotlin.Int = 0

const val TIOCPKT_FLUSHREAD: kotlin.Int = 0

const val TIOCPKT_FLUSHWRITE: kotlin.Int = 0

const val TIOCPKT_IOCTL: kotlin.Int = 0

const val TIOCPKT_NOSTOP: kotlin.Int = 0

const val TIOCPKT_START: kotlin.Int = 0

const val TIOCPKT_STOP: kotlin.Int = 0

const val TIOCPTYGNAME: kotlin.UInt = 0u

const val TIOCPTYGRANT: kotlin.UInt = 0u

const val TIOCPTYUNLK: kotlin.UInt = 0u

const val TIOCREMOTE: kotlin.ULong = 0u

const val TIOCSBRK: kotlin.UInt = 0u

const val TIOCSCONS: kotlin.UInt = 0u

const val TIOCSCTTY: kotlin.UInt = 0u

const val TIOCSDRAINWAIT: kotlin.ULong = 0u

const val TIOCSDTR: kotlin.UInt = 0u

const val TIOCSETA: kotlin.ULong = 0u

const val TIOCSETAF: kotlin.ULong = 0u

const val TIOCSETAW: kotlin.ULong = 0u

const val TIOCSETD: kotlin.ULong = 0u

const val TIOCSIG: kotlin.UInt = 0u

const val TIOCSPGRP: kotlin.ULong = 0u

const val TIOCSSIZE: kotlin.ULong = 0u

const val TIOCSTART: kotlin.UInt = 0u

const val TIOCSTAT: kotlin.UInt = 0u

const val TIOCSTI: kotlin.ULong = 0u

const val TIOCSTOP: kotlin.UInt = 0u

const val TIOCSWINSZ: kotlin.ULong = 0u

const val TIOCTIMESTAMP: kotlin.ULong = 0u

const val TIOCUCNTL: kotlin.ULong = 0u

const val TLOSS: kotlin.Int = 0

const val TMP_MAX: kotlin.Int = 0

const val TOSTOP: kotlin.Int = 0

const val TRAP_BRKPT: kotlin.Int = 0

const val TRAP_TRACE: kotlin.Int = 0

const val TRUE: kotlin.Int = 0

const val TRY_AGAIN: kotlin.Int = 0

const val TTCP_CLIENT_SND_WND: kotlin.Int = 0

const val TTYDEF_CFLAG: kotlin.Int = 0

const val TTYDEF_IFLAG: kotlin.Int = 0

const val TTYDEF_LFLAG: kotlin.Int = 0

const val TTYDEF_OFLAG: kotlin.Int = 0

const val TTYDEF_SPEED: kotlin.Int = 0

const val TTYDISC: kotlin.Int = 0

const val UCHAR_MAX: kotlin.Int = 0

const val UDP_NOCKSUM: kotlin.Int = 0

const val UF_APPEND: kotlin.Int = 0

const val UF_COMPRESSED: kotlin.Int = 0

const val UF_DATAVAULT: kotlin.Int = 0

const val UF_HIDDEN: kotlin.Int = 0

const val UF_IMMUTABLE: kotlin.Int = 0

const val UF_NODUMP: kotlin.Int = 0

const val UF_OPAQUE: kotlin.Int = 0

const val UF_SETTABLE: kotlin.Int = 0

const val UF_TRACKED: kotlin.Int = 0

const val UID_MAX: kotlin.UInt = 0u

const val UINT16_MAX: kotlin.Int = 0

const val UINT32_MAX: kotlin.UInt = 0u

const val UINT64_MAX: kotlin.ULong = 0u

const val UINT8_MAX: kotlin.Int = 0

const val UINTMAX_MAX: kotlin.ULong = 0u

const val UINTPTR_MAX: kotlin.ULong = 0u

const val UINT_FAST16_MAX: kotlin.Int = 0

const val UINT_FAST32_MAX: kotlin.UInt = 0u

const val UINT_FAST64_MAX: kotlin.ULong = 0u

const val UINT_FAST8_MAX: kotlin.Int = 0

const val UINT_LEAST16_MAX: kotlin.Int = 0

const val UINT_LEAST32_MAX: kotlin.UInt = 0u

const val UINT_LEAST64_MAX: kotlin.ULong = 0u

const val UINT_LEAST8_MAX: kotlin.Int = 0

const val UINT_MAX: kotlin.UInt = 0u

const val ULLONG_MAX: kotlin.ULong = 0u

const val ULONG_LONG_MAX: kotlin.ULong = 0u

const val ULONG_MAX: kotlin.ULong = 0u

const val UNDERFLOW: kotlin.Int = 0

const val USER_ADDR_NULL: platform.posix.user_addr_t /* = kotlin.ULong */ = 0u

const val USHRT_MAX: kotlin.Int = 0

const val UTIME_NOW: kotlin.Int = 0

const val UTIME_OMIT: kotlin.Int = 0

const val VDISCARD: kotlin.Int = 0

const val VDSUSP: kotlin.Int = 0

const val VEOF: kotlin.Int = 0

const val VEOL: kotlin.Int = 0

const val VEOL2: kotlin.Int = 0

const val VERASE: kotlin.Int = 0

const val VINTR: kotlin.Int = 0

const val VKILL: kotlin.Int = 0

const val VLNEXT: kotlin.Int = 0

const val VMIN: kotlin.Int = 0

const val VQUIT: kotlin.Int = 0

const val VREPRINT: kotlin.Int = 0

const val VSTART: kotlin.Int = 0

const val VSTATUS: kotlin.Int = 0

const val VSTOP: kotlin.Int = 0

const val VSUSP: kotlin.Int = 0

const val VT0: kotlin.Int = 0

const val VT1: kotlin.Int = 0

const val VTDLY: kotlin.Int = 0

const val VTIME: kotlin.Int = 0

const val VWERASE: kotlin.Int = 0

const val WAIT_ANY: kotlin.Int = 0

const val WAIT_MYPGRP: kotlin.Int = 0

const val WAKEMON_DISABLE: kotlin.Int = 0

const val WAKEMON_ENABLE: kotlin.Int = 0

const val WAKEMON_GET_PARAMS: kotlin.Int = 0

const val WAKEMON_MAKE_FATAL: kotlin.Int = 0

const val WAKEMON_SET_DEFAULTS: kotlin.Int = 0

const val WCHAR_MAX: kotlin.Int = 0

const val WCHAR_MIN: kotlin.Int = 0

const val WCONTINUED: kotlin.Int = 0

const val WCOREFLAG: kotlin.Int = 0

const val WEOF: platform.posix.__darwin_wint_t /* = kotlin.Int */ = 0

const val WEXITED: kotlin.Int = 0

const val WINT_MAX: kotlin.Int = 0

const val WINT_MIN: kotlin.Int = 0

const val WNOHANG: kotlin.Int = 0

const val WNOWAIT: kotlin.Int = 0

const val WORD_BIT: kotlin.Int = 0

const val WSTOPPED: kotlin.Int = 0

const val WUNTRACED: kotlin.Int = 0

const val W_OK: kotlin.Int = 0

const val X_OK: kotlin.Int = 0

const val _ACCESS_EXTENDED_MASK: kotlin.Int = 0

const val _APPEND_OK: kotlin.Int = 0

const val _CACHED_RUNES: kotlin.Int = 0

const val _CHOWN_OK: kotlin.Int = 0

val _CLOCK_MONOTONIC: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_MONOTONIC_RAW: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_MONOTONIC_RAW_APPROX: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_PROCESS_CPUTIME_ID: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_REALTIME: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_THREAD_CPUTIME_ID: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_UPTIME_RAW: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

val _CLOCK_UPTIME_RAW_APPROX: platform.posix.clockid_t /* = kotlin.UInt */
    get() = TODO()

const val _CRMASK: kotlin.Int = 0

const val _CS_DARWIN_USER_CACHE_DIR: kotlin.Int = 0

const val _CS_DARWIN_USER_DIR: kotlin.Int = 0

const val _CS_DARWIN_USER_TEMP_DIR: kotlin.Int = 0

const val _CS_PATH: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFF32_CFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFF32_LDFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFF32_LIBS: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_ILP32_OFFBIG_LIBS: kotlin.Int = 0

const val _CS_POSIX_V6_LP64_OFF64_CFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_LP64_OFF64_LDFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_LP64_OFF64_LIBS: kotlin.Int = 0

const val _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS: kotlin.Int = 0

const val _CS_POSIX_V6_LPBIG_OFFBIG_LIBS: kotlin.Int = 0

const val _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFF32_CFLAGS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFF32_LDFLAGS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFF32_LIBS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFF32_LINTFLAGS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFFBIG_CFLAGS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFFBIG_LDFLAGS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFFBIG_LIBS: kotlin.Int = 0

const val _CS_XBS5_ILP32_OFFBIG_LINTFLAGS: kotlin.Int = 0

const val _CS_XBS5_LP64_OFF64_CFLAGS: kotlin.Int = 0

const val _CS_XBS5_LP64_OFF64_LDFLAGS: kotlin.Int = 0

const val _CS_XBS5_LP64_OFF64_LIBS: kotlin.Int = 0

const val _CS_XBS5_LP64_OFF64_LINTFLAGS: kotlin.Int = 0

const val _CS_XBS5_LPBIG_OFFBIG_CFLAGS: kotlin.Int = 0

const val _CS_XBS5_LPBIG_OFFBIG_LDFLAGS: kotlin.Int = 0

const val _CS_XBS5_LPBIG_OFFBIG_LIBS: kotlin.Int = 0

const val _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS: kotlin.Int = 0

const val _CTYPE_A: kotlin.Long = 0L

const val _CTYPE_B: kotlin.Long = 0L

const val _CTYPE_C: kotlin.Long = 0L

const val _CTYPE_D: kotlin.Long = 0L

const val _CTYPE_G: kotlin.Long = 0L

const val _CTYPE_I: kotlin.Long = 0L

const val _CTYPE_L: kotlin.Long = 0L

const val _CTYPE_P: kotlin.Long = 0L

const val _CTYPE_Q: kotlin.Long = 0L

const val _CTYPE_R: kotlin.Long = 0L

const val _CTYPE_S: kotlin.Long = 0L

const val _CTYPE_SW0: kotlin.Long = 0L

const val _CTYPE_SW1: kotlin.Long = 0L

const val _CTYPE_SW2: kotlin.Long = 0L

const val _CTYPE_SW3: kotlin.Long = 0L

const val _CTYPE_SWM: kotlin.Long = 0L

const val _CTYPE_SWS: kotlin.Int = 0

const val _CTYPE_T: kotlin.Long = 0L

const val _CTYPE_U: kotlin.Long = 0L

const val _CTYPE_X: kotlin.Long = 0L

const val _DARWIN_FEATURE_64_BIT_INODE: kotlin.Int = 0

const val _DARWIN_FEATURE_ONLY_64_BIT_INODE: kotlin.Int = 0

const val _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: kotlin.Int = 0

const val _DARWIN_FEATURE_ONLY_VERS_1050: kotlin.Int = 0

const val _DARWIN_FEATURE_UNIX_CONFORMANCE: kotlin.Int = 0

const val _DELETE_OK: kotlin.Int = 0

const val _EXECUTE_OK: kotlin.Int = 0

const val _FORTIFY_SOURCE: kotlin.Int = 0

const val _I386_SIGNAL_H_: kotlin.Int = 0

const val _IOFBF: kotlin.Int = 0

const val _IOLBF: kotlin.Int = 0

const val _IONBF: kotlin.Int = 0

const val _JBLEN: kotlin.Int = 0

const val _LC_LAST: kotlin.Int = 0

const val _LC_LAST_MASK: kotlin.Int = 0

const val _LC_NUM_MASK: kotlin.Int = 0

const val _PASSWORD_CHGNOW: kotlin.Int = 0

const val _PASSWORD_EFMT1: kotlin.Int = 0

const val _PASSWORD_LEN: kotlin.Int = 0

const val _PASSWORD_NOCHG: kotlin.Int = 0

const val _PASSWORD_NOEXP: kotlin.Int = 0

const val _PASSWORD_NOGID: kotlin.Int = 0

const val _PASSWORD_NOUID: kotlin.Int = 0

const val _PASSWORD_WARNDAYS: kotlin.Int = 0

const val _PC_2_SYMLINKS: kotlin.Int = 0

const val _PC_ALLOC_SIZE_MIN: kotlin.Int = 0

const val _PC_ASYNC_IO: kotlin.Int = 0

const val _PC_AUTH_OPAQUE_NP: kotlin.Int = 0

const val _PC_CASE_PRESERVING: kotlin.Int = 0

const val _PC_CASE_SENSITIVE: kotlin.Int = 0

const val _PC_CHOWN_RESTRICTED: kotlin.Int = 0

const val _PC_EXTENDED_SECURITY_NP: kotlin.Int = 0

const val _PC_FILESIZEBITS: kotlin.Int = 0

const val _PC_LINK_MAX: kotlin.Int = 0

const val _PC_MAX_CANON: kotlin.Int = 0

const val _PC_MAX_INPUT: kotlin.Int = 0

const val _PC_MIN_HOLE_SIZE: kotlin.Int = 0

const val _PC_NAME_CHARS_MAX: kotlin.Int = 0

const val _PC_NAME_MAX: kotlin.Int = 0

const val _PC_NO_TRUNC: kotlin.Int = 0

const val _PC_PATH_MAX: kotlin.Int = 0

const val _PC_PIPE_BUF: kotlin.Int = 0

const val _PC_PRIO_IO: kotlin.Int = 0

const val _PC_REC_INCR_XFER_SIZE: kotlin.Int = 0

const val _PC_REC_MAX_XFER_SIZE: kotlin.Int = 0

const val _PC_REC_MIN_XFER_SIZE: kotlin.Int = 0

const val _PC_REC_XFER_ALIGN: kotlin.Int = 0

const val _PC_SYMLINK_MAX: kotlin.Int = 0

const val _PC_SYNC_IO: kotlin.Int = 0

const val _PC_VDISABLE: kotlin.Int = 0

const val _PC_XATTR_SIZE_BITS: kotlin.Int = 0

const val _POSIX2_BC_BASE_MAX: kotlin.Int = 0

const val _POSIX2_BC_DIM_MAX: kotlin.Int = 0

const val _POSIX2_BC_SCALE_MAX: kotlin.Int = 0

const val _POSIX2_BC_STRING_MAX: kotlin.Int = 0

const val _POSIX2_CHARCLASS_NAME_MAX: kotlin.Int = 0

const val _POSIX2_CHAR_TERM: kotlin.Long = 0L

const val _POSIX2_COLL_WEIGHTS_MAX: kotlin.Int = 0

const val _POSIX2_C_BIND: kotlin.Long = 0L

const val _POSIX2_C_DEV: kotlin.Long = 0L

const val _POSIX2_EQUIV_CLASS_MAX: kotlin.Int = 0

const val _POSIX2_EXPR_NEST_MAX: kotlin.Int = 0

const val _POSIX2_FORT_DEV: kotlin.Int = 0

const val _POSIX2_FORT_RUN: kotlin.Long = 0L

const val _POSIX2_LINE_MAX: kotlin.Int = 0

const val _POSIX2_LOCALEDEF: kotlin.Long = 0L

const val _POSIX2_PBS: kotlin.Int = 0

const val _POSIX2_PBS_ACCOUNTING: kotlin.Int = 0

const val _POSIX2_PBS_CHECKPOINT: kotlin.Int = 0

const val _POSIX2_PBS_LOCATE: kotlin.Int = 0

const val _POSIX2_PBS_MESSAGE: kotlin.Int = 0

const val _POSIX2_PBS_TRACK: kotlin.Int = 0

const val _POSIX2_RE_DUP_MAX: kotlin.Int = 0

const val _POSIX2_SW_DEV: kotlin.Long = 0L

const val _POSIX2_UPE: kotlin.Long = 0L

const val _POSIX2_VERSION: kotlin.Long = 0L

const val _POSIX_ADVISORY_INFO: kotlin.Int = 0

const val _POSIX_AIO_LISTIO_MAX: kotlin.Int = 0

const val _POSIX_AIO_MAX: kotlin.Int = 0

const val _POSIX_ARG_MAX: kotlin.Int = 0

const val _POSIX_ASYNCHRONOUS_IO: kotlin.Int = 0

const val _POSIX_BARRIERS: kotlin.Int = 0

const val _POSIX_CHILD_MAX: kotlin.Int = 0

const val _POSIX_CHOWN_RESTRICTED: kotlin.Long = 0L

const val _POSIX_CLOCKRES_MIN: kotlin.Int = 0

const val _POSIX_CLOCK_SELECTION: kotlin.Int = 0

const val _POSIX_CPUTIME: kotlin.Int = 0

const val _POSIX_DELAYTIMER_MAX: kotlin.Int = 0

const val _POSIX_FSYNC: kotlin.Long = 0L

const val _POSIX_HOST_NAME_MAX: kotlin.Int = 0

const val _POSIX_IPV6: kotlin.Long = 0L

const val _POSIX_JOB_CONTROL: kotlin.Long = 0L

const val _POSIX_LINK_MAX: kotlin.Int = 0

const val _POSIX_LOGIN_NAME_MAX: kotlin.Int = 0

const val _POSIX_MAPPED_FILES: kotlin.Long = 0L

const val _POSIX_MAX_CANON: kotlin.Int = 0

const val _POSIX_MAX_INPUT: kotlin.Int = 0

const val _POSIX_MEMLOCK: kotlin.Int = 0

const val _POSIX_MEMLOCK_RANGE: kotlin.Int = 0

const val _POSIX_MEMORY_PROTECTION: kotlin.Long = 0L

const val _POSIX_MESSAGE_PASSING: kotlin.Int = 0

const val _POSIX_MONOTONIC_CLOCK: kotlin.Int = 0

const val _POSIX_MQ_OPEN_MAX: kotlin.Int = 0

const val _POSIX_MQ_PRIO_MAX: kotlin.Int = 0

const val _POSIX_NAME_MAX: kotlin.Int = 0

const val _POSIX_NGROUPS_MAX: kotlin.Int = 0

const val _POSIX_NO_TRUNC: kotlin.Long = 0L

const val _POSIX_OPEN_MAX: kotlin.Int = 0

const val _POSIX_PATH_MAX: kotlin.Int = 0

const val _POSIX_PIPE_BUF: kotlin.Int = 0

const val _POSIX_PRIORITIZED_IO: kotlin.Int = 0

const val _POSIX_PRIORITY_SCHEDULING: kotlin.Int = 0

const val _POSIX_RAW_SOCKETS: kotlin.Int = 0

const val _POSIX_READER_WRITER_LOCKS: kotlin.Long = 0L

const val _POSIX_REALTIME_SIGNALS: kotlin.Int = 0

const val _POSIX_REGEXP: kotlin.Long = 0L

const val _POSIX_RE_DUP_MAX: kotlin.Int = 0

const val _POSIX_RTSIG_MAX: kotlin.Int = 0

const val _POSIX_SAVED_IDS: kotlin.Long = 0L

const val _POSIX_SEMAPHORES: kotlin.Int = 0

const val _POSIX_SEM_NSEMS_MAX: kotlin.Int = 0

const val _POSIX_SEM_VALUE_MAX: kotlin.Int = 0

const val _POSIX_SHARED_MEMORY_OBJECTS: kotlin.Int = 0

const val _POSIX_SHELL: kotlin.Long = 0L

const val _POSIX_SIGQUEUE_MAX: kotlin.Int = 0

const val _POSIX_SPAWN: kotlin.Int = 0

const val _POSIX_SPIN_LOCKS: kotlin.Int = 0

const val _POSIX_SPORADIC_SERVER: kotlin.Int = 0

const val _POSIX_SSIZE_MAX: kotlin.Int = 0

const val _POSIX_SS_REPL_MAX: kotlin.Int = 0

const val _POSIX_STREAM_MAX: kotlin.Int = 0

const val _POSIX_SYMLINK_MAX: kotlin.Int = 0

const val _POSIX_SYMLOOP_MAX: kotlin.Int = 0

const val _POSIX_SYNCHRONIZED_IO: kotlin.Int = 0

const val _POSIX_THREADS: kotlin.Long = 0L

const val _POSIX_THREAD_ATTR_STACKADDR: kotlin.Long = 0L

const val _POSIX_THREAD_ATTR_STACKSIZE: kotlin.Long = 0L

const val _POSIX_THREAD_CPUTIME: kotlin.Int = 0

const val _POSIX_THREAD_DESTRUCTOR_ITERATIONS: kotlin.Int = 0

const val _POSIX_THREAD_KEYS_MAX: kotlin.Int = 0

const val _POSIX_THREAD_PRIORITY_SCHEDULING: kotlin.Int = 0

const val _POSIX_THREAD_PRIO_INHERIT: kotlin.Int = 0

const val _POSIX_THREAD_PRIO_PROTECT: kotlin.Int = 0

const val _POSIX_THREAD_PROCESS_SHARED: kotlin.Long = 0L

const val _POSIX_THREAD_SAFE_FUNCTIONS: kotlin.Long = 0L

const val _POSIX_THREAD_SPORADIC_SERVER: kotlin.Int = 0

const val _POSIX_THREAD_THREADS_MAX: kotlin.Int = 0

const val _POSIX_TIMEOUTS: kotlin.Int = 0

const val _POSIX_TIMERS: kotlin.Int = 0

const val _POSIX_TIMER_MAX: kotlin.Int = 0

const val _POSIX_TRACE: kotlin.Int = 0

const val _POSIX_TRACE_EVENT_FILTER: kotlin.Int = 0

const val _POSIX_TRACE_EVENT_NAME_MAX: kotlin.Int = 0

const val _POSIX_TRACE_INHERIT: kotlin.Int = 0

const val _POSIX_TRACE_LOG: kotlin.Int = 0

const val _POSIX_TRACE_NAME_MAX: kotlin.Int = 0

const val _POSIX_TRACE_SYS_MAX: kotlin.Int = 0

const val _POSIX_TRACE_USER_EVENT_MAX: kotlin.Int = 0

const val _POSIX_TTY_NAME_MAX: kotlin.Int = 0

const val _POSIX_TYPED_MEMORY_OBJECTS: kotlin.Int = 0

const val _POSIX_TZNAME_MAX: kotlin.Int = 0

const val _POSIX_V6_ILP32_OFF32: kotlin.Int = 0

const val _POSIX_V6_ILP32_OFFBIG: kotlin.Int = 0

const val _POSIX_V6_LP64_OFF64: kotlin.Int = 0

const val _POSIX_V6_LPBIG_OFFBIG: kotlin.Int = 0

const val _POSIX_V7_ILP32_OFF32: kotlin.Int = 0

const val _POSIX_V7_ILP32_OFFBIG: kotlin.Int = 0

const val _POSIX_V7_LP64_OFF64: kotlin.Int = 0

const val _POSIX_V7_LPBIG_OFFBIG: kotlin.Int = 0

const val _POSIX_VDISABLE: kotlin.UByte = 0u

const val _POSIX_VERSION: kotlin.Long = 0L

const val _PTHREAD_COND_SIG_init: kotlin.Int = 0

const val _PTHREAD_ERRORCHECK_MUTEX_SIG_init: kotlin.Int = 0

const val _PTHREAD_FIRSTFIT_MUTEX_SIG_init: kotlin.Int = 0

const val _PTHREAD_MUTEX_SIG_init: kotlin.Int = 0

const val _PTHREAD_ONCE_SIG_init: kotlin.Int = 0

const val _PTHREAD_RECURSIVE_MUTEX_SIG_init: kotlin.Int = 0

const val _PTHREAD_RWLOCK_SIG_init: kotlin.Int = 0

const val _PW_KEYBYNAME: kotlin.Int = 0

const val _PW_KEYBYNUM: kotlin.Int = 0

const val _PW_KEYBYUID: kotlin.Int = 0

const val _QUAD_HIGHWORD: kotlin.Int = 0

const val _QUAD_LOWWORD: kotlin.Int = 0

const val _RATTR_OK: kotlin.Int = 0

const val _READ_OK: kotlin.Int = 0

const val _REXT_OK: kotlin.Int = 0

const val _RLIMIT_POSIX_FLAG: kotlin.Int = 0

const val _RMFILE_OK: kotlin.Int = 0

const val _RPERM_OK: kotlin.Int = 0

const val _SC_2_CHAR_TERM: kotlin.Int = 0

const val _SC_2_C_BIND: kotlin.Int = 0

const val _SC_2_C_DEV: kotlin.Int = 0

const val _SC_2_FORT_DEV: kotlin.Int = 0

const val _SC_2_FORT_RUN: kotlin.Int = 0

const val _SC_2_LOCALEDEF: kotlin.Int = 0

const val _SC_2_PBS: kotlin.Int = 0

const val _SC_2_PBS_ACCOUNTING: kotlin.Int = 0

const val _SC_2_PBS_CHECKPOINT: kotlin.Int = 0

const val _SC_2_PBS_LOCATE: kotlin.Int = 0

const val _SC_2_PBS_MESSAGE: kotlin.Int = 0

const val _SC_2_PBS_TRACK: kotlin.Int = 0

const val _SC_2_SW_DEV: kotlin.Int = 0

const val _SC_2_UPE: kotlin.Int = 0

const val _SC_2_VERSION: kotlin.Int = 0

const val _SC_ADVISORY_INFO: kotlin.Int = 0

const val _SC_AIO_LISTIO_MAX: kotlin.Int = 0

const val _SC_AIO_MAX: kotlin.Int = 0

const val _SC_AIO_PRIO_DELTA_MAX: kotlin.Int = 0

const val _SC_ARG_MAX: kotlin.Int = 0

const val _SC_ASYNCHRONOUS_IO: kotlin.Int = 0

const val _SC_ATEXIT_MAX: kotlin.Int = 0

const val _SC_BARRIERS: kotlin.Int = 0

const val _SC_BC_BASE_MAX: kotlin.Int = 0

const val _SC_BC_DIM_MAX: kotlin.Int = 0

const val _SC_BC_SCALE_MAX: kotlin.Int = 0

const val _SC_BC_STRING_MAX: kotlin.Int = 0

const val _SC_CHILD_MAX: kotlin.Int = 0

const val _SC_CLK_TCK: kotlin.Int = 0

const val _SC_CLOCK_SELECTION: kotlin.Int = 0

const val _SC_COLL_WEIGHTS_MAX: kotlin.Int = 0

const val _SC_CPUTIME: kotlin.Int = 0

const val _SC_DELAYTIMER_MAX: kotlin.Int = 0

const val _SC_EXPR_NEST_MAX: kotlin.Int = 0

const val _SC_FILE_LOCKING: kotlin.Int = 0

const val _SC_FSYNC: kotlin.Int = 0

const val _SC_GETGR_R_SIZE_MAX: kotlin.Int = 0

const val _SC_GETPW_R_SIZE_MAX: kotlin.Int = 0

const val _SC_HOST_NAME_MAX: kotlin.Int = 0

const val _SC_IOV_MAX: kotlin.Int = 0

const val _SC_IPV6: kotlin.Int = 0

const val _SC_JOB_CONTROL: kotlin.Int = 0

const val _SC_LINE_MAX: kotlin.Int = 0

const val _SC_LOGIN_NAME_MAX: kotlin.Int = 0

const val _SC_MAPPED_FILES: kotlin.Int = 0

const val _SC_MEMLOCK: kotlin.Int = 0

const val _SC_MEMLOCK_RANGE: kotlin.Int = 0

const val _SC_MEMORY_PROTECTION: kotlin.Int = 0

const val _SC_MESSAGE_PASSING: kotlin.Int = 0

const val _SC_MONOTONIC_CLOCK: kotlin.Int = 0

const val _SC_MQ_OPEN_MAX: kotlin.Int = 0

const val _SC_MQ_PRIO_MAX: kotlin.Int = 0

const val _SC_NGROUPS_MAX: kotlin.Int = 0

const val _SC_NPROCESSORS_CONF: kotlin.Int = 0

const val _SC_NPROCESSORS_ONLN: kotlin.Int = 0

const val _SC_OPEN_MAX: kotlin.Int = 0

const val _SC_PAGESIZE: kotlin.Int = 0

const val _SC_PAGE_SIZE: kotlin.Int = 0

const val _SC_PASS_MAX: kotlin.Int = 0

const val _SC_PHYS_PAGES: kotlin.Int = 0

const val _SC_PRIORITIZED_IO: kotlin.Int = 0

const val _SC_PRIORITY_SCHEDULING: kotlin.Int = 0

const val _SC_RAW_SOCKETS: kotlin.Int = 0

const val _SC_READER_WRITER_LOCKS: kotlin.Int = 0

const val _SC_REALTIME_SIGNALS: kotlin.Int = 0

const val _SC_REGEXP: kotlin.Int = 0

const val _SC_RE_DUP_MAX: kotlin.Int = 0

const val _SC_RTSIG_MAX: kotlin.Int = 0

const val _SC_SAVED_IDS: kotlin.Int = 0

const val _SC_SEMAPHORES: kotlin.Int = 0

const val _SC_SEM_NSEMS_MAX: kotlin.Int = 0

const val _SC_SEM_VALUE_MAX: kotlin.Int = 0

const val _SC_SHARED_MEMORY_OBJECTS: kotlin.Int = 0

const val _SC_SHELL: kotlin.Int = 0

const val _SC_SIGQUEUE_MAX: kotlin.Int = 0

const val _SC_SPAWN: kotlin.Int = 0

const val _SC_SPIN_LOCKS: kotlin.Int = 0

const val _SC_SPORADIC_SERVER: kotlin.Int = 0

const val _SC_SS_REPL_MAX: kotlin.Int = 0

const val _SC_STREAM_MAX: kotlin.Int = 0

const val _SC_SYMLOOP_MAX: kotlin.Int = 0

const val _SC_SYNCHRONIZED_IO: kotlin.Int = 0

const val _SC_THREADS: kotlin.Int = 0

const val _SC_THREAD_ATTR_STACKADDR: kotlin.Int = 0

const val _SC_THREAD_ATTR_STACKSIZE: kotlin.Int = 0

const val _SC_THREAD_CPUTIME: kotlin.Int = 0

const val _SC_THREAD_DESTRUCTOR_ITERATIONS: kotlin.Int = 0

const val _SC_THREAD_KEYS_MAX: kotlin.Int = 0

const val _SC_THREAD_PRIORITY_SCHEDULING: kotlin.Int = 0

const val _SC_THREAD_PRIO_INHERIT: kotlin.Int = 0

const val _SC_THREAD_PRIO_PROTECT: kotlin.Int = 0

const val _SC_THREAD_PROCESS_SHARED: kotlin.Int = 0

const val _SC_THREAD_SAFE_FUNCTIONS: kotlin.Int = 0

const val _SC_THREAD_SPORADIC_SERVER: kotlin.Int = 0

const val _SC_THREAD_STACK_MIN: kotlin.Int = 0

const val _SC_THREAD_THREADS_MAX: kotlin.Int = 0

const val _SC_TIMEOUTS: kotlin.Int = 0

const val _SC_TIMERS: kotlin.Int = 0

const val _SC_TIMER_MAX: kotlin.Int = 0

const val _SC_TRACE: kotlin.Int = 0

const val _SC_TRACE_EVENT_FILTER: kotlin.Int = 0

const val _SC_TRACE_EVENT_NAME_MAX: kotlin.Int = 0

const val _SC_TRACE_INHERIT: kotlin.Int = 0

const val _SC_TRACE_LOG: kotlin.Int = 0

const val _SC_TRACE_NAME_MAX: kotlin.Int = 0

const val _SC_TRACE_SYS_MAX: kotlin.Int = 0

const val _SC_TRACE_USER_EVENT_MAX: kotlin.Int = 0

const val _SC_TTY_NAME_MAX: kotlin.Int = 0

const val _SC_TYPED_MEMORY_OBJECTS: kotlin.Int = 0

const val _SC_TZNAME_MAX: kotlin.Int = 0

const val _SC_V6_ILP32_OFF32: kotlin.Int = 0

const val _SC_V6_ILP32_OFFBIG: kotlin.Int = 0

const val _SC_V6_LP64_OFF64: kotlin.Int = 0

const val _SC_V6_LPBIG_OFFBIG: kotlin.Int = 0

const val _SC_VERSION: kotlin.Int = 0

const val _SC_XBS5_ILP32_OFF32: kotlin.Int = 0

const val _SC_XBS5_ILP32_OFFBIG: kotlin.Int = 0

const val _SC_XBS5_LP64_OFF64: kotlin.Int = 0

const val _SC_XBS5_LPBIG_OFFBIG: kotlin.Int = 0

const val _SC_XOPEN_CRYPT: kotlin.Int = 0

const val _SC_XOPEN_ENH_I18N: kotlin.Int = 0

const val _SC_XOPEN_LEGACY: kotlin.Int = 0

const val _SC_XOPEN_REALTIME: kotlin.Int = 0

const val _SC_XOPEN_REALTIME_THREADS: kotlin.Int = 0

const val _SC_XOPEN_SHM: kotlin.Int = 0

const val _SC_XOPEN_STREAMS: kotlin.Int = 0

const val _SC_XOPEN_UNIX: kotlin.Int = 0

const val _SC_XOPEN_VERSION: kotlin.Int = 0

const val _SC_XOPEN_XCU_VERSION: kotlin.Int = 0

const val _SS_ALIGNSIZE: kotlin.ULong = 0u

const val _SS_MAXSIZE: kotlin.Int = 0

const val _SS_PAD1SIZE: kotlin.ULong = 0u

const val _SS_PAD2SIZE: kotlin.ULong = 0u

const val _SYS_NAMELEN: kotlin.Int = 0

const val _USE_FORTIFY_LEVEL: kotlin.Int = 0

const val _V6_ILP32_OFF32: kotlin.Int = 0

const val _V6_ILP32_OFFBIG: kotlin.Int = 0

const val _V6_LP64_OFF64: kotlin.Int = 0

const val _V6_LPBIG_OFFBIG: kotlin.Int = 0

const val _WATTR_OK: kotlin.Int = 0

const val _WEXT_OK: kotlin.Int = 0

const val _WPERM_OK: kotlin.Int = 0

const val _WRITE_OK: kotlin.Int = 0

const val _WSTOPPED: kotlin.Int = 0

const val _XBS5_ILP32_OFF32: kotlin.Int = 0

const val _XBS5_ILP32_OFFBIG: kotlin.Int = 0

const val _XBS5_LP64_OFF64: kotlin.Int = 0

const val _XBS5_LPBIG_OFFBIG: kotlin.Int = 0

const val _XOPEN_CRYPT: kotlin.Int = 0

const val _XOPEN_ENH_I18N: kotlin.Int = 0

const val _XOPEN_IOV_MAX: kotlin.Int = 0

const val _XOPEN_LEGACY: kotlin.Int = 0

const val _XOPEN_NAME_MAX: kotlin.Int = 0

const val _XOPEN_PATH_MAX: kotlin.Int = 0

const val _XOPEN_REALTIME: kotlin.Int = 0

const val _XOPEN_REALTIME_THREADS: kotlin.Int = 0

const val _XOPEN_SHM: kotlin.Int = 0

const val _XOPEN_STREAMS: kotlin.Int = 0

const val _XOPEN_UNIX: kotlin.Int = 0

const val _XOPEN_VERSION: kotlin.Int = 0

const val _XOPEN_XCU_VERSION: kotlin.Int = 0

const val __API_TO_BE_DEPRECATED: kotlin.Int = 0

const val __CTERMID_DEFINED: kotlin.Int = 0

const val __DARWIN_64_BIT_INO_T: kotlin.Int = 0

const val __DARWIN_ACL_ADD_FILE: kotlin.Int = 0

const val __DARWIN_ACL_ADD_SUBDIRECTORY: kotlin.Int = 0

const val __DARWIN_ACL_APPEND_DATA: kotlin.Int = 0

const val __DARWIN_ACL_CHANGE_OWNER: kotlin.Int = 0

const val __DARWIN_ACL_DELETE: kotlin.Int = 0

const val __DARWIN_ACL_DELETE_CHILD: kotlin.Int = 0

const val __DARWIN_ACL_ENTRY_DIRECTORY_INHERIT: kotlin.Int = 0

const val __DARWIN_ACL_ENTRY_FILE_INHERIT: kotlin.Int = 0

const val __DARWIN_ACL_ENTRY_INHERITED: kotlin.Int = 0

const val __DARWIN_ACL_ENTRY_LIMIT_INHERIT: kotlin.Int = 0

const val __DARWIN_ACL_ENTRY_ONLY_INHERIT: kotlin.Int = 0

const val __DARWIN_ACL_EXECUTE: kotlin.Int = 0

const val __DARWIN_ACL_EXTENDED_ALLOW: kotlin.Int = 0

const val __DARWIN_ACL_EXTENDED_DENY: kotlin.Int = 0

const val __DARWIN_ACL_FLAG_NO_INHERIT: kotlin.Int = 0

const val __DARWIN_ACL_LIST_DIRECTORY: kotlin.Int = 0

const val __DARWIN_ACL_READ_ATTRIBUTES: kotlin.Int = 0

const val __DARWIN_ACL_READ_DATA: kotlin.Int = 0

const val __DARWIN_ACL_READ_EXTATTRIBUTES: kotlin.Int = 0

const val __DARWIN_ACL_READ_SECURITY: kotlin.Int = 0

const val __DARWIN_ACL_SEARCH: kotlin.Int = 0

const val __DARWIN_ACL_SYNCHRONIZE: kotlin.Int = 0

const val __DARWIN_ACL_WRITE_ATTRIBUTES: kotlin.Int = 0

const val __DARWIN_ACL_WRITE_DATA: kotlin.Int = 0

const val __DARWIN_ACL_WRITE_EXTATTRIBUTES: kotlin.Int = 0

const val __DARWIN_ACL_WRITE_SECURITY: kotlin.Int = 0

const val __DARWIN_ALIGNBYTES: kotlin.ULong = 0u

const val __DARWIN_ALIGNBYTES32: kotlin.ULong = 0u

const val __DARWIN_BIG_ENDIAN: kotlin.Int = 0

const val __DARWIN_BYTE_ORDER: kotlin.Int = 0

const val __DARWIN_CLK_TCK: kotlin.Int = 0

const val __DARWIN_C_ANSI: kotlin.Long = 0L

const val __DARWIN_C_FULL: kotlin.Long = 0L

const val __DARWIN_C_LEVEL: kotlin.Long = 0L

const val __DARWIN_FD_SETSIZE: kotlin.Int = 0

const val __DARWIN_IPPORT_RESERVED: kotlin.Int = 0

const val __DARWIN_LITTLE_ENDIAN: kotlin.Int = 0

const val __DARWIN_MAXNAMLEN: kotlin.Int = 0

const val __DARWIN_MAXPATHLEN: kotlin.Int = 0

const val __DARWIN_NBBY: kotlin.Int = 0

const val __DARWIN_NFDBITS: kotlin.ULong = 0u

const val __DARWIN_NON_CANCELABLE: kotlin.Int = 0

const val __DARWIN_NO_LONG_LONG: kotlin.Int = 0

const val __DARWIN_NSIG: kotlin.Int = 0

const val __DARWIN_ONLY_64_BIT_INO_T: kotlin.Int = 0

const val __DARWIN_ONLY_UNIX_CONFORMANCE: kotlin.Int = 0

const val __DARWIN_ONLY_VERS_1050: kotlin.Int = 0

const val __DARWIN_PDP_ENDIAN: kotlin.Int = 0

const val __DARWIN_UNIX03: kotlin.Int = 0

const val __DARWIN_VERS_1050: kotlin.Int = 0

const val __DARWIN_WCHAR_MAX: kotlin.Int = 0

const val __DARWIN_WCHAR_MIN: kotlin.Int = 0

const val __DARWIN_WEOF: platform.posix.__darwin_wint_t /* = kotlin.Int */ = 0

const val __DTF_READALL: kotlin.Int = 0

const val __DTF_SKIPREAD: kotlin.Int = 0

const val __GNUC_VA_LIST: kotlin.Int = 0

const val __ILP32_OFF32: kotlin.Int = 0

const val __ILP32_OFFBIG: kotlin.Int = 0

const val __IPHONE_10_0: kotlin.Int = 0

const val __IPHONE_10_1: kotlin.Int = 0

const val __IPHONE_10_2: kotlin.Int = 0

const val __IPHONE_10_3: kotlin.Int = 0

const val __IPHONE_11_0: kotlin.Int = 0

const val __IPHONE_11_1: kotlin.Int = 0

const val __IPHONE_11_2: kotlin.Int = 0

const val __IPHONE_11_3: kotlin.Int = 0

const val __IPHONE_11_4: kotlin.Int = 0

const val __IPHONE_12_0: kotlin.Int = 0

const val __IPHONE_2_0: kotlin.Int = 0

const val __IPHONE_2_1: kotlin.Int = 0

const val __IPHONE_2_2: kotlin.Int = 0

const val __IPHONE_3_0: kotlin.Int = 0

const val __IPHONE_3_1: kotlin.Int = 0

const val __IPHONE_3_2: kotlin.Int = 0

const val __IPHONE_4_0: kotlin.Int = 0

const val __IPHONE_4_1: kotlin.Int = 0

const val __IPHONE_4_2: kotlin.Int = 0

const val __IPHONE_4_3: kotlin.Int = 0

const val __IPHONE_5_0: kotlin.Int = 0

const val __IPHONE_5_1: kotlin.Int = 0

const val __IPHONE_6_0: kotlin.Int = 0

const val __IPHONE_6_1: kotlin.Int = 0

const val __IPHONE_7_0: kotlin.Int = 0

const val __IPHONE_7_1: kotlin.Int = 0

const val __IPHONE_8_0: kotlin.Int = 0

const val __IPHONE_8_1: kotlin.Int = 0

const val __IPHONE_8_2: kotlin.Int = 0

const val __IPHONE_8_3: kotlin.Int = 0

const val __IPHONE_8_4: kotlin.Int = 0

const val __IPHONE_9_0: kotlin.Int = 0

const val __IPHONE_9_1: kotlin.Int = 0

const val __IPHONE_9_2: kotlin.Int = 0

const val __IPHONE_9_3: kotlin.Int = 0

const val __IPHONE_OS_VERSION_MAX_ALLOWED: kotlin.Int = 0

const val __IPHONE_OS_VERSION_MIN_REQUIRED: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_GLOBAL: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_INTFACELOCAL: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_LINKLOCAL: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_NODELOCAL: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_ORGLOCAL: kotlin.Int = 0

const val __IPV6_ADDR_SCOPE_SITELOCAL: kotlin.Int = 0

const val __LP64_OFF64: kotlin.Int = 0

const val __LPBIG_OFFBIG: kotlin.Int = 0

const val __MAC_10_0: kotlin.Int = 0

const val __MAC_10_1: kotlin.Int = 0

const val __MAC_10_10: kotlin.Int = 0

const val __MAC_10_10_2: kotlin.Int = 0

const val __MAC_10_10_3: kotlin.Int = 0

const val __MAC_10_11: kotlin.Int = 0

const val __MAC_10_11_2: kotlin.Int = 0

const val __MAC_10_11_3: kotlin.Int = 0

const val __MAC_10_11_4: kotlin.Int = 0

const val __MAC_10_12: kotlin.Int = 0

const val __MAC_10_12_1: kotlin.Int = 0

const val __MAC_10_12_2: kotlin.Int = 0

const val __MAC_10_12_4: kotlin.Int = 0

const val __MAC_10_13: kotlin.Int = 0

const val __MAC_10_13_1: kotlin.Int = 0

const val __MAC_10_13_2: kotlin.Int = 0

const val __MAC_10_13_4: kotlin.Int = 0

const val __MAC_10_14: kotlin.Int = 0

const val __MAC_10_2: kotlin.Int = 0

const val __MAC_10_3: kotlin.Int = 0

const val __MAC_10_4: kotlin.Int = 0

const val __MAC_10_5: kotlin.Int = 0

const val __MAC_10_6: kotlin.Int = 0

const val __MAC_10_7: kotlin.Int = 0

const val __MAC_10_8: kotlin.Int = 0

const val __MAC_10_9: kotlin.Int = 0

const val __NAMESER: kotlin.Int = 0

const val __PTHREAD_ATTR_SIZE__: kotlin.Int = 0

const val __PTHREAD_CONDATTR_SIZE__: kotlin.Int = 0

const val __PTHREAD_COND_SIZE__: kotlin.Int = 0

const val __PTHREAD_MUTEXATTR_SIZE__: kotlin.Int = 0

const val __PTHREAD_MUTEX_SIZE__: kotlin.Int = 0

const val __PTHREAD_ONCE_SIZE__: kotlin.Int = 0

const val __PTHREAD_RWLOCKATTR_SIZE__: kotlin.Int = 0

const val __PTHREAD_RWLOCK_SIZE__: kotlin.Int = 0

const val __PTHREAD_SIZE__: kotlin.Int = 0

const val __RES: kotlin.Int = 0

const val __SALC: kotlin.Int = 0

const val __SAPP: kotlin.Int = 0

const val __SCHED_PARAM_SIZE__: kotlin.Int = 0

const val __SEOF: kotlin.Int = 0

const val __SERR: kotlin.Int = 0

const val __SIGN: kotlin.Int = 0

const val __SLBF: kotlin.Int = 0

const val __SMBF: kotlin.Int = 0

const val __SMOD: kotlin.Int = 0

const val __SNBF: kotlin.Int = 0

const val __SNPT: kotlin.Int = 0

const val __SOFF: kotlin.Int = 0

const val __SOPT: kotlin.Int = 0

const val __SRD: kotlin.Int = 0

const val __SRW: kotlin.Int = 0

const val __SSTR: kotlin.Int = 0

const val __STDC_WANT_LIB_EXT1__: kotlin.Int = 0

const val __SWR: kotlin.Int = 0

const val __TVOS_10_0: kotlin.Int = 0

const val __TVOS_10_0_1: kotlin.Int = 0

const val __TVOS_10_1: kotlin.Int = 0

const val __TVOS_10_2: kotlin.Int = 0

const val __TVOS_11_0: kotlin.Int = 0

const val __TVOS_11_1: kotlin.Int = 0

const val __TVOS_11_2: kotlin.Int = 0

const val __TVOS_11_3: kotlin.Int = 0

const val __TVOS_11_4: kotlin.Int = 0

const val __TVOS_12_0: kotlin.Int = 0

const val __TVOS_9_0: kotlin.Int = 0

const val __TVOS_9_1: kotlin.Int = 0

const val __TVOS_9_2: kotlin.Int = 0

const val __WATCHOS_1_0: kotlin.Int = 0

const val __WATCHOS_2_0: kotlin.Int = 0

const val __WATCHOS_2_1: kotlin.Int = 0

const val __WATCHOS_2_2: kotlin.Int = 0

const val __WATCHOS_3_0: kotlin.Int = 0

const val __WATCHOS_3_1: kotlin.Int = 0

const val __WATCHOS_3_1_1: kotlin.Int = 0

const val __WATCHOS_3_2: kotlin.Int = 0

const val __WATCHOS_4_0: kotlin.Int = 0

const val __WATCHOS_4_1: kotlin.Int = 0

const val __WATCHOS_4_2: kotlin.Int = 0

const val __WATCHOS_4_3: kotlin.Int = 0

const val __WATCHOS_5_0: kotlin.Int = 0

const val __WORDSIZE: kotlin.Int = 0

const val __bool_true_false_are_defined: kotlin.Int = 0

val __res_9_p_type_syms: kotlinx.cinterop.CArrayPointer<platform.posix.res_9_sym> /* = kotlinx.cinterop.CPointer<platform.posix.res_9_sym> */
    get() = TODO()

val _c_locale: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */
    get() = TODO()

val _res_9_ns_flagdata_: kotlinx.cinterop.CArrayPointer<platform.posix._res_9_ns_flagdata> /* = kotlinx.cinterop.CPointer<platform.posix._res_9_ns_flagdata> */
    get() = TODO()

val cert_t_oid: platform.posix.__ns_cert_types /* = kotlin.UInt */
    get() = TODO()

val cert_t_pgp: platform.posix.__ns_cert_types /* = kotlin.UInt */
    get() = TODO()

val cert_t_pkix: platform.posix.__ns_cert_types /* = kotlin.UInt */
    get() = TODO()

val cert_t_spki: platform.posix.__ns_cert_types /* = kotlin.UInt */
    get() = TODO()

val cert_t_url: platform.posix.__ns_cert_types /* = kotlin.UInt */
    get() = TODO()

const val `false`: kotlin.Int = 0

val in6addr_linklocal_allv2routers: platform.posix.in6_addr
    get() = TODO()

val memory_order_acq_rel: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

val memory_order_acquire: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

val memory_order_consume: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

val memory_order_relaxed: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

val memory_order_release: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

val memory_order_seq_cst: platform.posix.memory_order /* = kotlin.UInt */
    get() = TODO()

const val no_argument: kotlin.Int = 0

val ns_c_2: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_any: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_chaos: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_hs: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_in: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_invalid: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_max: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_c_none: platform.posix.__ns_class /* = kotlin.UInt */
    get() = TODO()

val ns_kt_dh: platform.posix.__ns_key_types /* = kotlin.UInt */
    get() = TODO()

val ns_kt_dsa: platform.posix.__ns_key_types /* = kotlin.UInt */
    get() = TODO()

val ns_kt_private: platform.posix.__ns_key_types /* = kotlin.UInt */
    get() = TODO()

val ns_kt_rsa: platform.posix.__ns_key_types /* = kotlin.UInt */
    get() = TODO()

val ns_o_iquery: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_o_max: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_o_notify: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_o_query: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_o_status: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_o_update: platform.posix.__ns_opcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_badkey: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_badsig: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_badtime: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_badvers: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_formerr: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_max: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_noerror: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_notauth: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_notimpl: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_notzone: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_nxdomain: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_nxrrset: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_refused: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_servfail: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_yxdomain: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_r_yxrrset: platform.posix.__ns_rcode /* = kotlin.UInt */
    get() = TODO()

val ns_s_an: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_ar: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_max: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_ns: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_pr: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_qd: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_ud: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_s_zn: platform.posix.__ns_sect /* = kotlin.UInt */
    get() = TODO()

val ns_t_a: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_a6: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_aaaa: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_afsdb: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_any: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_atma: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_axfr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_cert: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_cname: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_dname: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_eid: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_gpos: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_hinfo: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_invalid: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_isdn: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_ixfr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_key: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_kx: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_loc: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_maila: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mailb: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_max: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mb: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_md: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mf: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mg: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_minfo: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_mx: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_naptr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_nimloc: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_ns: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_nsap: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_nsap_ptr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_null: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_nxt: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_opt: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_ptr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_px: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_rp: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_rt: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_sig: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_sink: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_soa: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_srv: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_tkey: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_tsig: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_txt: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_wks: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_x25: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_t_zxfr: platform.posix.__ns_type /* = kotlin.UInt */
    get() = TODO()

val ns_uop_add: platform.posix.__ns_update_operation /* = kotlin.UInt */
    get() = TODO()

val ns_uop_delete: platform.posix.__ns_update_operation /* = kotlin.UInt */
    get() = TODO()

val ns_uop_max: platform.posix.__ns_update_operation /* = kotlin.UInt */
    get() = TODO()

var optarg: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

const val optional_argument: kotlin.Int = 0

const val pseudo_AF_HDRCMPLT: kotlin.Int = 0

const val pseudo_AF_KEY: kotlin.Int = 0

const val pseudo_AF_PIP: kotlin.Int = 0

const val pseudo_AF_RTIP: kotlin.Int = 0

const val pseudo_AF_XTP: kotlin.Int = 0

const val required_argument: kotlin.Int = 0

const val res_done: kotlin.Int = 0

const val res_error: kotlin.Int = 0

const val res_goahead: kotlin.Int = 0

const val res_modified: kotlin.Int = 0

const val res_nextns: kotlin.Int = 0

var suboptarg: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?
    get() = TODO()
    set(value: kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) = TODO()

val sys_errlist: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val sys_siglist: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

val sys_signame: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

const val `true`: kotlin.Int = 0

val tzname: kotlinx.cinterop.CArrayPointer<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */> /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>>> */
    get() = TODO()

fun _OSSwapInt16(/*0*/ _data: platform.posix.__uint16_t /* = kotlin.UShort */): platform.posix.__uint16_t /* = kotlin.UShort */ { TODO() }

fun _OSSwapInt32(/*0*/ _data: platform.posix.__uint32_t /* = kotlin.UInt */): platform.posix.__uint32_t /* = kotlin.UInt */ { TODO() }

fun _OSSwapInt64(/*0*/ _data: platform.posix.__uint64_t /* = kotlin.ULong */): platform.posix.__uint64_t /* = kotlin.ULong */ { TODO() }

fun ___mb_cur_max_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun ___runetype(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): kotlin.ULong { TODO() }

fun ___runetype_l(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun ___tolower(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun ___tolower_l(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun ___toupper(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun ___toupper_l(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __error(): kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>? { TODO() }

fun __isctype(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _f: kotlin.ULong): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __istype(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _f: kotlin.ULong): kotlin.Int { TODO() }

fun __istype_l(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _f: kotlin.ULong, /*2*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun __maskrune(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ arg1: kotlin.ULong): kotlin.Int { TODO() }

fun __maskrune_l(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ arg1: kotlin.ULong, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun __sincos(/*0*/ __x: kotlin.Double, /*1*/ __sinp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?, /*2*/ __cosp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?) { TODO() }

fun __sincosf(/*0*/ __x: kotlin.Float, /*1*/ __sinp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.FloatVar /* = kotlinx.cinterop.FloatVarOf<kotlin.Float> */>?, /*2*/ __cosp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.FloatVar /* = kotlinx.cinterop.FloatVarOf<kotlin.Float> */>?) { TODO() }

fun __sincospi(/*0*/ __x: kotlin.Double, /*1*/ __sinp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?, /*2*/ __cosp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?) { TODO() }

fun __sincospif(/*0*/ __x: kotlin.Float, /*1*/ __sinp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.FloatVar /* = kotlinx.cinterop.FloatVarOf<kotlin.Float> */>?, /*2*/ __cosp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.FloatVar /* = kotlinx.cinterop.FloatVarOf<kotlin.Float> */>?) { TODO() }

fun __snprintf_chk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.String?, /*5*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun __sprintf_chk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.String?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun __svfscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun __tolower(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __tolower_l(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __toupper(/*0*/ arg0: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __toupper_l(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.__darwin_ct_rune_t /* = kotlin.Int */ { TODO() }

fun __vsnprintf_chk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.String?, /*5*/ arg5: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun __vsprintf_chk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.String?, /*4*/ arg4: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun __wcwidth(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun __wcwidth_l(/*0*/ _c: platform.posix.__darwin_ct_rune_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun _longjmp(/*0*/ arg0: platform.posix.jmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */, /*1*/ arg1: kotlin.Int) { TODO() }

fun _setjmp(/*0*/ arg0: platform.posix.jmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */): kotlin.Int { TODO() }

fun accept(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun accessx_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.accessx_descriptor>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: platform.posix.uid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_add_flag_np(/*0*/ flagset_d: platform.posix.acl_flagset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>? */, /*1*/ flag: platform.posix.acl_flag_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_add_perm(/*0*/ permset_d: platform.posix.acl_permset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>? */, /*1*/ perm: platform.posix.acl_perm_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_calc_mask(/*0*/ acl_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl> */> */>?): kotlin.Int { TODO() }

fun acl_clear_flags_np(/*0*/ flagset_d: platform.posix.acl_flagset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>? */): kotlin.Int { TODO() }

fun acl_clear_perms(/*0*/ permset_d: platform.posix.acl_permset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>? */): kotlin.Int { TODO() }

fun acl_copy_entry(/*0*/ dest_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ src_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */): kotlin.Int { TODO() }

fun acl_copy_ext(/*0*/ buf_p: kotlinx.cinterop.CValuesRef<*>?, /*1*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*2*/ size: platform.posix.ssize_t /* = kotlin.Long */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun acl_copy_ext_native(/*0*/ buf_p: kotlinx.cinterop.CValuesRef<*>?, /*1*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*2*/ size: platform.posix.ssize_t /* = kotlin.Long */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun acl_copy_int(/*0*/ buf_p: kotlinx.cinterop.CValuesRef<*>?): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_copy_int_native(/*0*/ buf_p: kotlinx.cinterop.CValuesRef<*>?): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_create_entry(/*0*/ acl_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl> */> */>?, /*1*/ entry_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_entry_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_entry_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry> */> */>?): kotlin.Int { TODO() }

fun acl_create_entry_np(/*0*/ acl_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl> */> */>?, /*1*/ entry_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_entry_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_entry_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry> */> */>?, /*2*/ entry_index: kotlin.Int): kotlin.Int { TODO() }

fun acl_delete_entry(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*1*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */): kotlin.Int { TODO() }

fun acl_delete_flag_np(/*0*/ flagset_d: platform.posix.acl_flagset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>? */, /*1*/ flag: platform.posix.acl_flag_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_delete_perm(/*0*/ permset_d: platform.posix.acl_permset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>? */, /*1*/ perm: platform.posix.acl_perm_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_dup(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_from_text(/*0*/ buf_p: kotlin.String?): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_get_entry(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*1*/ entry_id: kotlin.Int, /*2*/ entry_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_entry_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_entry_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry> */> */>?): kotlin.Int { TODO() }

fun acl_get_fd(/*0*/ fd: kotlin.Int): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_get_fd_np(/*0*/ fd: kotlin.Int, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_get_file(/*0*/ path_p: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_get_flag_np(/*0*/ flagset_d: platform.posix.acl_flagset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>? */, /*1*/ flag: platform.posix.acl_flag_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_get_flagset_np(/*0*/ obj_p: kotlinx.cinterop.CValuesRef<*>?, /*1*/ flagset_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_flagset_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_flagset_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset> */> */>?): kotlin.Int { TODO() }

fun acl_get_link_np(/*0*/ path_p: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_get_perm_np(/*0*/ permset_d: platform.posix.acl_permset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>? */, /*1*/ perm: platform.posix.acl_perm_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_get_permset(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ permset_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_permset_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.acl_permset_t /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset> */> */>?): kotlin.Int { TODO() }

fun acl_get_permset_mask_np(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ mask_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_permset_mask_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.acl_permset_mask_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun acl_get_qualifier(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun acl_get_tag_type(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ tag_type_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_tag_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.acl_tag_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun acl_init(/*0*/ count: kotlin.Int): platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */ { TODO() }

fun acl_maximal_permset_mask_np(/*0*/ mask_p: kotlinx.cinterop.CValuesRef<platform.posix.acl_permset_mask_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.acl_permset_mask_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun acl_set_fd(/*0*/ fd: kotlin.Int, /*1*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_set_fd_np(/*0*/ fd: kotlin.Int, /*1*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*2*/ acl_type: platform.posix.acl_type_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_set_file(/*0*/ path_p: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */, /*2*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_set_flagset_np(/*0*/ obj_p: kotlinx.cinterop.CValuesRef<*>?, /*1*/ flagset_d: platform.posix.acl_flagset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_flagset>? */): kotlin.Int { TODO() }

fun acl_set_link_np(/*0*/ path_p: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */, /*2*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_set_permset(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ permset_d: platform.posix.acl_permset_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_permset>? */): kotlin.Int { TODO() }

fun acl_set_permset_mask_np(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ mask: platform.posix.acl_permset_mask_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun acl_set_qualifier(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ tag_qualifier_p: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun acl_set_tag_type(/*0*/ entry_d: platform.posix.acl_entry_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl_entry>? */, /*1*/ tag_type: platform.posix.acl_tag_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun acl_size(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun acl_to_text(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */, /*1*/ len_p: kotlinx.cinterop.CValuesRef<platform.posix.ssize_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.ssize_t /* = kotlin.Long */> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun acl_valid(/*0*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_valid_fd_np(/*0*/ fd: kotlin.Int, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */, /*2*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_valid_file_np(/*0*/ path: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */, /*2*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun acl_valid_link_np(/*0*/ path: kotlin.String?, /*1*/ type: platform.posix.acl_type_t /* = kotlin.UInt */, /*2*/ acl: platform.posix.acl_t? /* = kotlinx.cinterop.CPointer<cnames.structs._acl>? */): kotlin.Int { TODO() }

fun add_profil(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.ULong, /*3*/ arg3: kotlin.UInt): kotlin.Int { TODO() }

fun addrsel_policy_init() { TODO() }

fun alloca(/*0*/ arg0: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun alphasort(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */>?): kotlin.Int { TODO() }

fun arc4random(): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun arc4random_addrandom(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?, /*1*/ arg1: kotlin.Int) { TODO() }

fun arc4random_buf(/*0*/ __buf: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nbytes: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun arc4random_uniform(/*0*/ __upper_bound: platform.posix.uint32_t /* = kotlin.UInt */): platform.posix.uint32_t /* = kotlin.UInt */ { TODO() }

fun asctime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun asctime_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tm>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun asprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun asprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun atof_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Double { TODO() }

fun atoi_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun atol_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun atoll_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

external fun atomic_flag_clear_explicit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.atomic_flag>?, /*1*/ arg1: platform.posix.memory_order /* = kotlin.UInt */)

external fun atomic_flag_test_and_set_explicit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.atomic_flag>?, /*1*/ arg1: platform.posix.memory_order /* = kotlin.UInt */): kotlin.Boolean

fun atomic_signal_fence(/*0*/ arg0: platform.posix.memory_order /* = kotlin.UInt */) { TODO() }

fun atomic_thread_fence(/*0*/ arg0: platform.posix.memory_order /* = kotlin.UInt */) { TODO() }

fun basename(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun basename_r(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun bcmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun bcopy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun bind(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*2*/ arg2: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun brk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun bsearch(/*0*/ __key: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*4*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun btowc(/*0*/ arg0: kotlin.Int): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun btowc_l(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun bzero(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun calloc(/*0*/ __count: platform.posix.size_t /* = kotlin.ULong */, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun cfgetispeed(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): platform.posix.speed_t /* = kotlin.ULong */ { TODO() }

fun cfgetospeed(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?): platform.posix.speed_t /* = kotlin.ULong */ { TODO() }

fun cfsetispeed(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?, /*1*/ arg1: platform.posix.speed_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun cfsetospeed(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?, /*1*/ arg1: platform.posix.speed_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun cfsetspeed(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.termios>?, /*1*/ arg1: platform.posix.speed_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun cgetcap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun cgetent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun cgetfirst(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun cgetnext(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun cgetnum(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.LongVar /* = kotlinx.cinterop.LongVarOf<kotlin.Long> */>?): kotlin.Int { TODO() }

fun cgetstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun cgetustr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun chflags(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.__uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun chmod(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun chmodx_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun chown(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.uid_t /* = kotlin.UInt */, /*2*/ arg2: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun clock(): platform.posix.clock_t /* = kotlin.ULong */ { TODO() }

fun clock_getres(/*0*/ __clock_id: platform.posix.clockid_t /* = kotlin.UInt */, /*1*/ __res: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?): kotlin.Int { TODO() }

fun clock_gettime(/*0*/ __clock_id: platform.posix.clockid_t /* = kotlin.UInt */, /*1*/ __tp: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?): kotlin.Int { TODO() }

fun clock_gettime_nsec_np(/*0*/ __clock_id: platform.posix.clockid_t /* = kotlin.UInt */): platform.posix.__uint64_t /* = kotlin.ULong */ { TODO() }

fun confstr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun connect(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*2*/ arg2: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun connectx(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sa_endpoints_t /* = platform.posix.sa_endpoints */>?, /*2*/ arg2: platform.posix.sae_associd_t /* = kotlin.UInt */, /*3*/ arg3: kotlin.UInt, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.iovec>?, /*5*/ arg5: kotlin.UInt, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.sae_connid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sae_connid_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun creat(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun crypt(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ctermid(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ctermid_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ctime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ctime_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun devname(/*0*/ arg0: platform.posix.dev_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun devname_r(/*0*/ arg0: platform.posix.dev_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */, /*2*/ buf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ len: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun difftime(/*0*/ arg0: platform.posix.time_t /* = kotlin.Long */, /*1*/ arg1: platform.posix.time_t /* = kotlin.Long */): kotlin.Double { TODO() }

fun digittoint_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun dirname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dirname_r(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun disconnectx(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.sae_associd_t /* = kotlin.UInt */, /*2*/ arg2: platform.posix.sae_connid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun dlerror(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun dlopen(/*0*/ __path: kotlin.String?, /*1*/ __mode: kotlin.Int): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dlsym(/*0*/ __handle: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __symbol: kotlin.String?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun dprintf_l(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun duplocale(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */ { TODO() }

fun ecvt(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun encrypt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int) { TODO() }

fun erand48(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>?): kotlin.Double { TODO() }

fun ether_line(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.ether_addr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun ether_ntoa(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.ether_addr>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ether_ntohost(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.ether_addr>?): kotlin.Int { TODO() }

fun execv(/*0*/ __path: kotlin.String?, /*1*/ __argv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun execvP(/*0*/ __file: kotlin.String?, /*1*/ __searchpath: kotlin.String?, /*2*/ __argv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun execve(/*0*/ __file: kotlin.String?, /*1*/ __argv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __envp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun execvp(/*0*/ __file: kotlin.String?, /*1*/ __argv: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun fchflags(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.__uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun fchmod(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun fchmodat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.mode_t /* = kotlin.UShort */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun fchmodx_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun fchown(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.uid_t /* = kotlin.UInt */, /*2*/ arg2: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun fchownat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.uid_t /* = kotlin.UInt */, /*3*/ arg3: platform.posix.gid_t /* = kotlin.UInt */, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun fcvt(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fegetexceptflag(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fexcept_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.fexcept_t /* = kotlin.UShort */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun fesetexceptflag(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.fexcept_tVar /* = kotlinx.cinterop.UShortVarOf<platform.posix.fexcept_t /* = kotlin.UShort */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun fflagstostr(/*0*/ arg0: kotlin.ULong): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fgetattrlist(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.UInt): kotlin.Int { TODO() }

fun fgetln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fgetpos(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.fpos_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.fpos_t /* = kotlin.Long */> */>?): kotlin.Int { TODO() }

fun fgets(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fgetwc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun fgetwc_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun fgetwln(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun fgetwln_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun fgetws(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun fgetws_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun filesec_dup(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */ { TODO() }

fun filesec_free(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */) { TODO() }

fun filesec_get_property(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */, /*1*/ arg1: platform.posix.filesec_property_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun filesec_init(): platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */ { TODO() }

fun filesec_query_property(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */, /*1*/ arg1: platform.posix.filesec_property_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun filesec_set_property(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */, /*1*/ arg1: platform.posix.filesec_property_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun filesec_unset_property(/*0*/ arg0: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */, /*1*/ arg1: platform.posix.filesec_property_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun fmemopen(/*0*/ __buf: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __mode: kotlin.String?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun fmtcheck(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun fork(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun fprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun fputwc(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun fputwc_l(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun fputws(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlin.Int { TODO() }

fun fputws_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun fread(/*0*/ __ptr: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __nitems: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun freelocale(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun frexp(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Double { TODO() }

fun frexpf(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Float { TODO() }

fun fscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun fseeko(/*0*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ __offset: platform.posix.off_t /* = kotlin.Long */, /*2*/ __whence: kotlin.Int): kotlin.Int { TODO() }

fun fsetattrlist(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.UInt): kotlin.Int { TODO() }

fun fsetpos(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.fpos_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.fpos_t /* = kotlin.Long */> */>?): kotlin.Int { TODO() }

fun fstatx_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?, /*2*/ arg2: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun ftello(/*0*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.off_t /* = kotlin.Long */ { TODO() }

fun ftok(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): platform.posix.key_t /* = kotlin.Int */ { TODO() }

fun ftruncate(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.off_t /* = kotlin.Long */): kotlin.Int { TODO() }

fun fts_open(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.FTSENT /* = platform.posix._ftsent */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.FTSENT /* = platform.posix._ftsent */>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.FTSENT /* = platform.posix._ftsent */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.FTSENT /* = platform.posix._ftsent */>> */>?) -> kotlin.Int>>?): kotlinx.cinterop.CPointer<platform.posix.FTS>? { TODO() }

fun ftw(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.posix.stat>?, kotlin.Int) -> kotlin.Int>>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun funopen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlin.Int) -> kotlin.Int>>?, /*3*/ arg3: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.fpos_t /* = kotlin.Long */, kotlin.Int) -> platform.posix.fpos_t /* = kotlin.Long */>>?, /*4*/ arg4: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun fwprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun fwprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun fwrite(/*0*/ __ptr: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __nitems: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun fwscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun fwscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun gai_strerror(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun gcvt(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getaddrinfo(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.addrinfo>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.addrinfo> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.addrinfo>> */>?): kotlin.Int { TODO() }

fun getattrlist(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.UInt): kotlin.Int { TODO() }

fun getattrlistat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ arg4: platform.posix.size_t /* = kotlin.ULong */, /*5*/ arg5: kotlin.ULong): kotlin.Int { TODO() }

fun getattrlistbulk(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: platform.posix.uint64_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun getbsize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.LongVar /* = kotlinx.cinterop.LongVarOf<kotlin.Long> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getcwd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getdelim(/*0*/ __linep: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ __linecapp: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*2*/ __delimiter: kotlin.Int, /*3*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun getdirentries(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.LongVar /* = kotlinx.cinterop.LongVarOf<kotlin.Long> */>?): kotlin.Int { TODO() }

fun getdirentriesattr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?, /*7*/ arg7: kotlin.UInt): kotlin.Int { TODO() }

fun getdomainname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getegid(): platform.posix.gid_t /* = kotlin.UInt */ { TODO() }

fun getenv(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun geteuid(): platform.posix.uid_t /* = kotlin.UInt */ { TODO() }

fun getgid(): platform.posix.gid_t /* = kotlin.UInt */ { TODO() }

fun getgrgid(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */): kotlinx.cinterop.CPointer<platform.posix.group>? { TODO() }

fun getgrgid_r(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.group>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.group> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.group>> */>?): kotlin.Int { TODO() }

fun getgrnam_r(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.group>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.group> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.group>> */>?): kotlin.Int { TODO() }

fun getgrouplist(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun getgroups(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun gethostbyaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

fun gethostname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun getipnodebyaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

fun getipnodebyname(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<platform.posix.hostent>? { TODO() }

fun getipv4sourcefilter(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValue<platform.posix.in_addr>, /*2*/ arg2: kotlinx.cinterop.CValue<platform.posix.in_addr>, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.in_addr>?): kotlin.Int { TODO() }

fun getline(/*0*/ __linep: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ __linecapp: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*2*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun getloadavg(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun getlogin(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getlogin_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun getmode(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): platform.posix.mode_t /* = kotlin.UShort */ { TODO() }

fun getnameinfo(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.socklen_t /* = kotlin.UInt */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*5*/ arg5: platform.posix.socklen_t /* = kotlin.UInt */, /*6*/ arg6: kotlin.Int): kotlin.Int { TODO() }

fun getnetbyaddr(/*0*/ arg0: platform.posix.uint32_t /* = kotlin.UInt */, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.netent>? { TODO() }

fun getnetgrent(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun getopt(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.String?): kotlin.Int { TODO() }

fun getopt_long(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.option>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun getopt_long_only(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.option>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun getpass(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getpeereid(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.uid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uid_t /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun getpeername(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun getpgid(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun getpgrp(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun getpid(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun getppid(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun getpriority(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.id_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun getprogname(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getpwnam_r(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.passwd>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.passwd> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.passwd>> */>?): kotlin.Int { TODO() }

fun getpwuid(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */): kotlinx.cinterop.CPointer<platform.posix.passwd>? { TODO() }

fun getpwuid_r(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.passwd>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.passwd> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.passwd>> */>?): kotlin.Int { TODO() }

fun gets(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getsgroups_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: platform.posix.uuid_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>? */): kotlin.Int { TODO() }

fun getsid(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun getsockname(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun getsockopt(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun getsourcefilter(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*3*/ arg3: platform.posix.socklen_t /* = kotlin.UInt */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.uint32_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uint32_t /* = kotlin.UInt */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr_storage>?): kotlin.Int { TODO() }

fun getsubopt(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Int { TODO() }

fun getuid(): platform.posix.uid_t /* = kotlin.UInt */ { TODO() }

fun getusershell(): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getwc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun getwc_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun getwchar(): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun getwchar_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun getwd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun getwgroups_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: platform.posix.uuid_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>? */): kotlin.Int { TODO() }

fun gmtime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?): kotlinx.cinterop.CPointer<platform.posix.tm>? { TODO() }

fun gmtime_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): kotlinx.cinterop.CPointer<platform.posix.tm>? { TODO() }

fun hcreate(/*0*/ arg0: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun heapsort(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun hstrerror(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun if_indextoname(/*0*/ arg0: kotlin.UInt, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun imaxabs(/*0*/ j: platform.posix.intmax_t /* = kotlin.Long */): platform.posix.intmax_t /* = kotlin.Long */ { TODO() }

fun imaxdiv(/*0*/ __numer: platform.posix.intmax_t /* = kotlin.Long */, /*1*/ __denom: platform.posix.intmax_t /* = kotlin.Long */): kotlinx.cinterop.CValue<platform.posix.imaxdiv_t> { TODO() }

fun index(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun inet6_opt_append(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.__uint8_t /* = kotlin.UByte */, /*4*/ arg4: platform.posix.socklen_t /* = kotlin.UInt */, /*5*/ arg5: platform.posix.__uint8_t /* = kotlin.UByte */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun inet6_opt_find(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.__uint8_t /* = kotlin.UByte */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun inet6_opt_finish(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun inet6_opt_get_val(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun inet6_opt_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun inet6_opt_next(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun inet6_opt_set_val(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun inet6_option_alloc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */>? { TODO() }

fun inet6_option_append(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun inet6_option_find(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun inet6_option_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.cmsghdr> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.cmsghdr>> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun inet6_option_next(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.cmsghdr>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.__uint8_tVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.__uint8_t /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun inet6_rth_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.socklen_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun inet6_rth_space(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): platform.posix.socklen_t /* = kotlin.UInt */ { TODO() }

fun inet6_rthdr_space(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun initstate(/*0*/ arg0: kotlin.UInt, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun isalnum_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isalpha_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isblank_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iscntrl_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isdigit_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isgraph_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun ishexnumber_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isideogram_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun islower_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isnumber_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isphonogram_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isprint_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun ispunct_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isrune_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isspace_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isspecial_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isupper_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswalnum(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswalnum_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswalpha(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswalpha_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswascii(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswblank(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswblank_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswcntrl(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswcntrl_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswctype(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _charclass: platform.posix.wctype_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun iswctype_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _charclass: platform.posix.wctype_t /* = kotlin.UInt */, /*2*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswdigit(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswdigit_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswgraph(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswgraph_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswhexnumber(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswhexnumber_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswideogram(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswideogram_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswlower(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswlower_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswnumber(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswnumber_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswphonogram(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswphonogram_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswprint(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswprint_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswpunct(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswpunct_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswrune(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswrune_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswspace(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswspace_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswspecial(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswspecial_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswupper(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswupper_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun iswxdigit(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun iswxdigit_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun isxdigit_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun jrand48(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>?): kotlin.Long { TODO() }

fun kill(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun killpg(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

@kotlin.native.SymbolName(name = "platform_posix_kniBridge0")private external fun kniBridge0(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1")private external fun kniBridge1(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge10")private external fun kniBridge10(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge100")private external fun kniBridge100(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1000")private external fun kniBridge1000(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1001")private external fun kniBridge1001(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1002")private external fun kniBridge1002(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1003")private external fun kniBridge1003(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1004")private external fun kniBridge1004(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1005")private external fun kniBridge1005(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1006")private external fun kniBridge1006(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1007")private external fun kniBridge1007(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1008")private external fun kniBridge1008(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1009")private external fun kniBridge1009(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge101")private external fun kniBridge101(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1010")private external fun kniBridge1010(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1011")private external fun kniBridge1011(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1012")private external fun kniBridge1012(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1013")private external fun kniBridge1013(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1014")private external fun kniBridge1014(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1015")private external fun kniBridge1015(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1016")private external fun kniBridge1016(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1017")private external fun kniBridge1017(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1018")private external fun kniBridge1018(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1019")private external fun kniBridge1019(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge102")private external fun kniBridge102(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1020")private external fun kniBridge1020(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1021")private external fun kniBridge1021(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1022")private external fun kniBridge1022(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1023")private external fun kniBridge1023(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1024")private external fun kniBridge1024(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1025")private external fun kniBridge1025(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1026")private external fun kniBridge1026(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1027")private external fun kniBridge1027(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1028")private external fun kniBridge1028(): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1029")private external fun kniBridge1029(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge103")private external fun kniBridge103(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1030")private external fun kniBridge1030(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1031")private external fun kniBridge1031(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1032")private external fun kniBridge1032(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1033")private external fun kniBridge1033(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1034")private external fun kniBridge1034(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1035")private external fun kniBridge1035(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1036")private external fun kniBridge1036(/*0*/ p0: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1037")private external fun kniBridge1037(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1038")private external fun kniBridge1038(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1039")private external fun kniBridge1039(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge104")private external fun kniBridge104(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1040")private external fun kniBridge1040(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1041")private external fun kniBridge1041(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1042")private external fun kniBridge1042(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1043")private external fun kniBridge1043(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1044")private external fun kniBridge1044(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1045")private external fun kniBridge1045(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1046")private external fun kniBridge1046(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1047")private external fun kniBridge1047(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1048")private external fun kniBridge1048(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1049")private external fun kniBridge1049(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge105")private external fun kniBridge105(/*0*/ p0: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1050")private external fun kniBridge1050(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1051")private external fun kniBridge1051(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1052")private external fun kniBridge1052(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1053")private external fun kniBridge1053(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1054")private external fun kniBridge1054(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1055")private external fun kniBridge1055(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1056")private external fun kniBridge1056(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1057")private external fun kniBridge1057(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1058")private external fun kniBridge1058()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1059")private external fun kniBridge1059(/*0*/ p0: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge106")private external fun kniBridge106(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1060")private external fun kniBridge1060(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1061")private external fun kniBridge1061(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1062")private external fun kniBridge1062(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1063")private external fun kniBridge1063(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1064")private external fun kniBridge1064(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1065")private external fun kniBridge1065(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1066")private external fun kniBridge1066(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1067")private external fun kniBridge1067(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1068")private external fun kniBridge1068(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1069")private external fun kniBridge1069(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge107")private external fun kniBridge107(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1070")private external fun kniBridge1070(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1071")private external fun kniBridge1071(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UShort): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1072")private external fun kniBridge1072(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UShort, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1073")private external fun kniBridge1073(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1074")private external fun kniBridge1074(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1075")private external fun kniBridge1075(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1076")private external fun kniBridge1076(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1077")private external fun kniBridge1077(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1078")private external fun kniBridge1078(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1079")private external fun kniBridge1079(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge108")private external fun kniBridge108(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1080")private external fun kniBridge1080(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1081")private external fun kniBridge1081(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1082")private external fun kniBridge1082(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1083")private external fun kniBridge1083(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1084")private external fun kniBridge1084()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1085")private external fun kniBridge1085()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1086")private external fun kniBridge1086(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1087")private external fun kniBridge1087(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1088")private external fun kniBridge1088(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1089")private external fun kniBridge1089()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge109")private external fun kniBridge109(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1090")private external fun kniBridge1090(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1091")private external fun kniBridge1091(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1092")private external fun kniBridge1092(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1093")private external fun kniBridge1093(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1094")private external fun kniBridge1094(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1095")private external fun kniBridge1095(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1096")private external fun kniBridge1096(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1097")private external fun kniBridge1097(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1098")private external fun kniBridge1098(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1099")private external fun kniBridge1099(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge11")private external fun kniBridge11(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge110")private external fun kniBridge110(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1100")private external fun kniBridge1100(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1101")private external fun kniBridge1101(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1102")private external fun kniBridge1102(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1103")private external fun kniBridge1103(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1104")private external fun kniBridge1104(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1105")private external fun kniBridge1105(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1106")private external fun kniBridge1106(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1107")private external fun kniBridge1107(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1108")private external fun kniBridge1108(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1109")private external fun kniBridge1109(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge111")private external fun kniBridge111(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1110")private external fun kniBridge1110(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1111")private external fun kniBridge1111(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1112")private external fun kniBridge1112(/*0*/ p0: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1113")private external fun kniBridge1113(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1114")private external fun kniBridge1114(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1115")private external fun kniBridge1115(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1116")private external fun kniBridge1116(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1117")private external fun kniBridge1117(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1118")private external fun kniBridge1118(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1119")private external fun kniBridge1119(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge112")private external fun kniBridge112(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1120")private external fun kniBridge1120(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1121")private external fun kniBridge1121(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1122")private external fun kniBridge1122(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1123")private external fun kniBridge1123(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1124")private external fun kniBridge1124(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1125")private external fun kniBridge1125(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1126")private external fun kniBridge1126(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1127")private external fun kniBridge1127(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1128")private external fun kniBridge1128(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1129")private external fun kniBridge1129(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge113")private external fun kniBridge113(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1130")private external fun kniBridge1130(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1131")private external fun kniBridge1131(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1132")private external fun kniBridge1132(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1133")private external fun kniBridge1133(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1134")private external fun kniBridge1134(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1135")private external fun kniBridge1135(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1136")private external fun kniBridge1136(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1137")private external fun kniBridge1137(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1138")private external fun kniBridge1138(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1139")private external fun kniBridge1139(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge114")private external fun kniBridge114(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1140")private external fun kniBridge1140(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1141")private external fun kniBridge1141(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1142")private external fun kniBridge1142(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1143")private external fun kniBridge1143(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1144")private external fun kniBridge1144(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1145")private external fun kniBridge1145(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1146")private external fun kniBridge1146(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1147")private external fun kniBridge1147(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1148")private external fun kniBridge1148(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1149")private external fun kniBridge1149(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge115")private external fun kniBridge115(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1150")private external fun kniBridge1150(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1151")private external fun kniBridge1151(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1152")private external fun kniBridge1152(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1153")private external fun kniBridge1153(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1154")private external fun kniBridge1154(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1155")private external fun kniBridge1155(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1156")private external fun kniBridge1156(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1157")private external fun kniBridge1157(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1158")private external fun kniBridge1158(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1159")private external fun kniBridge1159(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge116")private external fun kniBridge116(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1160")private external fun kniBridge1160(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1161")private external fun kniBridge1161(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1162")private external fun kniBridge1162(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1163")private external fun kniBridge1163(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1164")private external fun kniBridge1164(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1165")private external fun kniBridge1165(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1166")private external fun kniBridge1166(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1167")private external fun kniBridge1167(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1168")private external fun kniBridge1168(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1169")private external fun kniBridge1169(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge117")private external fun kniBridge117(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1170")private external fun kniBridge1170(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1171")private external fun kniBridge1171(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1172")private external fun kniBridge1172(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1173")private external fun kniBridge1173(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1174")private external fun kniBridge1174(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1175")private external fun kniBridge1175(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1176")private external fun kniBridge1176(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1177")private external fun kniBridge1177(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1178")private external fun kniBridge1178(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1179")private external fun kniBridge1179(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge118")private external fun kniBridge118(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1180")private external fun kniBridge1180(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1181")private external fun kniBridge1181(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1182")private external fun kniBridge1182(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1183")private external fun kniBridge1183(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1184")private external fun kniBridge1184(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1185")private external fun kniBridge1185(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1186")private external fun kniBridge1186(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1187")private external fun kniBridge1187(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1188")private external fun kniBridge1188(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1189")private external fun kniBridge1189(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge119")private external fun kniBridge119(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1190")private external fun kniBridge1190(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1191")private external fun kniBridge1191(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1192")private external fun kniBridge1192(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1193")private external fun kniBridge1193(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1194")private external fun kniBridge1194(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1195")private external fun kniBridge1195(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1196")private external fun kniBridge1196(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1197")private external fun kniBridge1197(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1198")private external fun kniBridge1198(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1199")private external fun kniBridge1199(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge12")private external fun kniBridge12(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge120")private external fun kniBridge120(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1200")private external fun kniBridge1200(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1201")private external fun kniBridge1201(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1202")private external fun kniBridge1202(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1203")private external fun kniBridge1203(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1204")private external fun kniBridge1204(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1205")private external fun kniBridge1205(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1206")private external fun kniBridge1206(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1207")private external fun kniBridge1207(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1208")private external fun kniBridge1208(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1209")private external fun kniBridge1209(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge121")private external fun kniBridge121(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1210")private external fun kniBridge1210(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1211")private external fun kniBridge1211(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1212")private external fun kniBridge1212(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1213")private external fun kniBridge1213(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1214")private external fun kniBridge1214(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1215")private external fun kniBridge1215(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1216")private external fun kniBridge1216(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1217")private external fun kniBridge1217(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1218")private external fun kniBridge1218(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1219")private external fun kniBridge1219(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge122")private external fun kniBridge122(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1220")private external fun kniBridge1220(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1221")private external fun kniBridge1221(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1222")private external fun kniBridge1222(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1223")private external fun kniBridge1223(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1224")private external fun kniBridge1224(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1225")private external fun kniBridge1225(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1226")private external fun kniBridge1226(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1227")private external fun kniBridge1227(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1228")private external fun kniBridge1228(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1229")private external fun kniBridge1229(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge123")private external fun kniBridge123(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1230")private external fun kniBridge1230(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1231")private external fun kniBridge1231(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1232")private external fun kniBridge1232(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1233")private external fun kniBridge1233(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1234")private external fun kniBridge1234(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1235")private external fun kniBridge1235(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1236")private external fun kniBridge1236(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1237")private external fun kniBridge1237(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1238")private external fun kniBridge1238(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1239")private external fun kniBridge1239(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge124")private external fun kniBridge124(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1240")private external fun kniBridge1240(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1241")private external fun kniBridge1241(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1242")private external fun kniBridge1242(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1243")private external fun kniBridge1243(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1244")private external fun kniBridge1244(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1245")private external fun kniBridge1245(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1246")private external fun kniBridge1246(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1247")private external fun kniBridge1247(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1248")private external fun kniBridge1248(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1249")private external fun kniBridge1249(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge125")private external fun kniBridge125(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1250")private external fun kniBridge1250(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1251")private external fun kniBridge1251(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1252")private external fun kniBridge1252(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1253")private external fun kniBridge1253(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1254")private external fun kniBridge1254(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1255")private external fun kniBridge1255(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1256")private external fun kniBridge1256(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1257")private external fun kniBridge1257(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1258")private external fun kniBridge1258(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1259")private external fun kniBridge1259(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge126")private external fun kniBridge126(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1260")private external fun kniBridge1260(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1261")private external fun kniBridge1261(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1262")private external fun kniBridge1262(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1263")private external fun kniBridge1263(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1264")private external fun kniBridge1264(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1265")private external fun kniBridge1265(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1266")private external fun kniBridge1266(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1267")private external fun kniBridge1267(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1268")private external fun kniBridge1268(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1269")private external fun kniBridge1269(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge127")private external fun kniBridge127(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1270")private external fun kniBridge1270(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1271")private external fun kniBridge1271(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1272")private external fun kniBridge1272(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1273")private external fun kniBridge1273(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1274")private external fun kniBridge1274(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1275")private external fun kniBridge1275(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1276")private external fun kniBridge1276(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1277")private external fun kniBridge1277(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1278")private external fun kniBridge1278(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1279")private external fun kniBridge1279(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge128")private external fun kniBridge128(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1280")private external fun kniBridge1280(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1281")private external fun kniBridge1281(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1282")private external fun kniBridge1282(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1283")private external fun kniBridge1283(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1284")private external fun kniBridge1284(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1285")private external fun kniBridge1285(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1286")private external fun kniBridge1286(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1287")private external fun kniBridge1287(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1288")private external fun kniBridge1288(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1289")private external fun kniBridge1289(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge129")private external fun kniBridge129(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1290")private external fun kniBridge1290(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1291")private external fun kniBridge1291(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1292")private external fun kniBridge1292(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1293")private external fun kniBridge1293(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1294")private external fun kniBridge1294(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1295")private external fun kniBridge1295(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1296")private external fun kniBridge1296(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1297")private external fun kniBridge1297(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1298")private external fun kniBridge1298(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1299")private external fun kniBridge1299(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge13")private external fun kniBridge13(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge130")private external fun kniBridge130(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1300")private external fun kniBridge1300(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1301")private external fun kniBridge1301(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1302")private external fun kniBridge1302(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1303")private external fun kniBridge1303(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1304")private external fun kniBridge1304(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1305")private external fun kniBridge1305(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1306")private external fun kniBridge1306(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1307")private external fun kniBridge1307(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1308")private external fun kniBridge1308(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1309")private external fun kniBridge1309(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge131")private external fun kniBridge131(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1310")private external fun kniBridge1310(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1311")private external fun kniBridge1311(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1312")private external fun kniBridge1312(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1313")private external fun kniBridge1313(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1314")private external fun kniBridge1314(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1315")private external fun kniBridge1315(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1316")private external fun kniBridge1316(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1317")private external fun kniBridge1317(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1318")private external fun kniBridge1318(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1319")private external fun kniBridge1319(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge132")private external fun kniBridge132(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1320")private external fun kniBridge1320(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1321")private external fun kniBridge1321(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1322")private external fun kniBridge1322(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1323")private external fun kniBridge1323(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1324")private external fun kniBridge1324(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1325")private external fun kniBridge1325(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1326")private external fun kniBridge1326(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1327")private external fun kniBridge1327(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1328")private external fun kniBridge1328(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1329")private external fun kniBridge1329(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge133")private external fun kniBridge133(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1330")private external fun kniBridge1330(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1331")private external fun kniBridge1331(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1332")private external fun kniBridge1332(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1333")private external fun kniBridge1333(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1334")private external fun kniBridge1334(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1335")private external fun kniBridge1335(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1336")private external fun kniBridge1336(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1337")private external fun kniBridge1337(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1338")private external fun kniBridge1338(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1339")private external fun kniBridge1339(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge134")private external fun kniBridge134(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1340")private external fun kniBridge1340(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1341")private external fun kniBridge1341(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1342")private external fun kniBridge1342(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1343")private external fun kniBridge1343(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1344")private external fun kniBridge1344(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1345")private external fun kniBridge1345(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1346")private external fun kniBridge1346(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1347")private external fun kniBridge1347(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1348")private external fun kniBridge1348(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1349")private external fun kniBridge1349(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge135")private external fun kniBridge135(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1350")private external fun kniBridge1350(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1351")private external fun kniBridge1351(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1352")private external fun kniBridge1352(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1353")private external fun kniBridge1353(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1354")private external fun kniBridge1354(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1355")private external fun kniBridge1355(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1356")private external fun kniBridge1356(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1357")private external fun kniBridge1357(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1358")private external fun kniBridge1358(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1359")private external fun kniBridge1359(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge136")private external fun kniBridge136(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1360")private external fun kniBridge1360(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1361")private external fun kniBridge1361(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1362")private external fun kniBridge1362(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1363")private external fun kniBridge1363(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1364")private external fun kniBridge1364(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1365")private external fun kniBridge1365(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1366")private external fun kniBridge1366(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1367")private external fun kniBridge1367(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1368")private external fun kniBridge1368(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1369")private external fun kniBridge1369(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge137")private external fun kniBridge137(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1370")private external fun kniBridge1370(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1371")private external fun kniBridge1371(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1372")private external fun kniBridge1372(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1373")private external fun kniBridge1373(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1374")private external fun kniBridge1374(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1375")private external fun kniBridge1375(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1376")private external fun kniBridge1376(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1377")private external fun kniBridge1377(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1378")private external fun kniBridge1378(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1379")private external fun kniBridge1379(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge138")private external fun kniBridge138(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1380")private external fun kniBridge1380(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1381")private external fun kniBridge1381(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1382")private external fun kniBridge1382(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1383")private external fun kniBridge1383(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1384")private external fun kniBridge1384(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1385")private external fun kniBridge1385(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1386")private external fun kniBridge1386(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1387")private external fun kniBridge1387(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1388")private external fun kniBridge1388(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1389")private external fun kniBridge1389(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge139")private external fun kniBridge139(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1390")private external fun kniBridge1390(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1391")private external fun kniBridge1391(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1392")private external fun kniBridge1392(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1393")private external fun kniBridge1393(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1394")private external fun kniBridge1394(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1395")private external fun kniBridge1395(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1396")private external fun kniBridge1396(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1397")private external fun kniBridge1397(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1398")private external fun kniBridge1398(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1399")private external fun kniBridge1399(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge14")private external fun kniBridge14(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge140")private external fun kniBridge140(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1400")private external fun kniBridge1400(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1401")private external fun kniBridge1401(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1402")private external fun kniBridge1402(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1403")private external fun kniBridge1403(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1404")private external fun kniBridge1404(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1405")private external fun kniBridge1405(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1406")private external fun kniBridge1406(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1407")private external fun kniBridge1407(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1408")private external fun kniBridge1408(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1409")private external fun kniBridge1409(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge141")private external fun kniBridge141(/*0*/ p0: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1410")private external fun kniBridge1410(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1411")private external fun kniBridge1411(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1412")private external fun kniBridge1412(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1413")private external fun kniBridge1413(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1414")private external fun kniBridge1414(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1415")private external fun kniBridge1415(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1416")private external fun kniBridge1416(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1417")private external fun kniBridge1417(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1418")private external fun kniBridge1418(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1419")private external fun kniBridge1419(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge142")private external fun kniBridge142(/*0*/ p0: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1420")private external fun kniBridge1420(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1421")private external fun kniBridge1421(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1422")private external fun kniBridge1422(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1423")private external fun kniBridge1423(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1424")private external fun kniBridge1424(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1425")private external fun kniBridge1425(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1426")private external fun kniBridge1426(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1427")private external fun kniBridge1427(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1428")private external fun kniBridge1428(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1429")private external fun kniBridge1429(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge143")private external fun kniBridge143(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1430")private external fun kniBridge1430(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1431")private external fun kniBridge1431(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1432")private external fun kniBridge1432(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1433")private external fun kniBridge1433(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1434")private external fun kniBridge1434(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1435")private external fun kniBridge1435(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1436")private external fun kniBridge1436(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1437")private external fun kniBridge1437(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1438")private external fun kniBridge1438(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1439")private external fun kniBridge1439(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge144")private external fun kniBridge144(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1440")private external fun kniBridge1440(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1441")private external fun kniBridge1441(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1442")private external fun kniBridge1442(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1443")private external fun kniBridge1443(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1444")private external fun kniBridge1444(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1445")private external fun kniBridge1445(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1446")private external fun kniBridge1446(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1447")private external fun kniBridge1447(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1448")private external fun kniBridge1448(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1449")private external fun kniBridge1449(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge145")private external fun kniBridge145(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1450")private external fun kniBridge1450(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1451")private external fun kniBridge1451(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1452")private external fun kniBridge1452(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1453")private external fun kniBridge1453(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1454")private external fun kniBridge1454(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1455")private external fun kniBridge1455(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1456")private external fun kniBridge1456(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1457")private external fun kniBridge1457(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1458")private external fun kniBridge1458(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1459")private external fun kniBridge1459(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge146")private external fun kniBridge146(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1460")private external fun kniBridge1460(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1461")private external fun kniBridge1461(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1462")private external fun kniBridge1462(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1463")private external fun kniBridge1463(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1464")private external fun kniBridge1464(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1465")private external fun kniBridge1465(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlin.Long): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1466")private external fun kniBridge1466(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1467")private external fun kniBridge1467(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1468")private external fun kniBridge1468(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1469")private external fun kniBridge1469(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge147")private external fun kniBridge147(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1470")private external fun kniBridge1470(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1471")private external fun kniBridge1471(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1472")private external fun kniBridge1472(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1473")private external fun kniBridge1473(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1474")private external fun kniBridge1474(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1475")private external fun kniBridge1475(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1476")private external fun kniBridge1476(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1477")private external fun kniBridge1477(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1478")private external fun kniBridge1478(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1479")private external fun kniBridge1479(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge148")private external fun kniBridge148(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1480")private external fun kniBridge1480(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1481")private external fun kniBridge1481(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1482")private external fun kniBridge1482(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1483")private external fun kniBridge1483(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1484")private external fun kniBridge1484(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1485")private external fun kniBridge1485(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1486")private external fun kniBridge1486(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1487")private external fun kniBridge1487(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1488")private external fun kniBridge1488()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1489")private external fun kniBridge1489(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge149")private external fun kniBridge149(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1490")private external fun kniBridge1490(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1491")private external fun kniBridge1491(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1492")private external fun kniBridge1492(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1493")private external fun kniBridge1493(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1494")private external fun kniBridge1494(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1495")private external fun kniBridge1495(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1496")private external fun kniBridge1496(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1497")private external fun kniBridge1497(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1498")private external fun kniBridge1498(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1499")private external fun kniBridge1499(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge15")private external fun kniBridge15(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge150")private external fun kniBridge150(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1500")private external fun kniBridge1500(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1501")private external fun kniBridge1501(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1502")private external fun kniBridge1502(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1503")private external fun kniBridge1503(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1504")private external fun kniBridge1504(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1505")private external fun kniBridge1505(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1506")private external fun kniBridge1506(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1507")private external fun kniBridge1507(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1508")private external fun kniBridge1508(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1509")private external fun kniBridge1509(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge151")private external fun kniBridge151(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1510")private external fun kniBridge1510(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1511")private external fun kniBridge1511(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1512")private external fun kniBridge1512(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1513")private external fun kniBridge1513(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1514")private external fun kniBridge1514(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1515")private external fun kniBridge1515(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1516")private external fun kniBridge1516(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1517")private external fun kniBridge1517(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1518")private external fun kniBridge1518(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1519")private external fun kniBridge1519(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge152")private external fun kniBridge152(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1520")private external fun kniBridge1520(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1521")private external fun kniBridge1521(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1522")private external fun kniBridge1522(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1523")private external fun kniBridge1523(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1524")private external fun kniBridge1524(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1525")private external fun kniBridge1525(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1526")private external fun kniBridge1526(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1527")private external fun kniBridge1527(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1528")private external fun kniBridge1528(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1529")private external fun kniBridge1529(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge153")private external fun kniBridge153(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1530")private external fun kniBridge1530(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1531")private external fun kniBridge1531(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1532")private external fun kniBridge1532(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1533")private external fun kniBridge1533(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1534")private external fun kniBridge1534(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1535")private external fun kniBridge1535(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1536")private external fun kniBridge1536(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1537")private external fun kniBridge1537(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge1538")private external fun kniBridge1538(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge154")private external fun kniBridge154(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge155")private external fun kniBridge155(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge156")private external fun kniBridge156(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge157")private external fun kniBridge157(): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge158")private external fun kniBridge158(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge159")private external fun kniBridge159(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge16")private external fun kniBridge16(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge160")private external fun kniBridge160(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge161")private external fun kniBridge161(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge162")private external fun kniBridge162(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge163")private external fun kniBridge163(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge164")private external fun kniBridge164(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge165")private external fun kniBridge165(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge166")private external fun kniBridge166(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge167")private external fun kniBridge167(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge168")private external fun kniBridge168(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge169")private external fun kniBridge169(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge17")private external fun kniBridge17(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge170")private external fun kniBridge170(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge171")private external fun kniBridge171(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge172")private external fun kniBridge172(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge173")private external fun kniBridge173(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge174")private external fun kniBridge174()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge175")private external fun kniBridge175(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge176")private external fun kniBridge176(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge177")private external fun kniBridge177(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge178")private external fun kniBridge178(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge179")private external fun kniBridge179(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge18")private external fun kniBridge18(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge180")private external fun kniBridge180(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge181")private external fun kniBridge181(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge182")private external fun kniBridge182(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge183")private external fun kniBridge183(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge184")private external fun kniBridge184(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge185")private external fun kniBridge185(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge186")private external fun kniBridge186(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge187")private external fun kniBridge187(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge188")private external fun kniBridge188(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge189")private external fun kniBridge189(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge19")private external fun kniBridge19(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge190")private external fun kniBridge190(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge191")private external fun kniBridge191(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge192")private external fun kniBridge192(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge193")private external fun kniBridge193(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge194")private external fun kniBridge194(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge195")private external fun kniBridge195()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge196")private external fun kniBridge196(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge197")private external fun kniBridge197(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge198")private external fun kniBridge198(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge199")private external fun kniBridge199(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge2")private external fun kniBridge2(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge20")private external fun kniBridge20(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Byte

@kotlin.native.SymbolName(name = "platform_posix_kniBridge200")private external fun kniBridge200(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge201")private external fun kniBridge201(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge202")private external fun kniBridge202(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge203")private external fun kniBridge203(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge204")private external fun kniBridge204(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge205")private external fun kniBridge205(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge206")private external fun kniBridge206(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge207")private external fun kniBridge207(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge208")private external fun kniBridge208(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge209")private external fun kniBridge209(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge21")private external fun kniBridge21(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge210")private external fun kniBridge210(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge211")private external fun kniBridge211(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge212")private external fun kniBridge212(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge213")private external fun kniBridge213(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge214")private external fun kniBridge214(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge215")private external fun kniBridge215(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge216")private external fun kniBridge216(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge217")private external fun kniBridge217(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge218")private external fun kniBridge218(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge219")private external fun kniBridge219(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge22")private external fun kniBridge22(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge220")private external fun kniBridge220(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge221")private external fun kniBridge221(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge222")private external fun kniBridge222(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge223")private external fun kniBridge223(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge224")private external fun kniBridge224(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge225")private external fun kniBridge225(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge226")private external fun kniBridge226(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge227")private external fun kniBridge227(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge228")private external fun kniBridge228(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge229")private external fun kniBridge229(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge23")private external fun kniBridge23(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge230")private external fun kniBridge230(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge231")private external fun kniBridge231(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge232")private external fun kniBridge232(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge233")private external fun kniBridge233(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge234")private external fun kniBridge234(/*0*/ p0: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge235")private external fun kniBridge235(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge236")private external fun kniBridge236(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge237")private external fun kniBridge237(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge238")private external fun kniBridge238(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge239")private external fun kniBridge239(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge24")private external fun kniBridge24(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge240")private external fun kniBridge240(/*0*/ p0: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge241")private external fun kniBridge241(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge242")private external fun kniBridge242()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge243")private external fun kniBridge243(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge244")private external fun kniBridge244(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge245")private external fun kniBridge245(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge246")private external fun kniBridge246(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge247")private external fun kniBridge247(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge248")private external fun kniBridge248(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge249")private external fun kniBridge249(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge25")private external fun kniBridge25(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge250")private external fun kniBridge250(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge251")private external fun kniBridge251(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge252")private external fun kniBridge252(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge253")private external fun kniBridge253(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge254")private external fun kniBridge254(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge255")private external fun kniBridge255(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge256")private external fun kniBridge256(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge257")private external fun kniBridge257(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge258")private external fun kniBridge258(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge259")private external fun kniBridge259(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge26")private external fun kniBridge26(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge260")private external fun kniBridge260(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge261")private external fun kniBridge261(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge262")private external fun kniBridge262(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge263")private external fun kniBridge263(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge264")private external fun kniBridge264(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge265")private external fun kniBridge265(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge266")private external fun kniBridge266(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge267")private external fun kniBridge267(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge268")private external fun kniBridge268(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge269")private external fun kniBridge269(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge27")private external fun kniBridge27(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge270")private external fun kniBridge270()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge271")private external fun kniBridge271()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge272")private external fun kniBridge272(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge273")private external fun kniBridge273(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge274")private external fun kniBridge274(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge275")private external fun kniBridge275(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge276")private external fun kniBridge276(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge277")private external fun kniBridge277(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge278")private external fun kniBridge278(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge279")private external fun kniBridge279(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge28")private external fun kniBridge28(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge280")private external fun kniBridge280(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge281")private external fun kniBridge281(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge282")private external fun kniBridge282(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge283")private external fun kniBridge283(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge284")private external fun kniBridge284(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge285")private external fun kniBridge285(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge286")private external fun kniBridge286(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge287")private external fun kniBridge287(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge288")private external fun kniBridge288(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge289")private external fun kniBridge289(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge29")private external fun kniBridge29(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge290")private external fun kniBridge290(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge291")private external fun kniBridge291(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge292")private external fun kniBridge292(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge293")private external fun kniBridge293(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge294")private external fun kniBridge294(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge295")private external fun kniBridge295(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge296")private external fun kniBridge296(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge297")private external fun kniBridge297(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge298")private external fun kniBridge298(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge299")private external fun kniBridge299(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge3")private external fun kniBridge3(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge30")private external fun kniBridge30(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge300")private external fun kniBridge300(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge301")private external fun kniBridge301(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge302")private external fun kniBridge302(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge303")private external fun kniBridge303(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge304")private external fun kniBridge304(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge305")private external fun kniBridge305(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge306")private external fun kniBridge306(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge307")private external fun kniBridge307(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge308")private external fun kniBridge308(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge309")private external fun kniBridge309(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge31")private external fun kniBridge31(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge310")private external fun kniBridge310(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge311")private external fun kniBridge311(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge312")private external fun kniBridge312(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge313")private external fun kniBridge313(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge314")private external fun kniBridge314(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge315")private external fun kniBridge315(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge316")private external fun kniBridge316(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge317")private external fun kniBridge317(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge318")private external fun kniBridge318(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge319")private external fun kniBridge319(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge32")private external fun kniBridge32(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge320")private external fun kniBridge320(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge321")private external fun kniBridge321(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge322")private external fun kniBridge322(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge323")private external fun kniBridge323(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge324")private external fun kniBridge324(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge325")private external fun kniBridge325(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge326")private external fun kniBridge326(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge327")private external fun kniBridge327(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge328")private external fun kniBridge328(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge329")private external fun kniBridge329(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge33")private external fun kniBridge33(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge330")private external fun kniBridge330(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge331")private external fun kniBridge331(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge332")private external fun kniBridge332(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge333")private external fun kniBridge333(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge334")private external fun kniBridge334(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge335")private external fun kniBridge335(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge336")private external fun kniBridge336(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge337")private external fun kniBridge337(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge338")private external fun kniBridge338(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge339")private external fun kniBridge339(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge34")private external fun kniBridge34(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge340")private external fun kniBridge340(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge341")private external fun kniBridge341(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Int): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge342")private external fun kniBridge342(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Int): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge343")private external fun kniBridge343(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge344")private external fun kniBridge344(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge345")private external fun kniBridge345(/*0*/ p0: kotlin.Float): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge346")private external fun kniBridge346(/*0*/ p0: kotlin.Double): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge347")private external fun kniBridge347(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Int): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge348")private external fun kniBridge348(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Int): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge349")private external fun kniBridge349(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Long): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge35")private external fun kniBridge35(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge350")private external fun kniBridge350(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Long): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge351")private external fun kniBridge351(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge352")private external fun kniBridge352(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge353")private external fun kniBridge353(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge354")private external fun kniBridge354(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge355")private external fun kniBridge355(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge356")private external fun kniBridge356(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge357")private external fun kniBridge357(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge358")private external fun kniBridge358(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge359")private external fun kniBridge359(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge36")private external fun kniBridge36(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge360")private external fun kniBridge360(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge361")private external fun kniBridge361(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge362")private external fun kniBridge362(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge363")private external fun kniBridge363(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge364")private external fun kniBridge364(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge365")private external fun kniBridge365(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge366")private external fun kniBridge366(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge367")private external fun kniBridge367(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge368")private external fun kniBridge368(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge369")private external fun kniBridge369(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge37")private external fun kniBridge37(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge370")private external fun kniBridge370(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge371")private external fun kniBridge371(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge372")private external fun kniBridge372(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge373")private external fun kniBridge373(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge374")private external fun kniBridge374(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge375")private external fun kniBridge375(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge376")private external fun kniBridge376(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge377")private external fun kniBridge377(/*0*/ p0: kotlin.Float): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge378")private external fun kniBridge378(/*0*/ p0: kotlin.Double): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge379")private external fun kniBridge379(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge38")private external fun kniBridge38(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge380")private external fun kniBridge380(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge381")private external fun kniBridge381(/*0*/ p0: kotlin.Float): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge382")private external fun kniBridge382(/*0*/ p0: kotlin.Double): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge383")private external fun kniBridge383(/*0*/ p0: kotlin.Float): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge384")private external fun kniBridge384(/*0*/ p0: kotlin.Double): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge385")private external fun kniBridge385(/*0*/ p0: kotlin.Float): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge386")private external fun kniBridge386(/*0*/ p0: kotlin.Double): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge387")private external fun kniBridge387(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge388")private external fun kniBridge388(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge389")private external fun kniBridge389(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge39")private external fun kniBridge39(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge390")private external fun kniBridge390(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge391")private external fun kniBridge391(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge392")private external fun kniBridge392(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge393")private external fun kniBridge393(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge394")private external fun kniBridge394(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge395")private external fun kniBridge395(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge396")private external fun kniBridge396(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge397")private external fun kniBridge397(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge398")private external fun kniBridge398(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge399")private external fun kniBridge399(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge4")private external fun kniBridge4(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge40")private external fun kniBridge40(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge400")private external fun kniBridge400(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge401")private external fun kniBridge401(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge402")private external fun kniBridge402(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge403")private external fun kniBridge403(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge404")private external fun kniBridge404(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge405")private external fun kniBridge405(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge406")private external fun kniBridge406(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge407")private external fun kniBridge407(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlin.Float, /*2*/ p2: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge408")private external fun kniBridge408(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double, /*2*/ p2: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge409")private external fun kniBridge409(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge41")private external fun kniBridge41(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge410")private external fun kniBridge410(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge411")private external fun kniBridge411(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge412")private external fun kniBridge412(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge413")private external fun kniBridge413(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge414")private external fun kniBridge414(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge415")private external fun kniBridge415(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge416")private external fun kniBridge416(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge417")private external fun kniBridge417(/*0*/ p0: kotlin.Float): kotlin.Float

@kotlin.native.SymbolName(name = "platform_posix_kniBridge418")private external fun kniBridge418(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge419")private external fun kniBridge419(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge42")private external fun kniBridge42(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge420")private external fun kniBridge420(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge421")private external fun kniBridge421(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge422")private external fun kniBridge422(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge423")private external fun kniBridge423(/*0*/ p0: kotlin.Float, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge424")private external fun kniBridge424(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge425")private external fun kniBridge425(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge426")private external fun kniBridge426(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge427")private external fun kniBridge427(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge428")private external fun kniBridge428(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge429")private external fun kniBridge429(/*0*/ p0: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge43")private external fun kniBridge43(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge430")private external fun kniBridge430(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge431")private external fun kniBridge431(/*0*/ p0: kotlin.Double, /*1*/ p1: kotlin.Double): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge432")private external fun kniBridge432(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge433")private external fun kniBridge433(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge434")private external fun kniBridge434(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge435")private external fun kniBridge435(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge436")private external fun kniBridge436(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge437")private external fun kniBridge437(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge438")private external fun kniBridge438(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge439")private external fun kniBridge439(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge44")private external fun kniBridge44(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge440")private external fun kniBridge440(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge441")private external fun kniBridge441(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge442")private external fun kniBridge442(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge443")private external fun kniBridge443(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge444")private external fun kniBridge444(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge445")private external fun kniBridge445(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge446")private external fun kniBridge446(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge447")private external fun kniBridge447(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge448")private external fun kniBridge448(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge449")private external fun kniBridge449(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge45")private external fun kniBridge45(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge450")private external fun kniBridge450(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge451")private external fun kniBridge451(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge452")private external fun kniBridge452(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge453")private external fun kniBridge453(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge454")private external fun kniBridge454(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge455")private external fun kniBridge455(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge456")private external fun kniBridge456(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge457")private external fun kniBridge457(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge458")private external fun kniBridge458(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge459")private external fun kniBridge459(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge46")private external fun kniBridge46(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge460")private external fun kniBridge460(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge461")private external fun kniBridge461(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge462")private external fun kniBridge462(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge463")private external fun kniBridge463(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge464")private external fun kniBridge464(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge465")private external fun kniBridge465(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge466")private external fun kniBridge466(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge467")private external fun kniBridge467(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge468")private external fun kniBridge468(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge469")private external fun kniBridge469(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge47")private external fun kniBridge47(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge470")private external fun kniBridge470(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge471")private external fun kniBridge471(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge472")private external fun kniBridge472(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge473")private external fun kniBridge473(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge474")private external fun kniBridge474(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge475")private external fun kniBridge475(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge476")private external fun kniBridge476(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge477")private external fun kniBridge477(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge478")private external fun kniBridge478(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge479")private external fun kniBridge479(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge48")private external fun kniBridge48(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge480")private external fun kniBridge480(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge481")private external fun kniBridge481(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge482")private external fun kniBridge482(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge483")private external fun kniBridge483(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge484")private external fun kniBridge484(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge485")private external fun kniBridge485(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge486")private external fun kniBridge486(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge487")private external fun kniBridge487(/*0*/ p0: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge488")private external fun kniBridge488(/*0*/ p0: kotlin.UShort): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge489")private external fun kniBridge489(/*0*/ p0: kotlin.UInt): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge49")private external fun kniBridge49(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge490")private external fun kniBridge490(/*0*/ p0: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge491")private external fun kniBridge491(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge492")private external fun kniBridge492(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge493")private external fun kniBridge493(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge494")private external fun kniBridge494(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge495")private external fun kniBridge495(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge496")private external fun kniBridge496(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge497")private external fun kniBridge497(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge498")private external fun kniBridge498(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge499")private external fun kniBridge499(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge5")private external fun kniBridge5(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge50")private external fun kniBridge50(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge500")private external fun kniBridge500(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge501")private external fun kniBridge501(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge502")private external fun kniBridge502(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge503")private external fun kniBridge503(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge504")private external fun kniBridge504(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge505")private external fun kniBridge505(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge506")private external fun kniBridge506(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge507")private external fun kniBridge507(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge508")private external fun kniBridge508(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge509")private external fun kniBridge509(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Long, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge51")private external fun kniBridge51(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge510")private external fun kniBridge510(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge511")private external fun kniBridge511(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge512")private external fun kniBridge512(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge513")private external fun kniBridge513(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge514")private external fun kniBridge514(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge515")private external fun kniBridge515(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge516")private external fun kniBridge516(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge517")private external fun kniBridge517(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge518")private external fun kniBridge518(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge519")private external fun kniBridge519(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge52")private external fun kniBridge52(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge520")private external fun kniBridge520(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge521")private external fun kniBridge521(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge522")private external fun kniBridge522(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge523")private external fun kniBridge523(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge524")private external fun kniBridge524(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge525")private external fun kniBridge525(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge526")private external fun kniBridge526(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge527")private external fun kniBridge527(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge528")private external fun kniBridge528(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge529")private external fun kniBridge529(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge53")private external fun kniBridge53(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge530")private external fun kniBridge530(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge531")private external fun kniBridge531(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UByte, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.UByte, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge532")private external fun kniBridge532(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge533")private external fun kniBridge533(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge534")private external fun kniBridge534(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge535")private external fun kniBridge535(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.UByte, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge536")private external fun kniBridge536(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge537")private external fun kniBridge537(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge538")private external fun kniBridge538(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge539")private external fun kniBridge539(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge54")private external fun kniBridge54(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge540")private external fun kniBridge540(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge541")private external fun kniBridge541(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge542")private external fun kniBridge542(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge543")private external fun kniBridge543()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge544")private external fun kniBridge544(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge545")private external fun kniBridge545(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge546")private external fun kniBridge546()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge547")private external fun kniBridge547()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge548")private external fun kniBridge548()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge549")private external fun kniBridge549()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge55")private external fun kniBridge55(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge550")private external fun kniBridge550(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge551")private external fun kniBridge551(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge552")private external fun kniBridge552(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge553")private external fun kniBridge553(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge554")private external fun kniBridge554(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge555")private external fun kniBridge555(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge556")private external fun kniBridge556(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.UInt, /*6*/ p6: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge557")private external fun kniBridge557(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge558")private external fun kniBridge558(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge559")private external fun kniBridge559(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge56")private external fun kniBridge56(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge560")private external fun kniBridge560(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge561")private external fun kniBridge561(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge562")private external fun kniBridge562(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge563")private external fun kniBridge563(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge564")private external fun kniBridge564(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge565")private external fun kniBridge565(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge566")private external fun kniBridge566(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge567")private external fun kniBridge567(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge568")private external fun kniBridge568(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge569")private external fun kniBridge569(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge57")private external fun kniBridge57(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge570")private external fun kniBridge570(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge571")private external fun kniBridge571(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge572")private external fun kniBridge572(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge573")private external fun kniBridge573(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge574")private external fun kniBridge574(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge575")private external fun kniBridge575(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge576")private external fun kniBridge576(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge577")private external fun kniBridge577(/*0*/ p0: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge578")private external fun kniBridge578()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge579")private external fun kniBridge579(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge58")private external fun kniBridge58(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge580")private external fun kniBridge580(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge581")private external fun kniBridge581(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge582")private external fun kniBridge582(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge583")private external fun kniBridge583()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge584")private external fun kniBridge584(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge585")private external fun kniBridge585(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge586")private external fun kniBridge586(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge587")private external fun kniBridge587(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge588")private external fun kniBridge588(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge589")private external fun kniBridge589(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge59")private external fun kniBridge59(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge590")private external fun kniBridge590(): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge591")private external fun kniBridge591(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge592")private external fun kniBridge592(/*0*/ p0: kotlin.Long, /*1*/ p1: kotlin.Long): kotlin.Double

@kotlin.native.SymbolName(name = "platform_posix_kniBridge593")private external fun kniBridge593(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge594")private external fun kniBridge594(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge595")private external fun kniBridge595(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge596")private external fun kniBridge596(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge597")private external fun kniBridge597(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge598")private external fun kniBridge598(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge599")private external fun kniBridge599(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge6")private external fun kniBridge6(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge60")private external fun kniBridge60(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge600")private external fun kniBridge600()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge601")private external fun kniBridge601(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge602")private external fun kniBridge602(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge603")private external fun kniBridge603(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge604")private external fun kniBridge604(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge605")private external fun kniBridge605(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge606")private external fun kniBridge606()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge607")private external fun kniBridge607(/*0*/ p0: kotlin.Long): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge608")private external fun kniBridge608(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge609")private external fun kniBridge609(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge61")private external fun kniBridge61(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge610")private external fun kniBridge610(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge611")private external fun kniBridge611(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge612")private external fun kniBridge612(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge613")private external fun kniBridge613(/*0*/ p0: kotlin.UInt): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge614")private external fun kniBridge614(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge615")private external fun kniBridge615(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge616")private external fun kniBridge616(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge617")private external fun kniBridge617(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge618")private external fun kniBridge618(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge619")private external fun kniBridge619(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge62")private external fun kniBridge62(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge620")private external fun kniBridge620(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge621")private external fun kniBridge621(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge622")private external fun kniBridge622(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge623")private external fun kniBridge623(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge624")private external fun kniBridge624(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge625")private external fun kniBridge625(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge626")private external fun kniBridge626(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge627")private external fun kniBridge627(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge628")private external fun kniBridge628(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge629")private external fun kniBridge629(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge63")private external fun kniBridge63(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge630")private external fun kniBridge630(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge631")private external fun kniBridge631(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge632")private external fun kniBridge632(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge633")private external fun kniBridge633(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge634")private external fun kniBridge634(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge635")private external fun kniBridge635(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge636")private external fun kniBridge636(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge637")private external fun kniBridge637(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge638")private external fun kniBridge638(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge639")private external fun kniBridge639(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge64")private external fun kniBridge64(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge640")private external fun kniBridge640(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge641")private external fun kniBridge641(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge642")private external fun kniBridge642(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge643")private external fun kniBridge643(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge644")private external fun kniBridge644(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge645")private external fun kniBridge645(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge646")private external fun kniBridge646(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge647")private external fun kniBridge647(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge648")private external fun kniBridge648(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge649")private external fun kniBridge649(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge65")private external fun kniBridge65(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge650")private external fun kniBridge650(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge651")private external fun kniBridge651(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge652")private external fun kniBridge652(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge653")private external fun kniBridge653(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge654")private external fun kniBridge654(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge655")private external fun kniBridge655(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge656")private external fun kniBridge656(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge657")private external fun kniBridge657(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge658")private external fun kniBridge658(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge659")private external fun kniBridge659(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge66")private external fun kniBridge66(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge660")private external fun kniBridge660(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge661")private external fun kniBridge661(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge662")private external fun kniBridge662(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge663")private external fun kniBridge663(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge664")private external fun kniBridge664(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge665")private external fun kniBridge665(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge666")private external fun kniBridge666(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge667")private external fun kniBridge667(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge668")private external fun kniBridge668(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge669")private external fun kniBridge669(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge67")private external fun kniBridge67(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge670")private external fun kniBridge670(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge671")private external fun kniBridge671(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge672")private external fun kniBridge672(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge673")private external fun kniBridge673(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge674")private external fun kniBridge674(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge675")private external fun kniBridge675(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge676")private external fun kniBridge676(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge677")private external fun kniBridge677(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge678")private external fun kniBridge678(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge679")private external fun kniBridge679(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge68")private external fun kniBridge68(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge680")private external fun kniBridge680(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge681")private external fun kniBridge681(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge682")private external fun kniBridge682(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge683")private external fun kniBridge683(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge684")private external fun kniBridge684(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge685")private external fun kniBridge685(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge686")private external fun kniBridge686(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge687")private external fun kniBridge687(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge688")private external fun kniBridge688(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge689")private external fun kniBridge689(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge69")private external fun kniBridge69(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge690")private external fun kniBridge690(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge691")private external fun kniBridge691(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge692")private external fun kniBridge692(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge693")private external fun kniBridge693(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge694")private external fun kniBridge694(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge695")private external fun kniBridge695(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge696")private external fun kniBridge696(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge697")private external fun kniBridge697(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge698")private external fun kniBridge698(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge699")private external fun kniBridge699(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge7")private external fun kniBridge7(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge70")private external fun kniBridge70(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge700")private external fun kniBridge700(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge701")private external fun kniBridge701()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge702")private external fun kniBridge702(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge703")private external fun kniBridge703(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge704")private external fun kniBridge704(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge705")private external fun kniBridge705(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge706")private external fun kniBridge706(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge707")private external fun kniBridge707()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge708")private external fun kniBridge708()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge709")private external fun kniBridge709(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge71")private external fun kniBridge71(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge710")private external fun kniBridge710(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge711")private external fun kniBridge711(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge712")private external fun kniBridge712(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge713")private external fun kniBridge713(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge714")private external fun kniBridge714(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge715")private external fun kniBridge715(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge716")private external fun kniBridge716(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge717")private external fun kniBridge717(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge718")private external fun kniBridge718(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge719")private external fun kniBridge719(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge72")private external fun kniBridge72(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge720")private external fun kniBridge720(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge721")private external fun kniBridge721(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge722")private external fun kniBridge722(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge723")private external fun kniBridge723(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge724")private external fun kniBridge724(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge725")private external fun kniBridge725(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge726")private external fun kniBridge726(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge727")private external fun kniBridge727(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge728")private external fun kniBridge728(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge729")private external fun kniBridge729(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge73")private external fun kniBridge73(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge730")private external fun kniBridge730(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge731")private external fun kniBridge731(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge732")private external fun kniBridge732(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge733")private external fun kniBridge733(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge734")private external fun kniBridge734(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge735")private external fun kniBridge735(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge736")private external fun kniBridge736(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge737")private external fun kniBridge737(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge738")private external fun kniBridge738(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge739")private external fun kniBridge739(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge74")private external fun kniBridge74(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge740")private external fun kniBridge740(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge741")private external fun kniBridge741(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge742")private external fun kniBridge742(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge743")private external fun kniBridge743(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge744")private external fun kniBridge744(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge745")private external fun kniBridge745(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge746")private external fun kniBridge746(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge747")private external fun kniBridge747(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge748")private external fun kniBridge748(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge749")private external fun kniBridge749(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge75")private external fun kniBridge75(/*0*/ p0: kotlin.UShort): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge750")private external fun kniBridge750(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge751")private external fun kniBridge751(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge752")private external fun kniBridge752(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge753")private external fun kniBridge753(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge754")private external fun kniBridge754(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge755")private external fun kniBridge755(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge756")private external fun kniBridge756(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge757")private external fun kniBridge757(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge758")private external fun kniBridge758(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge759")private external fun kniBridge759(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge76")private external fun kniBridge76(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UShort, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge760")private external fun kniBridge760(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge761")private external fun kniBridge761(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge762")private external fun kniBridge762(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge763")private external fun kniBridge763(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge764")private external fun kniBridge764(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge765")private external fun kniBridge765(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge766")private external fun kniBridge766(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge767")private external fun kniBridge767(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge768")private external fun kniBridge768(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge769")private external fun kniBridge769(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge77")private external fun kniBridge77(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge770")private external fun kniBridge770(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge771")private external fun kniBridge771(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge772")private external fun kniBridge772(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge773")private external fun kniBridge773(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge774")private external fun kniBridge774(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge776")private external fun kniBridge776(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge777")private external fun kniBridge777(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge778")private external fun kniBridge778(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge779")private external fun kniBridge779(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge78")private external fun kniBridge78(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge780")private external fun kniBridge780(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge781")private external fun kniBridge781(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge782")private external fun kniBridge782(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Long, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge783")private external fun kniBridge783(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge784")private external fun kniBridge784(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge785")private external fun kniBridge785(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge786")private external fun kniBridge786(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge787")private external fun kniBridge787(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge788")private external fun kniBridge788(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge789")private external fun kniBridge789(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge79")private external fun kniBridge79(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge790")private external fun kniBridge790(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge791")private external fun kniBridge791(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge792")private external fun kniBridge792(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge793")private external fun kniBridge793(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge794")private external fun kniBridge794(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge795")private external fun kniBridge795(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge796")private external fun kniBridge796(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge797")private external fun kniBridge797(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge798")private external fun kniBridge798(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge799")private external fun kniBridge799(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge8")private external fun kniBridge8(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Long

@kotlin.native.SymbolName(name = "platform_posix_kniBridge80")private external fun kniBridge80(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge800")private external fun kniBridge800(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge801")private external fun kniBridge801(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge802")private external fun kniBridge802(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge803")private external fun kniBridge803(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge804")private external fun kniBridge804(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge805")private external fun kniBridge805(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge806")private external fun kniBridge806(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge807")private external fun kniBridge807(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge808")private external fun kniBridge808(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge809")private external fun kniBridge809(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge81")private external fun kniBridge81(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge810")private external fun kniBridge810(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge811")private external fun kniBridge811(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.ULong

@kotlin.native.SymbolName(name = "platform_posix_kniBridge812")private external fun kniBridge812(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge813")private external fun kniBridge813(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge814")private external fun kniBridge814(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge815")private external fun kniBridge815(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge816")private external fun kniBridge816(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge817")private external fun kniBridge817(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge818")private external fun kniBridge818(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.UInt, /*5*/ p5: kotlin.ULong, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.ULong, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*11*/ p11: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge819")private external fun kniBridge819(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge82")private external fun kniBridge82(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge820")private external fun kniBridge820(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge821")private external fun kniBridge821(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge822")private external fun kniBridge822(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge823")private external fun kniBridge823(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge824")private external fun kniBridge824(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge825")private external fun kniBridge825(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge826")private external fun kniBridge826(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge827")private external fun kniBridge827(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge828")private external fun kniBridge828(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge829")private external fun kniBridge829(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge83")private external fun kniBridge83(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge830")private external fun kniBridge830(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge831")private external fun kniBridge831(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.Long): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge832")private external fun kniBridge832(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.Long, /*10*/ p10: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*11*/ p11: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge833")private external fun kniBridge833(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge834")private external fun kniBridge834(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge835")private external fun kniBridge835(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge836")private external fun kniBridge836(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge837")private external fun kniBridge837(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge838")private external fun kniBridge838(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge839")private external fun kniBridge839(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge84")private external fun kniBridge84(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge840")private external fun kniBridge840(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge841")private external fun kniBridge841(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge842")private external fun kniBridge842(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge843")private external fun kniBridge843(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge844")private external fun kniBridge844(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge845")private external fun kniBridge845(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge846")private external fun kniBridge846(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge847")private external fun kniBridge847(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge848")private external fun kniBridge848(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge849")private external fun kniBridge849()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge85")private external fun kniBridge85(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge850")private external fun kniBridge850(): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge851")private external fun kniBridge851(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge852")private external fun kniBridge852(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge853")private external fun kniBridge853(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge854")private external fun kniBridge854(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge855")private external fun kniBridge855(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge856")private external fun kniBridge856(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge857")private external fun kniBridge857(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge858")private external fun kniBridge858(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge859")private external fun kniBridge859(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge86")private external fun kniBridge86(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge860")private external fun kniBridge860(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge861")private external fun kniBridge861(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge862")private external fun kniBridge862(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge863")private external fun kniBridge863(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge864")private external fun kniBridge864(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge865")private external fun kniBridge865(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge866")private external fun kniBridge866(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge867")private external fun kniBridge867(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge868")private external fun kniBridge868(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge869")private external fun kniBridge869(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge87")private external fun kniBridge87(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UShort): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge870")private external fun kniBridge870(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge871")private external fun kniBridge871(/*0*/ p0: kotlin.UShort, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge872")private external fun kniBridge872(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge873")private external fun kniBridge873(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge874")private external fun kniBridge874(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge875")private external fun kniBridge875(/*0*/ p0: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge876")private external fun kniBridge876(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge877")private external fun kniBridge877(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge878")private external fun kniBridge878(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge879")private external fun kniBridge879(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge88")private external fun kniBridge88(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge880")private external fun kniBridge880(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge881")private external fun kniBridge881(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge882")private external fun kniBridge882(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge883")private external fun kniBridge883(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge884")private external fun kniBridge884(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge885")private external fun kniBridge885(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge886")private external fun kniBridge886(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge887")private external fun kniBridge887(): kotlin.UInt

@kotlin.native.SymbolName(name = "platform_posix_kniBridge888")private external fun kniBridge888(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge889")private external fun kniBridge889(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge89")private external fun kniBridge89(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge890")private external fun kniBridge890(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge891")private external fun kniBridge891(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge892")private external fun kniBridge892(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge893")private external fun kniBridge893(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge894")private external fun kniBridge894(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge895")private external fun kniBridge895(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge896")private external fun kniBridge896(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge897")private external fun kniBridge897(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge898")private external fun kniBridge898(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge899")private external fun kniBridge899(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int, /*5*/ p5: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*6*/ p6: kotlin.Int, /*7*/ p7: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*8*/ p8: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*9*/ p9: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge9")private external fun kniBridge9(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge90")private external fun kniBridge90(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge900")private external fun kniBridge900(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge901")private external fun kniBridge901(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge902")private external fun kniBridge902(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge903")private external fun kniBridge903(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*5*/ p5: kotlin.ULong, /*6*/ p6: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*7*/ p7: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge904")private external fun kniBridge904(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge905")private external fun kniBridge905(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge906")private external fun kniBridge906(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge907")private external fun kniBridge907()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge908")private external fun kniBridge908(/*0*/ p0: kotlin.UShort, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge909")private external fun kniBridge909(/*0*/ p0: kotlin.Int): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge91")private external fun kniBridge91(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge910")private external fun kniBridge910()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge911")private external fun kniBridge911()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge912")private external fun kniBridge912(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge913")private external fun kniBridge913(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge914")private external fun kniBridge914(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge915")private external fun kniBridge915(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge916")private external fun kniBridge916(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge917")private external fun kniBridge917(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.UShort

@kotlin.native.SymbolName(name = "platform_posix_kniBridge918")private external fun kniBridge918(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge919")private external fun kniBridge919(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge92")private external fun kniBridge92(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge920")private external fun kniBridge920(/*0*/ p0: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge921")private external fun kniBridge921()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge922")private external fun kniBridge922(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.UInt): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge923")private external fun kniBridge923(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge924")private external fun kniBridge924(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge925")private external fun kniBridge925(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge926")private external fun kniBridge926(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge927")private external fun kniBridge927(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge928")private external fun kniBridge928(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge929")private external fun kniBridge929(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge93")private external fun kniBridge93(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge930")private external fun kniBridge930(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge931")private external fun kniBridge931(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge932")private external fun kniBridge932(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge933")private external fun kniBridge933(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge934")private external fun kniBridge934(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge935")private external fun kniBridge935(): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge936")private external fun kniBridge936(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge937")private external fun kniBridge937(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge938")private external fun kniBridge938(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge939")private external fun kniBridge939(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge94")private external fun kniBridge94(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.ULong, /*4*/ p4: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge940")private external fun kniBridge940(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge941")private external fun kniBridge941(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge942")private external fun kniBridge942(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge943")private external fun kniBridge943(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge944")private external fun kniBridge944(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge945")private external fun kniBridge945(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge946")private external fun kniBridge946()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge947")private external fun kniBridge947(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge948")private external fun kniBridge948(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge949")private external fun kniBridge949(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge95")private external fun kniBridge95(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong, /*5*/ p5: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge950")private external fun kniBridge950(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge951")private external fun kniBridge951(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge952")private external fun kniBridge952(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge953")private external fun kniBridge953(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge955")private external fun kniBridge955(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge959")private external fun kniBridge959(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge96")private external fun kniBridge96(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.ULong, /*5*/ p5: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge960")private external fun kniBridge960(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge961")private external fun kniBridge961(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge963")private external fun kniBridge963(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge964")private external fun kniBridge964(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge965")private external fun kniBridge965(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge966")private external fun kniBridge966(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge967")private external fun kniBridge967(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge968")private external fun kniBridge968(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge969")private external fun kniBridge969(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge97")private external fun kniBridge97(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge970")private external fun kniBridge970(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge971")private external fun kniBridge971(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge972")private external fun kniBridge972(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge973")private external fun kniBridge973(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge974")private external fun kniBridge974(/*0*/ p0: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge975")private external fun kniBridge975(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge976")private external fun kniBridge976(/*0*/ p0: kotlin.UInt)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge98")private external fun kniBridge98(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.UInt, /*3*/ p3: kotlin.UInt, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge981")private external fun kniBridge981(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge982")private external fun kniBridge982(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge983")private external fun kniBridge983(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge984")private external fun kniBridge984(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge985")private external fun kniBridge985(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge986")private external fun kniBridge986(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge987")private external fun kniBridge987(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge988")private external fun kniBridge988(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge989")private external fun kniBridge989(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge99")private external fun kniBridge99(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*4*/ p4: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge990")private external fun kniBridge990(/*0*/ p0: kotlin.UInt, /*1*/ p1: kotlin.UInt, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*3*/ p3: kotlin.Int): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge991")private external fun kniBridge991(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.Int, /*2*/ p2: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge992")private external fun kniBridge992(/*0*/ p0: kotlin.Int, /*1*/ p1: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*2*/ p2: kotlin.Int, /*3*/ p3: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge993")private external fun kniBridge993(/*0*/ p0: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge994")private external fun kniBridge994(/*0*/ p0: kotlin.ULong, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge995")private external fun kniBridge995(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */)

@kotlin.native.SymbolName(name = "platform_posix_kniBridge996")private external fun kniBridge996(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong): kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */

@kotlin.native.SymbolName(name = "platform_posix_kniBridge997")private external fun kniBridge997(/*0*/ p0: kotlinx.cinterop.NativePtr /* = kotlin.native.internal.NativePtr */, /*1*/ p1: kotlin.ULong, /*2*/ p2: kotlin.ULong): kotlin.Int

@kotlin.native.SymbolName(name = "platform_posix_kniBridge998")private external fun kniBridge998()

@kotlin.native.SymbolName(name = "platform_posix_kniBridge999")private external fun kniBridge999(/*0*/ p0: kotlin.Int): kotlin.Int

fun l64a(/*0*/ arg0: kotlin.Long): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun lchflags(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.__uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun lchmod(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun lchown(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.uid_t /* = kotlin.UInt */, /*2*/ arg2: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun lcong48(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>?) { TODO() }

fun lfind(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun localeconv_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<platform.posix.lconv>? { TODO() }

fun localtime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?): kotlinx.cinterop.CPointer<platform.posix.tm>? { TODO() }

fun localtime_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): kotlinx.cinterop.CPointer<platform.posix.tm>? { TODO() }

fun lockf(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.off_t /* = kotlin.Long */): kotlin.Int { TODO() }

fun longjmp(/*0*/ arg0: platform.posix.jmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */, /*1*/ arg1: kotlin.Int) { TODO() }

fun lsearch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun lseek(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.off_t /* = kotlin.Long */, /*2*/ arg2: kotlin.Int): platform.posix.off_t /* = kotlin.Long */ { TODO() }

fun lstatx_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?, /*2*/ arg2: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun madvise(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun malloc(/*0*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun mblen(/*0*/ __s: kotlin.String?, /*1*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun mblen_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun mbrlen(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbrlen_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbrtowc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbrtowc_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*4*/ arg4: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbsinit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): kotlin.Int { TODO() }

fun mbsinit_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun mbsnrtowcs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbsnrtowcs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*5*/ arg5: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbsrtowcs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbsrtowcs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*4*/ arg4: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbstowcs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbstowcs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun mbtowc(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun mbtowc_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun memccpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __src: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __c: kotlin.Int, /*3*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memchr(/*0*/ __s: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __c: kotlin.Int, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memcmp(/*0*/ __s1: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __s2: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun memcpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __src: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memmem(/*0*/ __big: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __big_len: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __little: kotlinx.cinterop.CValuesRef<*>?, /*3*/ __little_len: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memmove(/*0*/ __dst: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __src: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memset(/*0*/ __b: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __c: kotlin.Int, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun memset_pattern16(/*0*/ __b: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __pattern16: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun memset_pattern4(/*0*/ __b: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __pattern4: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun memset_pattern8(/*0*/ __b: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __pattern8: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */) { TODO() }

fun memset_s(/*0*/ __s: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __smax: platform.posix.rsize_t /* = kotlin.ULong */, /*2*/ __c: kotlin.Int, /*3*/ __n: platform.posix.rsize_t /* = kotlin.ULong */): platform.posix.errno_t /* = kotlin.Int */ { TODO() }

fun mergesort(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun mincore(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun minherit(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun mkdir(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun mkdirat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun mkdirx_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun mkdtemp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mkdtempat_np(/*0*/ dfd: kotlin.Int, /*1*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mkfifo(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun mkfifox_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun mknod(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.mode_t /* = kotlin.UShort */, /*2*/ arg2: platform.posix.dev_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun mkostemp(/*0*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ oflags: kotlin.Int): kotlin.Int { TODO() }

fun mkostemps(/*0*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ slen: kotlin.Int, /*2*/ oflags: kotlin.Int): kotlin.Int { TODO() }

fun mkostempsat_np(/*0*/ dfd: kotlin.Int, /*1*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ slen: kotlin.Int, /*3*/ oflags: kotlin.Int): kotlin.Int { TODO() }

fun mkpath_np(/*0*/ path: kotlin.String?, /*1*/ omode: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun mkpathat_np(/*0*/ dfd: kotlin.Int, /*1*/ path: kotlin.String?, /*2*/ omode: platform.posix.mode_t /* = kotlin.UShort */): kotlin.Int { TODO() }

fun mkstemp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun mkstemp_dprotected_np(/*0*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ dpclass: kotlin.Int, /*2*/ dpflags: kotlin.Int): kotlin.Int { TODO() }

fun mkstemps(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun mkstempsat_np(/*0*/ dfd: kotlin.Int, /*1*/ path: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ slen: kotlin.Int): kotlin.Int { TODO() }

fun mktemp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun mktime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun mlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun mmap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: platform.posix.off_t /* = kotlin.Long */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun modf(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.DoubleVar /* = kotlinx.cinterop.DoubleVarOf<kotlin.Double> */>?): kotlin.Double { TODO() }

fun modff(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.FloatVar /* = kotlinx.cinterop.FloatVarOf<kotlin.Float> */>?): kotlin.Float { TODO() }

fun mprotect(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun msync(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun munlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun munmap(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun newlocale(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */ { TODO() }

fun nextwctype(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.wctype_t /* = kotlin.UInt */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun nextwctype_l(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.wctype_t /* = kotlin.UInt */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun nftw(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, kotlinx.cinterop.CPointer<platform.posix.stat>?, kotlin.Int, kotlinx.cinterop.CPointer<platform.posix.FTW>?) -> kotlin.Int>>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun nrand48(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>?): kotlin.Long { TODO() }

fun open_memstream(/*0*/ __bufp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ __sizep: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun open_wmemstream(/*0*/ __bufp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*1*/ __sizep: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }

fun openat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun openx_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun pfctlinput(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?) { TODO() }

fun pipe(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun poll(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pollfd>?, /*1*/ arg1: platform.posix.nfds_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun posix2time(/*0*/ arg0: platform.posix.time_t /* = kotlin.Long */): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun posix_madvise(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun posix_memalign(/*0*/ __memptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*1*/ __alignment: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pread(/*0*/ __fd: kotlin.Int, /*1*/ __buf: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __nbyte: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __offset: platform.posix.off_t /* = kotlin.Long */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun printf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun profil(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.ULong, /*3*/ arg3: kotlin.UInt): kotlin.Int { TODO() }

fun pselect(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.fd_set>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun psort(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) { TODO() }

fun psort_r(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) { TODO() }

fun pthread_attr_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?): kotlin.Int { TODO() }

fun pthread_attr_get_qos_class_np(/*0*/ __attr: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ __qos_class: kotlinx.cinterop.CValuesRef<platform.posix.qos_class_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.qos_class_t /* = kotlin.UInt */> */>?, /*2*/ __relative_priority: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_attr_getdetachstate(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_attr_getguardsize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun pthread_attr_getinheritsched(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_attr_getschedparam(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sched_param>?): kotlin.Int { TODO() }

fun pthread_attr_getschedpolicy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_attr_getscope(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_attr_getstack(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun pthread_attr_getstackaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun pthread_attr_getstacksize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.size_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.size_t /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun pthread_attr_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?): kotlin.Int { TODO() }

fun pthread_attr_set_qos_class_np(/*0*/ __attr: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ __qos_class: platform.posix.qos_class_t /* = kotlin.UInt */, /*2*/ __relative_priority: kotlin.Int): kotlin.Int { TODO() }

fun pthread_attr_setdetachstate(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_attr_setguardsize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pthread_attr_setinheritsched(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_attr_setschedparam(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sched_param>?): kotlin.Int { TODO() }

fun pthread_attr_setschedpolicy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_attr_setscope(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_attr_setstack(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pthread_attr_setstackaddr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun pthread_attr_setstacksize(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pthread_cancel(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */): kotlin.Int { TODO() }

fun pthread_cond_broadcast(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?): kotlin.Int { TODO() }

fun pthread_cond_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?): kotlin.Int { TODO() }

fun pthread_cond_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_condattr_t /* = platform.posix._opaque_pthread_condattr_t */>?): kotlin.Int { TODO() }

fun pthread_cond_signal(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?): kotlin.Int { TODO() }

fun pthread_cond_timedwait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.timespec>?): kotlin.Int { TODO() }

fun pthread_cond_wait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_cond_t /* = platform.posix._opaque_pthread_cond_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?): kotlin.Int { TODO() }

fun pthread_condattr_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_condattr_t /* = platform.posix._opaque_pthread_condattr_t */>?): kotlin.Int { TODO() }

fun pthread_condattr_getpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_condattr_t /* = platform.posix._opaque_pthread_condattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_condattr_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_condattr_t /* = platform.posix._opaque_pthread_condattr_t */>?): kotlin.Int { TODO() }

fun pthread_condattr_setpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_condattr_t /* = platform.posix._opaque_pthread_condattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_tVar /* = kotlinx.cinterop.CPointerVarOf<platform.posix.pthread_t /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t> */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_attr_t /* = platform.posix._opaque_pthread_attr_t */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */>>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun pthread_detach(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */): kotlin.Int { TODO() }

fun pthread_equal(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ arg1: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */): kotlin.Int { TODO() }

fun pthread_get_qos_class_np(/*0*/ __pthread: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ __qos_class: kotlinx.cinterop.CValuesRef<platform.posix.qos_class_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.qos_class_t /* = kotlin.UInt */> */>?, /*2*/ __relative_priority: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_getschedparam(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sched_param>?): kotlin.Int { TODO() }

fun pthread_getspecific(/*0*/ arg0: platform.posix.pthread_key_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun pthread_getugid_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.uid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.uid_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun pthread_join(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?): kotlin.Int { TODO() }

fun pthread_key_create(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_key_tVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.pthread_key_t /* = kotlin.ULong */> */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Unit>>?): kotlin.Int { TODO() }

fun pthread_key_delete(/*0*/ arg0: platform.posix.pthread_key_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun pthread_kill(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_mutex_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?): kotlin.Int { TODO() }

fun pthread_mutex_getprioceiling(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutex_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?): kotlin.Int { TODO() }

fun pthread_mutex_lock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?): kotlin.Int { TODO() }

fun pthread_mutex_setprioceiling(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutex_trylock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?): kotlin.Int { TODO() }

fun pthread_mutex_unlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutex_t /* = platform.posix._opaque_pthread_mutex_t */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_getpolicy_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_getprioceiling(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_getprotocol(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_getpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_gettype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?): kotlin.Int { TODO() }

fun pthread_mutexattr_setpolicy_np(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_mutexattr_setprioceiling(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_mutexattr_setprotocol(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_mutexattr_setpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_mutexattr_settype(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_mutexattr_t /* = platform.posix._opaque_pthread_mutexattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_once(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_once_t /* = platform.posix._opaque_pthread_once_t */>?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<() -> kotlin.Unit>>?): kotlin.Int { TODO() }

fun pthread_override_qos_class_end_np(/*0*/ __override: platform.posix.pthread_override_t? /* = kotlinx.cinterop.CPointer<cnames.structs.pthread_override_s>? */): kotlin.Int { TODO() }

fun pthread_override_qos_class_start_np(/*0*/ __pthread: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ __qos_class: platform.posix.qos_class_t /* = kotlin.UInt */, /*2*/ __relative_priority: kotlin.Int): platform.posix.pthread_override_t? /* = kotlinx.cinterop.CPointer<cnames.structs.pthread_override_s>? */ { TODO() }

fun pthread_rwlock_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlockattr_t /* = platform.posix._opaque_pthread_rwlockattr_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_rdlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_tryrdlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_trywrlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_unlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlock_wrlock(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlock_t /* = platform.posix._opaque_pthread_rwlock_t */>?): kotlin.Int { TODO() }

fun pthread_rwlockattr_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlockattr_t /* = platform.posix._opaque_pthread_rwlockattr_t */>?): kotlin.Int { TODO() }

fun pthread_rwlockattr_getpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlockattr_t /* = platform.posix._opaque_pthread_rwlockattr_t */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_rwlockattr_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlockattr_t /* = platform.posix._opaque_pthread_rwlockattr_t */>?): kotlin.Int { TODO() }

fun pthread_rwlockattr_setpshared(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.pthread_rwlockattr_t /* = platform.posix._opaque_pthread_rwlockattr_t */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun pthread_self(): platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */ { TODO() }

fun pthread_set_qos_class_self_np(/*0*/ __qos_class: platform.posix.qos_class_t /* = kotlin.UInt */, /*1*/ __relative_priority: kotlin.Int): kotlin.Int { TODO() }

fun pthread_setcancelstate(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_setcanceltype(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun pthread_setschedparam(/*0*/ arg0: platform.posix.pthread_t? /* = kotlinx.cinterop.CPointer<platform.posix._opaque_pthread_t>? */, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sched_param>?): kotlin.Int { TODO() }

fun pthread_setspecific(/*0*/ arg0: platform.posix.pthread_key_t /* = kotlin.ULong */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?): kotlin.Int { TODO() }

fun pthread_setugid_np(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */, /*1*/ arg1: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun pthread_sigmask(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun ptsname(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ptsname_r(/*0*/ fildes: kotlin.Int, /*1*/ buffer: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ buflen: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun putenv(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlin.Int { TODO() }

fun putwc(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun putwc_l(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun putwchar(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun putwchar_l(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun pwrite(/*0*/ __fd: kotlin.Int, /*1*/ __buf: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __nbyte: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __offset: platform.posix.off_t /* = kotlin.Long */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun qos_class_main(): platform.posix.qos_class_t /* = kotlin.UInt */ { TODO() }

fun qos_class_self(): platform.posix.qos_class_t /* = kotlin.UInt */ { TODO() }

fun qsort(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) { TODO() }

fun qsort_r(/*0*/ __base: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __nel: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __width: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ __compar: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?) { TODO() }

fun querylocale(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun radixsort(/*0*/ __base: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>> */>?, /*1*/ __nel: kotlin.Int, /*2*/ __table: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?, /*3*/ __endbyte: kotlin.UInt): kotlin.Int { TODO() }

fun rand_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UIntVar /* = kotlinx.cinterop.UIntVarOf<kotlin.UInt> */>?): kotlin.Int { TODO() }

fun rcmd(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.String?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun rcmd_af(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlin.String?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*6*/ arg6: kotlin.Int): kotlin.Int { TODO() }

fun read(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun readdir_r(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.DIR>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.dirent>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */>?): kotlin.Int { TODO() }

fun readlink(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun readlinkat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun realloc(/*0*/ __ptr: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun reallocf(/*0*/ __ptr: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun realpath(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun recv(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun recvfrom(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.socklen_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.socklen_t /* = kotlin.UInt */> */>?): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun recvmsg(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.msghdr>?, /*2*/ arg2: kotlin.Int): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun regerror(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun regexec(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __pmatch: kotlinx.cinterop.CValuesRef<platform.posix.regmatch_t>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun regncomp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun regnexec(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ __pmatch: kotlinx.cinterop.CValuesRef<platform.posix.regmatch_t>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun regwcomp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun regwexec(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ __pmatch: kotlinx.cinterop.CValuesRef<platform.posix.regmatch_t>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun regwncomp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun regwnexec(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.regex_t>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ __pmatch: kotlinx.cinterop.CValuesRef<platform.posix.regmatch_t>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun remquo(/*0*/ arg0: kotlin.Double, /*1*/ arg1: kotlin.Double, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Double { TODO() }

fun remquof(/*0*/ arg0: kotlin.Float, /*1*/ arg1: kotlin.Float, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Float { TODO() }

fun res_9_b64_ntop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_b64_pton(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_dn_comp(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun res_9_dn_expand(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_dn_skipname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun res_9_findzonecut(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.res_9_ns_class /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*5*/ arg5: platform.posix.size_t /* = kotlin.ULong */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.in_addr>?, /*7*/ arg7: kotlin.Int): kotlin.Int { TODO() }

fun res_9_findzonecut2(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.res_9_ns_class /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*5*/ arg5: platform.posix.size_t /* = kotlin.ULong */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sockaddr_union>?, /*7*/ arg7: kotlin.Int): kotlin.Int { TODO() }

fun res_9_fp_nquery(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

fun res_9_fp_query(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

fun res_9_fp_resstat(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

fun res_9_getlong(/*0*/ src: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): platform.posix.u_int32_t /* = kotlin.UInt */ { TODO() }

fun res_9_getservers(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sockaddr_union>?, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun res_9_getshort(/*0*/ src: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): platform.posix.u_int16_t /* = kotlin.UShort */ { TODO() }

fun res_9_hostalias_1(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_hostalias_2(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_loc_aton(/*0*/ ascii: kotlin.String?, /*1*/ binary: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun res_9_loc_ntoa(/*0*/ binary: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ ascii: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_mkquery(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*5*/ arg5: kotlin.Int, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*8*/ arg8: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nameinquery(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun res_9_nametoclass(/*0*/ buf: kotlin.String?, /*1*/ success: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.posix.u_int16_t /* = kotlin.UShort */ { TODO() }

fun res_9_nametotype(/*0*/ buf: kotlin.String?, /*1*/ success: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.posix.u_int16_t /* = kotlin.UShort */ { TODO() }

fun res_9_nclose(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */) { TODO() }

fun res_9_ndestroy(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */) { TODO() }

fun res_9_ninit(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */): kotlin.Int { TODO() }

fun res_9_nisourserver(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr_in>?): kotlin.Int { TODO() }

fun res_9_nmkquery(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*6*/ arg6: kotlin.Int, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*9*/ arg9: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nopt(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nquery(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nquerydomain(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*6*/ arg6: kotlin.Int): kotlin.Int { TODO() }

fun res_9_ns_datetosecs(/*0*/ cp: kotlin.String?, /*1*/ errp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.posix.u_int32_t /* = kotlin.UInt */ { TODO() }

fun res_9_ns_find_tsig(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun res_9_ns_format_ttl(/*0*/ arg0: platform.posix.u_long /* = kotlin.ULong */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_get16(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): platform.posix.u_int /* = kotlin.UInt */ { TODO() }

fun res_9_ns_get32(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): platform.posix.u_long /* = kotlin.ULong */ { TODO() }

fun res_9_ns_initparse(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_msg /* = platform.posix.__ns_msg */>?): kotlin.Int { TODO() }

fun res_9_ns_makecanon(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_name_compress(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun res_9_ns_name_ntol(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_name_ntop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_name_pack(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun res_9_ns_name_pton(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_name_rollback(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?) { TODO() }

fun res_9_ns_name_skip(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun res_9_ns_name_uncompress(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_name_unpack(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_parse_ttl(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_longVar /* = kotlinx.cinterop.ULongVarOf<platform.posix.u_long /* = kotlin.ULong */> */>?): kotlin.Int { TODO() }

fun res_9_ns_parserr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_msg /* = platform.posix.__ns_msg */>?, /*1*/ arg1: platform.posix.res_9_ns_sect /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_rr /* = platform.posix.__ns_rr */>?): kotlin.Int { TODO() }

fun res_9_ns_put16(/*0*/ arg0: platform.posix.u_int /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun res_9_ns_put32(/*0*/ arg0: platform.posix.u_long /* = kotlin.ULong */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun res_9_ns_sign(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*6*/ arg6: kotlin.Int, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*9*/ arg9: platform.posix.time_t /* = kotlin.Long */): kotlin.Int { TODO() }

fun res_9_ns_sign2(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<*>?, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*6*/ arg6: kotlin.Int, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*8*/ arg8: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*9*/ arg9: platform.posix.time_t /* = kotlin.Long */, /*10*/ arg10: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*11*/ arg11: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun res_9_ns_sign_tcp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tcp_tsig_state>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun res_9_ns_sign_tcp2(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tcp_tsig_state>?, /*5*/ arg5: kotlin.Int, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */>>> */>?): kotlin.Int { TODO() }

fun res_9_ns_sign_tcp_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tcp_tsig_state>?): kotlin.Int { TODO() }

fun res_9_ns_skiprr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: platform.posix.res_9_ns_sect /* = kotlin.UInt */, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun res_9_ns_sprintrr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_msg /* = platform.posix.__ns_msg */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_rr /* = platform.posix.__ns_rr */>?, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlin.String?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*5*/ arg5: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_sprintrrf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.res_9_ns_class /* = kotlin.UInt */, /*4*/ arg4: platform.posix.ns_type /* = kotlin.UInt */, /*5*/ arg5: platform.posix.u_long /* = kotlin.ULong */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*7*/ arg7: platform.posix.size_t /* = kotlin.ULong */, /*8*/ arg8: kotlin.String?, /*9*/ arg9: kotlin.String?, /*10*/ arg10: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*11*/ arg11: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun res_9_ns_verify(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlin.Int, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*6*/ arg6: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*7*/ arg7: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?, /*8*/ arg8: kotlin.Int): kotlin.Int { TODO() }

fun res_9_ns_verify_tcp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tcp_tsig_state>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun res_9_ns_verify_tcp_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tcp_tsig_state>?): kotlin.Int { TODO() }

fun res_9_nsearch(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nsend(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_nsendsigned(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tsig_key>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun res_9_p_cdname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun res_9_p_cdnname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun res_9_p_class(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_fqname(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun res_9_p_fqnname(/*0*/ cp: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ msg: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*4*/ arg4: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>? { TODO() }

fun res_9_p_option(/*0*/ option: platform.posix.u_long /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_query(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun res_9_p_rcode(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_secstodate(/*0*/ arg0: platform.posix.u_long /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_section(/*0*/ section: kotlin.Int, /*1*/ opcode: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_time(/*0*/ arg0: platform.posix.u_int32_t /* = kotlin.UInt */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_p_type(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_pquery(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?) { TODO() }

fun res_9_putlong(/*0*/ arg0: platform.posix.u_int32_t /* = kotlin.UInt */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun res_9_putshort(/*0*/ arg0: platform.posix.u_int16_t /* = kotlin.UShort */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?) { TODO() }

fun res_9_queriesmatch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?): kotlin.Int { TODO() }

fun res_9_query(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_querydomain(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun res_9_randomid(): platform.posix.u_int /* = kotlin.UInt */ { TODO() }

fun res_9_search(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_send(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun res_9_sendsigned(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.res_9_ns_tsig_key>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.u_charVar /* = kotlinx.cinterop.UByteVarOf<platform.posix.u_char /* = kotlin.UByte */> */>?, /*4*/ arg4: kotlin.Int): kotlin.Int { TODO() }

fun res_9_setservers(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sockaddr_union>?, /*2*/ arg2: kotlin.Int) { TODO() }

fun res_9_sym_ntop(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sym>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_sym_ntos(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sym>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_9_sym_ston(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.res_9_sym>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun res_9_vinit(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun res_get_bitstringsuffix(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_get_nibblesuffix(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_get_nibblesuffix2(/*0*/ arg0: platform.posix.res_9_state? /* = kotlinx.cinterop.CPointer<platform.posix.__res_9_state>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_protocolname(/*0*/ num: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun res_servicename(/*0*/ port: platform.posix.u_int16_t /* = kotlin.UShort */, /*1*/ proto: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun rindex(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun rresvport(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun rresvport_af(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun sbrk(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun scandir(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>>>> */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<platform.posix.dirent>?) -> kotlin.Int>>?, /*3*/ arg3: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */>?, kotlinx.cinterop.CPointer<kotlinx.cinterop.CPointerVar<platform.posix.dirent> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<platform.posix.dirent>> */>?) -> kotlin.Int>>?): kotlin.Int { TODO() }

fun scanf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun searchfs(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<cnames.structs.fssearchblock>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ULongVar /* = kotlinx.cinterop.ULongVarOf<kotlin.ULong> */>?, /*3*/ arg3: kotlin.UInt, /*4*/ arg4: kotlin.UInt, /*5*/ arg5: kotlinx.cinterop.CValuesRef<cnames.structs.searchstate>?): kotlin.Int { TODO() }

fun seed48(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.UShortVar /* = kotlinx.cinterop.UShortVarOf<kotlin.UShort> */>? { TODO() }

fun sem_close(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun sem_destroy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun sem_getvalue(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun sem_init(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.UInt): kotlin.Int { TODO() }

fun sem_open(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.Int, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlinx.cinterop.CPointer<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>? { TODO() }

fun sem_post(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun sem_trywait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun sem_wait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sem_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.sem_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun send(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun sendfile(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: platform.posix.off_t /* = kotlin.Long */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.off_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.off_t /* = kotlin.Long */> */>?, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.sf_hdtr>?, /*5*/ arg5: kotlin.Int): kotlin.Int { TODO() }

fun sendmsg(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.msghdr>?, /*2*/ arg2: kotlin.Int): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun sendto(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlin.Int, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*5*/ arg5: platform.posix.socklen_t /* = kotlin.UInt */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun setattrlist(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlin.UInt): kotlin.Int { TODO() }

fun setattrlistat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<*>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ arg4: platform.posix.size_t /* = kotlin.ULong */, /*5*/ arg5: platform.posix.uint32_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setbuf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun setbuffer(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int) { TODO() }

fun setegid(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun seteuid(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setgid(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setgroups(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.gid_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.gid_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun setipv4sourcefilter(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValue<platform.posix.in_addr>, /*2*/ arg2: kotlinx.cinterop.CValue<platform.posix.in_addr>, /*3*/ arg3: platform.posix.uint32_t /* = kotlin.UInt */, /*4*/ arg4: platform.posix.uint32_t /* = kotlin.UInt */, /*5*/ arg5: kotlinx.cinterop.CValuesRef<platform.posix.in_addr>?): kotlin.Int { TODO() }

fun setjmp(/*0*/ arg0: platform.posix.jmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */): kotlin.Int { TODO() }

fun setlocale(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun setmode(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun setpgid(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.pid_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun setpgrp(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun setpriority(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.id_t /* = kotlin.UInt */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

fun setregid(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */, /*1*/ arg1: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setreuid(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */, /*1*/ arg1: platform.posix.uid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setrgid(/*0*/ arg0: platform.posix.gid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setruid(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setsgroups_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.uuid_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>? */): kotlin.Int { TODO() }

fun setsid(): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun setsockopt(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<*>?, /*4*/ arg4: platform.posix.socklen_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setsourcefilter(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.uint32_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr>?, /*3*/ arg3: platform.posix.socklen_t /* = kotlin.UInt */, /*4*/ arg4: platform.posix.uint32_t /* = kotlin.UInt */, /*5*/ arg5: platform.posix.uint32_t /* = kotlin.UInt */, /*6*/ arg6: kotlinx.cinterop.CValuesRef<platform.posix.sockaddr_storage>?): kotlin.Int { TODO() }

fun setstate(/*0*/ arg0: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun setuid(/*0*/ arg0: platform.posix.uid_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun setvbuf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun setwgroups_np(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.uuid_t? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>? */): kotlin.Int { TODO() }

fun shmat(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun shmget(/*0*/ arg0: platform.posix.key_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.Int): kotlin.Int { TODO() }

external fun sigaddset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int

external fun sigdelset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int

external fun sigemptyset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int

external fun sigfillset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int

external fun sigismember(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlin.Int): kotlin.Int

fun siglongjmp(/*0*/ arg0: platform.posix.sigjmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */, /*1*/ arg1: kotlin.Int) { TODO() }

fun sigpending(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun sigprocmask(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun sigsetjmp(/*0*/ arg0: platform.posix.sigjmp_buf? /* = kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<kotlin.Int>>? */, /*1*/ arg1: kotlin.Int): kotlin.Int { TODO() }

fun sigsuspend(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?): kotlin.Int { TODO() }

fun sigwait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.sigset_tVar /* = kotlinx.cinterop.UIntVarOf<platform.posix.sigset_t /* = kotlin.UInt */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun snprintf(/*0*/ __str: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __format: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun snprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*3*/ arg3: kotlin.String?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun socketpair(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): kotlin.Int { TODO() }

fun sprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun sprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun sradixsort(/*0*/ __base: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.UByteVarOf<kotlin.UByte>>> */>?, /*1*/ __nel: kotlin.Int, /*2*/ __table: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.UByteVar /* = kotlinx.cinterop.UByteVarOf<kotlin.UByte> */>?, /*3*/ __endbyte: kotlin.UInt): kotlin.Int { TODO() }

fun sscanf_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun statx_np(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.stat>?, /*2*/ arg2: platform.posix.filesec_t? /* = kotlinx.cinterop.CPointer<cnames.structs._filesec>? */): kotlin.Int { TODO() }

fun stpcpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __src: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun stpncpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __src: kotlin.String?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strcasecmp_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun strcasestr(/*0*/ __big: kotlin.String?, /*1*/ __little: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strcasestr_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strcat(/*0*/ __s1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __s2: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strchr(/*0*/ __s: kotlin.String?, /*1*/ __c: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strcoll_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun strcpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __src: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strdup(/*0*/ __s1: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strerror(/*0*/ __errnum: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strerror_r(/*0*/ __errnum: kotlin.Int, /*1*/ __strerrbuf: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ __buflen: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun strftime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun strftime_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.tm>?, /*4*/ arg4: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun strlcat(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __source: kotlin.String?, /*2*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlin.ULong { TODO() }

fun strlcpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __source: kotlin.String?, /*2*/ __size: platform.posix.size_t /* = kotlin.ULong */): kotlin.ULong { TODO() }

fun strmode(/*0*/ __mode: kotlin.Int, /*1*/ __bp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?) { TODO() }

fun strncasecmp(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun strncasecmp_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun strncat(/*0*/ __s1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __s2: kotlin.String?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strncmp(/*0*/ __s1: kotlin.String?, /*1*/ __s2: kotlin.String?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun strncpy(/*0*/ __dst: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __src: kotlin.String?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strndup(/*0*/ __s1: kotlin.String?, /*1*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strnlen(/*0*/ __s1: kotlin.String?, /*1*/ __n: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun strnstr(/*0*/ __big: kotlin.String?, /*1*/ __little: kotlin.String?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strpbrk(/*0*/ __s: kotlin.String?, /*1*/ __charset: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strptime(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strptime_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.tm>?, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strrchr(/*0*/ __s: kotlin.String?, /*1*/ __c: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strsep(/*0*/ __stringp: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ __delim: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strsignal(/*0*/ __sig: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strstr(/*0*/ __big: kotlin.String?, /*1*/ __little: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strtod(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Double { TODO() }

fun strtod_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Double { TODO() }

fun strtof(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlin.Float { TODO() }

fun strtof_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Float { TODO() }

fun strtofflags(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ULongVar /* = kotlinx.cinterop.ULongVarOf<kotlin.ULong> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ULongVar /* = kotlinx.cinterop.ULongVarOf<kotlin.ULong> */>?): kotlin.Int { TODO() }

fun strtoimax(/*0*/ __nptr: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): platform.posix.intmax_t /* = kotlin.Long */ { TODO() }

fun strtoimax_l(/*0*/ nptr: kotlin.String?, /*1*/ endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ base: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.intmax_t /* = kotlin.Long */ { TODO() }

fun strtok(/*0*/ __str: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __sep: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strtok_r(/*0*/ __str: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __sep: kotlin.String?, /*2*/ __lasts: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun strtol(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.Long { TODO() }

fun strtol_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun strtoll(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.Long { TODO() }

fun strtoll_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun strtoq(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.Long { TODO() }

fun strtoq_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun strtoul(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.ULong { TODO() }

fun strtoul_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun strtoull(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.ULong { TODO() }

fun strtoull_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun strtoumax(/*0*/ __nptr: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): platform.posix.uintmax_t /* = kotlin.ULong */ { TODO() }

fun strtoumax_l(/*0*/ nptr: kotlin.String?, /*1*/ endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ base: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.uintmax_t /* = kotlin.ULong */ { TODO() }

fun strtouq(/*0*/ __str: kotlin.String?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ __base: kotlin.Int): kotlin.ULong { TODO() }

fun strtouq_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun strxfrm(/*0*/ __s1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __s2: kotlin.String?, /*2*/ __n: platform.posix.size_t /* = kotlin.ULong */): kotlin.ULong { TODO() }

fun strxfrm_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun swab(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<*>?, /*2*/ arg2: platform.posix.ssize_t /* = kotlin.Long */) { TODO() }

fun swprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun swprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ n: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*4*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun swscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun swscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun tcgetpgrp(/*0*/ arg0: kotlin.Int): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun tcgetsid(/*0*/ arg0: kotlin.Int): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun tcsetpgrp(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.pid_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun tdelete(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun tempnam(/*0*/ __dir: kotlin.String?, /*1*/ __prefix: kotlin.String?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tfind(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun time(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.time_tVar /* = kotlinx.cinterop.LongVarOf<platform.posix.time_t /* = kotlin.Long */> */>?): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun time2posix(/*0*/ arg0: platform.posix.time_t /* = kotlin.Long */): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun timegm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun timelocal(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): platform.posix.time_t /* = kotlin.Long */ { TODO() }

fun times(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.tms>?): platform.posix.clock_t /* = kotlin.ULong */ { TODO() }

fun timingsafe_bcmp(/*0*/ __b1: kotlinx.cinterop.CValuesRef<*>?, /*1*/ __b2: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __len: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun tmpnam(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun tolower_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun toupper_l(/*0*/ c: kotlin.Int, /*1*/ l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun towctrans(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.wctrans_t /* = kotlin.Int */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun towctrans_l(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.wctrans_t /* = kotlin.Int */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun towlower(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun towlower_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun towupper(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun towupper_l(/*0*/ _wc: platform.posix.wint_t /* = kotlin.Int */, /*1*/ _l: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun truncate(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.off_t /* = kotlin.Long */): kotlin.Int { TODO() }

fun tsearch(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.COpaquePointerVar /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.COpaquePointer /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed> */> */>?, /*2*/ arg2: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */) -> kotlin.Int>>?): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun ttyname(/*0*/ arg0: kotlin.Int): kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>? { TODO() }

fun ttyname_r(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun twalk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<*>?, /*1*/ arg1: kotlinx.cinterop.CPointer<kotlinx.cinterop.CFunction<(kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */, platform.posix.VISIT, kotlin.Int) -> kotlin.Unit>>?) { TODO() }

fun ualarm(/*0*/ arg0: platform.posix.useconds_t /* = kotlin.UInt */, /*1*/ arg1: platform.posix.useconds_t /* = kotlin.UInt */): platform.posix.useconds_t /* = kotlin.UInt */ { TODO() }

fun umask(/*0*/ arg0: platform.posix.mode_t /* = kotlin.UShort */): platform.posix.mode_t /* = kotlin.UShort */ { TODO() }

fun ungetwc(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun ungetwc_l(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wint_t /* = kotlin.Int */ { TODO() }

fun unwhiteout(/*0*/ arg0: kotlin.String?): kotlin.Int { TODO() }

fun uselocale(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */ { TODO() }

fun usleep(/*0*/ arg0: platform.posix.useconds_t /* = kotlin.UInt */): kotlin.Int { TODO() }

fun valloc(/*0*/ arg0: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.COpaquePointer? /* = kotlinx.cinterop.CPointer<out kotlinx.cinterop.CPointed>? */ { TODO() }

fun vasprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vasprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.ByteVarOf<kotlin.Byte>>> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vdprintf(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vdprintf_l(/*0*/ arg0: kotlin.Int, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun verr(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun verrc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun verrx(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun vfprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfscanf(/*0*/ __stream: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ __format: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfwprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfwprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfwscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vfwscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.FILE /* = platform.posix.__sFILE */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vprintf(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vprintf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vscanf(/*0*/ __format: kotlin.String?, /*1*/ arg1: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vscanf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsnprintf(/*0*/ __str: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ __size: platform.posix.size_t /* = kotlin.ULong */, /*2*/ __format: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsnprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*3*/ arg3: kotlin.String?, /*4*/ arg4: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsscanf(/*0*/ __str: kotlin.String?, /*1*/ __format: kotlin.String?, /*2*/ arg2: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsscanf_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlin.String?, /*3*/ arg3: platform.posix.va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vswprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vswprintf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ n: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*4*/ arg4: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vswscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vswscanf_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vsyslog(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun vwarn(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun vwarnc(/*0*/ arg0: kotlin.Int, /*1*/ arg1: kotlin.String?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun vwarnx(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */) { TODO() }

fun vwprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vwprintf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vwscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun vwscanf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.__darwin_va_list? /* = kotlinx.cinterop.CPointer<platform.posix.__va_list_tag>? */): kotlin.Int { TODO() }

fun wait(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun wait3(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*1*/ arg1: kotlin.Int, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.rusage>?): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun wait4(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.rusage>?): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun waitid(/*0*/ arg0: platform.posix.idtype_t, /*1*/ arg1: platform.posix.id_t /* = kotlin.UInt */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.siginfo_t /* = platform.posix.__siginfo */>?, /*3*/ arg3: kotlin.Int): kotlin.Int { TODO() }

fun waitpid(/*0*/ arg0: platform.posix.pid_t /* = kotlin.Int */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>?, /*2*/ arg2: kotlin.Int): platform.posix.pid_t /* = kotlin.Int */ { TODO() }

fun wcpcpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcpncpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcrtomb(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcrtomb_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcscasecmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun wcscasecmp_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wcscat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcschr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */): kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>? { TODO() }

fun wcscmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun wcscoll(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.Int { TODO() }

fun wcscoll_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wcscpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcscspn(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsdup(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcsftime(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.tm>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsftime_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.tm>?, /*4*/ arg4: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcslcat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcslcpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcslen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlin.ULong { TODO() }

fun wcsncasecmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ n: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun wcsncasecmp_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ n: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wcsncat(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcsncmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun wcsncpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcsnlen(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsnrtombs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsnrtombs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.size_t /* = kotlin.ULong */, /*4*/ arg4: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*5*/ arg5: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcspbrk(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcsrchr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcsrtombs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsrtombs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: kotlinx.cinterop.CValuesRef<platform.posix.mbstate_t /* = platform.posix.__mbstate_t */>?, /*4*/ arg4: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsspn(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsstr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcstod(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?): kotlin.Double { TODO() }

fun wcstod_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Double { TODO() }

fun wcstof(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?): kotlin.Float { TODO() }

fun wcstof_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Float { TODO() }

fun wcstoimax(/*0*/ __nptr: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ __base: kotlin.Int): platform.posix.intmax_t /* = kotlin.Long */ { TODO() }

fun wcstoimax_l(/*0*/ nptr: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ base: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.intmax_t /* = kotlin.Long */ { TODO() }

fun wcstok(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wcstol(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.Long { TODO() }

fun wcstol_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun wcstoll(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.Long { TODO() }

fun wcstoll_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Long { TODO() }

fun wcstombs(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcstombs_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcstoul(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.ULong { TODO() }

fun wcstoul_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun wcstoull(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int): kotlin.ULong { TODO() }

fun wcstoull_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ arg2: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.ULong { TODO() }

fun wcstoumax(/*0*/ __nptr: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ __endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ __base: kotlin.Int): platform.posix.uintmax_t /* = kotlin.ULong */ { TODO() }

fun wcstoumax_l(/*0*/ nptr: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ endptr: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.CPointerVar<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */> /* = kotlinx.cinterop.CPointerVarOf<kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */>>> */>?, /*2*/ base: kotlin.Int, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.uintmax_t /* = kotlin.ULong */ { TODO() }

fun wcswidth(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun wcswidth_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.size_t /* = kotlin.ULong */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wcsxfrm(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wcsxfrm_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */, /*3*/ arg3: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.size_t /* = kotlin.ULong */ { TODO() }

fun wctob(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun wctob_l(/*0*/ arg0: platform.posix.wint_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wctomb(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun wctomb_l(/*0*/ arg0: kotlinx.cinterop.CValuesRef<kotlinx.cinterop.ByteVar /* = kotlinx.cinterop.ByteVarOf<kotlin.Byte> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */, /*2*/ arg2: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wctrans(/*0*/ arg0: kotlin.String?): platform.posix.wctrans_t /* = kotlin.Int */ { TODO() }

fun wctrans_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wctrans_t /* = kotlin.Int */ { TODO() }

fun wctype(/*0*/ arg0: kotlin.String?): platform.posix.wctype_t /* = kotlin.UInt */ { TODO() }

fun wctype_l(/*0*/ arg0: kotlin.String?, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): platform.posix.wctype_t /* = kotlin.UInt */ { TODO() }

fun wcwidth(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */): kotlin.Int { TODO() }

fun wcwidth_l(/*0*/ arg0: platform.posix.wchar_t /* = kotlin.Int */, /*1*/ arg1: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */): kotlin.Int { TODO() }

fun wmemchr(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<kotlinx.cinterop.IntVar /* = kotlinx.cinterop.IntVarOf<kotlin.Int> */>? { TODO() }

fun wmemcmp(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlin.Int { TODO() }

fun wmemcpy(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wmemmove(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wmemset(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ arg1: platform.posix.wchar_t /* = kotlin.Int */, /*2*/ arg2: platform.posix.size_t /* = kotlin.ULong */): kotlinx.cinterop.CPointer<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>? { TODO() }

fun wprintf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun wprintf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun write(/*0*/ __fd: kotlin.Int, /*1*/ __buf: kotlinx.cinterop.CValuesRef<*>?, /*2*/ __nbyte: platform.posix.size_t /* = kotlin.ULong */): platform.posix.ssize_t /* = kotlin.Long */ { TODO() }

fun wscanf(/*0*/ arg0: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*1*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun wscanf_l(/*0*/ arg0: platform.posix.locale_t? /* = kotlinx.cinterop.CPointer<cnames.structs._xlocale>? */, /*1*/ arg1: kotlinx.cinterop.CValuesRef<platform.posix.wchar_tVar /* = kotlinx.cinterop.IntVarOf<platform.posix.wchar_t /* = kotlin.Int */> */>?, /*2*/ vararg variadicArguments: kotlin.Any? /*kotlin.Array<out kotlin.Any?>*/): kotlin.Int { TODO() }

fun zopen(/*0*/ arg0: kotlin.String?, /*1*/ arg1: kotlin.String?, /*2*/ arg2: kotlin.Int): kotlinx.cinterop.CPointer<platform.posix.FILE /* = platform.posix.__sFILE */>? { TODO() }


